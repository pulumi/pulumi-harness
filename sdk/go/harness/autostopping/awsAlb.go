// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autostopping

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating an AWS application load balancer
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/autostopping"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := autostopping.NewAwsAlb(ctx, "test", &autostopping.AwsAlbArgs{
//				Name:             pulumi.String("name"),
//				CloudConnectorId: pulumi.String("cloud_connector_id"),
//				HostName:         pulumi.String("host_name"),
//				Region:           pulumi.String("region"),
//				Vpc:              pulumi.String("vpc"),
//				SecurityGroups: pulumi.StringArray{
//					pulumi.String("sg1"),
//					pulumi.String("sg2"),
//				},
//				Route53HostedZoneId:           pulumi.String("/hostedzone/zone_id"),
//				DeleteCloudResourcesOnDestroy: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = autostopping.NewAwsAlb(ctx, "harness_alb", &autostopping.AwsAlbArgs{
//				Name:             pulumi.String("harness_alb"),
//				CloudConnectorId: pulumi.String("cloud_connector_id"),
//				HostName:         pulumi.String("host.name"),
//				AlbArn:           pulumi.String("arn:aws:elasticloadbalancing:region:aws_account_id:loadbalancer/app/harness_alb/id"),
//				Region:           pulumi.String("region"),
//				Vpc:              pulumi.String("vpc"),
//				SecurityGroups: pulumi.StringArray{
//					pulumi.String("sg-0"),
//				},
//				Route53HostedZoneId:           pulumi.String("/hostedzone/zone_id"),
//				DeleteCloudResourcesOnDestroy: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AwsAlb struct {
	pulumi.CustomResourceState

	// Arn of AWS ALB to be imported. Required only for importing existing ALB
	AlbArn        pulumi.StringPtrOutput `pulumi:"albArn"`
	CertificateId pulumi.StringPtrOutput `pulumi:"certificateId"`
	// Id of the cloud connector
	CloudConnectorId              pulumi.StringOutput `pulumi:"cloudConnectorId"`
	DeleteCloudResourcesOnDestroy pulumi.BoolOutput   `pulumi:"deleteCloudResourcesOnDestroy"`
	// Hostname for the proxy
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// Unique identifier of the resource
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the proxy
	Name pulumi.StringOutput `pulumi:"name"`
	// Region in which cloud resources are hosted
	Region pulumi.StringOutput `pulumi:"region"`
	// Route 53 hosted zone id
	Route53HostedZoneId pulumi.StringPtrOutput `pulumi:"route53HostedZoneId"`
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// VPC in which cloud resources are hosted
	Vpc pulumi.StringOutput `pulumi:"vpc"`
}

// NewAwsAlb registers a new resource with the given unique name, arguments, and options.
func NewAwsAlb(ctx *pulumi.Context,
	name string, args *AwsAlbArgs, opts ...pulumi.ResourceOption) (*AwsAlb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'CloudConnectorId'")
	}
	if args.DeleteCloudResourcesOnDestroy == nil {
		return nil, errors.New("invalid value for required argument 'DeleteCloudResourcesOnDestroy'")
	}
	if args.HostName == nil {
		return nil, errors.New("invalid value for required argument 'HostName'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Vpc == nil {
		return nil, errors.New("invalid value for required argument 'Vpc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsAlb
	err := ctx.RegisterResource("harness:autostopping/awsAlb:AwsAlb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsAlb gets an existing AwsAlb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsAlb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsAlbState, opts ...pulumi.ResourceOption) (*AwsAlb, error) {
	var resource AwsAlb
	err := ctx.ReadResource("harness:autostopping/awsAlb:AwsAlb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsAlb resources.
type awsAlbState struct {
	// Arn of AWS ALB to be imported. Required only for importing existing ALB
	AlbArn        *string `pulumi:"albArn"`
	CertificateId *string `pulumi:"certificateId"`
	// Id of the cloud connector
	CloudConnectorId              *string `pulumi:"cloudConnectorId"`
	DeleteCloudResourcesOnDestroy *bool   `pulumi:"deleteCloudResourcesOnDestroy"`
	// Hostname for the proxy
	HostName *string `pulumi:"hostName"`
	// Unique identifier of the resource
	Identifier *string `pulumi:"identifier"`
	// Name of the proxy
	Name *string `pulumi:"name"`
	// Region in which cloud resources are hosted
	Region *string `pulumi:"region"`
	// Route 53 hosted zone id
	Route53HostedZoneId *string `pulumi:"route53HostedZoneId"`
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups []string `pulumi:"securityGroups"`
	// VPC in which cloud resources are hosted
	Vpc *string `pulumi:"vpc"`
}

type AwsAlbState struct {
	// Arn of AWS ALB to be imported. Required only for importing existing ALB
	AlbArn        pulumi.StringPtrInput
	CertificateId pulumi.StringPtrInput
	// Id of the cloud connector
	CloudConnectorId              pulumi.StringPtrInput
	DeleteCloudResourcesOnDestroy pulumi.BoolPtrInput
	// Hostname for the proxy
	HostName pulumi.StringPtrInput
	// Unique identifier of the resource
	Identifier pulumi.StringPtrInput
	// Name of the proxy
	Name pulumi.StringPtrInput
	// Region in which cloud resources are hosted
	Region pulumi.StringPtrInput
	// Route 53 hosted zone id
	Route53HostedZoneId pulumi.StringPtrInput
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups pulumi.StringArrayInput
	// VPC in which cloud resources are hosted
	Vpc pulumi.StringPtrInput
}

func (AwsAlbState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAlbState)(nil)).Elem()
}

type awsAlbArgs struct {
	// Arn of AWS ALB to be imported. Required only for importing existing ALB
	AlbArn        *string `pulumi:"albArn"`
	CertificateId *string `pulumi:"certificateId"`
	// Id of the cloud connector
	CloudConnectorId              string `pulumi:"cloudConnectorId"`
	DeleteCloudResourcesOnDestroy bool   `pulumi:"deleteCloudResourcesOnDestroy"`
	// Hostname for the proxy
	HostName string `pulumi:"hostName"`
	// Name of the proxy
	Name *string `pulumi:"name"`
	// Region in which cloud resources are hosted
	Region string `pulumi:"region"`
	// Route 53 hosted zone id
	Route53HostedZoneId *string `pulumi:"route53HostedZoneId"`
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups []string `pulumi:"securityGroups"`
	// VPC in which cloud resources are hosted
	Vpc string `pulumi:"vpc"`
}

// The set of arguments for constructing a AwsAlb resource.
type AwsAlbArgs struct {
	// Arn of AWS ALB to be imported. Required only for importing existing ALB
	AlbArn        pulumi.StringPtrInput
	CertificateId pulumi.StringPtrInput
	// Id of the cloud connector
	CloudConnectorId              pulumi.StringInput
	DeleteCloudResourcesOnDestroy pulumi.BoolInput
	// Hostname for the proxy
	HostName pulumi.StringInput
	// Name of the proxy
	Name pulumi.StringPtrInput
	// Region in which cloud resources are hosted
	Region pulumi.StringInput
	// Route 53 hosted zone id
	Route53HostedZoneId pulumi.StringPtrInput
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups pulumi.StringArrayInput
	// VPC in which cloud resources are hosted
	Vpc pulumi.StringInput
}

func (AwsAlbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsAlbArgs)(nil)).Elem()
}

type AwsAlbInput interface {
	pulumi.Input

	ToAwsAlbOutput() AwsAlbOutput
	ToAwsAlbOutputWithContext(ctx context.Context) AwsAlbOutput
}

func (*AwsAlb) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAlb)(nil)).Elem()
}

func (i *AwsAlb) ToAwsAlbOutput() AwsAlbOutput {
	return i.ToAwsAlbOutputWithContext(context.Background())
}

func (i *AwsAlb) ToAwsAlbOutputWithContext(ctx context.Context) AwsAlbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAlbOutput)
}

// AwsAlbArrayInput is an input type that accepts AwsAlbArray and AwsAlbArrayOutput values.
// You can construct a concrete instance of `AwsAlbArrayInput` via:
//
//	AwsAlbArray{ AwsAlbArgs{...} }
type AwsAlbArrayInput interface {
	pulumi.Input

	ToAwsAlbArrayOutput() AwsAlbArrayOutput
	ToAwsAlbArrayOutputWithContext(context.Context) AwsAlbArrayOutput
}

type AwsAlbArray []AwsAlbInput

func (AwsAlbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAlb)(nil)).Elem()
}

func (i AwsAlbArray) ToAwsAlbArrayOutput() AwsAlbArrayOutput {
	return i.ToAwsAlbArrayOutputWithContext(context.Background())
}

func (i AwsAlbArray) ToAwsAlbArrayOutputWithContext(ctx context.Context) AwsAlbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAlbArrayOutput)
}

// AwsAlbMapInput is an input type that accepts AwsAlbMap and AwsAlbMapOutput values.
// You can construct a concrete instance of `AwsAlbMapInput` via:
//
//	AwsAlbMap{ "key": AwsAlbArgs{...} }
type AwsAlbMapInput interface {
	pulumi.Input

	ToAwsAlbMapOutput() AwsAlbMapOutput
	ToAwsAlbMapOutputWithContext(context.Context) AwsAlbMapOutput
}

type AwsAlbMap map[string]AwsAlbInput

func (AwsAlbMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAlb)(nil)).Elem()
}

func (i AwsAlbMap) ToAwsAlbMapOutput() AwsAlbMapOutput {
	return i.ToAwsAlbMapOutputWithContext(context.Background())
}

func (i AwsAlbMap) ToAwsAlbMapOutputWithContext(ctx context.Context) AwsAlbMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAlbMapOutput)
}

type AwsAlbOutput struct{ *pulumi.OutputState }

func (AwsAlbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAlb)(nil)).Elem()
}

func (o AwsAlbOutput) ToAwsAlbOutput() AwsAlbOutput {
	return o
}

func (o AwsAlbOutput) ToAwsAlbOutputWithContext(ctx context.Context) AwsAlbOutput {
	return o
}

// Arn of AWS ALB to be imported. Required only for importing existing ALB
func (o AwsAlbOutput) AlbArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringPtrOutput { return v.AlbArn }).(pulumi.StringPtrOutput)
}

func (o AwsAlbOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringPtrOutput { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// Id of the cloud connector
func (o AwsAlbOutput) CloudConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringOutput { return v.CloudConnectorId }).(pulumi.StringOutput)
}

func (o AwsAlbOutput) DeleteCloudResourcesOnDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.BoolOutput { return v.DeleteCloudResourcesOnDestroy }).(pulumi.BoolOutput)
}

// Hostname for the proxy
func (o AwsAlbOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// Unique identifier of the resource
func (o AwsAlbOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the proxy
func (o AwsAlbOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Region in which cloud resources are hosted
func (o AwsAlbOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Route 53 hosted zone id
func (o AwsAlbOutput) Route53HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringPtrOutput { return v.Route53HostedZoneId }).(pulumi.StringPtrOutput)
}

// Security Group to define the security rules that determine the inbound and outbound traffic
func (o AwsAlbOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// VPC in which cloud resources are hosted
func (o AwsAlbOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsAlb) pulumi.StringOutput { return v.Vpc }).(pulumi.StringOutput)
}

type AwsAlbArrayOutput struct{ *pulumi.OutputState }

func (AwsAlbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsAlb)(nil)).Elem()
}

func (o AwsAlbArrayOutput) ToAwsAlbArrayOutput() AwsAlbArrayOutput {
	return o
}

func (o AwsAlbArrayOutput) ToAwsAlbArrayOutputWithContext(ctx context.Context) AwsAlbArrayOutput {
	return o
}

func (o AwsAlbArrayOutput) Index(i pulumi.IntInput) AwsAlbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsAlb {
		return vs[0].([]*AwsAlb)[vs[1].(int)]
	}).(AwsAlbOutput)
}

type AwsAlbMapOutput struct{ *pulumi.OutputState }

func (AwsAlbMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsAlb)(nil)).Elem()
}

func (o AwsAlbMapOutput) ToAwsAlbMapOutput() AwsAlbMapOutput {
	return o
}

func (o AwsAlbMapOutput) ToAwsAlbMapOutputWithContext(ctx context.Context) AwsAlbMapOutput {
	return o
}

func (o AwsAlbMapOutput) MapIndex(k pulumi.StringInput) AwsAlbOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsAlb {
		return vs[0].(map[string]*AwsAlb)[vs[1].(string)]
	}).(AwsAlbOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAlbInput)(nil)).Elem(), &AwsAlb{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAlbArrayInput)(nil)).Elem(), AwsAlbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAlbMapInput)(nil)).Elem(), AwsAlbMap{})
	pulumi.RegisterOutputType(AwsAlbOutput{})
	pulumi.RegisterOutputType(AwsAlbArrayOutput{})
	pulumi.RegisterOutputType(AwsAlbMapOutput{})
}
