// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autostopping

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for AWS Autostopping proxy
func LookupAwsProxy(ctx *pulumi.Context, args *LookupAwsProxyArgs, opts ...pulumi.InvokeOption) (*LookupAwsProxyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwsProxyResult
	err := ctx.Invoke("harness:autostopping/getAwsProxy:getAwsProxy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsProxy.
type LookupAwsProxyArgs struct {
	// Boolean value to indicate if proxy vm needs to have static IP
	AllocateStaticIp *bool `pulumi:"allocateStaticIp"`
	// Harness NG API key
	ApiKey       string                   `pulumi:"apiKey"`
	Certificates *GetAwsProxyCertificates `pulumi:"certificates"`
	// Id of the cloud connector
	CloudConnectorId              string `pulumi:"cloudConnectorId"`
	DeleteCloudResourcesOnDestroy bool   `pulumi:"deleteCloudResourcesOnDestroy"`
	// Hostname for the proxy
	HostName string  `pulumi:"hostName"`
	Keypair  *string `pulumi:"keypair"`
	// Machine instance type
	MachineType string `pulumi:"machineType"`
	// Name of the proxy
	Name string `pulumi:"name"`
	// Region in which cloud resources are hosted
	Region string `pulumi:"region"`
	// Route 53 hosted zone id
	Route53HostedZoneId *string `pulumi:"route53HostedZoneId"`
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups []string `pulumi:"securityGroups"`
	// VPC in which cloud resources are hosted
	Vpc string `pulumi:"vpc"`
}

// A collection of values returned by getAwsProxy.
type LookupAwsProxyResult struct {
	// Boolean value to indicate if proxy vm needs to have static IP
	AllocateStaticIp *bool `pulumi:"allocateStaticIp"`
	// Harness NG API key
	ApiKey       string                   `pulumi:"apiKey"`
	Certificates *GetAwsProxyCertificates `pulumi:"certificates"`
	// Id of the cloud connector
	CloudConnectorId              string `pulumi:"cloudConnectorId"`
	DeleteCloudResourcesOnDestroy bool   `pulumi:"deleteCloudResourcesOnDestroy"`
	// Hostname for the proxy
	HostName string `pulumi:"hostName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource
	Identifier string  `pulumi:"identifier"`
	Keypair    *string `pulumi:"keypair"`
	// Machine instance type
	MachineType string `pulumi:"machineType"`
	// Name of the proxy
	Name string `pulumi:"name"`
	// Region in which cloud resources are hosted
	Region string `pulumi:"region"`
	// Route 53 hosted zone id
	Route53HostedZoneId *string `pulumi:"route53HostedZoneId"`
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups []string `pulumi:"securityGroups"`
	// VPC in which cloud resources are hosted
	Vpc string `pulumi:"vpc"`
}

func LookupAwsProxyOutput(ctx *pulumi.Context, args LookupAwsProxyOutputArgs, opts ...pulumi.InvokeOption) LookupAwsProxyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAwsProxyResultOutput, error) {
			args := v.(LookupAwsProxyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:autostopping/getAwsProxy:getAwsProxy", args, LookupAwsProxyResultOutput{}, options).(LookupAwsProxyResultOutput), nil
		}).(LookupAwsProxyResultOutput)
}

// A collection of arguments for invoking getAwsProxy.
type LookupAwsProxyOutputArgs struct {
	// Boolean value to indicate if proxy vm needs to have static IP
	AllocateStaticIp pulumi.BoolPtrInput `pulumi:"allocateStaticIp"`
	// Harness NG API key
	ApiKey       pulumi.StringInput              `pulumi:"apiKey"`
	Certificates GetAwsProxyCertificatesPtrInput `pulumi:"certificates"`
	// Id of the cloud connector
	CloudConnectorId              pulumi.StringInput `pulumi:"cloudConnectorId"`
	DeleteCloudResourcesOnDestroy pulumi.BoolInput   `pulumi:"deleteCloudResourcesOnDestroy"`
	// Hostname for the proxy
	HostName pulumi.StringInput    `pulumi:"hostName"`
	Keypair  pulumi.StringPtrInput `pulumi:"keypair"`
	// Machine instance type
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// Name of the proxy
	Name pulumi.StringInput `pulumi:"name"`
	// Region in which cloud resources are hosted
	Region pulumi.StringInput `pulumi:"region"`
	// Route 53 hosted zone id
	Route53HostedZoneId pulumi.StringPtrInput `pulumi:"route53HostedZoneId"`
	// Security Group to define the security rules that determine the inbound and outbound traffic
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// VPC in which cloud resources are hosted
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (LookupAwsProxyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsProxyArgs)(nil)).Elem()
}

// A collection of values returned by getAwsProxy.
type LookupAwsProxyResultOutput struct{ *pulumi.OutputState }

func (LookupAwsProxyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsProxyResult)(nil)).Elem()
}

func (o LookupAwsProxyResultOutput) ToLookupAwsProxyResultOutput() LookupAwsProxyResultOutput {
	return o
}

func (o LookupAwsProxyResultOutput) ToLookupAwsProxyResultOutputWithContext(ctx context.Context) LookupAwsProxyResultOutput {
	return o
}

// Boolean value to indicate if proxy vm needs to have static IP
func (o LookupAwsProxyResultOutput) AllocateStaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) *bool { return v.AllocateStaticIp }).(pulumi.BoolPtrOutput)
}

// Harness NG API key
func (o LookupAwsProxyResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o LookupAwsProxyResultOutput) Certificates() GetAwsProxyCertificatesPtrOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) *GetAwsProxyCertificates { return v.Certificates }).(GetAwsProxyCertificatesPtrOutput)
}

// Id of the cloud connector
func (o LookupAwsProxyResultOutput) CloudConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.CloudConnectorId }).(pulumi.StringOutput)
}

func (o LookupAwsProxyResultOutput) DeleteCloudResourcesOnDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) bool { return v.DeleteCloudResourcesOnDestroy }).(pulumi.BoolOutput)
}

// Hostname for the proxy
func (o LookupAwsProxyResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.HostName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsProxyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource
func (o LookupAwsProxyResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o LookupAwsProxyResultOutput) Keypair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) *string { return v.Keypair }).(pulumi.StringPtrOutput)
}

// Machine instance type
func (o LookupAwsProxyResultOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.MachineType }).(pulumi.StringOutput)
}

// Name of the proxy
func (o LookupAwsProxyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Region in which cloud resources are hosted
func (o LookupAwsProxyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.Region }).(pulumi.StringOutput)
}

// Route 53 hosted zone id
func (o LookupAwsProxyResultOutput) Route53HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) *string { return v.Route53HostedZoneId }).(pulumi.StringPtrOutput)
}

// Security Group to define the security rules that determine the inbound and outbound traffic
func (o LookupAwsProxyResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// VPC in which cloud resources are hosted
func (o LookupAwsProxyResultOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsProxyResult) string { return v.Vpc }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsProxyResultOutput{})
}
