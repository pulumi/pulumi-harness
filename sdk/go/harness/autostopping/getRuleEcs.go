// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autostopping

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness Variable.
//
// ## Example Usage
func LookupRuleEcs(ctx *pulumi.Context, args *LookupRuleEcsArgs, opts ...pulumi.InvokeOption) (*LookupRuleEcsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuleEcsResult
	err := ctx.Invoke("harness:autostopping/getRuleEcs:getRuleEcs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuleEcs.
type LookupRuleEcsArgs struct {
	// Id of the cloud connector
	CloudConnectorId string               `pulumi:"cloudConnectorId"`
	Container        *GetRuleEcsContainer `pulumi:"container"`
	// Custom URLs used to access the instances
	CustomDomains []string `pulumi:"customDomains"`
	// Dependent rules
	Depends []GetRuleEcsDepend `pulumi:"depends"`
	// Http routing configuration
	Https []GetRuleEcsHttp `pulumi:"https"`
	// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
	IdleTimeMins *int `pulumi:"idleTimeMins"`
	// Name of the rule
	Name string `pulumi:"name"`
}

// A collection of values returned by getRuleEcs.
type LookupRuleEcsResult struct {
	// Id of the cloud connector
	CloudConnectorId string               `pulumi:"cloudConnectorId"`
	Container        *GetRuleEcsContainer `pulumi:"container"`
	// Custom URLs used to access the instances
	CustomDomains []string `pulumi:"customDomains"`
	// Dependent rules
	Depends []GetRuleEcsDepend `pulumi:"depends"`
	// Http routing configuration
	Https []GetRuleEcsHttp `pulumi:"https"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource
	Identifier float64 `pulumi:"identifier"`
	// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
	IdleTimeMins *int `pulumi:"idleTimeMins"`
	// Name of the rule
	Name string `pulumi:"name"`
}

func LookupRuleEcsOutput(ctx *pulumi.Context, args LookupRuleEcsOutputArgs, opts ...pulumi.InvokeOption) LookupRuleEcsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRuleEcsResultOutput, error) {
			args := v.(LookupRuleEcsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:autostopping/getRuleEcs:getRuleEcs", args, LookupRuleEcsResultOutput{}, options).(LookupRuleEcsResultOutput), nil
		}).(LookupRuleEcsResultOutput)
}

// A collection of arguments for invoking getRuleEcs.
type LookupRuleEcsOutputArgs struct {
	// Id of the cloud connector
	CloudConnectorId pulumi.StringInput          `pulumi:"cloudConnectorId"`
	Container        GetRuleEcsContainerPtrInput `pulumi:"container"`
	// Custom URLs used to access the instances
	CustomDomains pulumi.StringArrayInput `pulumi:"customDomains"`
	// Dependent rules
	Depends GetRuleEcsDependArrayInput `pulumi:"depends"`
	// Http routing configuration
	Https GetRuleEcsHttpArrayInput `pulumi:"https"`
	// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
	IdleTimeMins pulumi.IntPtrInput `pulumi:"idleTimeMins"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupRuleEcsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleEcsArgs)(nil)).Elem()
}

// A collection of values returned by getRuleEcs.
type LookupRuleEcsResultOutput struct{ *pulumi.OutputState }

func (LookupRuleEcsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleEcsResult)(nil)).Elem()
}

func (o LookupRuleEcsResultOutput) ToLookupRuleEcsResultOutput() LookupRuleEcsResultOutput {
	return o
}

func (o LookupRuleEcsResultOutput) ToLookupRuleEcsResultOutputWithContext(ctx context.Context) LookupRuleEcsResultOutput {
	return o
}

// Id of the cloud connector
func (o LookupRuleEcsResultOutput) CloudConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) string { return v.CloudConnectorId }).(pulumi.StringOutput)
}

func (o LookupRuleEcsResultOutput) Container() GetRuleEcsContainerPtrOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) *GetRuleEcsContainer { return v.Container }).(GetRuleEcsContainerPtrOutput)
}

// Custom URLs used to access the instances
func (o LookupRuleEcsResultOutput) CustomDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) []string { return v.CustomDomains }).(pulumi.StringArrayOutput)
}

// Dependent rules
func (o LookupRuleEcsResultOutput) Depends() GetRuleEcsDependArrayOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) []GetRuleEcsDepend { return v.Depends }).(GetRuleEcsDependArrayOutput)
}

// Http routing configuration
func (o LookupRuleEcsResultOutput) Https() GetRuleEcsHttpArrayOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) []GetRuleEcsHttp { return v.Https }).(GetRuleEcsHttpArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRuleEcsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource
func (o LookupRuleEcsResultOutput) Identifier() pulumi.Float64Output {
	return o.ApplyT(func(v LookupRuleEcsResult) float64 { return v.Identifier }).(pulumi.Float64Output)
}

// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
func (o LookupRuleEcsResultOutput) IdleTimeMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) *int { return v.IdleTimeMins }).(pulumi.IntPtrOutput)
}

// Name of the rule
func (o LookupRuleEcsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleEcsResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuleEcsResultOutput{})
}
