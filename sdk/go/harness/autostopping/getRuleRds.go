// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autostopping

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness Variable.
//
// ## Example Usage
func LookupRuleRds(ctx *pulumi.Context, args *LookupRuleRdsArgs, opts ...pulumi.InvokeOption) (*LookupRuleRdsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuleRdsResult
	err := ctx.Invoke("harness:autostopping/getRuleRds:getRuleRds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuleRds.
type LookupRuleRdsArgs struct {
	// Id of the cloud connector
	CloudConnectorId string             `pulumi:"cloudConnectorId"`
	Database         GetRuleRdsDatabase `pulumi:"database"`
	// Dependent rules
	Depends []GetRuleRdsDepend `pulumi:"depends"`
	// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
	IdleTimeMins *int `pulumi:"idleTimeMins"`
	// Name of the rule
	Name string `pulumi:"name"`
	// TCP routing configuration
	Tcps []GetRuleRdsTcp `pulumi:"tcps"`
}

// A collection of values returned by getRuleRds.
type LookupRuleRdsResult struct {
	// Id of the cloud connector
	CloudConnectorId string             `pulumi:"cloudConnectorId"`
	Database         GetRuleRdsDatabase `pulumi:"database"`
	// Dependent rules
	Depends []GetRuleRdsDepend `pulumi:"depends"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource
	Identifier float64 `pulumi:"identifier"`
	// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
	IdleTimeMins *int `pulumi:"idleTimeMins"`
	// Name of the rule
	Name string `pulumi:"name"`
	// TCP routing configuration
	Tcps []GetRuleRdsTcp `pulumi:"tcps"`
}

func LookupRuleRdsOutput(ctx *pulumi.Context, args LookupRuleRdsOutputArgs, opts ...pulumi.InvokeOption) LookupRuleRdsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRuleRdsResultOutput, error) {
			args := v.(LookupRuleRdsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:autostopping/getRuleRds:getRuleRds", args, LookupRuleRdsResultOutput{}, options).(LookupRuleRdsResultOutput), nil
		}).(LookupRuleRdsResultOutput)
}

// A collection of arguments for invoking getRuleRds.
type LookupRuleRdsOutputArgs struct {
	// Id of the cloud connector
	CloudConnectorId pulumi.StringInput      `pulumi:"cloudConnectorId"`
	Database         GetRuleRdsDatabaseInput `pulumi:"database"`
	// Dependent rules
	Depends GetRuleRdsDependArrayInput `pulumi:"depends"`
	// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
	IdleTimeMins pulumi.IntPtrInput `pulumi:"idleTimeMins"`
	// Name of the rule
	Name pulumi.StringInput `pulumi:"name"`
	// TCP routing configuration
	Tcps GetRuleRdsTcpArrayInput `pulumi:"tcps"`
}

func (LookupRuleRdsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleRdsArgs)(nil)).Elem()
}

// A collection of values returned by getRuleRds.
type LookupRuleRdsResultOutput struct{ *pulumi.OutputState }

func (LookupRuleRdsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleRdsResult)(nil)).Elem()
}

func (o LookupRuleRdsResultOutput) ToLookupRuleRdsResultOutput() LookupRuleRdsResultOutput {
	return o
}

func (o LookupRuleRdsResultOutput) ToLookupRuleRdsResultOutputWithContext(ctx context.Context) LookupRuleRdsResultOutput {
	return o
}

// Id of the cloud connector
func (o LookupRuleRdsResultOutput) CloudConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) string { return v.CloudConnectorId }).(pulumi.StringOutput)
}

func (o LookupRuleRdsResultOutput) Database() GetRuleRdsDatabaseOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) GetRuleRdsDatabase { return v.Database }).(GetRuleRdsDatabaseOutput)
}

// Dependent rules
func (o LookupRuleRdsResultOutput) Depends() GetRuleRdsDependArrayOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) []GetRuleRdsDepend { return v.Depends }).(GetRuleRdsDependArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRuleRdsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource
func (o LookupRuleRdsResultOutput) Identifier() pulumi.Float64Output {
	return o.ApplyT(func(v LookupRuleRdsResult) float64 { return v.Identifier }).(pulumi.Float64Output)
}

// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
func (o LookupRuleRdsResultOutput) IdleTimeMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) *int { return v.IdleTimeMins }).(pulumi.IntPtrOutput)
}

// Name of the rule
func (o LookupRuleRdsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) string { return v.Name }).(pulumi.StringOutput)
}

// TCP routing configuration
func (o LookupRuleRdsResultOutput) Tcps() GetRuleRdsTcpArrayOutput {
	return o.ApplyT(func(v LookupRuleRdsResult) []GetRuleRdsTcp { return v.Tcps }).(GetRuleRdsTcpArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuleRdsResultOutput{})
}
