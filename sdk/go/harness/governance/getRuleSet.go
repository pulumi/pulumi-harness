// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package governance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a rule.
func LookupRuleSet(ctx *pulumi.Context, args *LookupRuleSetArgs, opts ...pulumi.InvokeOption) (*LookupRuleSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuleSetResult
	err := ctx.Invoke("harness:governance/getRuleSet:getRuleSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuleSet.
type LookupRuleSetArgs struct {
	// Id of rule set.
	RuleSetId string `pulumi:"ruleSetId"`
}

// A collection of values returned by getRuleSet.
type LookupRuleSetResult struct {
	// The cloud provider for the rule set.
	CloudProvider string `pulumi:"cloudProvider"`
	// Description for rule set.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the rule set.
	Name string `pulumi:"name"`
	// List of target regions.
	RuleIds []string `pulumi:"ruleIds"`
	// Id of rule set.
	RuleSetId string `pulumi:"ruleSetId"`
}

func LookupRuleSetOutput(ctx *pulumi.Context, args LookupRuleSetOutputArgs, opts ...pulumi.InvokeOption) LookupRuleSetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRuleSetResultOutput, error) {
			args := v.(LookupRuleSetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:governance/getRuleSet:getRuleSet", args, LookupRuleSetResultOutput{}, options).(LookupRuleSetResultOutput), nil
		}).(LookupRuleSetResultOutput)
}

// A collection of arguments for invoking getRuleSet.
type LookupRuleSetOutputArgs struct {
	// Id of rule set.
	RuleSetId pulumi.StringInput `pulumi:"ruleSetId"`
}

func (LookupRuleSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleSetArgs)(nil)).Elem()
}

// A collection of values returned by getRuleSet.
type LookupRuleSetResultOutput struct{ *pulumi.OutputState }

func (LookupRuleSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleSetResult)(nil)).Elem()
}

func (o LookupRuleSetResultOutput) ToLookupRuleSetResultOutput() LookupRuleSetResultOutput {
	return o
}

func (o LookupRuleSetResultOutput) ToLookupRuleSetResultOutputWithContext(ctx context.Context) LookupRuleSetResultOutput {
	return o
}

// The cloud provider for the rule set.
func (o LookupRuleSetResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Description for rule set.
func (o LookupRuleSetResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRuleSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the rule set.
func (o LookupRuleSetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of target regions.
func (o LookupRuleSetResultOutput) RuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRuleSetResult) []string { return v.RuleIds }).(pulumi.StringArrayOutput)
}

// Id of rule set.
func (o LookupRuleSetResultOutput) RuleSetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuleSetResult) string { return v.RuleSetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuleSetResultOutput{})
}
