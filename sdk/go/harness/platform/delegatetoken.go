// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating delegate tokens. Delegate tokens can be created and revoked. Revoked tokens immediately stop functioning and are only purged after 30 days, meaning you cannot recreate a token with the same name within that period.
// To revoke a token, set tokenStatus field to "REVOKED".
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create delegate token at account level
//			_, err := platform.NewDelegatetoken(ctx, "account_level", &platform.DelegatetokenArgs{
//				Name:      pulumi.String("account-delegate-token"),
//				AccountId: pulumi.String("account_id"),
//			})
//			if err != nil {
//				return err
//			}
//			// Create delegate token at organization level
//			_, err = platform.NewDelegatetoken(ctx, "org_level", &platform.DelegatetokenArgs{
//				Name:      pulumi.String("org-delegate-token"),
//				AccountId: pulumi.String("account_id"),
//				OrgId:     pulumi.String("org_id"),
//			})
//			if err != nil {
//				return err
//			}
//			// Create delegate token at project level
//			_, err = platform.NewDelegatetoken(ctx, "project_level", &platform.DelegatetokenArgs{
//				Name:      pulumi.String("project-delegate-token"),
//				AccountId: pulumi.String("account_id"),
//				OrgId:     pulumi.String("org_id"),
//				ProjectId: pulumi.String("project_id"),
//			})
//			if err != nil {
//				return err
//			}
//			// Create delegate token with auto-expiry
//			_, err = platform.NewDelegatetoken(ctx, "expiry_token", &platform.DelegatetokenArgs{
//				Name:        pulumi.String("expiry-delegate-token"),
//				AccountId:   pulumi.String("account_id"),
//				RevokeAfter: pulumi.Int(1769689600000),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Delegatetoken struct {
	pulumi.CustomResourceState

	// Account Identifier for the Entity
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Time when the delegate token is created. This is an epoch timestamp.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// created by details
	CreatedBy pulumi.StringMapOutput `pulumi:"createdBy"`
	// Name of the delegate token
	Name pulumi.StringOutput `pulumi:"name"`
	// Org Identifier for the Entity
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Project Identifier for the Entity
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
	RevokeAfter pulumi.IntPtrOutput `pulumi:"revokeAfter"`
	// Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
	TokenStatus pulumi.StringOutput `pulumi:"tokenStatus"`
	// Value of the delegate token. Encoded in base64.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewDelegatetoken registers a new resource with the given unique name, arguments, and options.
func NewDelegatetoken(ctx *pulumi.Context,
	name string, args *DelegatetokenArgs, opts ...pulumi.ResourceOption) (*Delegatetoken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Delegatetoken
	err := ctx.RegisterResource("harness:platform/delegatetoken:Delegatetoken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDelegatetoken gets an existing Delegatetoken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDelegatetoken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DelegatetokenState, opts ...pulumi.ResourceOption) (*Delegatetoken, error) {
	var resource Delegatetoken
	err := ctx.ReadResource("harness:platform/delegatetoken:Delegatetoken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Delegatetoken resources.
type delegatetokenState struct {
	// Account Identifier for the Entity
	AccountId *string `pulumi:"accountId"`
	// Time when the delegate token is created. This is an epoch timestamp.
	CreatedAt *int `pulumi:"createdAt"`
	// created by details
	CreatedBy map[string]string `pulumi:"createdBy"`
	// Name of the delegate token
	Name *string `pulumi:"name"`
	// Org Identifier for the Entity
	OrgId *string `pulumi:"orgId"`
	// Project Identifier for the Entity
	ProjectId *string `pulumi:"projectId"`
	// Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
	RevokeAfter *int `pulumi:"revokeAfter"`
	// Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
	TokenStatus *string `pulumi:"tokenStatus"`
	// Value of the delegate token. Encoded in base64.
	Value *string `pulumi:"value"`
}

type DelegatetokenState struct {
	// Account Identifier for the Entity
	AccountId pulumi.StringPtrInput
	// Time when the delegate token is created. This is an epoch timestamp.
	CreatedAt pulumi.IntPtrInput
	// created by details
	CreatedBy pulumi.StringMapInput
	// Name of the delegate token
	Name pulumi.StringPtrInput
	// Org Identifier for the Entity
	OrgId pulumi.StringPtrInput
	// Project Identifier for the Entity
	ProjectId pulumi.StringPtrInput
	// Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
	RevokeAfter pulumi.IntPtrInput
	// Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
	TokenStatus pulumi.StringPtrInput
	// Value of the delegate token. Encoded in base64.
	Value pulumi.StringPtrInput
}

func (DelegatetokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*delegatetokenState)(nil)).Elem()
}

type delegatetokenArgs struct {
	// Account Identifier for the Entity
	AccountId string `pulumi:"accountId"`
	// Time when the delegate token is created. This is an epoch timestamp.
	CreatedAt *int `pulumi:"createdAt"`
	// created by details
	CreatedBy map[string]string `pulumi:"createdBy"`
	// Name of the delegate token
	Name *string `pulumi:"name"`
	// Org Identifier for the Entity
	OrgId *string `pulumi:"orgId"`
	// Project Identifier for the Entity
	ProjectId *string `pulumi:"projectId"`
	// Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
	RevokeAfter *int `pulumi:"revokeAfter"`
	// Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
	TokenStatus *string `pulumi:"tokenStatus"`
	// Value of the delegate token. Encoded in base64.
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a Delegatetoken resource.
type DelegatetokenArgs struct {
	// Account Identifier for the Entity
	AccountId pulumi.StringInput
	// Time when the delegate token is created. This is an epoch timestamp.
	CreatedAt pulumi.IntPtrInput
	// created by details
	CreatedBy pulumi.StringMapInput
	// Name of the delegate token
	Name pulumi.StringPtrInput
	// Org Identifier for the Entity
	OrgId pulumi.StringPtrInput
	// Project Identifier for the Entity
	ProjectId pulumi.StringPtrInput
	// Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
	RevokeAfter pulumi.IntPtrInput
	// Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
	TokenStatus pulumi.StringPtrInput
	// Value of the delegate token. Encoded in base64.
	Value pulumi.StringPtrInput
}

func (DelegatetokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*delegatetokenArgs)(nil)).Elem()
}

type DelegatetokenInput interface {
	pulumi.Input

	ToDelegatetokenOutput() DelegatetokenOutput
	ToDelegatetokenOutputWithContext(ctx context.Context) DelegatetokenOutput
}

func (*Delegatetoken) ElementType() reflect.Type {
	return reflect.TypeOf((**Delegatetoken)(nil)).Elem()
}

func (i *Delegatetoken) ToDelegatetokenOutput() DelegatetokenOutput {
	return i.ToDelegatetokenOutputWithContext(context.Background())
}

func (i *Delegatetoken) ToDelegatetokenOutputWithContext(ctx context.Context) DelegatetokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegatetokenOutput)
}

// DelegatetokenArrayInput is an input type that accepts DelegatetokenArray and DelegatetokenArrayOutput values.
// You can construct a concrete instance of `DelegatetokenArrayInput` via:
//
//	DelegatetokenArray{ DelegatetokenArgs{...} }
type DelegatetokenArrayInput interface {
	pulumi.Input

	ToDelegatetokenArrayOutput() DelegatetokenArrayOutput
	ToDelegatetokenArrayOutputWithContext(context.Context) DelegatetokenArrayOutput
}

type DelegatetokenArray []DelegatetokenInput

func (DelegatetokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Delegatetoken)(nil)).Elem()
}

func (i DelegatetokenArray) ToDelegatetokenArrayOutput() DelegatetokenArrayOutput {
	return i.ToDelegatetokenArrayOutputWithContext(context.Background())
}

func (i DelegatetokenArray) ToDelegatetokenArrayOutputWithContext(ctx context.Context) DelegatetokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegatetokenArrayOutput)
}

// DelegatetokenMapInput is an input type that accepts DelegatetokenMap and DelegatetokenMapOutput values.
// You can construct a concrete instance of `DelegatetokenMapInput` via:
//
//	DelegatetokenMap{ "key": DelegatetokenArgs{...} }
type DelegatetokenMapInput interface {
	pulumi.Input

	ToDelegatetokenMapOutput() DelegatetokenMapOutput
	ToDelegatetokenMapOutputWithContext(context.Context) DelegatetokenMapOutput
}

type DelegatetokenMap map[string]DelegatetokenInput

func (DelegatetokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Delegatetoken)(nil)).Elem()
}

func (i DelegatetokenMap) ToDelegatetokenMapOutput() DelegatetokenMapOutput {
	return i.ToDelegatetokenMapOutputWithContext(context.Background())
}

func (i DelegatetokenMap) ToDelegatetokenMapOutputWithContext(ctx context.Context) DelegatetokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegatetokenMapOutput)
}

type DelegatetokenOutput struct{ *pulumi.OutputState }

func (DelegatetokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Delegatetoken)(nil)).Elem()
}

func (o DelegatetokenOutput) ToDelegatetokenOutput() DelegatetokenOutput {
	return o
}

func (o DelegatetokenOutput) ToDelegatetokenOutputWithContext(ctx context.Context) DelegatetokenOutput {
	return o
}

// Account Identifier for the Entity
func (o DelegatetokenOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Time when the delegate token is created. This is an epoch timestamp.
func (o DelegatetokenOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// created by details
func (o DelegatetokenOutput) CreatedBy() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringMapOutput { return v.CreatedBy }).(pulumi.StringMapOutput)
}

// Name of the delegate token
func (o DelegatetokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Org Identifier for the Entity
func (o DelegatetokenOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project Identifier for the Entity
func (o DelegatetokenOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
func (o DelegatetokenOutput) RevokeAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.IntPtrOutput { return v.RevokeAfter }).(pulumi.IntPtrOutput)
}

// Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
func (o DelegatetokenOutput) TokenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringOutput { return v.TokenStatus }).(pulumi.StringOutput)
}

// Value of the delegate token. Encoded in base64.
func (o DelegatetokenOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *Delegatetoken) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type DelegatetokenArrayOutput struct{ *pulumi.OutputState }

func (DelegatetokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Delegatetoken)(nil)).Elem()
}

func (o DelegatetokenArrayOutput) ToDelegatetokenArrayOutput() DelegatetokenArrayOutput {
	return o
}

func (o DelegatetokenArrayOutput) ToDelegatetokenArrayOutputWithContext(ctx context.Context) DelegatetokenArrayOutput {
	return o
}

func (o DelegatetokenArrayOutput) Index(i pulumi.IntInput) DelegatetokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Delegatetoken {
		return vs[0].([]*Delegatetoken)[vs[1].(int)]
	}).(DelegatetokenOutput)
}

type DelegatetokenMapOutput struct{ *pulumi.OutputState }

func (DelegatetokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Delegatetoken)(nil)).Elem()
}

func (o DelegatetokenMapOutput) ToDelegatetokenMapOutput() DelegatetokenMapOutput {
	return o
}

func (o DelegatetokenMapOutput) ToDelegatetokenMapOutputWithContext(ctx context.Context) DelegatetokenMapOutput {
	return o
}

func (o DelegatetokenMapOutput) MapIndex(k pulumi.StringInput) DelegatetokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Delegatetoken {
		return vs[0].(map[string]*Delegatetoken)[vs[1].(string)]
	}).(DelegatetokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DelegatetokenInput)(nil)).Elem(), &Delegatetoken{})
	pulumi.RegisterInputType(reflect.TypeOf((*DelegatetokenArrayInput)(nil)).Elem(), DelegatetokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DelegatetokenMapInput)(nil)).Elem(), DelegatetokenMap{})
	pulumi.RegisterOutputType(DelegatetokenOutput{})
	pulumi.RegisterOutputType(DelegatetokenArrayOutput{})
	pulumi.RegisterOutputType(DelegatetokenMapOutput{})
}
