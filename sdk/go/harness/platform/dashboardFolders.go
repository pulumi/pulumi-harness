// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for a Harness Custom Dashboard Folder.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.NewDashboardFolders(ctx, "folder", &platform.DashboardFoldersArgs{
//				Name: pulumi.String("name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DashboardFolders struct {
	pulumi.CustomResourceState

	// Created DateTime of the folder.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the folder.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDashboardFolders registers a new resource with the given unique name, arguments, and options.
func NewDashboardFolders(ctx *pulumi.Context,
	name string, args *DashboardFoldersArgs, opts ...pulumi.ResourceOption) (*DashboardFolders, error) {
	if args == nil {
		args = &DashboardFoldersArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DashboardFolders
	err := ctx.RegisterResource("harness:platform/dashboardFolders:DashboardFolders", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboardFolders gets an existing DashboardFolders resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboardFolders(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardFoldersState, opts ...pulumi.ResourceOption) (*DashboardFolders, error) {
	var resource DashboardFolders
	err := ctx.ReadResource("harness:platform/dashboardFolders:DashboardFolders", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DashboardFolders resources.
type dashboardFoldersState struct {
	// Created DateTime of the folder.
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the folder.
	Name *string `pulumi:"name"`
}

type DashboardFoldersState struct {
	// Created DateTime of the folder.
	CreatedAt pulumi.StringPtrInput
	// Name of the folder.
	Name pulumi.StringPtrInput
}

func (DashboardFoldersState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardFoldersState)(nil)).Elem()
}

type dashboardFoldersArgs struct {
	// Name of the folder.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DashboardFolders resource.
type DashboardFoldersArgs struct {
	// Name of the folder.
	Name pulumi.StringPtrInput
}

func (DashboardFoldersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardFoldersArgs)(nil)).Elem()
}

type DashboardFoldersInput interface {
	pulumi.Input

	ToDashboardFoldersOutput() DashboardFoldersOutput
	ToDashboardFoldersOutputWithContext(ctx context.Context) DashboardFoldersOutput
}

func (*DashboardFolders) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFolders)(nil)).Elem()
}

func (i *DashboardFolders) ToDashboardFoldersOutput() DashboardFoldersOutput {
	return i.ToDashboardFoldersOutputWithContext(context.Background())
}

func (i *DashboardFolders) ToDashboardFoldersOutputWithContext(ctx context.Context) DashboardFoldersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFoldersOutput)
}

// DashboardFoldersArrayInput is an input type that accepts DashboardFoldersArray and DashboardFoldersArrayOutput values.
// You can construct a concrete instance of `DashboardFoldersArrayInput` via:
//
//	DashboardFoldersArray{ DashboardFoldersArgs{...} }
type DashboardFoldersArrayInput interface {
	pulumi.Input

	ToDashboardFoldersArrayOutput() DashboardFoldersArrayOutput
	ToDashboardFoldersArrayOutputWithContext(context.Context) DashboardFoldersArrayOutput
}

type DashboardFoldersArray []DashboardFoldersInput

func (DashboardFoldersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DashboardFolders)(nil)).Elem()
}

func (i DashboardFoldersArray) ToDashboardFoldersArrayOutput() DashboardFoldersArrayOutput {
	return i.ToDashboardFoldersArrayOutputWithContext(context.Background())
}

func (i DashboardFoldersArray) ToDashboardFoldersArrayOutputWithContext(ctx context.Context) DashboardFoldersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFoldersArrayOutput)
}

// DashboardFoldersMapInput is an input type that accepts DashboardFoldersMap and DashboardFoldersMapOutput values.
// You can construct a concrete instance of `DashboardFoldersMapInput` via:
//
//	DashboardFoldersMap{ "key": DashboardFoldersArgs{...} }
type DashboardFoldersMapInput interface {
	pulumi.Input

	ToDashboardFoldersMapOutput() DashboardFoldersMapOutput
	ToDashboardFoldersMapOutputWithContext(context.Context) DashboardFoldersMapOutput
}

type DashboardFoldersMap map[string]DashboardFoldersInput

func (DashboardFoldersMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DashboardFolders)(nil)).Elem()
}

func (i DashboardFoldersMap) ToDashboardFoldersMapOutput() DashboardFoldersMapOutput {
	return i.ToDashboardFoldersMapOutputWithContext(context.Background())
}

func (i DashboardFoldersMap) ToDashboardFoldersMapOutputWithContext(ctx context.Context) DashboardFoldersMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFoldersMapOutput)
}

type DashboardFoldersOutput struct{ *pulumi.OutputState }

func (DashboardFoldersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFolders)(nil)).Elem()
}

func (o DashboardFoldersOutput) ToDashboardFoldersOutput() DashboardFoldersOutput {
	return o
}

func (o DashboardFoldersOutput) ToDashboardFoldersOutputWithContext(ctx context.Context) DashboardFoldersOutput {
	return o
}

// Created DateTime of the folder.
func (o DashboardFoldersOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DashboardFolders) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the folder.
func (o DashboardFoldersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DashboardFolders) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type DashboardFoldersArrayOutput struct{ *pulumi.OutputState }

func (DashboardFoldersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DashboardFolders)(nil)).Elem()
}

func (o DashboardFoldersArrayOutput) ToDashboardFoldersArrayOutput() DashboardFoldersArrayOutput {
	return o
}

func (o DashboardFoldersArrayOutput) ToDashboardFoldersArrayOutputWithContext(ctx context.Context) DashboardFoldersArrayOutput {
	return o
}

func (o DashboardFoldersArrayOutput) Index(i pulumi.IntInput) DashboardFoldersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DashboardFolders {
		return vs[0].([]*DashboardFolders)[vs[1].(int)]
	}).(DashboardFoldersOutput)
}

type DashboardFoldersMapOutput struct{ *pulumi.OutputState }

func (DashboardFoldersMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DashboardFolders)(nil)).Elem()
}

func (o DashboardFoldersMapOutput) ToDashboardFoldersMapOutput() DashboardFoldersMapOutput {
	return o
}

func (o DashboardFoldersMapOutput) ToDashboardFoldersMapOutputWithContext(ctx context.Context) DashboardFoldersMapOutput {
	return o
}

func (o DashboardFoldersMapOutput) MapIndex(k pulumi.StringInput) DashboardFoldersOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DashboardFolders {
		return vs[0].(map[string]*DashboardFolders)[vs[1].(string)]
	}).(DashboardFoldersOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFoldersInput)(nil)).Elem(), &DashboardFolders{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFoldersArrayInput)(nil)).Elem(), DashboardFoldersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFoldersMapInput)(nil)).Elem(), DashboardFoldersMap{})
	pulumi.RegisterOutputType(DashboardFoldersOutput{})
	pulumi.RegisterOutputType(DashboardFoldersArrayOutput{})
	pulumi.RegisterOutputType(DashboardFoldersMapOutput{})
}
