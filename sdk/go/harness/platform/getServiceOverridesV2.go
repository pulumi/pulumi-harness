// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for Harness service overrides V2.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupServiceOverridesV2(ctx, &platform.LookupServiceOverridesV2Args{
//				Identifier: "identifier",
//				OrgId:      pulumi.StringRef("orgIdentifier"),
//				ProjectId:  pulumi.StringRef("projectIdentifier"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceOverridesV2(ctx *pulumi.Context, args *LookupServiceOverridesV2Args, opts ...pulumi.InvokeOption) (*LookupServiceOverridesV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceOverridesV2Result
	err := ctx.Invoke("harness:platform/getServiceOverridesV2:getServiceOverridesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceOverridesV2.
type LookupServiceOverridesV2Args struct {
	GitDetails *GetServiceOverridesV2GitDetails `pulumi:"gitDetails"`
	Identifier string                           `pulumi:"identifier"`
	OrgId      *string                          `pulumi:"orgId"`
	ProjectId  *string                          `pulumi:"projectId"`
}

// A collection of values returned by getServiceOverridesV2.
type LookupServiceOverridesV2Result struct {
	ClusterId  string                          `pulumi:"clusterId"`
	EnvId      string                          `pulumi:"envId"`
	GitDetails GetServiceOverridesV2GitDetails `pulumi:"gitDetails"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	Identifier string  `pulumi:"identifier"`
	InfraId    string  `pulumi:"infraId"`
	OrgId      *string `pulumi:"orgId"`
	ProjectId  *string `pulumi:"projectId"`
	ServiceId  string  `pulumi:"serviceId"`
	Type       string  `pulumi:"type"`
	Yaml       string  `pulumi:"yaml"`
}

func LookupServiceOverridesV2Output(ctx *pulumi.Context, args LookupServiceOverridesV2OutputArgs, opts ...pulumi.InvokeOption) LookupServiceOverridesV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceOverridesV2ResultOutput, error) {
			args := v.(LookupServiceOverridesV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getServiceOverridesV2:getServiceOverridesV2", args, LookupServiceOverridesV2ResultOutput{}, options).(LookupServiceOverridesV2ResultOutput), nil
		}).(LookupServiceOverridesV2ResultOutput)
}

// A collection of arguments for invoking getServiceOverridesV2.
type LookupServiceOverridesV2OutputArgs struct {
	GitDetails GetServiceOverridesV2GitDetailsPtrInput `pulumi:"gitDetails"`
	Identifier pulumi.StringInput                      `pulumi:"identifier"`
	OrgId      pulumi.StringPtrInput                   `pulumi:"orgId"`
	ProjectId  pulumi.StringPtrInput                   `pulumi:"projectId"`
}

func (LookupServiceOverridesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceOverridesV2Args)(nil)).Elem()
}

// A collection of values returned by getServiceOverridesV2.
type LookupServiceOverridesV2ResultOutput struct{ *pulumi.OutputState }

func (LookupServiceOverridesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceOverridesV2Result)(nil)).Elem()
}

func (o LookupServiceOverridesV2ResultOutput) ToLookupServiceOverridesV2ResultOutput() LookupServiceOverridesV2ResultOutput {
	return o
}

func (o LookupServiceOverridesV2ResultOutput) ToLookupServiceOverridesV2ResultOutputWithContext(ctx context.Context) LookupServiceOverridesV2ResultOutput {
	return o
}

func (o LookupServiceOverridesV2ResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.EnvId }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) GitDetails() GetServiceOverridesV2GitDetailsOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) GetServiceOverridesV2GitDetails { return v.GitDetails }).(GetServiceOverridesV2GitDetailsOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServiceOverridesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) InfraId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.InfraId }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

func (o LookupServiceOverridesV2ResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupServiceOverridesV2ResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupServiceOverridesV2ResultOutput) Yaml() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceOverridesV2Result) string { return v.Yaml }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceOverridesV2ResultOutput{})
}
