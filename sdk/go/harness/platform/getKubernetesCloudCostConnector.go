// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a Kubernetes Cloud Cost connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupKubernetesCloudCostConnector(ctx, &platform.LookupKubernetesCloudCostConnectorArgs{
//				Identifier: "identifier",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupKubernetesCloudCostConnector(ctx *pulumi.Context, args *LookupKubernetesCloudCostConnectorArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesCloudCostConnectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKubernetesCloudCostConnectorResult
	err := ctx.Invoke("harness:platform/getKubernetesCloudCostConnector:getKubernetesCloudCostConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesCloudCostConnector.
type LookupKubernetesCloudCostConnectorArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getKubernetesCloudCostConnector.
type LookupKubernetesCloudCostConnectorResult struct {
	// Reference of the Connector.
	ConnectorRef string `pulumi:"connectorRef"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

func LookupKubernetesCloudCostConnectorOutput(ctx *pulumi.Context, args LookupKubernetesCloudCostConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupKubernetesCloudCostConnectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKubernetesCloudCostConnectorResultOutput, error) {
			args := v.(LookupKubernetesCloudCostConnectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getKubernetesCloudCostConnector:getKubernetesCloudCostConnector", args, LookupKubernetesCloudCostConnectorResultOutput{}, options).(LookupKubernetesCloudCostConnectorResultOutput), nil
		}).(LookupKubernetesCloudCostConnectorResultOutput)
}

// A collection of arguments for invoking getKubernetesCloudCostConnector.
type LookupKubernetesCloudCostConnectorOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupKubernetesCloudCostConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesCloudCostConnectorArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesCloudCostConnector.
type LookupKubernetesCloudCostConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupKubernetesCloudCostConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesCloudCostConnectorResult)(nil)).Elem()
}

func (o LookupKubernetesCloudCostConnectorResultOutput) ToLookupKubernetesCloudCostConnectorResultOutput() LookupKubernetesCloudCostConnectorResultOutput {
	return o
}

func (o LookupKubernetesCloudCostConnectorResultOutput) ToLookupKubernetesCloudCostConnectorResultOutputWithContext(ctx context.Context) LookupKubernetesCloudCostConnectorResultOutput {
	return o
}

// Reference of the Connector.
func (o LookupKubernetesCloudCostConnectorResultOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// Description of the resource.
func (o LookupKubernetesCloudCostConnectorResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates which feature to enable among Billing, Optimization, and Visibility.
func (o LookupKubernetesCloudCostConnectorResultOutput) FeaturesEnableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) []string { return v.FeaturesEnableds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKubernetesCloudCostConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupKubernetesCloudCostConnectorResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupKubernetesCloudCostConnectorResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupKubernetesCloudCostConnectorResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupKubernetesCloudCostConnectorResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o LookupKubernetesCloudCostConnectorResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKubernetesCloudCostConnectorResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubernetesCloudCostConnectorResultOutput{})
}
