// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness Dashboard Folder.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupDashboardFolders(ctx, &platform.LookupDashboardFoldersArgs{
//				Id: "id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDashboardFolders(ctx *pulumi.Context, args *LookupDashboardFoldersArgs, opts ...pulumi.InvokeOption) (*LookupDashboardFoldersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDashboardFoldersResult
	err := ctx.Invoke("harness:platform/getDashboardFolders:getDashboardFolders", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDashboardFolders.
type LookupDashboardFoldersArgs struct {
	// Identifier of the folder.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getDashboardFolders.
type LookupDashboardFoldersResult struct {
	// Created DateTime of the folder.
	CreatedAt string `pulumi:"createdAt"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// Identifier of the folder.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

func LookupDashboardFoldersOutput(ctx *pulumi.Context, args LookupDashboardFoldersOutputArgs, opts ...pulumi.InvokeOption) LookupDashboardFoldersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDashboardFoldersResultOutput, error) {
			args := v.(LookupDashboardFoldersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getDashboardFolders:getDashboardFolders", args, LookupDashboardFoldersResultOutput{}, options).(LookupDashboardFoldersResultOutput), nil
		}).(LookupDashboardFoldersResultOutput)
}

// A collection of arguments for invoking getDashboardFolders.
type LookupDashboardFoldersOutputArgs struct {
	// Identifier of the folder.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupDashboardFoldersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardFoldersArgs)(nil)).Elem()
}

// A collection of values returned by getDashboardFolders.
type LookupDashboardFoldersResultOutput struct{ *pulumi.OutputState }

func (LookupDashboardFoldersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardFoldersResult)(nil)).Elem()
}

func (o LookupDashboardFoldersResultOutput) ToLookupDashboardFoldersResultOutput() LookupDashboardFoldersResultOutput {
	return o
}

func (o LookupDashboardFoldersResultOutput) ToLookupDashboardFoldersResultOutputWithContext(ctx context.Context) LookupDashboardFoldersResultOutput {
	return o
}

// Created DateTime of the folder.
func (o LookupDashboardFoldersResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardFoldersResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the resource.
func (o LookupDashboardFoldersResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardFoldersResult) string { return v.Description }).(pulumi.StringOutput)
}

// Identifier of the folder.
func (o LookupDashboardFoldersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardFoldersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupDashboardFoldersResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardFoldersResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o LookupDashboardFoldersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardFoldersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o LookupDashboardFoldersResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardFoldersResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDashboardFoldersResultOutput{})
}
