// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating a Harness Default Notification Template Set
type DefaultNotificationTemplateSet struct {
	pulumi.CustomResourceState

	// Timestamp when the default notification template set was created.
	Created pulumi.IntOutput `pulumi:"created"`
	// Description for Default Notification Template Set
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Set of event-template configurations
	EventTemplateConfigurationSets DefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput `pulumi:"eventTemplateConfigurationSets"`
	// Identifier of Default Notification Template Set
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Timestamp when the default notification template set was last modified.
	LastModified pulumi.IntOutput `pulumi:"lastModified"`
	// Name of Default Notification Template Set
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType pulumi.StringOutput `pulumi:"notificationChannelType"`
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity pulumi.StringOutput `pulumi:"notificationEntity"`
	// Key-value tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewDefaultNotificationTemplateSet registers a new resource with the given unique name, arguments, and options.
func NewDefaultNotificationTemplateSet(ctx *pulumi.Context,
	name string, args *DefaultNotificationTemplateSetArgs, opts ...pulumi.ResourceOption) (*DefaultNotificationTemplateSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventTemplateConfigurationSets == nil {
		return nil, errors.New("invalid value for required argument 'EventTemplateConfigurationSets'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.NotificationChannelType == nil {
		return nil, errors.New("invalid value for required argument 'NotificationChannelType'")
	}
	if args.NotificationEntity == nil {
		return nil, errors.New("invalid value for required argument 'NotificationEntity'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultNotificationTemplateSet
	err := ctx.RegisterResource("harness:platform/defaultNotificationTemplateSet:DefaultNotificationTemplateSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultNotificationTemplateSet gets an existing DefaultNotificationTemplateSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultNotificationTemplateSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultNotificationTemplateSetState, opts ...pulumi.ResourceOption) (*DefaultNotificationTemplateSet, error) {
	var resource DefaultNotificationTemplateSet
	err := ctx.ReadResource("harness:platform/defaultNotificationTemplateSet:DefaultNotificationTemplateSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultNotificationTemplateSet resources.
type defaultNotificationTemplateSetState struct {
	// Timestamp when the default notification template set was created.
	Created *int `pulumi:"created"`
	// Description for Default Notification Template Set
	Description *string `pulumi:"description"`
	// Set of event-template configurations
	EventTemplateConfigurationSets []DefaultNotificationTemplateSetEventTemplateConfigurationSet `pulumi:"eventTemplateConfigurationSets"`
	// Identifier of Default Notification Template Set
	Identifier *string `pulumi:"identifier"`
	// Timestamp when the default notification template set was last modified.
	LastModified *int `pulumi:"lastModified"`
	// Name of Default Notification Template Set
	Name *string `pulumi:"name"`
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType *string `pulumi:"notificationChannelType"`
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity *string `pulumi:"notificationEntity"`
	// Key-value tags
	Tags map[string]string `pulumi:"tags"`
}

type DefaultNotificationTemplateSetState struct {
	// Timestamp when the default notification template set was created.
	Created pulumi.IntPtrInput
	// Description for Default Notification Template Set
	Description pulumi.StringPtrInput
	// Set of event-template configurations
	EventTemplateConfigurationSets DefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput
	// Identifier of Default Notification Template Set
	Identifier pulumi.StringPtrInput
	// Timestamp when the default notification template set was last modified.
	LastModified pulumi.IntPtrInput
	// Name of Default Notification Template Set
	Name pulumi.StringPtrInput
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType pulumi.StringPtrInput
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity pulumi.StringPtrInput
	// Key-value tags
	Tags pulumi.StringMapInput
}

func (DefaultNotificationTemplateSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultNotificationTemplateSetState)(nil)).Elem()
}

type defaultNotificationTemplateSetArgs struct {
	// Description for Default Notification Template Set
	Description *string `pulumi:"description"`
	// Set of event-template configurations
	EventTemplateConfigurationSets []DefaultNotificationTemplateSetEventTemplateConfigurationSet `pulumi:"eventTemplateConfigurationSets"`
	// Identifier of Default Notification Template Set
	Identifier string `pulumi:"identifier"`
	// Name of Default Notification Template Set
	Name *string `pulumi:"name"`
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType string `pulumi:"notificationChannelType"`
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity string `pulumi:"notificationEntity"`
	// Key-value tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DefaultNotificationTemplateSet resource.
type DefaultNotificationTemplateSetArgs struct {
	// Description for Default Notification Template Set
	Description pulumi.StringPtrInput
	// Set of event-template configurations
	EventTemplateConfigurationSets DefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput
	// Identifier of Default Notification Template Set
	Identifier pulumi.StringInput
	// Name of Default Notification Template Set
	Name pulumi.StringPtrInput
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType pulumi.StringInput
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity pulumi.StringInput
	// Key-value tags
	Tags pulumi.StringMapInput
}

func (DefaultNotificationTemplateSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultNotificationTemplateSetArgs)(nil)).Elem()
}

type DefaultNotificationTemplateSetInput interface {
	pulumi.Input

	ToDefaultNotificationTemplateSetOutput() DefaultNotificationTemplateSetOutput
	ToDefaultNotificationTemplateSetOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetOutput
}

func (*DefaultNotificationTemplateSet) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultNotificationTemplateSet)(nil)).Elem()
}

func (i *DefaultNotificationTemplateSet) ToDefaultNotificationTemplateSetOutput() DefaultNotificationTemplateSetOutput {
	return i.ToDefaultNotificationTemplateSetOutputWithContext(context.Background())
}

func (i *DefaultNotificationTemplateSet) ToDefaultNotificationTemplateSetOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNotificationTemplateSetOutput)
}

// DefaultNotificationTemplateSetArrayInput is an input type that accepts DefaultNotificationTemplateSetArray and DefaultNotificationTemplateSetArrayOutput values.
// You can construct a concrete instance of `DefaultNotificationTemplateSetArrayInput` via:
//
//	DefaultNotificationTemplateSetArray{ DefaultNotificationTemplateSetArgs{...} }
type DefaultNotificationTemplateSetArrayInput interface {
	pulumi.Input

	ToDefaultNotificationTemplateSetArrayOutput() DefaultNotificationTemplateSetArrayOutput
	ToDefaultNotificationTemplateSetArrayOutputWithContext(context.Context) DefaultNotificationTemplateSetArrayOutput
}

type DefaultNotificationTemplateSetArray []DefaultNotificationTemplateSetInput

func (DefaultNotificationTemplateSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultNotificationTemplateSet)(nil)).Elem()
}

func (i DefaultNotificationTemplateSetArray) ToDefaultNotificationTemplateSetArrayOutput() DefaultNotificationTemplateSetArrayOutput {
	return i.ToDefaultNotificationTemplateSetArrayOutputWithContext(context.Background())
}

func (i DefaultNotificationTemplateSetArray) ToDefaultNotificationTemplateSetArrayOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNotificationTemplateSetArrayOutput)
}

// DefaultNotificationTemplateSetMapInput is an input type that accepts DefaultNotificationTemplateSetMap and DefaultNotificationTemplateSetMapOutput values.
// You can construct a concrete instance of `DefaultNotificationTemplateSetMapInput` via:
//
//	DefaultNotificationTemplateSetMap{ "key": DefaultNotificationTemplateSetArgs{...} }
type DefaultNotificationTemplateSetMapInput interface {
	pulumi.Input

	ToDefaultNotificationTemplateSetMapOutput() DefaultNotificationTemplateSetMapOutput
	ToDefaultNotificationTemplateSetMapOutputWithContext(context.Context) DefaultNotificationTemplateSetMapOutput
}

type DefaultNotificationTemplateSetMap map[string]DefaultNotificationTemplateSetInput

func (DefaultNotificationTemplateSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultNotificationTemplateSet)(nil)).Elem()
}

func (i DefaultNotificationTemplateSetMap) ToDefaultNotificationTemplateSetMapOutput() DefaultNotificationTemplateSetMapOutput {
	return i.ToDefaultNotificationTemplateSetMapOutputWithContext(context.Background())
}

func (i DefaultNotificationTemplateSetMap) ToDefaultNotificationTemplateSetMapOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNotificationTemplateSetMapOutput)
}

type DefaultNotificationTemplateSetOutput struct{ *pulumi.OutputState }

func (DefaultNotificationTemplateSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultNotificationTemplateSet)(nil)).Elem()
}

func (o DefaultNotificationTemplateSetOutput) ToDefaultNotificationTemplateSetOutput() DefaultNotificationTemplateSetOutput {
	return o
}

func (o DefaultNotificationTemplateSetOutput) ToDefaultNotificationTemplateSetOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetOutput {
	return o
}

// Timestamp when the default notification template set was created.
func (o DefaultNotificationTemplateSetOutput) Created() pulumi.IntOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.IntOutput { return v.Created }).(pulumi.IntOutput)
}

// Description for Default Notification Template Set
func (o DefaultNotificationTemplateSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Set of event-template configurations
func (o DefaultNotificationTemplateSetOutput) EventTemplateConfigurationSets() DefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) DefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
		return v.EventTemplateConfigurationSets
	}).(DefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput)
}

// Identifier of Default Notification Template Set
func (o DefaultNotificationTemplateSetOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Timestamp when the default notification template set was last modified.
func (o DefaultNotificationTemplateSetOutput) LastModified() pulumi.IntOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.IntOutput { return v.LastModified }).(pulumi.IntOutput)
}

// Name of Default Notification Template Set
func (o DefaultNotificationTemplateSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Type of channel (e.g. SLACK, EMAIL, etc.)
func (o DefaultNotificationTemplateSetOutput) NotificationChannelType() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.StringOutput { return v.NotificationChannelType }).(pulumi.StringOutput)
}

// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
func (o DefaultNotificationTemplateSetOutput) NotificationEntity() pulumi.StringOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.StringOutput { return v.NotificationEntity }).(pulumi.StringOutput)
}

// Key-value tags
func (o DefaultNotificationTemplateSetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DefaultNotificationTemplateSet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type DefaultNotificationTemplateSetArrayOutput struct{ *pulumi.OutputState }

func (DefaultNotificationTemplateSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DefaultNotificationTemplateSet)(nil)).Elem()
}

func (o DefaultNotificationTemplateSetArrayOutput) ToDefaultNotificationTemplateSetArrayOutput() DefaultNotificationTemplateSetArrayOutput {
	return o
}

func (o DefaultNotificationTemplateSetArrayOutput) ToDefaultNotificationTemplateSetArrayOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetArrayOutput {
	return o
}

func (o DefaultNotificationTemplateSetArrayOutput) Index(i pulumi.IntInput) DefaultNotificationTemplateSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DefaultNotificationTemplateSet {
		return vs[0].([]*DefaultNotificationTemplateSet)[vs[1].(int)]
	}).(DefaultNotificationTemplateSetOutput)
}

type DefaultNotificationTemplateSetMapOutput struct{ *pulumi.OutputState }

func (DefaultNotificationTemplateSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DefaultNotificationTemplateSet)(nil)).Elem()
}

func (o DefaultNotificationTemplateSetMapOutput) ToDefaultNotificationTemplateSetMapOutput() DefaultNotificationTemplateSetMapOutput {
	return o
}

func (o DefaultNotificationTemplateSetMapOutput) ToDefaultNotificationTemplateSetMapOutputWithContext(ctx context.Context) DefaultNotificationTemplateSetMapOutput {
	return o
}

func (o DefaultNotificationTemplateSetMapOutput) MapIndex(k pulumi.StringInput) DefaultNotificationTemplateSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DefaultNotificationTemplateSet {
		return vs[0].(map[string]*DefaultNotificationTemplateSet)[vs[1].(string)]
	}).(DefaultNotificationTemplateSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultNotificationTemplateSetInput)(nil)).Elem(), &DefaultNotificationTemplateSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultNotificationTemplateSetArrayInput)(nil)).Elem(), DefaultNotificationTemplateSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefaultNotificationTemplateSetMapInput)(nil)).Elem(), DefaultNotificationTemplateSetMap{})
	pulumi.RegisterOutputType(DefaultNotificationTemplateSetOutput{})
	pulumi.RegisterOutputType(DefaultNotificationTemplateSetArrayOutput{})
	pulumi.RegisterOutputType(DefaultNotificationTemplateSetMapOutput{})
}
