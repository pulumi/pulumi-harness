// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating and managing Harness Registries.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupHarRegistry(ctx, &platform.LookupHarRegistryArgs{
//				Identifier: "test_registry",
//				SpaceRef:   pulumi.StringRef("accountId/orgId/projectId"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupHarRegistry(ctx *pulumi.Context, args *LookupHarRegistryArgs, opts ...pulumi.InvokeOption) (*LookupHarRegistryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHarRegistryResult
	err := ctx.Invoke("harness:platform/getHarRegistry:getHarRegistry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHarRegistry.
type LookupHarRegistryArgs struct {
	// Allowed artifact patterns
	AllowedPatterns []string `pulumi:"allowedPatterns"`
	// Blocked artifact patterns
	BlockedPatterns []string `pulumi:"blockedPatterns"`
	// Configuration for the registry
	Configs []GetHarRegistryConfig `pulumi:"configs"`
	// Description of the registry
	Description *string `pulumi:"description"`
	// Unique identifier of the registry
	Identifier string `pulumi:"identifier"`
	// Type of package (DOCKER, HELM, MAVEN, etc.)
	PackageType *string `pulumi:"packageType"`
	// Parent reference for the registry
	ParentRef *string `pulumi:"parentRef"`
	// Space reference for the registry
	SpaceRef *string `pulumi:"spaceRef"`
}

// A collection of values returned by getHarRegistry.
type LookupHarRegistryResult struct {
	// Allowed artifact patterns
	AllowedPatterns []string `pulumi:"allowedPatterns"`
	// Blocked artifact patterns
	BlockedPatterns []string `pulumi:"blockedPatterns"`
	// Configuration for the registry
	Configs []GetHarRegistryConfig `pulumi:"configs"`
	// Creation timestamp
	CreatedAt string `pulumi:"createdAt"`
	// Description of the registry
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the registry
	Identifier string `pulumi:"identifier"`
	// Type of package (DOCKER, HELM, MAVEN, etc.)
	PackageType *string `pulumi:"packageType"`
	// Parent reference for the registry
	ParentRef *string `pulumi:"parentRef"`
	// Space reference for the registry
	SpaceRef *string `pulumi:"spaceRef"`
	// URL of the registry
	Url string `pulumi:"url"`
}

func LookupHarRegistryOutput(ctx *pulumi.Context, args LookupHarRegistryOutputArgs, opts ...pulumi.InvokeOption) LookupHarRegistryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHarRegistryResultOutput, error) {
			args := v.(LookupHarRegistryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getHarRegistry:getHarRegistry", args, LookupHarRegistryResultOutput{}, options).(LookupHarRegistryResultOutput), nil
		}).(LookupHarRegistryResultOutput)
}

// A collection of arguments for invoking getHarRegistry.
type LookupHarRegistryOutputArgs struct {
	// Allowed artifact patterns
	AllowedPatterns pulumi.StringArrayInput `pulumi:"allowedPatterns"`
	// Blocked artifact patterns
	BlockedPatterns pulumi.StringArrayInput `pulumi:"blockedPatterns"`
	// Configuration for the registry
	Configs GetHarRegistryConfigArrayInput `pulumi:"configs"`
	// Description of the registry
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Unique identifier of the registry
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Type of package (DOCKER, HELM, MAVEN, etc.)
	PackageType pulumi.StringPtrInput `pulumi:"packageType"`
	// Parent reference for the registry
	ParentRef pulumi.StringPtrInput `pulumi:"parentRef"`
	// Space reference for the registry
	SpaceRef pulumi.StringPtrInput `pulumi:"spaceRef"`
}

func (LookupHarRegistryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHarRegistryArgs)(nil)).Elem()
}

// A collection of values returned by getHarRegistry.
type LookupHarRegistryResultOutput struct{ *pulumi.OutputState }

func (LookupHarRegistryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHarRegistryResult)(nil)).Elem()
}

func (o LookupHarRegistryResultOutput) ToLookupHarRegistryResultOutput() LookupHarRegistryResultOutput {
	return o
}

func (o LookupHarRegistryResultOutput) ToLookupHarRegistryResultOutputWithContext(ctx context.Context) LookupHarRegistryResultOutput {
	return o
}

// Allowed artifact patterns
func (o LookupHarRegistryResultOutput) AllowedPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) []string { return v.AllowedPatterns }).(pulumi.StringArrayOutput)
}

// Blocked artifact patterns
func (o LookupHarRegistryResultOutput) BlockedPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) []string { return v.BlockedPatterns }).(pulumi.StringArrayOutput)
}

// Configuration for the registry
func (o LookupHarRegistryResultOutput) Configs() GetHarRegistryConfigArrayOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) []GetHarRegistryConfig { return v.Configs }).(GetHarRegistryConfigArrayOutput)
}

// Creation timestamp
func (o LookupHarRegistryResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the registry
func (o LookupHarRegistryResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHarRegistryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the registry
func (o LookupHarRegistryResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Type of package (DOCKER, HELM, MAVEN, etc.)
func (o LookupHarRegistryResultOutput) PackageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) *string { return v.PackageType }).(pulumi.StringPtrOutput)
}

// Parent reference for the registry
func (o LookupHarRegistryResultOutput) ParentRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) *string { return v.ParentRef }).(pulumi.StringPtrOutput)
}

// Space reference for the registry
func (o LookupHarRegistryResultOutput) SpaceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) *string { return v.SpaceRef }).(pulumi.StringPtrOutput)
}

// URL of the registry
func (o LookupHarRegistryResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHarRegistryResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHarRegistryResultOutput{})
}
