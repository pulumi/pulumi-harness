// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating a Harness Notification Rule for Pipeline
type PipelineCentralNotificationRule struct {
	pulumi.CustomResourceState

	// Account identifier associated with this notification channel.
	Account pulumi.StringOutput `pulumi:"account"`
	// Timestamp when the notification rule was created.
	Created                       pulumi.IntOutput                                                      `pulumi:"created"`
	CustomNotificationTemplateRef PipelineCentralNotificationRuleCustomNotificationTemplateRefPtrOutput `pulumi:"customNotificationTemplateRef"`
	Identifier                    pulumi.StringOutput                                                   `pulumi:"identifier"`
	// Timestamp when the notification rule was last modified.
	LastModified            pulumi.IntOutput                                                `pulumi:"lastModified"`
	Name                    pulumi.StringOutput                                             `pulumi:"name"`
	NotificationChannelRefs pulumi.StringArrayOutput                                        `pulumi:"notificationChannelRefs"`
	NotificationConditions  PipelineCentralNotificationRuleNotificationConditionArrayOutput `pulumi:"notificationConditions"`
	Org                     pulumi.StringPtrOutput                                          `pulumi:"org"`
	Project                 pulumi.StringPtrOutput                                          `pulumi:"project"`
	// Status of the notification rule. Supported values: `ENABLED`, `DISABLED`. Default: `ENABLED`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
}

// NewPipelineCentralNotificationRule registers a new resource with the given unique name, arguments, and options.
func NewPipelineCentralNotificationRule(ctx *pulumi.Context,
	name string, args *PipelineCentralNotificationRuleArgs, opts ...pulumi.ResourceOption) (*PipelineCentralNotificationRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.NotificationChannelRefs == nil {
		return nil, errors.New("invalid value for required argument 'NotificationChannelRefs'")
	}
	if args.NotificationConditions == nil {
		return nil, errors.New("invalid value for required argument 'NotificationConditions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PipelineCentralNotificationRule
	err := ctx.RegisterResource("harness:platform/pipelineCentralNotificationRule:PipelineCentralNotificationRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipelineCentralNotificationRule gets an existing PipelineCentralNotificationRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipelineCentralNotificationRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PipelineCentralNotificationRuleState, opts ...pulumi.ResourceOption) (*PipelineCentralNotificationRule, error) {
	var resource PipelineCentralNotificationRule
	err := ctx.ReadResource("harness:platform/pipelineCentralNotificationRule:PipelineCentralNotificationRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PipelineCentralNotificationRule resources.
type pipelineCentralNotificationRuleState struct {
	// Account identifier associated with this notification channel.
	Account *string `pulumi:"account"`
	// Timestamp when the notification rule was created.
	Created                       *int                                                          `pulumi:"created"`
	CustomNotificationTemplateRef *PipelineCentralNotificationRuleCustomNotificationTemplateRef `pulumi:"customNotificationTemplateRef"`
	Identifier                    *string                                                       `pulumi:"identifier"`
	// Timestamp when the notification rule was last modified.
	LastModified            *int                                                   `pulumi:"lastModified"`
	Name                    *string                                                `pulumi:"name"`
	NotificationChannelRefs []string                                               `pulumi:"notificationChannelRefs"`
	NotificationConditions  []PipelineCentralNotificationRuleNotificationCondition `pulumi:"notificationConditions"`
	Org                     *string                                                `pulumi:"org"`
	Project                 *string                                                `pulumi:"project"`
	// Status of the notification rule. Supported values: `ENABLED`, `DISABLED`. Default: `ENABLED`.
	Status *string `pulumi:"status"`
}

type PipelineCentralNotificationRuleState struct {
	// Account identifier associated with this notification channel.
	Account pulumi.StringPtrInput
	// Timestamp when the notification rule was created.
	Created                       pulumi.IntPtrInput
	CustomNotificationTemplateRef PipelineCentralNotificationRuleCustomNotificationTemplateRefPtrInput
	Identifier                    pulumi.StringPtrInput
	// Timestamp when the notification rule was last modified.
	LastModified            pulumi.IntPtrInput
	Name                    pulumi.StringPtrInput
	NotificationChannelRefs pulumi.StringArrayInput
	NotificationConditions  PipelineCentralNotificationRuleNotificationConditionArrayInput
	Org                     pulumi.StringPtrInput
	Project                 pulumi.StringPtrInput
	// Status of the notification rule. Supported values: `ENABLED`, `DISABLED`. Default: `ENABLED`.
	Status pulumi.StringPtrInput
}

func (PipelineCentralNotificationRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineCentralNotificationRuleState)(nil)).Elem()
}

type pipelineCentralNotificationRuleArgs struct {
	CustomNotificationTemplateRef *PipelineCentralNotificationRuleCustomNotificationTemplateRef `pulumi:"customNotificationTemplateRef"`
	Identifier                    string                                                        `pulumi:"identifier"`
	Name                          *string                                                       `pulumi:"name"`
	NotificationChannelRefs       []string                                                      `pulumi:"notificationChannelRefs"`
	NotificationConditions        []PipelineCentralNotificationRuleNotificationCondition        `pulumi:"notificationConditions"`
	Org                           *string                                                       `pulumi:"org"`
	Project                       *string                                                       `pulumi:"project"`
	// Status of the notification rule. Supported values: `ENABLED`, `DISABLED`. Default: `ENABLED`.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a PipelineCentralNotificationRule resource.
type PipelineCentralNotificationRuleArgs struct {
	CustomNotificationTemplateRef PipelineCentralNotificationRuleCustomNotificationTemplateRefPtrInput
	Identifier                    pulumi.StringInput
	Name                          pulumi.StringPtrInput
	NotificationChannelRefs       pulumi.StringArrayInput
	NotificationConditions        PipelineCentralNotificationRuleNotificationConditionArrayInput
	Org                           pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	// Status of the notification rule. Supported values: `ENABLED`, `DISABLED`. Default: `ENABLED`.
	Status pulumi.StringPtrInput
}

func (PipelineCentralNotificationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineCentralNotificationRuleArgs)(nil)).Elem()
}

type PipelineCentralNotificationRuleInput interface {
	pulumi.Input

	ToPipelineCentralNotificationRuleOutput() PipelineCentralNotificationRuleOutput
	ToPipelineCentralNotificationRuleOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleOutput
}

func (*PipelineCentralNotificationRule) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineCentralNotificationRule)(nil)).Elem()
}

func (i *PipelineCentralNotificationRule) ToPipelineCentralNotificationRuleOutput() PipelineCentralNotificationRuleOutput {
	return i.ToPipelineCentralNotificationRuleOutputWithContext(context.Background())
}

func (i *PipelineCentralNotificationRule) ToPipelineCentralNotificationRuleOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineCentralNotificationRuleOutput)
}

// PipelineCentralNotificationRuleArrayInput is an input type that accepts PipelineCentralNotificationRuleArray and PipelineCentralNotificationRuleArrayOutput values.
// You can construct a concrete instance of `PipelineCentralNotificationRuleArrayInput` via:
//
//	PipelineCentralNotificationRuleArray{ PipelineCentralNotificationRuleArgs{...} }
type PipelineCentralNotificationRuleArrayInput interface {
	pulumi.Input

	ToPipelineCentralNotificationRuleArrayOutput() PipelineCentralNotificationRuleArrayOutput
	ToPipelineCentralNotificationRuleArrayOutputWithContext(context.Context) PipelineCentralNotificationRuleArrayOutput
}

type PipelineCentralNotificationRuleArray []PipelineCentralNotificationRuleInput

func (PipelineCentralNotificationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PipelineCentralNotificationRule)(nil)).Elem()
}

func (i PipelineCentralNotificationRuleArray) ToPipelineCentralNotificationRuleArrayOutput() PipelineCentralNotificationRuleArrayOutput {
	return i.ToPipelineCentralNotificationRuleArrayOutputWithContext(context.Background())
}

func (i PipelineCentralNotificationRuleArray) ToPipelineCentralNotificationRuleArrayOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineCentralNotificationRuleArrayOutput)
}

// PipelineCentralNotificationRuleMapInput is an input type that accepts PipelineCentralNotificationRuleMap and PipelineCentralNotificationRuleMapOutput values.
// You can construct a concrete instance of `PipelineCentralNotificationRuleMapInput` via:
//
//	PipelineCentralNotificationRuleMap{ "key": PipelineCentralNotificationRuleArgs{...} }
type PipelineCentralNotificationRuleMapInput interface {
	pulumi.Input

	ToPipelineCentralNotificationRuleMapOutput() PipelineCentralNotificationRuleMapOutput
	ToPipelineCentralNotificationRuleMapOutputWithContext(context.Context) PipelineCentralNotificationRuleMapOutput
}

type PipelineCentralNotificationRuleMap map[string]PipelineCentralNotificationRuleInput

func (PipelineCentralNotificationRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PipelineCentralNotificationRule)(nil)).Elem()
}

func (i PipelineCentralNotificationRuleMap) ToPipelineCentralNotificationRuleMapOutput() PipelineCentralNotificationRuleMapOutput {
	return i.ToPipelineCentralNotificationRuleMapOutputWithContext(context.Background())
}

func (i PipelineCentralNotificationRuleMap) ToPipelineCentralNotificationRuleMapOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineCentralNotificationRuleMapOutput)
}

type PipelineCentralNotificationRuleOutput struct{ *pulumi.OutputState }

func (PipelineCentralNotificationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineCentralNotificationRule)(nil)).Elem()
}

func (o PipelineCentralNotificationRuleOutput) ToPipelineCentralNotificationRuleOutput() PipelineCentralNotificationRuleOutput {
	return o
}

func (o PipelineCentralNotificationRuleOutput) ToPipelineCentralNotificationRuleOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleOutput {
	return o
}

// Account identifier associated with this notification channel.
func (o PipelineCentralNotificationRuleOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringOutput { return v.Account }).(pulumi.StringOutput)
}

// Timestamp when the notification rule was created.
func (o PipelineCentralNotificationRuleOutput) Created() pulumi.IntOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.IntOutput { return v.Created }).(pulumi.IntOutput)
}

func (o PipelineCentralNotificationRuleOutput) CustomNotificationTemplateRef() PipelineCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) PipelineCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
		return v.CustomNotificationTemplateRef
	}).(PipelineCentralNotificationRuleCustomNotificationTemplateRefPtrOutput)
}

func (o PipelineCentralNotificationRuleOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Timestamp when the notification rule was last modified.
func (o PipelineCentralNotificationRuleOutput) LastModified() pulumi.IntOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.IntOutput { return v.LastModified }).(pulumi.IntOutput)
}

func (o PipelineCentralNotificationRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PipelineCentralNotificationRuleOutput) NotificationChannelRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringArrayOutput { return v.NotificationChannelRefs }).(pulumi.StringArrayOutput)
}

func (o PipelineCentralNotificationRuleOutput) NotificationConditions() PipelineCentralNotificationRuleNotificationConditionArrayOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) PipelineCentralNotificationRuleNotificationConditionArrayOutput {
		return v.NotificationConditions
	}).(PipelineCentralNotificationRuleNotificationConditionArrayOutput)
}

func (o PipelineCentralNotificationRuleOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

func (o PipelineCentralNotificationRuleOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringPtrOutput { return v.Project }).(pulumi.StringPtrOutput)
}

// Status of the notification rule. Supported values: `ENABLED`, `DISABLED`. Default: `ENABLED`.
func (o PipelineCentralNotificationRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineCentralNotificationRule) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

type PipelineCentralNotificationRuleArrayOutput struct{ *pulumi.OutputState }

func (PipelineCentralNotificationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PipelineCentralNotificationRule)(nil)).Elem()
}

func (o PipelineCentralNotificationRuleArrayOutput) ToPipelineCentralNotificationRuleArrayOutput() PipelineCentralNotificationRuleArrayOutput {
	return o
}

func (o PipelineCentralNotificationRuleArrayOutput) ToPipelineCentralNotificationRuleArrayOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleArrayOutput {
	return o
}

func (o PipelineCentralNotificationRuleArrayOutput) Index(i pulumi.IntInput) PipelineCentralNotificationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PipelineCentralNotificationRule {
		return vs[0].([]*PipelineCentralNotificationRule)[vs[1].(int)]
	}).(PipelineCentralNotificationRuleOutput)
}

type PipelineCentralNotificationRuleMapOutput struct{ *pulumi.OutputState }

func (PipelineCentralNotificationRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PipelineCentralNotificationRule)(nil)).Elem()
}

func (o PipelineCentralNotificationRuleMapOutput) ToPipelineCentralNotificationRuleMapOutput() PipelineCentralNotificationRuleMapOutput {
	return o
}

func (o PipelineCentralNotificationRuleMapOutput) ToPipelineCentralNotificationRuleMapOutputWithContext(ctx context.Context) PipelineCentralNotificationRuleMapOutput {
	return o
}

func (o PipelineCentralNotificationRuleMapOutput) MapIndex(k pulumi.StringInput) PipelineCentralNotificationRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PipelineCentralNotificationRule {
		return vs[0].(map[string]*PipelineCentralNotificationRule)[vs[1].(string)]
	}).(PipelineCentralNotificationRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineCentralNotificationRuleInput)(nil)).Elem(), &PipelineCentralNotificationRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineCentralNotificationRuleArrayInput)(nil)).Elem(), PipelineCentralNotificationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineCentralNotificationRuleMapInput)(nil)).Elem(), PipelineCentralNotificationRuleMap{})
	pulumi.RegisterOutputType(PipelineCentralNotificationRuleOutput{})
	pulumi.RegisterOutputType(PipelineCentralNotificationRuleArrayOutput{})
	pulumi.RegisterOutputType(PipelineCentralNotificationRuleMapOutput{})
}
