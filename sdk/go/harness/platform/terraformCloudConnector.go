// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// # Import account level Terraform Cloud provider connector
//
// ```sh
// $ pulumi import harness:platform/terraformCloudConnector:TerraformCloudConnector example <connector_id>
// ```
//
// # Import org level Terraform Cloud provider connector
//
// ```sh
// $ pulumi import harness:platform/terraformCloudConnector:TerraformCloudConnector example <ord_id>/<connector_id>
// ```
//
// # Import project level Terraform Cloud provider connector
//
// ```sh
// $ pulumi import harness:platform/terraformCloudConnector:TerraformCloudConnector example <org_id>/<project_id>/<connector_id>
// ```
type TerraformCloudConnector struct {
	pulumi.CustomResourceState

	Credentials TerraformCloudConnectorCredentialsOutput `pulumi:"credentials"`
	// Connect only using delegates with these tags.
	DelegateSelectors pulumi.StringArrayOutput `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enable this flag to execute on delegate (default: true).
	ExecuteOnDelegate pulumi.BoolOutput `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	Url  pulumi.StringOutput      `pulumi:"url"`
}

// NewTerraformCloudConnector registers a new resource with the given unique name, arguments, and options.
func NewTerraformCloudConnector(ctx *pulumi.Context,
	name string, args *TerraformCloudConnectorArgs, opts ...pulumi.ResourceOption) (*TerraformCloudConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TerraformCloudConnector
	err := ctx.RegisterResource("harness:platform/terraformCloudConnector:TerraformCloudConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTerraformCloudConnector gets an existing TerraformCloudConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTerraformCloudConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TerraformCloudConnectorState, opts ...pulumi.ResourceOption) (*TerraformCloudConnector, error) {
	var resource TerraformCloudConnector
	err := ctx.ReadResource("harness:platform/terraformCloudConnector:TerraformCloudConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TerraformCloudConnector resources.
type terraformCloudConnectorState struct {
	Credentials *TerraformCloudConnectorCredentials `pulumi:"credentials"`
	// Connect only using delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Enable this flag to execute on delegate (default: true).
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	Url  *string  `pulumi:"url"`
}

type TerraformCloudConnectorState struct {
	Credentials TerraformCloudConnectorCredentialsPtrInput
	// Connect only using delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Enable this flag to execute on delegate (default: true).
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
	Url  pulumi.StringPtrInput
}

func (TerraformCloudConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*terraformCloudConnectorState)(nil)).Elem()
}

type terraformCloudConnectorArgs struct {
	Credentials TerraformCloudConnectorCredentials `pulumi:"credentials"`
	// Connect only using delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Enable this flag to execute on delegate (default: true).
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	Url  string   `pulumi:"url"`
}

// The set of arguments for constructing a TerraformCloudConnector resource.
type TerraformCloudConnectorArgs struct {
	Credentials TerraformCloudConnectorCredentialsInput
	// Connect only using delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Enable this flag to execute on delegate (default: true).
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
	Url  pulumi.StringInput
}

func (TerraformCloudConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*terraformCloudConnectorArgs)(nil)).Elem()
}

type TerraformCloudConnectorInput interface {
	pulumi.Input

	ToTerraformCloudConnectorOutput() TerraformCloudConnectorOutput
	ToTerraformCloudConnectorOutputWithContext(ctx context.Context) TerraformCloudConnectorOutput
}

func (*TerraformCloudConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**TerraformCloudConnector)(nil)).Elem()
}

func (i *TerraformCloudConnector) ToTerraformCloudConnectorOutput() TerraformCloudConnectorOutput {
	return i.ToTerraformCloudConnectorOutputWithContext(context.Background())
}

func (i *TerraformCloudConnector) ToTerraformCloudConnectorOutputWithContext(ctx context.Context) TerraformCloudConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorOutput)
}

// TerraformCloudConnectorArrayInput is an input type that accepts TerraformCloudConnectorArray and TerraformCloudConnectorArrayOutput values.
// You can construct a concrete instance of `TerraformCloudConnectorArrayInput` via:
//
//	TerraformCloudConnectorArray{ TerraformCloudConnectorArgs{...} }
type TerraformCloudConnectorArrayInput interface {
	pulumi.Input

	ToTerraformCloudConnectorArrayOutput() TerraformCloudConnectorArrayOutput
	ToTerraformCloudConnectorArrayOutputWithContext(context.Context) TerraformCloudConnectorArrayOutput
}

type TerraformCloudConnectorArray []TerraformCloudConnectorInput

func (TerraformCloudConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TerraformCloudConnector)(nil)).Elem()
}

func (i TerraformCloudConnectorArray) ToTerraformCloudConnectorArrayOutput() TerraformCloudConnectorArrayOutput {
	return i.ToTerraformCloudConnectorArrayOutputWithContext(context.Background())
}

func (i TerraformCloudConnectorArray) ToTerraformCloudConnectorArrayOutputWithContext(ctx context.Context) TerraformCloudConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorArrayOutput)
}

// TerraformCloudConnectorMapInput is an input type that accepts TerraformCloudConnectorMap and TerraformCloudConnectorMapOutput values.
// You can construct a concrete instance of `TerraformCloudConnectorMapInput` via:
//
//	TerraformCloudConnectorMap{ "key": TerraformCloudConnectorArgs{...} }
type TerraformCloudConnectorMapInput interface {
	pulumi.Input

	ToTerraformCloudConnectorMapOutput() TerraformCloudConnectorMapOutput
	ToTerraformCloudConnectorMapOutputWithContext(context.Context) TerraformCloudConnectorMapOutput
}

type TerraformCloudConnectorMap map[string]TerraformCloudConnectorInput

func (TerraformCloudConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TerraformCloudConnector)(nil)).Elem()
}

func (i TerraformCloudConnectorMap) ToTerraformCloudConnectorMapOutput() TerraformCloudConnectorMapOutput {
	return i.ToTerraformCloudConnectorMapOutputWithContext(context.Background())
}

func (i TerraformCloudConnectorMap) ToTerraformCloudConnectorMapOutputWithContext(ctx context.Context) TerraformCloudConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorMapOutput)
}

type TerraformCloudConnectorOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerraformCloudConnector)(nil)).Elem()
}

func (o TerraformCloudConnectorOutput) ToTerraformCloudConnectorOutput() TerraformCloudConnectorOutput {
	return o
}

func (o TerraformCloudConnectorOutput) ToTerraformCloudConnectorOutputWithContext(ctx context.Context) TerraformCloudConnectorOutput {
	return o
}

func (o TerraformCloudConnectorOutput) Credentials() TerraformCloudConnectorCredentialsOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) TerraformCloudConnectorCredentialsOutput { return v.Credentials }).(TerraformCloudConnectorCredentialsOutput)
}

// Connect only using delegates with these tags.
func (o TerraformCloudConnectorOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringArrayOutput { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o TerraformCloudConnectorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable this flag to execute on delegate (default: true).
func (o TerraformCloudConnectorOutput) ExecuteOnDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.BoolOutput { return v.ExecuteOnDelegate }).(pulumi.BoolOutput)
}

// Unique identifier of the resource.
func (o TerraformCloudConnectorOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o TerraformCloudConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o TerraformCloudConnectorOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o TerraformCloudConnectorOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o TerraformCloudConnectorOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o TerraformCloudConnectorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *TerraformCloudConnector) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type TerraformCloudConnectorArrayOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TerraformCloudConnector)(nil)).Elem()
}

func (o TerraformCloudConnectorArrayOutput) ToTerraformCloudConnectorArrayOutput() TerraformCloudConnectorArrayOutput {
	return o
}

func (o TerraformCloudConnectorArrayOutput) ToTerraformCloudConnectorArrayOutputWithContext(ctx context.Context) TerraformCloudConnectorArrayOutput {
	return o
}

func (o TerraformCloudConnectorArrayOutput) Index(i pulumi.IntInput) TerraformCloudConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TerraformCloudConnector {
		return vs[0].([]*TerraformCloudConnector)[vs[1].(int)]
	}).(TerraformCloudConnectorOutput)
}

type TerraformCloudConnectorMapOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TerraformCloudConnector)(nil)).Elem()
}

func (o TerraformCloudConnectorMapOutput) ToTerraformCloudConnectorMapOutput() TerraformCloudConnectorMapOutput {
	return o
}

func (o TerraformCloudConnectorMapOutput) ToTerraformCloudConnectorMapOutputWithContext(ctx context.Context) TerraformCloudConnectorMapOutput {
	return o
}

func (o TerraformCloudConnectorMapOutput) MapIndex(k pulumi.StringInput) TerraformCloudConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TerraformCloudConnector {
		return vs[0].(map[string]*TerraformCloudConnector)[vs[1].(string)]
	}).(TerraformCloudConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorInput)(nil)).Elem(), &TerraformCloudConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorArrayInput)(nil)).Elem(), TerraformCloudConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorMapInput)(nil)).Elem(), TerraformCloudConnectorMap{})
	pulumi.RegisterOutputType(TerraformCloudConnectorOutput{})
	pulumi.RegisterOutputType(TerraformCloudConnectorArrayOutput{})
	pulumi.RegisterOutputType(TerraformCloudConnectorMapOutput{})
}
