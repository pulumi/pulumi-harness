// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up GCP KMS connector.
func LookupConnectorGcpKms(ctx *pulumi.Context, args *LookupConnectorGcpKmsArgs, opts ...pulumi.InvokeOption) (*LookupConnectorGcpKmsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectorGcpKmsResult
	err := ctx.Invoke("harness:platform/getConnectorGcpKms:getConnectorGcpKms", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectorGcpKms.
type LookupConnectorGcpKmsArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getConnectorGcpKms.
type LookupConnectorGcpKmsResult struct {
	// Set this flag to set this secret manager as default secret manager.
	Default bool `pulumi:"default"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// Enable this flag to execute on Delegate.
	ExecuteOnDelegate bool `pulumi:"executeOnDelegate"`
	// The project ID of the GCP KMS.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// The key name of the GCP KMS.
	KeyName string `pulumi:"keyName"`
	// The key ring of the GCP KMS.
	KeyRing string `pulumi:"keyRing"`
	// Manual credential configuration.
	Manuals []GetConnectorGcpKmsManual `pulumi:"manuals"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Authentication using harness oidc.
	OidcAuthentications []GetConnectorGcpKmsOidcAuthentication `pulumi:"oidcAuthentications"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// The region of the GCP KMS.
	Region string `pulumi:"region"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

func LookupConnectorGcpKmsOutput(ctx *pulumi.Context, args LookupConnectorGcpKmsOutputArgs, opts ...pulumi.InvokeOption) LookupConnectorGcpKmsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConnectorGcpKmsResultOutput, error) {
			args := v.(LookupConnectorGcpKmsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getConnectorGcpKms:getConnectorGcpKms", args, LookupConnectorGcpKmsResultOutput{}, options).(LookupConnectorGcpKmsResultOutput), nil
		}).(LookupConnectorGcpKmsResultOutput)
}

// A collection of arguments for invoking getConnectorGcpKms.
type LookupConnectorGcpKmsOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupConnectorGcpKmsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorGcpKmsArgs)(nil)).Elem()
}

// A collection of values returned by getConnectorGcpKms.
type LookupConnectorGcpKmsResultOutput struct{ *pulumi.OutputState }

func (LookupConnectorGcpKmsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorGcpKmsResult)(nil)).Elem()
}

func (o LookupConnectorGcpKmsResultOutput) ToLookupConnectorGcpKmsResultOutput() LookupConnectorGcpKmsResultOutput {
	return o
}

func (o LookupConnectorGcpKmsResultOutput) ToLookupConnectorGcpKmsResultOutputWithContext(ctx context.Context) LookupConnectorGcpKmsResultOutput {
	return o
}

// Set this flag to set this secret manager as default secret manager.
func (o LookupConnectorGcpKmsResultOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) bool { return v.Default }).(pulumi.BoolOutput)
}

// Description of the resource.
func (o LookupConnectorGcpKmsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable this flag to execute on Delegate.
func (o LookupConnectorGcpKmsResultOutput) ExecuteOnDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) bool { return v.ExecuteOnDelegate }).(pulumi.BoolOutput)
}

// The project ID of the GCP KMS.
func (o LookupConnectorGcpKmsResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectorGcpKmsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupConnectorGcpKmsResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The key name of the GCP KMS.
func (o LookupConnectorGcpKmsResultOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.KeyName }).(pulumi.StringOutput)
}

// The key ring of the GCP KMS.
func (o LookupConnectorGcpKmsResultOutput) KeyRing() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.KeyRing }).(pulumi.StringOutput)
}

// Manual credential configuration.
func (o LookupConnectorGcpKmsResultOutput) Manuals() GetConnectorGcpKmsManualArrayOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) []GetConnectorGcpKmsManual { return v.Manuals }).(GetConnectorGcpKmsManualArrayOutput)
}

// Name of the resource.
func (o LookupConnectorGcpKmsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Authentication using harness oidc.
func (o LookupConnectorGcpKmsResultOutput) OidcAuthentications() GetConnectorGcpKmsOidcAuthenticationArrayOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) []GetConnectorGcpKmsOidcAuthentication {
		return v.OidcAuthentications
	}).(GetConnectorGcpKmsOidcAuthenticationArrayOutput)
}

// Unique identifier of the organization.
func (o LookupConnectorGcpKmsResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupConnectorGcpKmsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The region of the GCP KMS.
func (o LookupConnectorGcpKmsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) string { return v.Region }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o LookupConnectorGcpKmsResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorGcpKmsResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectorGcpKmsResultOutput{})
}
