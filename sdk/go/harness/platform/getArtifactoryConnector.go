// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for looking up an App Dynamics connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupArtifactoryConnector(ctx, &platform.LookupArtifactoryConnectorArgs{
//				Identifier: pulumi.StringRef("identifier"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupArtifactoryConnector(ctx *pulumi.Context, args *LookupArtifactoryConnectorArgs, opts ...pulumi.InvokeOption) (*LookupArtifactoryConnectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupArtifactoryConnectorResult
	err := ctx.Invoke("harness:platform/getArtifactoryConnector:getArtifactoryConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getArtifactoryConnector.
type LookupArtifactoryConnectorArgs struct {
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getArtifactoryConnector.
type LookupArtifactoryConnectorResult struct {
	// Credentials to use for authentication.
	Credentials []GetArtifactoryConnectorCredential `pulumi:"credentials"`
	// Tags to filter delegates for connection.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// URL of the Artifactory server.
	Url string `pulumi:"url"`
}

func LookupArtifactoryConnectorOutput(ctx *pulumi.Context, args LookupArtifactoryConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupArtifactoryConnectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupArtifactoryConnectorResultOutput, error) {
			args := v.(LookupArtifactoryConnectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getArtifactoryConnector:getArtifactoryConnector", args, LookupArtifactoryConnectorResultOutput{}, options).(LookupArtifactoryConnectorResultOutput), nil
		}).(LookupArtifactoryConnectorResultOutput)
}

// A collection of arguments for invoking getArtifactoryConnector.
type LookupArtifactoryConnectorOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupArtifactoryConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArtifactoryConnectorArgs)(nil)).Elem()
}

// A collection of values returned by getArtifactoryConnector.
type LookupArtifactoryConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupArtifactoryConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArtifactoryConnectorResult)(nil)).Elem()
}

func (o LookupArtifactoryConnectorResultOutput) ToLookupArtifactoryConnectorResultOutput() LookupArtifactoryConnectorResultOutput {
	return o
}

func (o LookupArtifactoryConnectorResultOutput) ToLookupArtifactoryConnectorResultOutputWithContext(ctx context.Context) LookupArtifactoryConnectorResultOutput {
	return o
}

// Credentials to use for authentication.
func (o LookupArtifactoryConnectorResultOutput) Credentials() GetArtifactoryConnectorCredentialArrayOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) []GetArtifactoryConnectorCredential { return v.Credentials }).(GetArtifactoryConnectorCredentialArrayOutput)
}

// Tags to filter delegates for connection.
func (o LookupArtifactoryConnectorResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupArtifactoryConnectorResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupArtifactoryConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupArtifactoryConnectorResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o LookupArtifactoryConnectorResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupArtifactoryConnectorResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupArtifactoryConnectorResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o LookupArtifactoryConnectorResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// URL of the Artifactory server.
func (o LookupArtifactoryConnectorResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactoryConnectorResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupArtifactoryConnectorResultOutput{})
}
