// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a Kubernetes connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupKubernetesConnector(ctx, &platform.LookupKubernetesConnectorArgs{
//				Identifier: "identifier",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupKubernetesConnector(ctx *pulumi.Context, args *LookupKubernetesConnectorArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesConnectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKubernetesConnectorResult
	err := ctx.Invoke("harness:platform/getKubernetesConnector:getKubernetesConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesConnector.
type LookupKubernetesConnectorArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getKubernetesConnector.
type LookupKubernetesConnectorResult struct {
	// Client key and certificate config for the connector.
	ClientKeyCerts []GetKubernetesConnectorClientKeyCert `pulumi:"clientKeyCerts"`
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Credentials are inherited from the delegate.
	InheritFromDelegates []GetKubernetesConnectorInheritFromDelegate `pulumi:"inheritFromDelegates"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// OpenID configuration for the connector.
	OpenidConnects []GetKubernetesConnectorOpenidConnect `pulumi:"openidConnects"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Service account for the connector.
	ServiceAccounts []GetKubernetesConnectorServiceAccount `pulumi:"serviceAccounts"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// Username and password for the connector.
	UsernamePasswords []GetKubernetesConnectorUsernamePassword `pulumi:"usernamePasswords"`
}

func LookupKubernetesConnectorOutput(ctx *pulumi.Context, args LookupKubernetesConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupKubernetesConnectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKubernetesConnectorResultOutput, error) {
			args := v.(LookupKubernetesConnectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getKubernetesConnector:getKubernetesConnector", args, LookupKubernetesConnectorResultOutput{}, options).(LookupKubernetesConnectorResultOutput), nil
		}).(LookupKubernetesConnectorResultOutput)
}

// A collection of arguments for invoking getKubernetesConnector.
type LookupKubernetesConnectorOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupKubernetesConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesConnectorArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesConnector.
type LookupKubernetesConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupKubernetesConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesConnectorResult)(nil)).Elem()
}

func (o LookupKubernetesConnectorResultOutput) ToLookupKubernetesConnectorResultOutput() LookupKubernetesConnectorResultOutput {
	return o
}

func (o LookupKubernetesConnectorResultOutput) ToLookupKubernetesConnectorResultOutputWithContext(ctx context.Context) LookupKubernetesConnectorResultOutput {
	return o
}

// Client key and certificate config for the connector.
func (o LookupKubernetesConnectorResultOutput) ClientKeyCerts() GetKubernetesConnectorClientKeyCertArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []GetKubernetesConnectorClientKeyCert { return v.ClientKeyCerts }).(GetKubernetesConnectorClientKeyCertArrayOutput)
}

// Selectors to use for the delegate.
func (o LookupKubernetesConnectorResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupKubernetesConnectorResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKubernetesConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupKubernetesConnectorResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Credentials are inherited from the delegate.
func (o LookupKubernetesConnectorResultOutput) InheritFromDelegates() GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []GetKubernetesConnectorInheritFromDelegate {
		return v.InheritFromDelegates
	}).(GetKubernetesConnectorInheritFromDelegateArrayOutput)
}

// Name of the resource.
func (o LookupKubernetesConnectorResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OpenID configuration for the connector.
func (o LookupKubernetesConnectorResultOutput) OpenidConnects() GetKubernetesConnectorOpenidConnectArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []GetKubernetesConnectorOpenidConnect { return v.OpenidConnects }).(GetKubernetesConnectorOpenidConnectArrayOutput)
}

// Unique identifier of the organization.
func (o LookupKubernetesConnectorResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupKubernetesConnectorResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Service account for the connector.
func (o LookupKubernetesConnectorResultOutput) ServiceAccounts() GetKubernetesConnectorServiceAccountArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []GetKubernetesConnectorServiceAccount {
		return v.ServiceAccounts
	}).(GetKubernetesConnectorServiceAccountArrayOutput)
}

// Tags to associate with the resource.
func (o LookupKubernetesConnectorResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Username and password for the connector.
func (o LookupKubernetesConnectorResultOutput) UsernamePasswords() GetKubernetesConnectorUsernamePasswordArrayOutput {
	return o.ApplyT(func(v LookupKubernetesConnectorResult) []GetKubernetesConnectorUsernamePassword {
		return v.UsernamePasswords
	}).(GetKubernetesConnectorUsernamePasswordArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubernetesConnectorResultOutput{})
}
