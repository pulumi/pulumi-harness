// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// # Import account level awskms connector
//
// ```sh
// $ pulumi import harness:platform/awsKmsConnector:AwsKmsConnector example <connector_id>
// ```
//
// # Import org level awskms connector
//
// ```sh
// $ pulumi import harness:platform/awsKmsConnector:AwsKmsConnector example <ord_id>/<connector_id>
// ```
//
// # Import project level awskms connector
//
// ```sh
// $ pulumi import harness:platform/awsKmsConnector:AwsKmsConnector example <org_id>/<project_id>/<connector_id>
// ```
type AwsKmsConnector struct {
	pulumi.CustomResourceState

	// A reference to the Harness secret containing the ARN of the AWS KMS. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ArnRef pulumi.StringOutput `pulumi:"arnRef"`
	// Credentials to connect to AWS.
	Credentials AwsKmsConnectorCredentialsOutput `pulumi:"credentials"`
	// Set this connector as the default for all the services.
	Default pulumi.BoolPtrOutput `pulumi:"default"`
	// Tags to filter delegates for connection.
	DelegateSelectors pulumi.StringArrayOutput `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Execute the command on the delegate.
	ExecuteOnDelegate pulumi.BoolPtrOutput `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// The AWS region where the AWS Secret Manager is.
	Region pulumi.StringOutput `pulumi:"region"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewAwsKmsConnector registers a new resource with the given unique name, arguments, and options.
func NewAwsKmsConnector(ctx *pulumi.Context,
	name string, args *AwsKmsConnectorArgs, opts ...pulumi.ResourceOption) (*AwsKmsConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArnRef == nil {
		return nil, errors.New("invalid value for required argument 'ArnRef'")
	}
	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsKmsConnector
	err := ctx.RegisterResource("harness:platform/awsKmsConnector:AwsKmsConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsKmsConnector gets an existing AwsKmsConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsKmsConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsKmsConnectorState, opts ...pulumi.ResourceOption) (*AwsKmsConnector, error) {
	var resource AwsKmsConnector
	err := ctx.ReadResource("harness:platform/awsKmsConnector:AwsKmsConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsKmsConnector resources.
type awsKmsConnectorState struct {
	// A reference to the Harness secret containing the ARN of the AWS KMS. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ArnRef *string `pulumi:"arnRef"`
	// Credentials to connect to AWS.
	Credentials *AwsKmsConnectorCredentials `pulumi:"credentials"`
	// Set this connector as the default for all the services.
	Default *bool `pulumi:"default"`
	// Tags to filter delegates for connection.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Execute the command on the delegate.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// The AWS region where the AWS Secret Manager is.
	Region *string `pulumi:"region"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

type AwsKmsConnectorState struct {
	// A reference to the Harness secret containing the ARN of the AWS KMS. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ArnRef pulumi.StringPtrInput
	// Credentials to connect to AWS.
	Credentials AwsKmsConnectorCredentialsPtrInput
	// Set this connector as the default for all the services.
	Default pulumi.BoolPtrInput
	// Tags to filter delegates for connection.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Execute the command on the delegate.
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// The AWS region where the AWS Secret Manager is.
	Region pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (AwsKmsConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsKmsConnectorState)(nil)).Elem()
}

type awsKmsConnectorArgs struct {
	// A reference to the Harness secret containing the ARN of the AWS KMS. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ArnRef string `pulumi:"arnRef"`
	// Credentials to connect to AWS.
	Credentials AwsKmsConnectorCredentials `pulumi:"credentials"`
	// Set this connector as the default for all the services.
	Default *bool `pulumi:"default"`
	// Tags to filter delegates for connection.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Execute the command on the delegate.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// The AWS region where the AWS Secret Manager is.
	Region string `pulumi:"region"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a AwsKmsConnector resource.
type AwsKmsConnectorArgs struct {
	// A reference to the Harness secret containing the ARN of the AWS KMS. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ArnRef pulumi.StringInput
	// Credentials to connect to AWS.
	Credentials AwsKmsConnectorCredentialsInput
	// Set this connector as the default for all the services.
	Default pulumi.BoolPtrInput
	// Tags to filter delegates for connection.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Execute the command on the delegate.
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// The AWS region where the AWS Secret Manager is.
	Region pulumi.StringInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (AwsKmsConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsKmsConnectorArgs)(nil)).Elem()
}

type AwsKmsConnectorInput interface {
	pulumi.Input

	ToAwsKmsConnectorOutput() AwsKmsConnectorOutput
	ToAwsKmsConnectorOutputWithContext(ctx context.Context) AwsKmsConnectorOutput
}

func (*AwsKmsConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnector)(nil)).Elem()
}

func (i *AwsKmsConnector) ToAwsKmsConnectorOutput() AwsKmsConnectorOutput {
	return i.ToAwsKmsConnectorOutputWithContext(context.Background())
}

func (i *AwsKmsConnector) ToAwsKmsConnectorOutputWithContext(ctx context.Context) AwsKmsConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorOutput)
}

// AwsKmsConnectorArrayInput is an input type that accepts AwsKmsConnectorArray and AwsKmsConnectorArrayOutput values.
// You can construct a concrete instance of `AwsKmsConnectorArrayInput` via:
//
//	AwsKmsConnectorArray{ AwsKmsConnectorArgs{...} }
type AwsKmsConnectorArrayInput interface {
	pulumi.Input

	ToAwsKmsConnectorArrayOutput() AwsKmsConnectorArrayOutput
	ToAwsKmsConnectorArrayOutputWithContext(context.Context) AwsKmsConnectorArrayOutput
}

type AwsKmsConnectorArray []AwsKmsConnectorInput

func (AwsKmsConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsKmsConnector)(nil)).Elem()
}

func (i AwsKmsConnectorArray) ToAwsKmsConnectorArrayOutput() AwsKmsConnectorArrayOutput {
	return i.ToAwsKmsConnectorArrayOutputWithContext(context.Background())
}

func (i AwsKmsConnectorArray) ToAwsKmsConnectorArrayOutputWithContext(ctx context.Context) AwsKmsConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorArrayOutput)
}

// AwsKmsConnectorMapInput is an input type that accepts AwsKmsConnectorMap and AwsKmsConnectorMapOutput values.
// You can construct a concrete instance of `AwsKmsConnectorMapInput` via:
//
//	AwsKmsConnectorMap{ "key": AwsKmsConnectorArgs{...} }
type AwsKmsConnectorMapInput interface {
	pulumi.Input

	ToAwsKmsConnectorMapOutput() AwsKmsConnectorMapOutput
	ToAwsKmsConnectorMapOutputWithContext(context.Context) AwsKmsConnectorMapOutput
}

type AwsKmsConnectorMap map[string]AwsKmsConnectorInput

func (AwsKmsConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsKmsConnector)(nil)).Elem()
}

func (i AwsKmsConnectorMap) ToAwsKmsConnectorMapOutput() AwsKmsConnectorMapOutput {
	return i.ToAwsKmsConnectorMapOutputWithContext(context.Background())
}

func (i AwsKmsConnectorMap) ToAwsKmsConnectorMapOutputWithContext(ctx context.Context) AwsKmsConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorMapOutput)
}

type AwsKmsConnectorOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnector)(nil)).Elem()
}

func (o AwsKmsConnectorOutput) ToAwsKmsConnectorOutput() AwsKmsConnectorOutput {
	return o
}

func (o AwsKmsConnectorOutput) ToAwsKmsConnectorOutputWithContext(ctx context.Context) AwsKmsConnectorOutput {
	return o
}

// A reference to the Harness secret containing the ARN of the AWS KMS. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AwsKmsConnectorOutput) ArnRef() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringOutput { return v.ArnRef }).(pulumi.StringOutput)
}

// Credentials to connect to AWS.
func (o AwsKmsConnectorOutput) Credentials() AwsKmsConnectorCredentialsOutput {
	return o.ApplyT(func(v *AwsKmsConnector) AwsKmsConnectorCredentialsOutput { return v.Credentials }).(AwsKmsConnectorCredentialsOutput)
}

// Set this connector as the default for all the services.
func (o AwsKmsConnectorOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.BoolPtrOutput { return v.Default }).(pulumi.BoolPtrOutput)
}

// Tags to filter delegates for connection.
func (o AwsKmsConnectorOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringArrayOutput { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o AwsKmsConnectorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Execute the command on the delegate.
func (o AwsKmsConnectorOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.BoolPtrOutput { return v.ExecuteOnDelegate }).(pulumi.BoolPtrOutput)
}

// Unique identifier of the resource.
func (o AwsKmsConnectorOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o AwsKmsConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o AwsKmsConnectorOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o AwsKmsConnectorOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The AWS region where the AWS Secret Manager is.
func (o AwsKmsConnectorOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o AwsKmsConnectorOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsKmsConnector) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type AwsKmsConnectorArrayOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsKmsConnector)(nil)).Elem()
}

func (o AwsKmsConnectorArrayOutput) ToAwsKmsConnectorArrayOutput() AwsKmsConnectorArrayOutput {
	return o
}

func (o AwsKmsConnectorArrayOutput) ToAwsKmsConnectorArrayOutputWithContext(ctx context.Context) AwsKmsConnectorArrayOutput {
	return o
}

func (o AwsKmsConnectorArrayOutput) Index(i pulumi.IntInput) AwsKmsConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsKmsConnector {
		return vs[0].([]*AwsKmsConnector)[vs[1].(int)]
	}).(AwsKmsConnectorOutput)
}

type AwsKmsConnectorMapOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsKmsConnector)(nil)).Elem()
}

func (o AwsKmsConnectorMapOutput) ToAwsKmsConnectorMapOutput() AwsKmsConnectorMapOutput {
	return o
}

func (o AwsKmsConnectorMapOutput) ToAwsKmsConnectorMapOutputWithContext(ctx context.Context) AwsKmsConnectorMapOutput {
	return o
}

func (o AwsKmsConnectorMapOutput) MapIndex(k pulumi.StringInput) AwsKmsConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsKmsConnector {
		return vs[0].(map[string]*AwsKmsConnector)[vs[1].(string)]
	}).(AwsKmsConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorInput)(nil)).Elem(), &AwsKmsConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorArrayInput)(nil)).Elem(), AwsKmsConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorMapInput)(nil)).Elem(), AwsKmsConnectorMap{})
	pulumi.RegisterOutputType(AwsKmsConnectorOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorArrayOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorMapOutput{})
}
