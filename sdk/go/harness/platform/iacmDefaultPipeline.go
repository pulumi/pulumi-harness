// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing IAC default pipelines
type IacmDefaultPipeline struct {
	pulumi.CustomResourceState

	// The operation associated with this default.
	Operation pulumi.StringOutput `pulumi:"operation"`
	// Organization identifier of the organization the default pipelines resides in.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The pipeline associated with this default.
	Pipeline pulumi.StringOutput `pulumi:"pipeline"`
	// Project identifier of the project the default pipelines resides in.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The provisioner associated with this default.
	ProvisionerType pulumi.StringOutput `pulumi:"provisionerType"`
}

// NewIacmDefaultPipeline registers a new resource with the given unique name, arguments, and options.
func NewIacmDefaultPipeline(ctx *pulumi.Context,
	name string, args *IacmDefaultPipelineArgs, opts ...pulumi.ResourceOption) (*IacmDefaultPipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Operation == nil {
		return nil, errors.New("invalid value for required argument 'Operation'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Pipeline == nil {
		return nil, errors.New("invalid value for required argument 'Pipeline'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ProvisionerType == nil {
		return nil, errors.New("invalid value for required argument 'ProvisionerType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IacmDefaultPipeline
	err := ctx.RegisterResource("harness:platform/iacmDefaultPipeline:IacmDefaultPipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIacmDefaultPipeline gets an existing IacmDefaultPipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIacmDefaultPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IacmDefaultPipelineState, opts ...pulumi.ResourceOption) (*IacmDefaultPipeline, error) {
	var resource IacmDefaultPipeline
	err := ctx.ReadResource("harness:platform/iacmDefaultPipeline:IacmDefaultPipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IacmDefaultPipeline resources.
type iacmDefaultPipelineState struct {
	// The operation associated with this default.
	Operation *string `pulumi:"operation"`
	// Organization identifier of the organization the default pipelines resides in.
	OrgId *string `pulumi:"orgId"`
	// The pipeline associated with this default.
	Pipeline *string `pulumi:"pipeline"`
	// Project identifier of the project the default pipelines resides in.
	ProjectId *string `pulumi:"projectId"`
	// The provisioner associated with this default.
	ProvisionerType *string `pulumi:"provisionerType"`
}

type IacmDefaultPipelineState struct {
	// The operation associated with this default.
	Operation pulumi.StringPtrInput
	// Organization identifier of the organization the default pipelines resides in.
	OrgId pulumi.StringPtrInput
	// The pipeline associated with this default.
	Pipeline pulumi.StringPtrInput
	// Project identifier of the project the default pipelines resides in.
	ProjectId pulumi.StringPtrInput
	// The provisioner associated with this default.
	ProvisionerType pulumi.StringPtrInput
}

func (IacmDefaultPipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*iacmDefaultPipelineState)(nil)).Elem()
}

type iacmDefaultPipelineArgs struct {
	// The operation associated with this default.
	Operation string `pulumi:"operation"`
	// Organization identifier of the organization the default pipelines resides in.
	OrgId string `pulumi:"orgId"`
	// The pipeline associated with this default.
	Pipeline string `pulumi:"pipeline"`
	// Project identifier of the project the default pipelines resides in.
	ProjectId string `pulumi:"projectId"`
	// The provisioner associated with this default.
	ProvisionerType string `pulumi:"provisionerType"`
}

// The set of arguments for constructing a IacmDefaultPipeline resource.
type IacmDefaultPipelineArgs struct {
	// The operation associated with this default.
	Operation pulumi.StringInput
	// Organization identifier of the organization the default pipelines resides in.
	OrgId pulumi.StringInput
	// The pipeline associated with this default.
	Pipeline pulumi.StringInput
	// Project identifier of the project the default pipelines resides in.
	ProjectId pulumi.StringInput
	// The provisioner associated with this default.
	ProvisionerType pulumi.StringInput
}

func (IacmDefaultPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iacmDefaultPipelineArgs)(nil)).Elem()
}

type IacmDefaultPipelineInput interface {
	pulumi.Input

	ToIacmDefaultPipelineOutput() IacmDefaultPipelineOutput
	ToIacmDefaultPipelineOutputWithContext(ctx context.Context) IacmDefaultPipelineOutput
}

func (*IacmDefaultPipeline) ElementType() reflect.Type {
	return reflect.TypeOf((**IacmDefaultPipeline)(nil)).Elem()
}

func (i *IacmDefaultPipeline) ToIacmDefaultPipelineOutput() IacmDefaultPipelineOutput {
	return i.ToIacmDefaultPipelineOutputWithContext(context.Background())
}

func (i *IacmDefaultPipeline) ToIacmDefaultPipelineOutputWithContext(ctx context.Context) IacmDefaultPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacmDefaultPipelineOutput)
}

// IacmDefaultPipelineArrayInput is an input type that accepts IacmDefaultPipelineArray and IacmDefaultPipelineArrayOutput values.
// You can construct a concrete instance of `IacmDefaultPipelineArrayInput` via:
//
//	IacmDefaultPipelineArray{ IacmDefaultPipelineArgs{...} }
type IacmDefaultPipelineArrayInput interface {
	pulumi.Input

	ToIacmDefaultPipelineArrayOutput() IacmDefaultPipelineArrayOutput
	ToIacmDefaultPipelineArrayOutputWithContext(context.Context) IacmDefaultPipelineArrayOutput
}

type IacmDefaultPipelineArray []IacmDefaultPipelineInput

func (IacmDefaultPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IacmDefaultPipeline)(nil)).Elem()
}

func (i IacmDefaultPipelineArray) ToIacmDefaultPipelineArrayOutput() IacmDefaultPipelineArrayOutput {
	return i.ToIacmDefaultPipelineArrayOutputWithContext(context.Background())
}

func (i IacmDefaultPipelineArray) ToIacmDefaultPipelineArrayOutputWithContext(ctx context.Context) IacmDefaultPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacmDefaultPipelineArrayOutput)
}

// IacmDefaultPipelineMapInput is an input type that accepts IacmDefaultPipelineMap and IacmDefaultPipelineMapOutput values.
// You can construct a concrete instance of `IacmDefaultPipelineMapInput` via:
//
//	IacmDefaultPipelineMap{ "key": IacmDefaultPipelineArgs{...} }
type IacmDefaultPipelineMapInput interface {
	pulumi.Input

	ToIacmDefaultPipelineMapOutput() IacmDefaultPipelineMapOutput
	ToIacmDefaultPipelineMapOutputWithContext(context.Context) IacmDefaultPipelineMapOutput
}

type IacmDefaultPipelineMap map[string]IacmDefaultPipelineInput

func (IacmDefaultPipelineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IacmDefaultPipeline)(nil)).Elem()
}

func (i IacmDefaultPipelineMap) ToIacmDefaultPipelineMapOutput() IacmDefaultPipelineMapOutput {
	return i.ToIacmDefaultPipelineMapOutputWithContext(context.Background())
}

func (i IacmDefaultPipelineMap) ToIacmDefaultPipelineMapOutputWithContext(ctx context.Context) IacmDefaultPipelineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacmDefaultPipelineMapOutput)
}

type IacmDefaultPipelineOutput struct{ *pulumi.OutputState }

func (IacmDefaultPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IacmDefaultPipeline)(nil)).Elem()
}

func (o IacmDefaultPipelineOutput) ToIacmDefaultPipelineOutput() IacmDefaultPipelineOutput {
	return o
}

func (o IacmDefaultPipelineOutput) ToIacmDefaultPipelineOutputWithContext(ctx context.Context) IacmDefaultPipelineOutput {
	return o
}

// The operation associated with this default.
func (o IacmDefaultPipelineOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v *IacmDefaultPipeline) pulumi.StringOutput { return v.Operation }).(pulumi.StringOutput)
}

// Organization identifier of the organization the default pipelines resides in.
func (o IacmDefaultPipelineOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *IacmDefaultPipeline) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The pipeline associated with this default.
func (o IacmDefaultPipelineOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v *IacmDefaultPipeline) pulumi.StringOutput { return v.Pipeline }).(pulumi.StringOutput)
}

// Project identifier of the project the default pipelines resides in.
func (o IacmDefaultPipelineOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *IacmDefaultPipeline) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The provisioner associated with this default.
func (o IacmDefaultPipelineOutput) ProvisionerType() pulumi.StringOutput {
	return o.ApplyT(func(v *IacmDefaultPipeline) pulumi.StringOutput { return v.ProvisionerType }).(pulumi.StringOutput)
}

type IacmDefaultPipelineArrayOutput struct{ *pulumi.OutputState }

func (IacmDefaultPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IacmDefaultPipeline)(nil)).Elem()
}

func (o IacmDefaultPipelineArrayOutput) ToIacmDefaultPipelineArrayOutput() IacmDefaultPipelineArrayOutput {
	return o
}

func (o IacmDefaultPipelineArrayOutput) ToIacmDefaultPipelineArrayOutputWithContext(ctx context.Context) IacmDefaultPipelineArrayOutput {
	return o
}

func (o IacmDefaultPipelineArrayOutput) Index(i pulumi.IntInput) IacmDefaultPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IacmDefaultPipeline {
		return vs[0].([]*IacmDefaultPipeline)[vs[1].(int)]
	}).(IacmDefaultPipelineOutput)
}

type IacmDefaultPipelineMapOutput struct{ *pulumi.OutputState }

func (IacmDefaultPipelineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IacmDefaultPipeline)(nil)).Elem()
}

func (o IacmDefaultPipelineMapOutput) ToIacmDefaultPipelineMapOutput() IacmDefaultPipelineMapOutput {
	return o
}

func (o IacmDefaultPipelineMapOutput) ToIacmDefaultPipelineMapOutputWithContext(ctx context.Context) IacmDefaultPipelineMapOutput {
	return o
}

func (o IacmDefaultPipelineMapOutput) MapIndex(k pulumi.StringInput) IacmDefaultPipelineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IacmDefaultPipeline {
		return vs[0].(map[string]*IacmDefaultPipeline)[vs[1].(string)]
	}).(IacmDefaultPipelineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IacmDefaultPipelineInput)(nil)).Elem(), &IacmDefaultPipeline{})
	pulumi.RegisterInputType(reflect.TypeOf((*IacmDefaultPipelineArrayInput)(nil)).Elem(), IacmDefaultPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IacmDefaultPipelineMapInput)(nil)).Elem(), IacmDefaultPipelineMap{})
	pulumi.RegisterOutputType(IacmDefaultPipelineOutput{})
	pulumi.RegisterOutputType(IacmDefaultPipelineArrayOutput{})
	pulumi.RegisterOutputType(IacmDefaultPipelineMapOutput{})
}
