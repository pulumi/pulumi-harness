// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating a GCP Secret Manager connector.
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// # Import account level gcp secret manager connector
//
// ```sh
// $ pulumi import harness:platform/gcpSecretManagerConnector:GcpSecretManagerConnector example <connector_id>
// ```
//
// # Import org level gcp secret manager connector
//
// ```sh
// $ pulumi import harness:platform/gcpSecretManagerConnector:GcpSecretManagerConnector example <ord_id>/<connector_id>
// ```
//
// # Import project level gcp secret manager connector
//
// ```sh
// $ pulumi import harness:platform/gcpSecretManagerConnector:GcpSecretManagerConnector example <org_id>/<project_id>/<connector_id>
// ```
type GcpSecretManagerConnector struct {
	pulumi.CustomResourceState

	// Reference to the secret containing credentials of IAM service account for Google Secret Manager. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CredentialsRef pulumi.StringPtrOutput `pulumi:"credentialsRef"`
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayOutput `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrOutput `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Inherit configuration from delegate.
	InheritFromDelegate pulumi.BoolPtrOutput `pulumi:"inheritFromDelegate"`
	// Set this flag to set this secret manager as default secret manager.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Authentication using harness oidc.
	OidcAuthentications GcpSecretManagerConnectorOidcAuthenticationArrayOutput `pulumi:"oidcAuthentications"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewGcpSecretManagerConnector registers a new resource with the given unique name, arguments, and options.
func NewGcpSecretManagerConnector(ctx *pulumi.Context,
	name string, args *GcpSecretManagerConnectorArgs, opts ...pulumi.ResourceOption) (*GcpSecretManagerConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpSecretManagerConnector
	err := ctx.RegisterResource("harness:platform/gcpSecretManagerConnector:GcpSecretManagerConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpSecretManagerConnector gets an existing GcpSecretManagerConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpSecretManagerConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpSecretManagerConnectorState, opts ...pulumi.ResourceOption) (*GcpSecretManagerConnector, error) {
	var resource GcpSecretManagerConnector
	err := ctx.ReadResource("harness:platform/gcpSecretManagerConnector:GcpSecretManagerConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpSecretManagerConnector resources.
type gcpSecretManagerConnectorState struct {
	// Reference to the secret containing credentials of IAM service account for Google Secret Manager. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CredentialsRef *string `pulumi:"credentialsRef"`
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Execute on delegate or not.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Inherit configuration from delegate.
	InheritFromDelegate *bool `pulumi:"inheritFromDelegate"`
	// Set this flag to set this secret manager as default secret manager.
	IsDefault *bool `pulumi:"isDefault"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Authentication using harness oidc.
	OidcAuthentications []GcpSecretManagerConnectorOidcAuthentication `pulumi:"oidcAuthentications"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

type GcpSecretManagerConnectorState struct {
	// Reference to the secret containing credentials of IAM service account for Google Secret Manager. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CredentialsRef pulumi.StringPtrInput
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Inherit configuration from delegate.
	InheritFromDelegate pulumi.BoolPtrInput
	// Set this flag to set this secret manager as default secret manager.
	IsDefault pulumi.BoolPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Authentication using harness oidc.
	OidcAuthentications GcpSecretManagerConnectorOidcAuthenticationArrayInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (GcpSecretManagerConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpSecretManagerConnectorState)(nil)).Elem()
}

type gcpSecretManagerConnectorArgs struct {
	// Reference to the secret containing credentials of IAM service account for Google Secret Manager. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CredentialsRef *string `pulumi:"credentialsRef"`
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Execute on delegate or not.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Inherit configuration from delegate.
	InheritFromDelegate *bool `pulumi:"inheritFromDelegate"`
	// Set this flag to set this secret manager as default secret manager.
	IsDefault *bool `pulumi:"isDefault"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Authentication using harness oidc.
	OidcAuthentications []GcpSecretManagerConnectorOidcAuthentication `pulumi:"oidcAuthentications"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a GcpSecretManagerConnector resource.
type GcpSecretManagerConnectorArgs struct {
	// Reference to the secret containing credentials of IAM service account for Google Secret Manager. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CredentialsRef pulumi.StringPtrInput
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Inherit configuration from delegate.
	InheritFromDelegate pulumi.BoolPtrInput
	// Set this flag to set this secret manager as default secret manager.
	IsDefault pulumi.BoolPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Authentication using harness oidc.
	OidcAuthentications GcpSecretManagerConnectorOidcAuthenticationArrayInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (GcpSecretManagerConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpSecretManagerConnectorArgs)(nil)).Elem()
}

type GcpSecretManagerConnectorInput interface {
	pulumi.Input

	ToGcpSecretManagerConnectorOutput() GcpSecretManagerConnectorOutput
	ToGcpSecretManagerConnectorOutputWithContext(ctx context.Context) GcpSecretManagerConnectorOutput
}

func (*GcpSecretManagerConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSecretManagerConnector)(nil)).Elem()
}

func (i *GcpSecretManagerConnector) ToGcpSecretManagerConnectorOutput() GcpSecretManagerConnectorOutput {
	return i.ToGcpSecretManagerConnectorOutputWithContext(context.Background())
}

func (i *GcpSecretManagerConnector) ToGcpSecretManagerConnectorOutputWithContext(ctx context.Context) GcpSecretManagerConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSecretManagerConnectorOutput)
}

// GcpSecretManagerConnectorArrayInput is an input type that accepts GcpSecretManagerConnectorArray and GcpSecretManagerConnectorArrayOutput values.
// You can construct a concrete instance of `GcpSecretManagerConnectorArrayInput` via:
//
//	GcpSecretManagerConnectorArray{ GcpSecretManagerConnectorArgs{...} }
type GcpSecretManagerConnectorArrayInput interface {
	pulumi.Input

	ToGcpSecretManagerConnectorArrayOutput() GcpSecretManagerConnectorArrayOutput
	ToGcpSecretManagerConnectorArrayOutputWithContext(context.Context) GcpSecretManagerConnectorArrayOutput
}

type GcpSecretManagerConnectorArray []GcpSecretManagerConnectorInput

func (GcpSecretManagerConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpSecretManagerConnector)(nil)).Elem()
}

func (i GcpSecretManagerConnectorArray) ToGcpSecretManagerConnectorArrayOutput() GcpSecretManagerConnectorArrayOutput {
	return i.ToGcpSecretManagerConnectorArrayOutputWithContext(context.Background())
}

func (i GcpSecretManagerConnectorArray) ToGcpSecretManagerConnectorArrayOutputWithContext(ctx context.Context) GcpSecretManagerConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSecretManagerConnectorArrayOutput)
}

// GcpSecretManagerConnectorMapInput is an input type that accepts GcpSecretManagerConnectorMap and GcpSecretManagerConnectorMapOutput values.
// You can construct a concrete instance of `GcpSecretManagerConnectorMapInput` via:
//
//	GcpSecretManagerConnectorMap{ "key": GcpSecretManagerConnectorArgs{...} }
type GcpSecretManagerConnectorMapInput interface {
	pulumi.Input

	ToGcpSecretManagerConnectorMapOutput() GcpSecretManagerConnectorMapOutput
	ToGcpSecretManagerConnectorMapOutputWithContext(context.Context) GcpSecretManagerConnectorMapOutput
}

type GcpSecretManagerConnectorMap map[string]GcpSecretManagerConnectorInput

func (GcpSecretManagerConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpSecretManagerConnector)(nil)).Elem()
}

func (i GcpSecretManagerConnectorMap) ToGcpSecretManagerConnectorMapOutput() GcpSecretManagerConnectorMapOutput {
	return i.ToGcpSecretManagerConnectorMapOutputWithContext(context.Background())
}

func (i GcpSecretManagerConnectorMap) ToGcpSecretManagerConnectorMapOutputWithContext(ctx context.Context) GcpSecretManagerConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSecretManagerConnectorMapOutput)
}

type GcpSecretManagerConnectorOutput struct{ *pulumi.OutputState }

func (GcpSecretManagerConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSecretManagerConnector)(nil)).Elem()
}

func (o GcpSecretManagerConnectorOutput) ToGcpSecretManagerConnectorOutput() GcpSecretManagerConnectorOutput {
	return o
}

func (o GcpSecretManagerConnectorOutput) ToGcpSecretManagerConnectorOutputWithContext(ctx context.Context) GcpSecretManagerConnectorOutput {
	return o
}

// Reference to the secret containing credentials of IAM service account for Google Secret Manager. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GcpSecretManagerConnectorOutput) CredentialsRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringPtrOutput { return v.CredentialsRef }).(pulumi.StringPtrOutput)
}

// The delegates to inherit the credentials from.
func (o GcpSecretManagerConnectorOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringArrayOutput { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o GcpSecretManagerConnectorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Execute on delegate or not.
func (o GcpSecretManagerConnectorOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.BoolPtrOutput { return v.ExecuteOnDelegate }).(pulumi.BoolPtrOutput)
}

// Unique identifier of the resource.
func (o GcpSecretManagerConnectorOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Inherit configuration from delegate.
func (o GcpSecretManagerConnectorOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.BoolPtrOutput { return v.InheritFromDelegate }).(pulumi.BoolPtrOutput)
}

// Set this flag to set this secret manager as default secret manager.
func (o GcpSecretManagerConnectorOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.BoolPtrOutput { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Name of the resource.
func (o GcpSecretManagerConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Authentication using harness oidc.
func (o GcpSecretManagerConnectorOutput) OidcAuthentications() GcpSecretManagerConnectorOidcAuthenticationArrayOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) GcpSecretManagerConnectorOidcAuthenticationArrayOutput {
		return v.OidcAuthentications
	}).(GcpSecretManagerConnectorOidcAuthenticationArrayOutput)
}

// Unique identifier of the organization.
func (o GcpSecretManagerConnectorOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o GcpSecretManagerConnectorOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o GcpSecretManagerConnectorOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpSecretManagerConnector) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type GcpSecretManagerConnectorArrayOutput struct{ *pulumi.OutputState }

func (GcpSecretManagerConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpSecretManagerConnector)(nil)).Elem()
}

func (o GcpSecretManagerConnectorArrayOutput) ToGcpSecretManagerConnectorArrayOutput() GcpSecretManagerConnectorArrayOutput {
	return o
}

func (o GcpSecretManagerConnectorArrayOutput) ToGcpSecretManagerConnectorArrayOutputWithContext(ctx context.Context) GcpSecretManagerConnectorArrayOutput {
	return o
}

func (o GcpSecretManagerConnectorArrayOutput) Index(i pulumi.IntInput) GcpSecretManagerConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpSecretManagerConnector {
		return vs[0].([]*GcpSecretManagerConnector)[vs[1].(int)]
	}).(GcpSecretManagerConnectorOutput)
}

type GcpSecretManagerConnectorMapOutput struct{ *pulumi.OutputState }

func (GcpSecretManagerConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpSecretManagerConnector)(nil)).Elem()
}

func (o GcpSecretManagerConnectorMapOutput) ToGcpSecretManagerConnectorMapOutput() GcpSecretManagerConnectorMapOutput {
	return o
}

func (o GcpSecretManagerConnectorMapOutput) ToGcpSecretManagerConnectorMapOutputWithContext(ctx context.Context) GcpSecretManagerConnectorMapOutput {
	return o
}

func (o GcpSecretManagerConnectorMapOutput) MapIndex(k pulumi.StringInput) GcpSecretManagerConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpSecretManagerConnector {
		return vs[0].(map[string]*GcpSecretManagerConnector)[vs[1].(string)]
	}).(GcpSecretManagerConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSecretManagerConnectorInput)(nil)).Elem(), &GcpSecretManagerConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSecretManagerConnectorArrayInput)(nil)).Elem(), GcpSecretManagerConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSecretManagerConnectorMapInput)(nil)).Elem(), GcpSecretManagerConnectorMap{})
	pulumi.RegisterOutputType(GcpSecretManagerConnectorOutput{})
	pulumi.RegisterOutputType(GcpSecretManagerConnectorArrayOutput{})
	pulumi.RegisterOutputType(GcpSecretManagerConnectorMapOutput{})
}
