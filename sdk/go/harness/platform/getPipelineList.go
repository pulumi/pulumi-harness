// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retieving the Harness pipleine List
func GetPipelineList(ctx *pulumi.Context, args *GetPipelineListArgs, opts ...pulumi.InvokeOption) (*GetPipelineListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPipelineListResult
	err := ctx.Invoke("harness:platform/getPipelineList:getPipelineList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipelineList.
type GetPipelineListArgs struct {
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	Limit      *int    `pulumi:"limit"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId string `pulumi:"orgId"`
	Page  *int   `pulumi:"page"`
	// Unique identifier of the project.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getPipelineList.
type GetPipelineListResult struct {
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	Limit      *int    `pulumi:"limit"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId     string                    `pulumi:"orgId"`
	Page      *int                      `pulumi:"page"`
	Pipelines []GetPipelineListPipeline `pulumi:"pipelines"`
	// Unique identifier of the project.
	ProjectId string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

func GetPipelineListOutput(ctx *pulumi.Context, args GetPipelineListOutputArgs, opts ...pulumi.InvokeOption) GetPipelineListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPipelineListResultOutput, error) {
			args := v.(GetPipelineListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getPipelineList:getPipelineList", args, GetPipelineListResultOutput{}, options).(GetPipelineListResultOutput), nil
		}).(GetPipelineListResultOutput)
}

// A collection of arguments for invoking getPipelineList.
type GetPipelineListOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	Limit      pulumi.IntPtrInput    `pulumi:"limit"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	Page  pulumi.IntPtrInput `pulumi:"page"`
	// Unique identifier of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetPipelineListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineListArgs)(nil)).Elem()
}

// A collection of values returned by getPipelineList.
type GetPipelineListResultOutput struct{ *pulumi.OutputState }

func (GetPipelineListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineListResult)(nil)).Elem()
}

func (o GetPipelineListResultOutput) ToGetPipelineListResultOutput() GetPipelineListResultOutput {
	return o
}

func (o GetPipelineListResultOutput) ToGetPipelineListResultOutputWithContext(ctx context.Context) GetPipelineListResultOutput {
	return o
}

// Description of the resource.
func (o GetPipelineListResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineListResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPipelineListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineListResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o GetPipelineListResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPipelineListResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

func (o GetPipelineListResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPipelineListResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Name of the resource.
func (o GetPipelineListResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPipelineListResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o GetPipelineListResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineListResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetPipelineListResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPipelineListResult) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o GetPipelineListResultOutput) Pipelines() GetPipelineListPipelineArrayOutput {
	return o.ApplyT(func(v GetPipelineListResult) []GetPipelineListPipeline { return v.Pipelines }).(GetPipelineListPipelineArrayOutput)
}

// Unique identifier of the project.
func (o GetPipelineListResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineListResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o GetPipelineListResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineListResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPipelineListResultOutput{})
}
