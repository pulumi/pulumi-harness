// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness Dashboard.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupDashboards(ctx, &platform.LookupDashboardsArgs{
//				Id: "id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDashboards(ctx *pulumi.Context, args *LookupDashboardsArgs, opts ...pulumi.InvokeOption) (*LookupDashboardsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDashboardsResult
	err := ctx.Invoke("harness:platform/getDashboards:getDashboards", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDashboards.
type LookupDashboardsArgs struct {
	// Identifier of the dashboard.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getDashboards.
type LookupDashboardsResult struct {
	// Created at timestamp of the Dashboard.
	CreatedAt string `pulumi:"createdAt"`
	// Unique identifier of the Dashboard.
	DashboardId string `pulumi:"dashboardId"`
	// Data Sources within the Dashboard.
	DataSources []string `pulumi:"dataSources"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// Unique identifier of the Folder.
	FolderId string `pulumi:"folderId"`
	// Identifier of the dashboard.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Data Models within the Dashboard.
	Models []string `pulumi:"models"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Resource identifier of the dashboard.
	ResourceIdentifier string `pulumi:"resourceIdentifier"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// Title of the Dashboard.
	Title string `pulumi:"title"`
	// Resource identifier of the dashboard.
	Type string `pulumi:"type"`
	// View count of the dashboard.
	ViewCount int `pulumi:"viewCount"`
}

func LookupDashboardsOutput(ctx *pulumi.Context, args LookupDashboardsOutputArgs, opts ...pulumi.InvokeOption) LookupDashboardsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDashboardsResultOutput, error) {
			args := v.(LookupDashboardsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getDashboards:getDashboards", args, LookupDashboardsResultOutput{}, options).(LookupDashboardsResultOutput), nil
		}).(LookupDashboardsResultOutput)
}

// A collection of arguments for invoking getDashboards.
type LookupDashboardsOutputArgs struct {
	// Identifier of the dashboard.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupDashboardsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardsArgs)(nil)).Elem()
}

// A collection of values returned by getDashboards.
type LookupDashboardsResultOutput struct{ *pulumi.OutputState }

func (LookupDashboardsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardsResult)(nil)).Elem()
}

func (o LookupDashboardsResultOutput) ToLookupDashboardsResultOutput() LookupDashboardsResultOutput {
	return o
}

func (o LookupDashboardsResultOutput) ToLookupDashboardsResultOutputWithContext(ctx context.Context) LookupDashboardsResultOutput {
	return o
}

// Created at timestamp of the Dashboard.
func (o LookupDashboardsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Unique identifier of the Dashboard.
func (o LookupDashboardsResultOutput) DashboardId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.DashboardId }).(pulumi.StringOutput)
}

// Data Sources within the Dashboard.
func (o LookupDashboardsResultOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardsResult) []string { return v.DataSources }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupDashboardsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.Description }).(pulumi.StringOutput)
}

// Unique identifier of the Folder.
func (o LookupDashboardsResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// Identifier of the dashboard.
func (o LookupDashboardsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupDashboardsResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardsResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Data Models within the Dashboard.
func (o LookupDashboardsResultOutput) Models() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardsResult) []string { return v.Models }).(pulumi.StringArrayOutput)
}

// Name of the resource.
func (o LookupDashboardsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource identifier of the dashboard.
func (o LookupDashboardsResultOutput) ResourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.ResourceIdentifier }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o LookupDashboardsResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardsResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Title of the Dashboard.
func (o LookupDashboardsResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.Title }).(pulumi.StringOutput)
}

// Resource identifier of the dashboard.
func (o LookupDashboardsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardsResult) string { return v.Type }).(pulumi.StringOutput)
}

// View count of the dashboard.
func (o LookupDashboardsResultOutput) ViewCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardsResult) int { return v.ViewCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDashboardsResultOutput{})
}
