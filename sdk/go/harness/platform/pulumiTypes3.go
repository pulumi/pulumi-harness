// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GitopsApplicationsetApplicationsetSpecStrategyRollingSync struct {
	// Configuration used to define which applications to include in each stage of the rolling sync. All Applications in each group must become Healthy before the ApplicationSet controller will proceed to update the next group of Applications.
	Steps []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep `pulumi:"steps"`
}

// GitopsApplicationsetApplicationsetSpecStrategyRollingSyncInput is an input type that accepts GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs and GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecStrategyRollingSyncInput` via:
//
//	GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs{...}
type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput
	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs struct {
	// Configuration used to define which applications to include in each stage of the rolling sync. All Applications in each group must become Healthy before the ApplicationSet controller will proceed to update the next group of Applications.
	Steps GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayInput `pulumi:"steps"`
}

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSync)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput)
}

// GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray and GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray{ GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs{...} }
type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput
	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncInput

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecStrategyRollingSync)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSync)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput {
	return o
}

// Configuration used to define which applications to include in each stage of the rolling sync. All Applications in each group must become Healthy before the ApplicationSet controller will proceed to update the next group of Applications.
func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput) Steps() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecStrategyRollingSync) []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep {
		return v.Steps
	}).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecStrategyRollingSync)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecStrategyRollingSync {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecStrategyRollingSync)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep struct {
	// A list of label selector requirements. The requirements are ANDed.
	MatchExpressions []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression `pulumi:"matchExpressions"`
	// Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for >0%). Default is 100%, unbounded.
	MaxUpdate *string `pulumi:"maxUpdate"`
}

// GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepInput is an input type that accepts GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs and GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepInput` via:
//
//	GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs{...}
type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput
	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs struct {
	// A list of label selector requirements. The requirements are ANDed.
	MatchExpressions GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayInput `pulumi:"matchExpressions"`
	// Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for >0%). Default is 100%, unbounded.
	MaxUpdate pulumi.StringPtrInput `pulumi:"maxUpdate"`
}

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput)
}

// GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray and GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray{ GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs{...} }
type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput
	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepInput

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput {
	return o
}

// A list of label selector requirements. The requirements are ANDed.
func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput) MatchExpressions() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep) []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression {
		return v.MatchExpressions
	}).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput)
}

// Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for >0%). Default is 100%, unbounded.
func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput) MaxUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep) *string { return v.MaxUpdate }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression struct {
	// The label key that the selector applies to.
	Key *string `pulumi:"key"`
	// A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
	Operator *string `pulumi:"operator"`
	// An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionInput is an input type that accepts GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs and GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionInput` via:
//
//	GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs{...}
type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput
	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput)
}

// GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray and GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray{ GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs{...} }
type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput
	ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray []GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionInput

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput {
	return o
}

// The label key that the selector applies to.
func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression) *string {
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput() GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput) ToGitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpression)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput)
}

type GitopsApplicationsetApplicationsetSpecSyncPolicy struct {
	// Represents the policy applied on the generated applications. Possible values are create-only, create-update, create-delete, and sync.
	ApplicationsSync *string `pulumi:"applicationsSync"`
	// Label selector used to narrow the scope of targeted clusters.
	PreserveResourcesOnDeletion *bool `pulumi:"preserveResourcesOnDeletion"`
}

// GitopsApplicationsetApplicationsetSpecSyncPolicyInput is an input type that accepts GitopsApplicationsetApplicationsetSpecSyncPolicyArgs and GitopsApplicationsetApplicationsetSpecSyncPolicyOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecSyncPolicyInput` via:
//
//	GitopsApplicationsetApplicationsetSpecSyncPolicyArgs{...}
type GitopsApplicationsetApplicationsetSpecSyncPolicyInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyOutput
	ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyOutput
}

type GitopsApplicationsetApplicationsetSpecSyncPolicyArgs struct {
	// Represents the policy applied on the generated applications. Possible values are create-only, create-update, create-delete, and sync.
	ApplicationsSync pulumi.StringPtrInput `pulumi:"applicationsSync"`
	// Label selector used to narrow the scope of targeted clusters.
	PreserveResourcesOnDeletion pulumi.BoolPtrInput `pulumi:"preserveResourcesOnDeletion"`
}

func (GitopsApplicationsetApplicationsetSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecSyncPolicy)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecSyncPolicyOutput)
}

func (i GitopsApplicationsetApplicationsetSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecSyncPolicyOutput).ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecSyncPolicyPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecSyncPolicyArgs, GitopsApplicationsetApplicationsetSpecSyncPolicyPtr and GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecSyncPolicyPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecSyncPolicyArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecSyncPolicyPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput
	ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput
}

type gitopsApplicationsetApplicationsetSpecSyncPolicyPtrType GitopsApplicationsetApplicationsetSpecSyncPolicyArgs

func GitopsApplicationsetApplicationsetSpecSyncPolicyPtr(v *GitopsApplicationsetApplicationsetSpecSyncPolicyArgs) GitopsApplicationsetApplicationsetSpecSyncPolicyPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecSyncPolicyPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecSyncPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecSyncPolicy)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecSyncPolicyPtrType) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecSyncPolicyPtrType) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecSyncPolicy)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecSyncPolicyOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecSyncPolicy {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput)
}

// Represents the policy applied on the generated applications. Possible values are create-only, create-update, create-delete, and sync.
func (o GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) ApplicationsSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecSyncPolicy) *string { return v.ApplicationsSync }).(pulumi.StringPtrOutput)
}

// Label selector used to narrow the scope of targeted clusters.
func (o GitopsApplicationsetApplicationsetSpecSyncPolicyOutput) PreserveResourcesOnDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecSyncPolicy) *bool { return v.PreserveResourcesOnDeletion }).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecSyncPolicy)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput) ToGitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecSyncPolicyOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecSyncPolicy) GitopsApplicationsetApplicationsetSpecSyncPolicy {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecSyncPolicy
		return ret
	}).(GitopsApplicationsetApplicationsetSpecSyncPolicyOutput)
}

// Represents the policy applied on the generated applications. Possible values are create-only, create-update, create-delete, and sync.
func (o GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput) ApplicationsSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecSyncPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationsSync
	}).(pulumi.StringPtrOutput)
}

// Label selector used to narrow the scope of targeted clusters.
func (o GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput) PreserveResourcesOnDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecSyncPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveResourcesOnDeletion
	}).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplate struct {
	// Kubernetes object metadata for templated Application.
	Metadata GitopsApplicationsetApplicationsetSpecTemplateMetadata `pulumi:"metadata"`
	// The application specification.
	Spec GitopsApplicationsetApplicationsetSpecTemplateSpec `pulumi:"spec"`
}

// GitopsApplicationsetApplicationsetSpecTemplateInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateArgs and GitopsApplicationsetApplicationsetSpecTemplateOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateOutput() GitopsApplicationsetApplicationsetSpecTemplateOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateArgs struct {
	// Kubernetes object metadata for templated Application.
	Metadata GitopsApplicationsetApplicationsetSpecTemplateMetadataInput `pulumi:"metadata"`
	// The application specification.
	Spec GitopsApplicationsetApplicationsetSpecTemplateSpecInput `pulumi:"spec"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplate)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateArgs) ToGitopsApplicationsetApplicationsetSpecTemplateOutput() GitopsApplicationsetApplicationsetSpecTemplateOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateArgs) ToGitopsApplicationsetApplicationsetSpecTemplateOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateArgs) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutput() GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateArgs) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateOutput).ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplatePtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateArgs, GitopsApplicationsetApplicationsetSpecTemplatePtr and GitopsApplicationsetApplicationsetSpecTemplatePtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplatePtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplatePtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutput() GitopsApplicationsetApplicationsetSpecTemplatePtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplatePtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplatePtrType GitopsApplicationsetApplicationsetSpecTemplateArgs

func GitopsApplicationsetApplicationsetSpecTemplatePtr(v *GitopsApplicationsetApplicationsetSpecTemplateArgs) GitopsApplicationsetApplicationsetSpecTemplatePtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplatePtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplate)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplatePtrType) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutput() GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplatePtrType) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplatePtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplate)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateOutput) ToGitopsApplicationsetApplicationsetSpecTemplateOutput() GitopsApplicationsetApplicationsetSpecTemplateOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateOutput) ToGitopsApplicationsetApplicationsetSpecTemplateOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateOutput) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutput() GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateOutput) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplate) *GitopsApplicationsetApplicationsetSpecTemplate {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplatePtrOutput)
}

// Kubernetes object metadata for templated Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateOutput) Metadata() GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplate) GitopsApplicationsetApplicationsetSpecTemplateMetadata {
		return v.Metadata
	}).(GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput)
}

// The application specification.
func (o GitopsApplicationsetApplicationsetSpecTemplateOutput) Spec() GitopsApplicationsetApplicationsetSpecTemplateSpecOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplate) GitopsApplicationsetApplicationsetSpecTemplateSpec {
		return v.Spec
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplate)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplatePtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutput() GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplatePtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplatePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplatePtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplatePtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplate) GitopsApplicationsetApplicationsetSpecTemplate {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplate
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateOutput)
}

// Kubernetes object metadata for templated Application.
func (o GitopsApplicationsetApplicationsetSpecTemplatePtrOutput) Metadata() GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplate) *GitopsApplicationsetApplicationsetSpecTemplateMetadata {
		if v == nil {
			return nil
		}
		return &v.Metadata
	}).(GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput)
}

// The application specification.
func (o GitopsApplicationsetApplicationsetSpecTemplatePtrOutput) Spec() GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplate) *GitopsApplicationsetApplicationsetSpecTemplateSpec {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateMetadata struct {
	// An unstructured key value map that may be used to store arbitrary metadata for the resulting Application.
	Annotations map[string]string `pulumi:"annotations"`
	// List of finalizers to apply to the resulting Application.
	Finalizers []string `pulumi:"finalizers"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) the resulting Application.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resulting Application
	Name string `pulumi:"name"`
	// Namespace of the resulting Application
	Namespace *string `pulumi:"namespace"`
}

// GitopsApplicationsetApplicationsetSpecTemplateMetadataInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs and GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateMetadataInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateMetadataInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs struct {
	// An unstructured key value map that may be used to store arbitrary metadata for the resulting Application.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// List of finalizers to apply to the resulting Application.
	Finalizers pulumi.StringArrayInput `pulumi:"finalizers"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) the resulting Application.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the resulting Application
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resulting Application
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateMetadata)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput).ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs, GitopsApplicationsetApplicationsetSpecTemplateMetadataPtr and GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateMetadataPtrType GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs

func GitopsApplicationsetApplicationsetSpecTemplateMetadataPtr(v *GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs) GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateMetadataPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateMetadata)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateMetadataPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateMetadataPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateMetadata)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateMetadata) *GitopsApplicationsetApplicationsetSpecTemplateMetadata {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput)
}

// An unstructured key value map that may be used to store arbitrary metadata for the resulting Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// List of finalizers to apply to the resulting Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) the resulting Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the resulting Application
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateMetadata) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resulting Application
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateMetadata)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateMetadata) GitopsApplicationsetApplicationsetSpecTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateMetadata
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput)
}

// An unstructured key value map that may be used to store arbitrary metadata for the resulting Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// List of finalizers to apply to the resulting Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) the resulting Application.
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Name of the resulting Application
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resulting Application
func (o GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpec struct {
	// Reference to the Kubernetes server and namespace in which the application will be deployed.
	Destination GitopsApplicationsetApplicationsetSpecTemplateSpecDestination `pulumi:"destination"`
	// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
	IgnoreDifferences []GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference `pulumi:"ignoreDifferences"`
	// List of information (URLs, email addresses, and plain text) that relates to the application.
	Infos []GitopsApplicationsetApplicationsetSpecTemplateSpecInfo `pulumi:"infos"`
	// The project the application belongs to.
	Project *string `pulumi:"project"`
	// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// Location of the application's manifests or chart.
	Source []GitopsApplicationsetApplicationsetSpecTemplateSpecSource `pulumi:"source"`
	// Location of the application's manifests or chart. Use when specifying multiple fields
	Sources []GitopsApplicationsetApplicationsetSpecTemplateSpecSource `pulumi:"sources"`
	// Controls when and how a sync will be performed.
	SyncPolicy *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy `pulumi:"syncPolicy"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecArgs struct {
	// Reference to the Kubernetes server and namespace in which the application will be deployed.
	Destination GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationInput `pulumi:"destination"`
	// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
	IgnoreDifferences GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayInput `pulumi:"ignoreDifferences"`
	// List of information (URLs, email addresses, and plain text) that relates to the application.
	Infos GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayInput `pulumi:"infos"`
	// The project the application belongs to.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// Location of the application's manifests or chart.
	Source GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayInput `pulumi:"source"`
	// Location of the application's manifests or chart. Use when specifying multiple fields
	Sources GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayInput `pulumi:"sources"`
	// Controls when and how a sync will be performed.
	SyncPolicy GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrInput `pulumi:"syncPolicy"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpec)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpec)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpec)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpec) *GitopsApplicationsetApplicationsetSpecTemplateSpec {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput)
}

// Reference to the Kubernetes server and namespace in which the application will be deployed.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) Destination() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) GitopsApplicationsetApplicationsetSpecTemplateSpecDestination {
		return v.Destination
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput)
}

// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) IgnoreDifferences() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference {
		return v.IgnoreDifferences
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput)
}

// List of information (URLs, email addresses, and plain text) that relates to the application.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) Infos() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecInfo {
		return v.Infos
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput)
}

// The project the application belongs to.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// Location of the application's manifests or chart.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) Source() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecSource {
		return v.Source
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput)
}

// Location of the application's manifests or chart. Use when specifying multiple fields
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) Sources() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecSource {
		return v.Sources
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput)
}

// Controls when and how a sync will be performed.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecOutput) SyncPolicy() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpec) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy {
		return v.SyncPolicy
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpec)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) GitopsApplicationsetApplicationsetSpecTemplateSpec {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpec
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecOutput)
}

// Reference to the Kubernetes server and namespace in which the application will be deployed.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) Destination() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) *GitopsApplicationsetApplicationsetSpecTemplateSpecDestination {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput)
}

// Resources and their fields which should be ignored during comparison. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/#application-level-configuration.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) IgnoreDifferences() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference {
		if v == nil {
			return nil
		}
		return v.IgnoreDifferences
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput)
}

// List of information (URLs, email addresses, and plain text) that relates to the application.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) Infos() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecInfo {
		if v == nil {
			return nil
		}
		return v.Infos
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput)
}

// The project the application belongs to.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// Location of the application's manifests or chart.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) Source() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput)
}

// Location of the application's manifests or chart. Use when specifying multiple fields
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) Sources() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) []GitopsApplicationsetApplicationsetSpecTemplateSpecSource {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput)
}

// Controls when and how a sync will be performed.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput) SyncPolicy() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpec) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy {
		if v == nil {
			return nil
		}
		return v.SyncPolicy
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecDestination struct {
	// Name of the target cluster. Can be used instead of `server`.
	Name *string `pulumi:"name"`
	// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
	Namespace *string `pulumi:"namespace"`
	// URL of the target cluster and must be set to the Kubernetes control plane API.
	Server *string `pulumi:"server"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs struct {
	// Name of the target cluster. Can be used instead of `server`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// URL of the target cluster and must be set to the Kubernetes control plane API.
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecDestination)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecDestination)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecDestination)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *GitopsApplicationsetApplicationsetSpecTemplateSpecDestination {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput)
}

// Name of the target cluster. Can be used instead of `server`.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// URL of the target cluster and must be set to the Kubernetes control plane API.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecDestination)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) GitopsApplicationsetApplicationsetSpecTemplateSpecDestination {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecDestination
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput)
}

// Name of the target cluster. Can be used instead of `server`.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// URL of the target cluster and must be set to the Kubernetes control plane API.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecDestination) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference struct {
	// The Kubernetes resource Group to match for.
	Group *string `pulumi:"group"`
	// List of JQ path expression strings targeting the field(s) to ignore.
	JqPathExpressions []string `pulumi:"jqPathExpressions"`
	// List of JSONPaths strings targeting the field(s) to ignore.
	JsonPointers []string `pulumi:"jsonPointers"`
	// The Kubernetes resource Kind to match for.
	Kind *string `pulumi:"kind"`
	// The Kubernetes resource Name to match for.
	Name *string `pulumi:"name"`
	// The Kubernetes resource Namespace to match for.
	Namespace *string `pulumi:"namespace"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs struct {
	// The Kubernetes resource Group to match for.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// List of JQ path expression strings targeting the field(s) to ignore.
	JqPathExpressions pulumi.StringArrayInput `pulumi:"jqPathExpressions"`
	// List of JSONPaths strings targeting the field(s) to ignore.
	JsonPointers pulumi.StringArrayInput `pulumi:"jsonPointers"`
	// The Kubernetes resource Kind to match for.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The Kubernetes resource Name to match for.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Kubernetes resource Namespace to match for.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray and GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray []GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput {
	return o
}

// The Kubernetes resource Group to match for.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// List of JQ path expression strings targeting the field(s) to ignore.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) JqPathExpressions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference) []string {
		return v.JqPathExpressions
	}).(pulumi.StringArrayOutput)
}

// List of JSONPaths strings targeting the field(s) to ignore.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) JsonPointers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference) []string {
		return v.JsonPointers
	}).(pulumi.StringArrayOutput)
}

// The Kubernetes resource Kind to match for.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The Kubernetes resource Name to match for.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Kubernetes resource Namespace to match for.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifference)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecInfo struct {
	// Name of the information.
	Name *string `pulumi:"name"`
	// Value of the information.
	Value *string `pulumi:"value"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecInfoInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecInfoInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecInfoInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs struct {
	// Name of the information.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the information.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecInfo)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray and GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray []GitopsApplicationsetApplicationsetSpecTemplateSpecInfoInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecInfo)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecInfo)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput {
	return o
}

// Name of the information.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the information.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecInfo) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecInfo)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecInfo {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecInfo)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSource struct {
	// Helm chart name. Must be specified for applications sourced from a Helm repo.
	Chart *string `pulumi:"chart"`
	// Path/directory specific options.
	Directory *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory `pulumi:"directory"`
	// Helm specific options.
	Helm *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm `pulumi:"helm"`
	// Kustomize specific options.
	Kustomize *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize `pulumi:"kustomize"`
	// Directory path within the repository. Only valid for applications sourced from Git.
	Path *string `pulumi:"path"`
	// Config management plugin specific options.
	Plugin *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin `pulumi:"plugin"`
	// Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
	Ref *string `pulumi:"ref"`
	// URL to the repository (Git or Helm) that contains the application manifests.
	RepoUrl string `pulumi:"repoUrl"`
	// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `pulumi:"targetRevision"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs struct {
	// Helm chart name. Must be specified for applications sourced from a Helm repo.
	Chart pulumi.StringPtrInput `pulumi:"chart"`
	// Path/directory specific options.
	Directory GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrInput `pulumi:"directory"`
	// Helm specific options.
	Helm GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrInput `pulumi:"helm"`
	// Kustomize specific options.
	Kustomize GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrInput `pulumi:"kustomize"`
	// Directory path within the repository. Only valid for applications sourced from Git.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Config management plugin specific options.
	Plugin GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrInput `pulumi:"plugin"`
	// Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
	Ref pulumi.StringPtrInput `pulumi:"ref"`
	// URL to the repository (Git or Helm) that contains the application manifests.
	RepoUrl pulumi.StringInput `pulumi:"repoUrl"`
	// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision pulumi.StringPtrInput `pulumi:"targetRevision"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSource)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSource)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSource)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput {
	return o
}

// Helm chart name. Must be specified for applications sourced from a Helm repo.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

// Path/directory specific options.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Directory() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory {
		return v.Directory
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput)
}

// Helm specific options.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Helm() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm {
		return v.Helm
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput)
}

// Kustomize specific options.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Kustomize() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize {
		return v.Kustomize
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput)
}

// Directory path within the repository. Only valid for applications sourced from Git.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Config management plugin specific options.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Plugin() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin {
		return v.Plugin
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput)
}

// Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

// URL to the repository (Git or Helm) that contains the application manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) RepoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) string { return v.RepoUrl }).(pulumi.StringOutput)
}

// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSource)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecSource {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecSource)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory struct {
	// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
	Exclude *string `pulumi:"exclude"`
	// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
	Include *string `pulumi:"include"`
	// Jsonnet specific options.
	Jsonnet *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet `pulumi:"jsonnet"`
	// Whether to scan a directory recursively for manifests.
	Recurse *bool `pulumi:"recurse"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs struct {
	// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Jsonnet specific options.
	Jsonnet GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrInput `pulumi:"jsonnet"`
	// Whether to scan a directory recursively for manifests.
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput)
}

// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Jsonnet specific options.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) Jsonnet() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet {
		return v.Jsonnet
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput)
}

// Whether to scan a directory recursively for manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput)
}

// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation. This takes precedence over the `include` field. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

// Glob pattern to match paths against that should be explicitly included during manifest generation. If this field is set, only matching manifests will be included. To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

// Jsonnet specific options.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) Jsonnet() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet {
		if v == nil {
			return nil
		}
		return v.Jsonnet
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput)
}

// Whether to scan a directory recursively for manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Recurse
	}).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet struct {
	// List of Jsonnet External Variables.
	ExtVars []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar `pulumi:"extVars"`
	// Additional library search dirs.
	Libs []string `pulumi:"libs"`
	// List of Jsonnet Top-level Arguments
	Tlas []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla `pulumi:"tlas"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs struct {
	// List of Jsonnet External Variables.
	ExtVars GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayInput `pulumi:"extVars"`
	// Additional library search dirs.
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// List of Jsonnet Top-level Arguments
	Tlas GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayInput `pulumi:"tlas"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput)
}

// List of Jsonnet External Variables.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) ExtVars() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar {
		return v.ExtVars
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

// Additional library search dirs.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) []string {
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// List of Jsonnet Top-level Arguments
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput) Tlas() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla {
		return v.Tlas
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput)
}

// List of Jsonnet External Variables.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) ExtVars() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar {
		if v == nil {
			return nil
		}
		return v.ExtVars
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

// Additional library search dirs.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) []string {
		if v == nil {
			return nil
		}
		return v.Libs
	}).(pulumi.StringArrayOutput)
}

// List of Jsonnet Top-level Arguments
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput) Tlas() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnet) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla {
		if v == nil {
			return nil
		}
		return v.Tlas
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code *bool `pulumi:"code"`
	// Name of Jsonnet variable.
	Name *string `pulumi:"name"`
	// Value of Jsonnet variable.
	Value *string `pulumi:"value"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of Jsonnet variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of Jsonnet variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

// Determines whether the variable should be evaluated as jsonnet code or treated as string.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar) *bool {
		return v.Code
	}).(pulumi.BoolPtrOutput)
}

// Name of Jsonnet variable.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Value of Jsonnet variable.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVar)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code *bool `pulumi:"code"`
	// Name of Jsonnet variable.
	Name *string `pulumi:"name"`
	// Value of Jsonnet variable.
	Value *string `pulumi:"value"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs struct {
	// Determines whether the variable should be evaluated as jsonnet code or treated as string.
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of Jsonnet variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of Jsonnet variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

// Determines whether the variable should be evaluated as jsonnet code or treated as string.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla) *bool {
		return v.Code
	}).(pulumi.BoolPtrOutput)
}

// Name of Jsonnet variable.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Value of Jsonnet variable.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTla)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm struct {
	// File parameters for the helm template.
	FileParameters []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter `pulumi:"fileParameters"`
	// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
	IgnoreMissingValueFiles *bool `pulumi:"ignoreMissingValueFiles"`
	// Helm parameters which are passed to the helm template command upon manifest generation.
	Parameters []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter `pulumi:"parameters"`
	// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
	PassCredentials *bool `pulumi:"passCredentials"`
	// Helm release name. If omitted it will use the application name.
	ReleaseName *string `pulumi:"releaseName"`
	// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
	SkipCrds *bool `pulumi:"skipCrds"`
	// List of Helm value files to use when generating a template.
	ValueFiles []string `pulumi:"valueFiles"`
	// Helm values to be passed to 'helm template', typically defined as a block.
	Values *string `pulumi:"values"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs struct {
	// File parameters for the helm template.
	FileParameters GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayInput `pulumi:"fileParameters"`
	// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
	IgnoreMissingValueFiles pulumi.BoolPtrInput `pulumi:"ignoreMissingValueFiles"`
	// Helm parameters which are passed to the helm template command upon manifest generation.
	Parameters GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayInput `pulumi:"parameters"`
	// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
	PassCredentials pulumi.BoolPtrInput `pulumi:"passCredentials"`
	// Helm release name. If omitted it will use the application name.
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
	SkipCrds pulumi.BoolPtrInput `pulumi:"skipCrds"`
	// List of Helm value files to use when generating a template.
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Helm values to be passed to 'helm template', typically defined as a block.
	Values pulumi.StringPtrInput `pulumi:"values"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput)
}

// File parameters for the helm template.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) FileParameters() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter {
		return v.FileParameters
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput)
}

// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) IgnoreMissingValueFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *bool {
		return v.IgnoreMissingValueFiles
	}).(pulumi.BoolPtrOutput)
}

// Helm parameters which are passed to the helm template command upon manifest generation.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) Parameters() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter {
		return v.Parameters
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput)
}

// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) PassCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *bool { return v.PassCredentials }).(pulumi.BoolPtrOutput)
}

// Helm release name. If omitted it will use the application name.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) SkipCrds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *bool { return v.SkipCrds }).(pulumi.BoolPtrOutput)
}

// List of Helm value files to use when generating a template.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Helm values to be passed to 'helm template', typically defined as a block.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput)
}

// File parameters for the helm template.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) FileParameters() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter {
		if v == nil {
			return nil
		}
		return v.FileParameters
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput)
}

// Prevents 'helm template' from failing when `valueFiles` do not exist locally by not appending them to 'helm template --values'.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) IgnoreMissingValueFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreMissingValueFiles
	}).(pulumi.BoolPtrOutput)
}

// Helm parameters which are passed to the helm template command upon manifest generation.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) Parameters() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput)
}

// If true then adds '--pass-credentials' to Helm commands to pass credentials to all domains.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) PassCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *bool {
		if v == nil {
			return nil
		}
		return v.PassCredentials
	}).(pulumi.BoolPtrOutput)
}

// Helm release name. If omitted it will use the application name.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// Whether to skip custom resource definition installation step (Helm's [--skip-crds](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/)).
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) SkipCrds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *bool {
		if v == nil {
			return nil
		}
		return v.SkipCrds
	}).(pulumi.BoolPtrOutput)
}

// List of Helm value files to use when generating a template.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) []string {
		if v == nil {
			return nil
		}
		return v.ValueFiles
	}).(pulumi.StringArrayOutput)
}

// Helm values to be passed to 'helm template', typically defined as a block.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelm) *string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter struct {
	// Name of the Helm parameter.
	Name string `pulumi:"name"`
	// Path to the file containing the values for the Helm parameter.
	Path string `pulumi:"path"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs struct {
	// Name of the Helm parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Path to the file containing the values for the Helm parameter.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput {
	return o
}

// Name of the Helm parameter.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Path to the file containing the values for the Helm parameter.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter) string {
		return v.Path
	}).(pulumi.StringOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameter)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter struct {
	// Determines whether to tell Helm to interpret booleans and numbers as strings.
	ForceString *bool `pulumi:"forceString"`
	// Name of the Helm parameter.
	Name *string `pulumi:"name"`
	// Value of the Helm parameter.
	Value *string `pulumi:"value"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs struct {
	// Determines whether to tell Helm to interpret booleans and numbers as strings.
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name of the Helm parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the Helm parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray []GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput {
	return o
}

// Determines whether to tell Helm to interpret booleans and numbers as strings.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter) *bool {
		return v.ForceString
	}).(pulumi.BoolPtrOutput)
}

// Name of the Helm parameter.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the Helm parameter.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameter)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize struct {
	// List of additional annotations to add to rendered manifests.
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// List of additional labels to add to rendered manifests.
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Indicates if to force applying common annotations to resources for kustomize apps.
	ForceCommonAnnotations *bool `pulumi:"forceCommonAnnotations"`
	// Indicates if to force apply common labels to resources for kustomize apps.
	ForceCommonLabels *bool `pulumi:"forceCommonLabels"`
	// List of Kustomize image override specifications.
	Images []string `pulumi:"images"`
	// Prefix appended to resources for Kustomize apps.
	NamePrefix *string `pulumi:"namePrefix"`
	// Suffix appended to resources for Kustomize apps.
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version of Kustomize to use for rendering manifests.
	Version *string `pulumi:"version"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs struct {
	// List of additional annotations to add to rendered manifests.
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// List of additional labels to add to rendered manifests.
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Indicates if to force applying common annotations to resources for kustomize apps.
	ForceCommonAnnotations pulumi.BoolPtrInput `pulumi:"forceCommonAnnotations"`
	// Indicates if to force apply common labels to resources for kustomize apps.
	ForceCommonLabels pulumi.BoolPtrInput `pulumi:"forceCommonLabels"`
	// List of Kustomize image override specifications.
	Images pulumi.StringArrayInput `pulumi:"images"`
	// Prefix appended to resources for Kustomize apps.
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Suffix appended to resources for Kustomize apps.
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version of Kustomize to use for rendering manifests.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput)
}

// List of additional annotations to add to rendered manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) map[string]string {
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// List of additional labels to add to rendered manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) map[string]string {
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Indicates if to force applying common annotations to resources for kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ForceCommonAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *bool {
		return v.ForceCommonAnnotations
	}).(pulumi.BoolPtrOutput)
}

// Indicates if to force apply common labels to resources for kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) ForceCommonLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *bool {
		return v.ForceCommonLabels
	}).(pulumi.BoolPtrOutput)
}

// List of Kustomize image override specifications.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// Prefix appended to resources for Kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Suffix appended to resources for Kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version of Kustomize to use for rendering manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput)
}

// List of additional annotations to add to rendered manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// List of additional labels to add to rendered manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonLabels
	}).(pulumi.StringMapOutput)
}

// Indicates if to force applying common annotations to resources for kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) ForceCommonAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *bool {
		if v == nil {
			return nil
		}
		return v.ForceCommonAnnotations
	}).(pulumi.BoolPtrOutput)
}

// Indicates if to force apply common labels to resources for kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) ForceCommonLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *bool {
		if v == nil {
			return nil
		}
		return v.ForceCommonLabels
	}).(pulumi.BoolPtrOutput)
}

// List of Kustomize image override specifications.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) []string {
		if v == nil {
			return nil
		}
		return v.Images
	}).(pulumi.StringArrayOutput)
}

// Prefix appended to resources for Kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// Suffix appended to resources for Kustomize apps.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.NameSuffix
	}).(pulumi.StringPtrOutput)
}

// Version of Kustomize to use for rendering manifests.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomize) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin struct {
	// Environment variables passed to the plugin.
	Envs []GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv `pulumi:"envs"`
	// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
	Name *string `pulumi:"name"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs struct {
	// Environment variables passed to the plugin.
	Envs GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayInput `pulumi:"envs"`
	// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin) *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput)
}

// Environment variables passed to the plugin.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) Envs() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv {
		return v.Envs
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput)
}

// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput)
}

// Environment variables passed to the plugin.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput) Envs() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin) []GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv {
		if v == nil {
			return nil
		}
		return v.Envs
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput)
}

// Name of the plugin. Only set the plugin name if the plugin is defined in `argocd-cm`. If the plugin is defined as a sidecar, omit the name. The plugin will be automatically matched with the Application according to the plugin's discovery rules.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePlugin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv struct {
	// Name of the environment variable.
	Name *string `pulumi:"name"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs struct {
	// Name of the environment variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray and GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray{ GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs{...} }
type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray []GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvInput

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput {
	return o
}

// Name of the environment variable.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv {
		return vs[0].([]GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnv)[vs[1].(int)]
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy struct {
	// Whether to automatically keep an application synced to the target revision.
	Automated *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated `pulumi:"automated"`
	// Controls metadata in the given namespace (if `CreateNamespace=true`).
	ManagedNamespaceMetadata *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata `pulumi:"managedNamespaceMetadata"`
	// Controls failed sync retry behavior.
	Retry *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry `pulumi:"retry"`
	// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
	SyncOptions []string `pulumi:"syncOptions"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs struct {
	// Whether to automatically keep an application synced to the target revision.
	Automated GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrInput `pulumi:"automated"`
	// Controls metadata in the given namespace (if `CreateNamespace=true`).
	ManagedNamespaceMetadata GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrInput `pulumi:"managedNamespaceMetadata"`
	// Controls failed sync retry behavior.
	Retry GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrInput `pulumi:"retry"`
	// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
	SyncOptions pulumi.StringArrayInput `pulumi:"syncOptions"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput)
}

// Whether to automatically keep an application synced to the target revision.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) Automated() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated {
		return v.Automated
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput)
}

// Controls metadata in the given namespace (if `CreateNamespace=true`).
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) ManagedNamespaceMetadata() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata {
		return v.ManagedNamespaceMetadata
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput)
}

// Controls failed sync retry behavior.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) Retry() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry {
		return v.Retry
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput)
}

// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput)
}

// Whether to automatically keep an application synced to the target revision.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) Automated() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput)
}

// Controls metadata in the given namespace (if `CreateNamespace=true`).
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) ManagedNamespaceMetadata() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata {
		if v == nil {
			return nil
		}
		return v.ManagedNamespaceMetadata
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput)
}

// Controls failed sync retry behavior.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) Retry() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput)
}

// List of sync options. More info: https://argo-cd.readthedocs.io/en/stable/user-guide/sync-options/.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicy) []string {
		if v == nil {
			return nil
		}
		return v.SyncOptions
	}).(pulumi.StringArrayOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated struct {
	// Allows apps have zero live resources.
	AllowEmpty *bool `pulumi:"allowEmpty"`
	// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
	Prune *bool `pulumi:"prune"`
	// Whether to revert resources back to their desired state upon modification in the cluster.
	SelfHeal *bool `pulumi:"selfHeal"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs struct {
	// Allows apps have zero live resources.
	AllowEmpty pulumi.BoolPtrInput `pulumi:"allowEmpty"`
	// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
	Prune pulumi.BoolPtrInput `pulumi:"prune"`
	// Whether to revert resources back to their desired state upon modification in the cluster.
	SelfHeal pulumi.BoolPtrInput `pulumi:"selfHeal"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput)
}

// Allows apps have zero live resources.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) AllowEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *bool {
		return v.AllowEmpty
	}).(pulumi.BoolPtrOutput)
}

// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

// Whether to revert resources back to their desired state upon modification in the cluster.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput) SelfHeal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *bool { return v.SelfHeal }).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput)
}

// Allows apps have zero live resources.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) AllowEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *bool {
		if v == nil {
			return nil
		}
		return v.AllowEmpty
	}).(pulumi.BoolPtrOutput)
}

// Whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *bool {
		if v == nil {
			return nil
		}
		return v.Prune
	}).(pulumi.BoolPtrOutput)
}

// Whether to revert resources back to their desired state upon modification in the cluster.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput) SelfHeal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomated) *bool {
		if v == nil {
			return nil
		}
		return v.SelfHeal
	}).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata struct {
	// Annotations to apply to the namespace.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels to apply to the namespace.
	Labels map[string]string `pulumi:"labels"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs struct {
	// Annotations to apply to the namespace.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels to apply to the namespace.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput)
}

// Annotations to apply to the namespace.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels to apply to the namespace.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput)
}

// Annotations to apply to the namespace.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels to apply to the namespace.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry struct {
	// Controls how to backoff on subsequent retries of failed syncs.
	Backoff *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff `pulumi:"backoff"`
	// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit *string `pulumi:"limit"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs struct {
	// Controls how to backoff on subsequent retries of failed syncs.
	Backoff GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrInput `pulumi:"backoff"`
	// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit pulumi.StringPtrInput `pulumi:"limit"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput)
}

// Controls how to backoff on subsequent retries of failed syncs.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) Backoff() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff {
		return v.Backoff
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput)
}

// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput) Limit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry) *string { return v.Limit }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput)
}

// Controls how to backoff on subsequent retries of failed syncs.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput) Backoff() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff {
		if v == nil {
			return nil
		}
		return v.Backoff
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput)
}

// Maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput) Limit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetry) *string {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	Duration *string `pulumi:"duration"`
	// Factor to multiply the base duration after each failed retry.
	Factor *string `pulumi:"factor"`
	// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	MaxDuration *string `pulumi:"maxDuration"`
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffInput` via:
//
//	GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs{...}
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs struct {
	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Factor to multiply the base duration after each failed retry.
	Factor pulumi.StringPtrInput `pulumi:"factor"`
	// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
	MaxDuration pulumi.StringPtrInput `pulumi:"maxDuration"`
}

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput)
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Background())
}

func (i GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput).ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx)
}

// GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrInput is an input type that accepts GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs, GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtr and GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput values.
// You can construct a concrete instance of `GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrInput` via:
//
//	        GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs{...}
//
//	or:
//
//	        nil
type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrInput interface {
	pulumi.Input

	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput
	ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput
}

type gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrType GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs

func GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtr(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrInput {
	return (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrType)(v)
}

func (*gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return i.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Background())
}

func (i *gitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrType) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(context.Background())
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff {
		return &v
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *string {
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Factor to multiply the base duration after each failed retry.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) Factor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *string {
		return v.Factor
	}).(pulumi.StringPtrOutput)
}

// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *string {
		return v.MaxDuration
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) ToGitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutputWithContext(ctx context.Context) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput {
	return o
}

func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) Elem() GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff {
		if v != nil {
			return *v
		}
		var ret GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff
		return ret
	}).(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput)
}

// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Factor to multiply the base duration after each failed retry.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) Factor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.Factor
	}).(pulumi.StringPtrOutput)
}

// Maximum amount of time allowed for the backoff strategy. Default unit is seconds, but could also be a duration (e.g. `2m`, `1h`), as a string.
func (o GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoff) *string {
		if v == nil {
			return nil
		}
		return v.MaxDuration
	}).(pulumi.StringPtrOutput)
}

type HarRegistryConfig struct {
	// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
	AuthType *string `pulumi:"authType"`
	// Authentication configuration for UPSTREAM registry type
	Auths []HarRegistryConfigAuth `pulumi:"auths"`
	// Upstream source
	Source *string `pulumi:"source"`
	// Type of registry (VIRTUAL or UPSTREAM)
	Type string `pulumi:"type"`
	// List of upstream proxies for VIRTUAL registry type
	UpstreamProxies []string `pulumi:"upstreamProxies"`
	// URL of the upstream (required if type=UPSTREAM & package_type=HELM)
	Url *string `pulumi:"url"`
}

// HarRegistryConfigInput is an input type that accepts HarRegistryConfigArgs and HarRegistryConfigOutput values.
// You can construct a concrete instance of `HarRegistryConfigInput` via:
//
//	HarRegistryConfigArgs{...}
type HarRegistryConfigInput interface {
	pulumi.Input

	ToHarRegistryConfigOutput() HarRegistryConfigOutput
	ToHarRegistryConfigOutputWithContext(context.Context) HarRegistryConfigOutput
}

type HarRegistryConfigArgs struct {
	// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// Authentication configuration for UPSTREAM registry type
	Auths HarRegistryConfigAuthArrayInput `pulumi:"auths"`
	// Upstream source
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Type of registry (VIRTUAL or UPSTREAM)
	Type pulumi.StringInput `pulumi:"type"`
	// List of upstream proxies for VIRTUAL registry type
	UpstreamProxies pulumi.StringArrayInput `pulumi:"upstreamProxies"`
	// URL of the upstream (required if type=UPSTREAM & package_type=HELM)
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (HarRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HarRegistryConfig)(nil)).Elem()
}

func (i HarRegistryConfigArgs) ToHarRegistryConfigOutput() HarRegistryConfigOutput {
	return i.ToHarRegistryConfigOutputWithContext(context.Background())
}

func (i HarRegistryConfigArgs) ToHarRegistryConfigOutputWithContext(ctx context.Context) HarRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HarRegistryConfigOutput)
}

// HarRegistryConfigArrayInput is an input type that accepts HarRegistryConfigArray and HarRegistryConfigArrayOutput values.
// You can construct a concrete instance of `HarRegistryConfigArrayInput` via:
//
//	HarRegistryConfigArray{ HarRegistryConfigArgs{...} }
type HarRegistryConfigArrayInput interface {
	pulumi.Input

	ToHarRegistryConfigArrayOutput() HarRegistryConfigArrayOutput
	ToHarRegistryConfigArrayOutputWithContext(context.Context) HarRegistryConfigArrayOutput
}

type HarRegistryConfigArray []HarRegistryConfigInput

func (HarRegistryConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HarRegistryConfig)(nil)).Elem()
}

func (i HarRegistryConfigArray) ToHarRegistryConfigArrayOutput() HarRegistryConfigArrayOutput {
	return i.ToHarRegistryConfigArrayOutputWithContext(context.Background())
}

func (i HarRegistryConfigArray) ToHarRegistryConfigArrayOutputWithContext(ctx context.Context) HarRegistryConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HarRegistryConfigArrayOutput)
}

type HarRegistryConfigOutput struct{ *pulumi.OutputState }

func (HarRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HarRegistryConfig)(nil)).Elem()
}

func (o HarRegistryConfigOutput) ToHarRegistryConfigOutput() HarRegistryConfigOutput {
	return o
}

func (o HarRegistryConfigOutput) ToHarRegistryConfigOutputWithContext(ctx context.Context) HarRegistryConfigOutput {
	return o
}

// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
func (o HarRegistryConfigOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfig) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Authentication configuration for UPSTREAM registry type
func (o HarRegistryConfigOutput) Auths() HarRegistryConfigAuthArrayOutput {
	return o.ApplyT(func(v HarRegistryConfig) []HarRegistryConfigAuth { return v.Auths }).(HarRegistryConfigAuthArrayOutput)
}

// Upstream source
func (o HarRegistryConfigOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfig) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Type of registry (VIRTUAL or UPSTREAM)
func (o HarRegistryConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HarRegistryConfig) string { return v.Type }).(pulumi.StringOutput)
}

// List of upstream proxies for VIRTUAL registry type
func (o HarRegistryConfigOutput) UpstreamProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HarRegistryConfig) []string { return v.UpstreamProxies }).(pulumi.StringArrayOutput)
}

// URL of the upstream (required if type=UPSTREAM & package_type=HELM)
func (o HarRegistryConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type HarRegistryConfigArrayOutput struct{ *pulumi.OutputState }

func (HarRegistryConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HarRegistryConfig)(nil)).Elem()
}

func (o HarRegistryConfigArrayOutput) ToHarRegistryConfigArrayOutput() HarRegistryConfigArrayOutput {
	return o
}

func (o HarRegistryConfigArrayOutput) ToHarRegistryConfigArrayOutputWithContext(ctx context.Context) HarRegistryConfigArrayOutput {
	return o
}

func (o HarRegistryConfigArrayOutput) Index(i pulumi.IntInput) HarRegistryConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HarRegistryConfig {
		return vs[0].([]HarRegistryConfig)[vs[1].(int)]
	}).(HarRegistryConfigOutput)
}

type HarRegistryConfigAuth struct {
	AccessKey           *string `pulumi:"accessKey"`
	AccessKeyIdentifier *string `pulumi:"accessKeyIdentifier"`
	AccessKeySecretPath *string `pulumi:"accessKeySecretPath"`
	// Type of authentication (UserPassword, Anonymous)
	AuthType string `pulumi:"authType"`
	// Secret identifier for UserPassword auth type
	SecretIdentifier    *string `pulumi:"secretIdentifier"`
	SecretKeyIdentifier *string `pulumi:"secretKeyIdentifier"`
	SecretKeySecretPath *string `pulumi:"secretKeySecretPath"`
	// Secret space path for UserPassword auth type
	SecretSpacePath *string `pulumi:"secretSpacePath"`
	// User name for UserPassword auth type
	UserName *string `pulumi:"userName"`
}

// HarRegistryConfigAuthInput is an input type that accepts HarRegistryConfigAuthArgs and HarRegistryConfigAuthOutput values.
// You can construct a concrete instance of `HarRegistryConfigAuthInput` via:
//
//	HarRegistryConfigAuthArgs{...}
type HarRegistryConfigAuthInput interface {
	pulumi.Input

	ToHarRegistryConfigAuthOutput() HarRegistryConfigAuthOutput
	ToHarRegistryConfigAuthOutputWithContext(context.Context) HarRegistryConfigAuthOutput
}

type HarRegistryConfigAuthArgs struct {
	AccessKey           pulumi.StringPtrInput `pulumi:"accessKey"`
	AccessKeyIdentifier pulumi.StringPtrInput `pulumi:"accessKeyIdentifier"`
	AccessKeySecretPath pulumi.StringPtrInput `pulumi:"accessKeySecretPath"`
	// Type of authentication (UserPassword, Anonymous)
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Secret identifier for UserPassword auth type
	SecretIdentifier    pulumi.StringPtrInput `pulumi:"secretIdentifier"`
	SecretKeyIdentifier pulumi.StringPtrInput `pulumi:"secretKeyIdentifier"`
	SecretKeySecretPath pulumi.StringPtrInput `pulumi:"secretKeySecretPath"`
	// Secret space path for UserPassword auth type
	SecretSpacePath pulumi.StringPtrInput `pulumi:"secretSpacePath"`
	// User name for UserPassword auth type
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (HarRegistryConfigAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HarRegistryConfigAuth)(nil)).Elem()
}

func (i HarRegistryConfigAuthArgs) ToHarRegistryConfigAuthOutput() HarRegistryConfigAuthOutput {
	return i.ToHarRegistryConfigAuthOutputWithContext(context.Background())
}

func (i HarRegistryConfigAuthArgs) ToHarRegistryConfigAuthOutputWithContext(ctx context.Context) HarRegistryConfigAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HarRegistryConfigAuthOutput)
}

// HarRegistryConfigAuthArrayInput is an input type that accepts HarRegistryConfigAuthArray and HarRegistryConfigAuthArrayOutput values.
// You can construct a concrete instance of `HarRegistryConfigAuthArrayInput` via:
//
//	HarRegistryConfigAuthArray{ HarRegistryConfigAuthArgs{...} }
type HarRegistryConfigAuthArrayInput interface {
	pulumi.Input

	ToHarRegistryConfigAuthArrayOutput() HarRegistryConfigAuthArrayOutput
	ToHarRegistryConfigAuthArrayOutputWithContext(context.Context) HarRegistryConfigAuthArrayOutput
}

type HarRegistryConfigAuthArray []HarRegistryConfigAuthInput

func (HarRegistryConfigAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HarRegistryConfigAuth)(nil)).Elem()
}

func (i HarRegistryConfigAuthArray) ToHarRegistryConfigAuthArrayOutput() HarRegistryConfigAuthArrayOutput {
	return i.ToHarRegistryConfigAuthArrayOutputWithContext(context.Background())
}

func (i HarRegistryConfigAuthArray) ToHarRegistryConfigAuthArrayOutputWithContext(ctx context.Context) HarRegistryConfigAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HarRegistryConfigAuthArrayOutput)
}

type HarRegistryConfigAuthOutput struct{ *pulumi.OutputState }

func (HarRegistryConfigAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HarRegistryConfigAuth)(nil)).Elem()
}

func (o HarRegistryConfigAuthOutput) ToHarRegistryConfigAuthOutput() HarRegistryConfigAuthOutput {
	return o
}

func (o HarRegistryConfigAuthOutput) ToHarRegistryConfigAuthOutputWithContext(ctx context.Context) HarRegistryConfigAuthOutput {
	return o
}

func (o HarRegistryConfigAuthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o HarRegistryConfigAuthOutput) AccessKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.AccessKeyIdentifier }).(pulumi.StringPtrOutput)
}

func (o HarRegistryConfigAuthOutput) AccessKeySecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.AccessKeySecretPath }).(pulumi.StringPtrOutput)
}

// Type of authentication (UserPassword, Anonymous)
func (o HarRegistryConfigAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Secret identifier for UserPassword auth type
func (o HarRegistryConfigAuthOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

func (o HarRegistryConfigAuthOutput) SecretKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.SecretKeyIdentifier }).(pulumi.StringPtrOutput)
}

func (o HarRegistryConfigAuthOutput) SecretKeySecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.SecretKeySecretPath }).(pulumi.StringPtrOutput)
}

// Secret space path for UserPassword auth type
func (o HarRegistryConfigAuthOutput) SecretSpacePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.SecretSpacePath }).(pulumi.StringPtrOutput)
}

// User name for UserPassword auth type
func (o HarRegistryConfigAuthOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HarRegistryConfigAuth) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type HarRegistryConfigAuthArrayOutput struct{ *pulumi.OutputState }

func (HarRegistryConfigAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HarRegistryConfigAuth)(nil)).Elem()
}

func (o HarRegistryConfigAuthArrayOutput) ToHarRegistryConfigAuthArrayOutput() HarRegistryConfigAuthArrayOutput {
	return o
}

func (o HarRegistryConfigAuthArrayOutput) ToHarRegistryConfigAuthArrayOutputWithContext(ctx context.Context) HarRegistryConfigAuthArrayOutput {
	return o
}

func (o HarRegistryConfigAuthArrayOutput) Index(i pulumi.IntInput) HarRegistryConfigAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HarRegistryConfigAuth {
		return vs[0].([]HarRegistryConfigAuth)[vs[1].(int)]
	}).(HarRegistryConfigAuthOutput)
}

type HelmConnectorCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// HelmConnectorCredentialsInput is an input type that accepts HelmConnectorCredentialsArgs and HelmConnectorCredentialsOutput values.
// You can construct a concrete instance of `HelmConnectorCredentialsInput` via:
//
//	HelmConnectorCredentialsArgs{...}
type HelmConnectorCredentialsInput interface {
	pulumi.Input

	ToHelmConnectorCredentialsOutput() HelmConnectorCredentialsOutput
	ToHelmConnectorCredentialsOutputWithContext(context.Context) HelmConnectorCredentialsOutput
}

type HelmConnectorCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (HelmConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmConnectorCredentials)(nil)).Elem()
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsOutput() HelmConnectorCredentialsOutput {
	return i.ToHelmConnectorCredentialsOutputWithContext(context.Background())
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsOutputWithContext(ctx context.Context) HelmConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmConnectorCredentialsOutput)
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return i.ToHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmConnectorCredentialsOutput).ToHelmConnectorCredentialsPtrOutputWithContext(ctx)
}

// HelmConnectorCredentialsPtrInput is an input type that accepts HelmConnectorCredentialsArgs, HelmConnectorCredentialsPtr and HelmConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `HelmConnectorCredentialsPtrInput` via:
//
//	        HelmConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type HelmConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput
	ToHelmConnectorCredentialsPtrOutputWithContext(context.Context) HelmConnectorCredentialsPtrOutput
}

type helmConnectorCredentialsPtrType HelmConnectorCredentialsArgs

func HelmConnectorCredentialsPtr(v *HelmConnectorCredentialsArgs) HelmConnectorCredentialsPtrInput {
	return (*helmConnectorCredentialsPtrType)(v)
}

func (*helmConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmConnectorCredentials)(nil)).Elem()
}

func (i *helmConnectorCredentialsPtrType) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return i.ToHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *helmConnectorCredentialsPtrType) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmConnectorCredentialsPtrOutput)
}

type HelmConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (HelmConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmConnectorCredentials)(nil)).Elem()
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsOutput() HelmConnectorCredentialsOutput {
	return o
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsOutputWithContext(ctx context.Context) HelmConnectorCredentialsOutput {
	return o
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return o.ToHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmConnectorCredentials) *HelmConnectorCredentials {
		return &v
	}).(HelmConnectorCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v HelmConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o HelmConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type HelmConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (HelmConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmConnectorCredentials)(nil)).Elem()
}

func (o HelmConnectorCredentialsPtrOutput) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return o
}

func (o HelmConnectorCredentialsPtrOutput) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return o
}

func (o HelmConnectorCredentialsPtrOutput) Elem() HelmConnectorCredentialsOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) HelmConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret HelmConnectorCredentials
		return ret
	}).(HelmConnectorCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o HelmConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type InfraVariableSetConnector struct {
	// Connector Ref is the reference to the connector
	ConnectorRef string `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type string `pulumi:"type"`
}

// InfraVariableSetConnectorInput is an input type that accepts InfraVariableSetConnectorArgs and InfraVariableSetConnectorOutput values.
// You can construct a concrete instance of `InfraVariableSetConnectorInput` via:
//
//	InfraVariableSetConnectorArgs{...}
type InfraVariableSetConnectorInput interface {
	pulumi.Input

	ToInfraVariableSetConnectorOutput() InfraVariableSetConnectorOutput
	ToInfraVariableSetConnectorOutputWithContext(context.Context) InfraVariableSetConnectorOutput
}

type InfraVariableSetConnectorArgs struct {
	// Connector Ref is the reference to the connector
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type pulumi.StringInput `pulumi:"type"`
}

func (InfraVariableSetConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetConnector)(nil)).Elem()
}

func (i InfraVariableSetConnectorArgs) ToInfraVariableSetConnectorOutput() InfraVariableSetConnectorOutput {
	return i.ToInfraVariableSetConnectorOutputWithContext(context.Background())
}

func (i InfraVariableSetConnectorArgs) ToInfraVariableSetConnectorOutputWithContext(ctx context.Context) InfraVariableSetConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetConnectorOutput)
}

// InfraVariableSetConnectorArrayInput is an input type that accepts InfraVariableSetConnectorArray and InfraVariableSetConnectorArrayOutput values.
// You can construct a concrete instance of `InfraVariableSetConnectorArrayInput` via:
//
//	InfraVariableSetConnectorArray{ InfraVariableSetConnectorArgs{...} }
type InfraVariableSetConnectorArrayInput interface {
	pulumi.Input

	ToInfraVariableSetConnectorArrayOutput() InfraVariableSetConnectorArrayOutput
	ToInfraVariableSetConnectorArrayOutputWithContext(context.Context) InfraVariableSetConnectorArrayOutput
}

type InfraVariableSetConnectorArray []InfraVariableSetConnectorInput

func (InfraVariableSetConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetConnector)(nil)).Elem()
}

func (i InfraVariableSetConnectorArray) ToInfraVariableSetConnectorArrayOutput() InfraVariableSetConnectorArrayOutput {
	return i.ToInfraVariableSetConnectorArrayOutputWithContext(context.Background())
}

func (i InfraVariableSetConnectorArray) ToInfraVariableSetConnectorArrayOutputWithContext(ctx context.Context) InfraVariableSetConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetConnectorArrayOutput)
}

type InfraVariableSetConnectorOutput struct{ *pulumi.OutputState }

func (InfraVariableSetConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetConnector)(nil)).Elem()
}

func (o InfraVariableSetConnectorOutput) ToInfraVariableSetConnectorOutput() InfraVariableSetConnectorOutput {
	return o
}

func (o InfraVariableSetConnectorOutput) ToInfraVariableSetConnectorOutputWithContext(ctx context.Context) InfraVariableSetConnectorOutput {
	return o
}

// Connector Ref is the reference to the connector
func (o InfraVariableSetConnectorOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetConnector) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// Type is the connector type of the connector. Supported types: aws, azure, gcp
func (o InfraVariableSetConnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetConnector) string { return v.Type }).(pulumi.StringOutput)
}

type InfraVariableSetConnectorArrayOutput struct{ *pulumi.OutputState }

func (InfraVariableSetConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetConnector)(nil)).Elem()
}

func (o InfraVariableSetConnectorArrayOutput) ToInfraVariableSetConnectorArrayOutput() InfraVariableSetConnectorArrayOutput {
	return o
}

func (o InfraVariableSetConnectorArrayOutput) ToInfraVariableSetConnectorArrayOutputWithContext(ctx context.Context) InfraVariableSetConnectorArrayOutput {
	return o
}

func (o InfraVariableSetConnectorArrayOutput) Index(i pulumi.IntInput) InfraVariableSetConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfraVariableSetConnector {
		return vs[0].([]InfraVariableSetConnector)[vs[1].(int)]
	}).(InfraVariableSetConnectorOutput)
}

type InfraVariableSetEnvironmentVariable struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key string `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType string `pulumi:"valueType"`
}

// InfraVariableSetEnvironmentVariableInput is an input type that accepts InfraVariableSetEnvironmentVariableArgs and InfraVariableSetEnvironmentVariableOutput values.
// You can construct a concrete instance of `InfraVariableSetEnvironmentVariableInput` via:
//
//	InfraVariableSetEnvironmentVariableArgs{...}
type InfraVariableSetEnvironmentVariableInput interface {
	pulumi.Input

	ToInfraVariableSetEnvironmentVariableOutput() InfraVariableSetEnvironmentVariableOutput
	ToInfraVariableSetEnvironmentVariableOutputWithContext(context.Context) InfraVariableSetEnvironmentVariableOutput
}

type InfraVariableSetEnvironmentVariableArgs struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key pulumi.StringInput `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (InfraVariableSetEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (i InfraVariableSetEnvironmentVariableArgs) ToInfraVariableSetEnvironmentVariableOutput() InfraVariableSetEnvironmentVariableOutput {
	return i.ToInfraVariableSetEnvironmentVariableOutputWithContext(context.Background())
}

func (i InfraVariableSetEnvironmentVariableArgs) ToInfraVariableSetEnvironmentVariableOutputWithContext(ctx context.Context) InfraVariableSetEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetEnvironmentVariableOutput)
}

// InfraVariableSetEnvironmentVariableArrayInput is an input type that accepts InfraVariableSetEnvironmentVariableArray and InfraVariableSetEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `InfraVariableSetEnvironmentVariableArrayInput` via:
//
//	InfraVariableSetEnvironmentVariableArray{ InfraVariableSetEnvironmentVariableArgs{...} }
type InfraVariableSetEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToInfraVariableSetEnvironmentVariableArrayOutput() InfraVariableSetEnvironmentVariableArrayOutput
	ToInfraVariableSetEnvironmentVariableArrayOutputWithContext(context.Context) InfraVariableSetEnvironmentVariableArrayOutput
}

type InfraVariableSetEnvironmentVariableArray []InfraVariableSetEnvironmentVariableInput

func (InfraVariableSetEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (i InfraVariableSetEnvironmentVariableArray) ToInfraVariableSetEnvironmentVariableArrayOutput() InfraVariableSetEnvironmentVariableArrayOutput {
	return i.ToInfraVariableSetEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i InfraVariableSetEnvironmentVariableArray) ToInfraVariableSetEnvironmentVariableArrayOutputWithContext(ctx context.Context) InfraVariableSetEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetEnvironmentVariableArrayOutput)
}

type InfraVariableSetEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (InfraVariableSetEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (o InfraVariableSetEnvironmentVariableOutput) ToInfraVariableSetEnvironmentVariableOutput() InfraVariableSetEnvironmentVariableOutput {
	return o
}

func (o InfraVariableSetEnvironmentVariableOutput) ToInfraVariableSetEnvironmentVariableOutputWithContext(ctx context.Context) InfraVariableSetEnvironmentVariableOutput {
	return o
}

// Key is the identifier for the variable. Must be unique within the Variable Set.
func (o InfraVariableSetEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
func (o InfraVariableSetEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable. Currently we support string and secret.
func (o InfraVariableSetEnvironmentVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetEnvironmentVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type InfraVariableSetEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (InfraVariableSetEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (o InfraVariableSetEnvironmentVariableArrayOutput) ToInfraVariableSetEnvironmentVariableArrayOutput() InfraVariableSetEnvironmentVariableArrayOutput {
	return o
}

func (o InfraVariableSetEnvironmentVariableArrayOutput) ToInfraVariableSetEnvironmentVariableArrayOutputWithContext(ctx context.Context) InfraVariableSetEnvironmentVariableArrayOutput {
	return o
}

func (o InfraVariableSetEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) InfraVariableSetEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfraVariableSetEnvironmentVariable {
		return vs[0].([]InfraVariableSetEnvironmentVariable)[vs[1].(int)]
	}).(InfraVariableSetEnvironmentVariableOutput)
}

type InfraVariableSetTerraformVariable struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key string `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType string `pulumi:"valueType"`
}

// InfraVariableSetTerraformVariableInput is an input type that accepts InfraVariableSetTerraformVariableArgs and InfraVariableSetTerraformVariableOutput values.
// You can construct a concrete instance of `InfraVariableSetTerraformVariableInput` via:
//
//	InfraVariableSetTerraformVariableArgs{...}
type InfraVariableSetTerraformVariableInput interface {
	pulumi.Input

	ToInfraVariableSetTerraformVariableOutput() InfraVariableSetTerraformVariableOutput
	ToInfraVariableSetTerraformVariableOutputWithContext(context.Context) InfraVariableSetTerraformVariableOutput
}

type InfraVariableSetTerraformVariableArgs struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key pulumi.StringInput `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (InfraVariableSetTerraformVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetTerraformVariable)(nil)).Elem()
}

func (i InfraVariableSetTerraformVariableArgs) ToInfraVariableSetTerraformVariableOutput() InfraVariableSetTerraformVariableOutput {
	return i.ToInfraVariableSetTerraformVariableOutputWithContext(context.Background())
}

func (i InfraVariableSetTerraformVariableArgs) ToInfraVariableSetTerraformVariableOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetTerraformVariableOutput)
}

// InfraVariableSetTerraformVariableArrayInput is an input type that accepts InfraVariableSetTerraformVariableArray and InfraVariableSetTerraformVariableArrayOutput values.
// You can construct a concrete instance of `InfraVariableSetTerraformVariableArrayInput` via:
//
//	InfraVariableSetTerraformVariableArray{ InfraVariableSetTerraformVariableArgs{...} }
type InfraVariableSetTerraformVariableArrayInput interface {
	pulumi.Input

	ToInfraVariableSetTerraformVariableArrayOutput() InfraVariableSetTerraformVariableArrayOutput
	ToInfraVariableSetTerraformVariableArrayOutputWithContext(context.Context) InfraVariableSetTerraformVariableArrayOutput
}

type InfraVariableSetTerraformVariableArray []InfraVariableSetTerraformVariableInput

func (InfraVariableSetTerraformVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetTerraformVariable)(nil)).Elem()
}

func (i InfraVariableSetTerraformVariableArray) ToInfraVariableSetTerraformVariableArrayOutput() InfraVariableSetTerraformVariableArrayOutput {
	return i.ToInfraVariableSetTerraformVariableArrayOutputWithContext(context.Background())
}

func (i InfraVariableSetTerraformVariableArray) ToInfraVariableSetTerraformVariableArrayOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetTerraformVariableArrayOutput)
}

type InfraVariableSetTerraformVariableOutput struct{ *pulumi.OutputState }

func (InfraVariableSetTerraformVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetTerraformVariable)(nil)).Elem()
}

func (o InfraVariableSetTerraformVariableOutput) ToInfraVariableSetTerraformVariableOutput() InfraVariableSetTerraformVariableOutput {
	return o
}

func (o InfraVariableSetTerraformVariableOutput) ToInfraVariableSetTerraformVariableOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableOutput {
	return o
}

// Key is the identifier for the variable. Must be unique within the Variable Set.
func (o InfraVariableSetTerraformVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
func (o InfraVariableSetTerraformVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable. Currently we support string and secret.
func (o InfraVariableSetTerraformVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type InfraVariableSetTerraformVariableArrayOutput struct{ *pulumi.OutputState }

func (InfraVariableSetTerraformVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetTerraformVariable)(nil)).Elem()
}

func (o InfraVariableSetTerraformVariableArrayOutput) ToInfraVariableSetTerraformVariableArrayOutput() InfraVariableSetTerraformVariableArrayOutput {
	return o
}

func (o InfraVariableSetTerraformVariableArrayOutput) ToInfraVariableSetTerraformVariableArrayOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableArrayOutput {
	return o
}

func (o InfraVariableSetTerraformVariableArrayOutput) Index(i pulumi.IntInput) InfraVariableSetTerraformVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfraVariableSetTerraformVariable {
		return vs[0].([]InfraVariableSetTerraformVariable)[vs[1].(int)]
	}).(InfraVariableSetTerraformVariableOutput)
}

type InfraVariableSetTerraformVariableFile struct {
	// Repository is the name of the repository to fetch the code from.
	Repository string `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch *string `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit *string `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector string `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath *string `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha *string `pulumi:"repositorySha"`
}

// InfraVariableSetTerraformVariableFileInput is an input type that accepts InfraVariableSetTerraformVariableFileArgs and InfraVariableSetTerraformVariableFileOutput values.
// You can construct a concrete instance of `InfraVariableSetTerraformVariableFileInput` via:
//
//	InfraVariableSetTerraformVariableFileArgs{...}
type InfraVariableSetTerraformVariableFileInput interface {
	pulumi.Input

	ToInfraVariableSetTerraformVariableFileOutput() InfraVariableSetTerraformVariableFileOutput
	ToInfraVariableSetTerraformVariableFileOutputWithContext(context.Context) InfraVariableSetTerraformVariableFileOutput
}

type InfraVariableSetTerraformVariableFileArgs struct {
	// Repository is the name of the repository to fetch the code from.
	Repository pulumi.StringInput `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch pulumi.StringPtrInput `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit pulumi.StringPtrInput `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector pulumi.StringInput `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath pulumi.StringPtrInput `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha pulumi.StringPtrInput `pulumi:"repositorySha"`
}

func (InfraVariableSetTerraformVariableFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (i InfraVariableSetTerraformVariableFileArgs) ToInfraVariableSetTerraformVariableFileOutput() InfraVariableSetTerraformVariableFileOutput {
	return i.ToInfraVariableSetTerraformVariableFileOutputWithContext(context.Background())
}

func (i InfraVariableSetTerraformVariableFileArgs) ToInfraVariableSetTerraformVariableFileOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetTerraformVariableFileOutput)
}

// InfraVariableSetTerraformVariableFileArrayInput is an input type that accepts InfraVariableSetTerraformVariableFileArray and InfraVariableSetTerraformVariableFileArrayOutput values.
// You can construct a concrete instance of `InfraVariableSetTerraformVariableFileArrayInput` via:
//
//	InfraVariableSetTerraformVariableFileArray{ InfraVariableSetTerraformVariableFileArgs{...} }
type InfraVariableSetTerraformVariableFileArrayInput interface {
	pulumi.Input

	ToInfraVariableSetTerraformVariableFileArrayOutput() InfraVariableSetTerraformVariableFileArrayOutput
	ToInfraVariableSetTerraformVariableFileArrayOutputWithContext(context.Context) InfraVariableSetTerraformVariableFileArrayOutput
}

type InfraVariableSetTerraformVariableFileArray []InfraVariableSetTerraformVariableFileInput

func (InfraVariableSetTerraformVariableFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (i InfraVariableSetTerraformVariableFileArray) ToInfraVariableSetTerraformVariableFileArrayOutput() InfraVariableSetTerraformVariableFileArrayOutput {
	return i.ToInfraVariableSetTerraformVariableFileArrayOutputWithContext(context.Background())
}

func (i InfraVariableSetTerraformVariableFileArray) ToInfraVariableSetTerraformVariableFileArrayOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraVariableSetTerraformVariableFileArrayOutput)
}

type InfraVariableSetTerraformVariableFileOutput struct{ *pulumi.OutputState }

func (InfraVariableSetTerraformVariableFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (o InfraVariableSetTerraformVariableFileOutput) ToInfraVariableSetTerraformVariableFileOutput() InfraVariableSetTerraformVariableFileOutput {
	return o
}

func (o InfraVariableSetTerraformVariableFileOutput) ToInfraVariableSetTerraformVariableFileOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableFileOutput {
	return o
}

// Repository is the name of the repository to fetch the code from.
func (o InfraVariableSetTerraformVariableFileOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariableFile) string { return v.Repository }).(pulumi.StringOutput)
}

// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
func (o InfraVariableSetTerraformVariableFileOutput) RepositoryBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariableFile) *string { return v.RepositoryBranch }).(pulumi.StringPtrOutput)
}

// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
func (o InfraVariableSetTerraformVariableFileOutput) RepositoryCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariableFile) *string { return v.RepositoryCommit }).(pulumi.StringPtrOutput)
}

// Repository connector is the reference to the connector used to fetch the variables.
func (o InfraVariableSetTerraformVariableFileOutput) RepositoryConnector() pulumi.StringOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariableFile) string { return v.RepositoryConnector }).(pulumi.StringOutput)
}

// Repository path is the path in which the variables reside.
func (o InfraVariableSetTerraformVariableFileOutput) RepositoryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariableFile) *string { return v.RepositoryPath }).(pulumi.StringPtrOutput)
}

// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
func (o InfraVariableSetTerraformVariableFileOutput) RepositorySha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfraVariableSetTerraformVariableFile) *string { return v.RepositorySha }).(pulumi.StringPtrOutput)
}

type InfraVariableSetTerraformVariableFileArrayOutput struct{ *pulumi.OutputState }

func (InfraVariableSetTerraformVariableFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (o InfraVariableSetTerraformVariableFileArrayOutput) ToInfraVariableSetTerraformVariableFileArrayOutput() InfraVariableSetTerraformVariableFileArrayOutput {
	return o
}

func (o InfraVariableSetTerraformVariableFileArrayOutput) ToInfraVariableSetTerraformVariableFileArrayOutputWithContext(ctx context.Context) InfraVariableSetTerraformVariableFileArrayOutput {
	return o
}

func (o InfraVariableSetTerraformVariableFileArrayOutput) Index(i pulumi.IntInput) InfraVariableSetTerraformVariableFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfraVariableSetTerraformVariableFile {
		return vs[0].([]InfraVariableSetTerraformVariableFile)[vs[1].(int)]
	}).(InfraVariableSetTerraformVariableFileOutput)
}

type InfrastructureGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	Branch *string `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// import infrastructure from git
	ImportFromGit *bool `pulumi:"importFromGit"`
	// force import infrastructure from remote even if same file path already exist
	IsForceImport *bool `pulumi:"isForceImport"`
	// If the gitProvider is HarnessCode
	IsHarnesscodeRepo *bool `pulumi:"isHarnesscodeRepo"`
	// If a new branch creation is requested.
	IsNewBranch *bool `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating infrastructure.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating infrastructure.
	LastObjectId *string `pulumi:"lastObjectId"`
	// If the Entity is to be fetched from cache
	LoadFromCache *string `pulumi:"loadFromCache"`
	// If the Entity is to be fetched from fallbackBranch
	LoadFromFallbackBranch *bool `pulumi:"loadFromFallbackBranch"`
	// Identifier of the Harness Connector used for CRUD operations on the Parent Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ParentEntityConnectorRef *string `pulumi:"parentEntityConnectorRef"`
	// Name of the repository where parent entity lies.
	ParentEntityRepoName *string `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// InfrastructureGitDetailsInput is an input type that accepts InfrastructureGitDetailsArgs and InfrastructureGitDetailsOutput values.
// You can construct a concrete instance of `InfrastructureGitDetailsInput` via:
//
//	InfrastructureGitDetailsArgs{...}
type InfrastructureGitDetailsInput interface {
	pulumi.Input

	ToInfrastructureGitDetailsOutput() InfrastructureGitDetailsOutput
	ToInfrastructureGitDetailsOutputWithContext(context.Context) InfrastructureGitDetailsOutput
}

type InfrastructureGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// import infrastructure from git
	ImportFromGit pulumi.BoolPtrInput `pulumi:"importFromGit"`
	// force import infrastructure from remote even if same file path already exist
	IsForceImport pulumi.BoolPtrInput `pulumi:"isForceImport"`
	// If the gitProvider is HarnessCode
	IsHarnesscodeRepo pulumi.BoolPtrInput `pulumi:"isHarnesscodeRepo"`
	// If a new branch creation is requested.
	IsNewBranch pulumi.BoolPtrInput `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating infrastructure.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating infrastructure.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// If the Entity is to be fetched from cache
	LoadFromCache pulumi.StringPtrInput `pulumi:"loadFromCache"`
	// If the Entity is to be fetched from fallbackBranch
	LoadFromFallbackBranch pulumi.BoolPtrInput `pulumi:"loadFromFallbackBranch"`
	// Identifier of the Harness Connector used for CRUD operations on the Parent Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ParentEntityConnectorRef pulumi.StringPtrInput `pulumi:"parentEntityConnectorRef"`
	// Name of the repository where parent entity lies.
	ParentEntityRepoName pulumi.StringPtrInput `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (InfrastructureGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureGitDetails)(nil)).Elem()
}

func (i InfrastructureGitDetailsArgs) ToInfrastructureGitDetailsOutput() InfrastructureGitDetailsOutput {
	return i.ToInfrastructureGitDetailsOutputWithContext(context.Background())
}

func (i InfrastructureGitDetailsArgs) ToInfrastructureGitDetailsOutputWithContext(ctx context.Context) InfrastructureGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureGitDetailsOutput)
}

func (i InfrastructureGitDetailsArgs) ToInfrastructureGitDetailsPtrOutput() InfrastructureGitDetailsPtrOutput {
	return i.ToInfrastructureGitDetailsPtrOutputWithContext(context.Background())
}

func (i InfrastructureGitDetailsArgs) ToInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) InfrastructureGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureGitDetailsOutput).ToInfrastructureGitDetailsPtrOutputWithContext(ctx)
}

// InfrastructureGitDetailsPtrInput is an input type that accepts InfrastructureGitDetailsArgs, InfrastructureGitDetailsPtr and InfrastructureGitDetailsPtrOutput values.
// You can construct a concrete instance of `InfrastructureGitDetailsPtrInput` via:
//
//	        InfrastructureGitDetailsArgs{...}
//
//	or:
//
//	        nil
type InfrastructureGitDetailsPtrInput interface {
	pulumi.Input

	ToInfrastructureGitDetailsPtrOutput() InfrastructureGitDetailsPtrOutput
	ToInfrastructureGitDetailsPtrOutputWithContext(context.Context) InfrastructureGitDetailsPtrOutput
}

type infrastructureGitDetailsPtrType InfrastructureGitDetailsArgs

func InfrastructureGitDetailsPtr(v *InfrastructureGitDetailsArgs) InfrastructureGitDetailsPtrInput {
	return (*infrastructureGitDetailsPtrType)(v)
}

func (*infrastructureGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureGitDetails)(nil)).Elem()
}

func (i *infrastructureGitDetailsPtrType) ToInfrastructureGitDetailsPtrOutput() InfrastructureGitDetailsPtrOutput {
	return i.ToInfrastructureGitDetailsPtrOutputWithContext(context.Background())
}

func (i *infrastructureGitDetailsPtrType) ToInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) InfrastructureGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureGitDetailsPtrOutput)
}

type InfrastructureGitDetailsOutput struct{ *pulumi.OutputState }

func (InfrastructureGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureGitDetails)(nil)).Elem()
}

func (o InfrastructureGitDetailsOutput) ToInfrastructureGitDetailsOutput() InfrastructureGitDetailsOutput {
	return o
}

func (o InfrastructureGitDetailsOutput) ToInfrastructureGitDetailsOutputWithContext(ctx context.Context) InfrastructureGitDetailsOutput {
	return o
}

func (o InfrastructureGitDetailsOutput) ToInfrastructureGitDetailsPtrOutput() InfrastructureGitDetailsPtrOutput {
	return o.ToInfrastructureGitDetailsPtrOutputWithContext(context.Background())
}

func (o InfrastructureGitDetailsOutput) ToInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) InfrastructureGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureGitDetails) *InfrastructureGitDetails {
		return &v
	}).(InfrastructureGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o InfrastructureGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o InfrastructureGitDetailsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o InfrastructureGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InfrastructureGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InfrastructureGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// import infrastructure from git
func (o InfrastructureGitDetailsOutput) ImportFromGit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *bool { return v.ImportFromGit }).(pulumi.BoolPtrOutput)
}

// force import infrastructure from remote even if same file path already exist
func (o InfrastructureGitDetailsOutput) IsForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *bool { return v.IsForceImport }).(pulumi.BoolPtrOutput)
}

// If the gitProvider is HarnessCode
func (o InfrastructureGitDetailsOutput) IsHarnesscodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *bool { return v.IsHarnesscodeRepo }).(pulumi.BoolPtrOutput)
}

// If a new branch creation is requested.
func (o InfrastructureGitDetailsOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *bool { return v.IsNewBranch }).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating infrastructure.
func (o InfrastructureGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating infrastructure.
func (o InfrastructureGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// If the Entity is to be fetched from cache
func (o InfrastructureGitDetailsOutput) LoadFromCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.LoadFromCache }).(pulumi.StringPtrOutput)
}

// If the Entity is to be fetched from fallbackBranch
func (o InfrastructureGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *bool { return v.LoadFromFallbackBranch }).(pulumi.BoolPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Parent Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InfrastructureGitDetailsOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.ParentEntityConnectorRef }).(pulumi.StringPtrOutput)
}

// Name of the repository where parent entity lies.
func (o InfrastructureGitDetailsOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.ParentEntityRepoName }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o InfrastructureGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o InfrastructureGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type InfrastructureGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureGitDetails)(nil)).Elem()
}

func (o InfrastructureGitDetailsPtrOutput) ToInfrastructureGitDetailsPtrOutput() InfrastructureGitDetailsPtrOutput {
	return o
}

func (o InfrastructureGitDetailsPtrOutput) ToInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) InfrastructureGitDetailsPtrOutput {
	return o
}

func (o InfrastructureGitDetailsPtrOutput) Elem() InfrastructureGitDetailsOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) InfrastructureGitDetails {
		if v != nil {
			return *v
		}
		var ret InfrastructureGitDetails
		return ret
	}).(InfrastructureGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o InfrastructureGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o InfrastructureGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o InfrastructureGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InfrastructureGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InfrastructureGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// import infrastructure from git
func (o InfrastructureGitDetailsPtrOutput) ImportFromGit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.ImportFromGit
	}).(pulumi.BoolPtrOutput)
}

// force import infrastructure from remote even if same file path already exist
func (o InfrastructureGitDetailsPtrOutput) IsForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsForceImport
	}).(pulumi.BoolPtrOutput)
}

// If the gitProvider is HarnessCode
func (o InfrastructureGitDetailsPtrOutput) IsHarnesscodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsHarnesscodeRepo
	}).(pulumi.BoolPtrOutput)
}

// If a new branch creation is requested.
func (o InfrastructureGitDetailsPtrOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsNewBranch
	}).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating infrastructure.
func (o InfrastructureGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating infrastructure.
func (o InfrastructureGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// If the Entity is to be fetched from cache
func (o InfrastructureGitDetailsPtrOutput) LoadFromCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LoadFromCache
	}).(pulumi.StringPtrOutput)
}

// If the Entity is to be fetched from fallbackBranch
func (o InfrastructureGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Parent Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InfrastructureGitDetailsPtrOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ParentEntityConnectorRef
	}).(pulumi.StringPtrOutput)
}

// Name of the repository where parent entity lies.
func (o InfrastructureGitDetailsPtrOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ParentEntityRepoName
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o InfrastructureGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o InfrastructureGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type InputSetGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// If the repo is harness code.
	IsHarnessCodeRepo *bool `pulumi:"isHarnessCodeRepo"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ParentEntityConnectorRef *string `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName *string `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// InputSetGitDetailsInput is an input type that accepts InputSetGitDetailsArgs and InputSetGitDetailsOutput values.
// You can construct a concrete instance of `InputSetGitDetailsInput` via:
//
//	InputSetGitDetailsArgs{...}
type InputSetGitDetailsInput interface {
	pulumi.Input

	ToInputSetGitDetailsOutput() InputSetGitDetailsOutput
	ToInputSetGitDetailsOutputWithContext(context.Context) InputSetGitDetailsOutput
}

type InputSetGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// If the repo is harness code.
	IsHarnessCodeRepo pulumi.BoolPtrInput `pulumi:"isHarnessCodeRepo"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ParentEntityConnectorRef pulumi.StringPtrInput `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName pulumi.StringPtrInput `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (InputSetGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetGitDetails)(nil)).Elem()
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsOutput() InputSetGitDetailsOutput {
	return i.ToInputSetGitDetailsOutputWithContext(context.Background())
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsOutputWithContext(ctx context.Context) InputSetGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitDetailsOutput)
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return i.ToInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitDetailsOutput).ToInputSetGitDetailsPtrOutputWithContext(ctx)
}

// InputSetGitDetailsPtrInput is an input type that accepts InputSetGitDetailsArgs, InputSetGitDetailsPtr and InputSetGitDetailsPtrOutput values.
// You can construct a concrete instance of `InputSetGitDetailsPtrInput` via:
//
//	        InputSetGitDetailsArgs{...}
//
//	or:
//
//	        nil
type InputSetGitDetailsPtrInput interface {
	pulumi.Input

	ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput
	ToInputSetGitDetailsPtrOutputWithContext(context.Context) InputSetGitDetailsPtrOutput
}

type inputSetGitDetailsPtrType InputSetGitDetailsArgs

func InputSetGitDetailsPtr(v *InputSetGitDetailsArgs) InputSetGitDetailsPtrInput {
	return (*inputSetGitDetailsPtrType)(v)
}

func (*inputSetGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetGitDetails)(nil)).Elem()
}

func (i *inputSetGitDetailsPtrType) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return i.ToInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i *inputSetGitDetailsPtrType) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitDetailsPtrOutput)
}

type InputSetGitDetailsOutput struct{ *pulumi.OutputState }

func (InputSetGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetGitDetails)(nil)).Elem()
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsOutput() InputSetGitDetailsOutput {
	return o
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsOutputWithContext(ctx context.Context) InputSetGitDetailsOutput {
	return o
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return o.ToInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputSetGitDetails) *InputSetGitDetails {
		return &v
	}).(InputSetGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o InputSetGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o InputSetGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o InputSetGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InputSetGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// If the repo is harness code.
func (o InputSetGitDetailsOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *bool { return v.IsHarnessCodeRepo }).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.ParentEntityConnectorRef }).(pulumi.StringPtrOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o InputSetGitDetailsOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.ParentEntityRepoName }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o InputSetGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o InputSetGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type InputSetGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (InputSetGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetGitDetails)(nil)).Elem()
}

func (o InputSetGitDetailsPtrOutput) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return o
}

func (o InputSetGitDetailsPtrOutput) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return o
}

func (o InputSetGitDetailsPtrOutput) Elem() InputSetGitDetailsOutput {
	return o.ApplyT(func(v *InputSetGitDetails) InputSetGitDetails {
		if v != nil {
			return *v
		}
		var ret InputSetGitDetails
		return ret
	}).(InputSetGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o InputSetGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o InputSetGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o InputSetGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InputSetGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// If the repo is harness code.
func (o InputSetGitDetailsPtrOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsHarnessCodeRepo
	}).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsPtrOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ParentEntityConnectorRef
	}).(pulumi.StringPtrOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o InputSetGitDetailsPtrOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ParentEntityRepoName
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o InputSetGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o InputSetGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type InputSetGitImportInfo struct {
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath      *string `pulumi:"filePath"`
	IsForceImport *bool   `pulumi:"isForceImport"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
}

// InputSetGitImportInfoInput is an input type that accepts InputSetGitImportInfoArgs and InputSetGitImportInfoOutput values.
// You can construct a concrete instance of `InputSetGitImportInfoInput` via:
//
//	InputSetGitImportInfoArgs{...}
type InputSetGitImportInfoInput interface {
	pulumi.Input

	ToInputSetGitImportInfoOutput() InputSetGitImportInfoOutput
	ToInputSetGitImportInfoOutputWithContext(context.Context) InputSetGitImportInfoOutput
}

type InputSetGitImportInfoArgs struct {
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath      pulumi.StringPtrInput `pulumi:"filePath"`
	IsForceImport pulumi.BoolPtrInput   `pulumi:"isForceImport"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
}

func (InputSetGitImportInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetGitImportInfo)(nil)).Elem()
}

func (i InputSetGitImportInfoArgs) ToInputSetGitImportInfoOutput() InputSetGitImportInfoOutput {
	return i.ToInputSetGitImportInfoOutputWithContext(context.Background())
}

func (i InputSetGitImportInfoArgs) ToInputSetGitImportInfoOutputWithContext(ctx context.Context) InputSetGitImportInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitImportInfoOutput)
}

func (i InputSetGitImportInfoArgs) ToInputSetGitImportInfoPtrOutput() InputSetGitImportInfoPtrOutput {
	return i.ToInputSetGitImportInfoPtrOutputWithContext(context.Background())
}

func (i InputSetGitImportInfoArgs) ToInputSetGitImportInfoPtrOutputWithContext(ctx context.Context) InputSetGitImportInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitImportInfoOutput).ToInputSetGitImportInfoPtrOutputWithContext(ctx)
}

// InputSetGitImportInfoPtrInput is an input type that accepts InputSetGitImportInfoArgs, InputSetGitImportInfoPtr and InputSetGitImportInfoPtrOutput values.
// You can construct a concrete instance of `InputSetGitImportInfoPtrInput` via:
//
//	        InputSetGitImportInfoArgs{...}
//
//	or:
//
//	        nil
type InputSetGitImportInfoPtrInput interface {
	pulumi.Input

	ToInputSetGitImportInfoPtrOutput() InputSetGitImportInfoPtrOutput
	ToInputSetGitImportInfoPtrOutputWithContext(context.Context) InputSetGitImportInfoPtrOutput
}

type inputSetGitImportInfoPtrType InputSetGitImportInfoArgs

func InputSetGitImportInfoPtr(v *InputSetGitImportInfoArgs) InputSetGitImportInfoPtrInput {
	return (*inputSetGitImportInfoPtrType)(v)
}

func (*inputSetGitImportInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetGitImportInfo)(nil)).Elem()
}

func (i *inputSetGitImportInfoPtrType) ToInputSetGitImportInfoPtrOutput() InputSetGitImportInfoPtrOutput {
	return i.ToInputSetGitImportInfoPtrOutputWithContext(context.Background())
}

func (i *inputSetGitImportInfoPtrType) ToInputSetGitImportInfoPtrOutputWithContext(ctx context.Context) InputSetGitImportInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitImportInfoPtrOutput)
}

type InputSetGitImportInfoOutput struct{ *pulumi.OutputState }

func (InputSetGitImportInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetGitImportInfo)(nil)).Elem()
}

func (o InputSetGitImportInfoOutput) ToInputSetGitImportInfoOutput() InputSetGitImportInfoOutput {
	return o
}

func (o InputSetGitImportInfoOutput) ToInputSetGitImportInfoOutputWithContext(ctx context.Context) InputSetGitImportInfoOutput {
	return o
}

func (o InputSetGitImportInfoOutput) ToInputSetGitImportInfoPtrOutput() InputSetGitImportInfoPtrOutput {
	return o.ToInputSetGitImportInfoPtrOutputWithContext(context.Background())
}

func (o InputSetGitImportInfoOutput) ToInputSetGitImportInfoPtrOutputWithContext(ctx context.Context) InputSetGitImportInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputSetGitImportInfo) *InputSetGitImportInfo {
		return &v
	}).(InputSetGitImportInfoPtrOutput)
}

// Name of the branch.
func (o InputSetGitImportInfoOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitImportInfo) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitImportInfoOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitImportInfo) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InputSetGitImportInfoOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitImportInfo) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

func (o InputSetGitImportInfoOutput) IsForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InputSetGitImportInfo) *bool { return v.IsForceImport }).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o InputSetGitImportInfoOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitImportInfo) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

type InputSetGitImportInfoPtrOutput struct{ *pulumi.OutputState }

func (InputSetGitImportInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetGitImportInfo)(nil)).Elem()
}

func (o InputSetGitImportInfoPtrOutput) ToInputSetGitImportInfoPtrOutput() InputSetGitImportInfoPtrOutput {
	return o
}

func (o InputSetGitImportInfoPtrOutput) ToInputSetGitImportInfoPtrOutputWithContext(ctx context.Context) InputSetGitImportInfoPtrOutput {
	return o
}

func (o InputSetGitImportInfoPtrOutput) Elem() InputSetGitImportInfoOutput {
	return o.ApplyT(func(v *InputSetGitImportInfo) InputSetGitImportInfo {
		if v != nil {
			return *v
		}
		var ret InputSetGitImportInfo
		return ret
	}).(InputSetGitImportInfoOutput)
}

// Name of the branch.
func (o InputSetGitImportInfoPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitImportInfoPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InputSetGitImportInfoPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

func (o InputSetGitImportInfoPtrOutput) IsForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InputSetGitImportInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsForceImport
	}).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o InputSetGitImportInfoPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

type InputSetInputSetImportRequest struct {
	// Description of the input set.
	InputSetDescription *string `pulumi:"inputSetDescription"`
	// Name of the input set.
	InputSetName *string `pulumi:"inputSetName"`
}

// InputSetInputSetImportRequestInput is an input type that accepts InputSetInputSetImportRequestArgs and InputSetInputSetImportRequestOutput values.
// You can construct a concrete instance of `InputSetInputSetImportRequestInput` via:
//
//	InputSetInputSetImportRequestArgs{...}
type InputSetInputSetImportRequestInput interface {
	pulumi.Input

	ToInputSetInputSetImportRequestOutput() InputSetInputSetImportRequestOutput
	ToInputSetInputSetImportRequestOutputWithContext(context.Context) InputSetInputSetImportRequestOutput
}

type InputSetInputSetImportRequestArgs struct {
	// Description of the input set.
	InputSetDescription pulumi.StringPtrInput `pulumi:"inputSetDescription"`
	// Name of the input set.
	InputSetName pulumi.StringPtrInput `pulumi:"inputSetName"`
}

func (InputSetInputSetImportRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetInputSetImportRequest)(nil)).Elem()
}

func (i InputSetInputSetImportRequestArgs) ToInputSetInputSetImportRequestOutput() InputSetInputSetImportRequestOutput {
	return i.ToInputSetInputSetImportRequestOutputWithContext(context.Background())
}

func (i InputSetInputSetImportRequestArgs) ToInputSetInputSetImportRequestOutputWithContext(ctx context.Context) InputSetInputSetImportRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetInputSetImportRequestOutput)
}

func (i InputSetInputSetImportRequestArgs) ToInputSetInputSetImportRequestPtrOutput() InputSetInputSetImportRequestPtrOutput {
	return i.ToInputSetInputSetImportRequestPtrOutputWithContext(context.Background())
}

func (i InputSetInputSetImportRequestArgs) ToInputSetInputSetImportRequestPtrOutputWithContext(ctx context.Context) InputSetInputSetImportRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetInputSetImportRequestOutput).ToInputSetInputSetImportRequestPtrOutputWithContext(ctx)
}

// InputSetInputSetImportRequestPtrInput is an input type that accepts InputSetInputSetImportRequestArgs, InputSetInputSetImportRequestPtr and InputSetInputSetImportRequestPtrOutput values.
// You can construct a concrete instance of `InputSetInputSetImportRequestPtrInput` via:
//
//	        InputSetInputSetImportRequestArgs{...}
//
//	or:
//
//	        nil
type InputSetInputSetImportRequestPtrInput interface {
	pulumi.Input

	ToInputSetInputSetImportRequestPtrOutput() InputSetInputSetImportRequestPtrOutput
	ToInputSetInputSetImportRequestPtrOutputWithContext(context.Context) InputSetInputSetImportRequestPtrOutput
}

type inputSetInputSetImportRequestPtrType InputSetInputSetImportRequestArgs

func InputSetInputSetImportRequestPtr(v *InputSetInputSetImportRequestArgs) InputSetInputSetImportRequestPtrInput {
	return (*inputSetInputSetImportRequestPtrType)(v)
}

func (*inputSetInputSetImportRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetInputSetImportRequest)(nil)).Elem()
}

func (i *inputSetInputSetImportRequestPtrType) ToInputSetInputSetImportRequestPtrOutput() InputSetInputSetImportRequestPtrOutput {
	return i.ToInputSetInputSetImportRequestPtrOutputWithContext(context.Background())
}

func (i *inputSetInputSetImportRequestPtrType) ToInputSetInputSetImportRequestPtrOutputWithContext(ctx context.Context) InputSetInputSetImportRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetInputSetImportRequestPtrOutput)
}

type InputSetInputSetImportRequestOutput struct{ *pulumi.OutputState }

func (InputSetInputSetImportRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetInputSetImportRequest)(nil)).Elem()
}

func (o InputSetInputSetImportRequestOutput) ToInputSetInputSetImportRequestOutput() InputSetInputSetImportRequestOutput {
	return o
}

func (o InputSetInputSetImportRequestOutput) ToInputSetInputSetImportRequestOutputWithContext(ctx context.Context) InputSetInputSetImportRequestOutput {
	return o
}

func (o InputSetInputSetImportRequestOutput) ToInputSetInputSetImportRequestPtrOutput() InputSetInputSetImportRequestPtrOutput {
	return o.ToInputSetInputSetImportRequestPtrOutputWithContext(context.Background())
}

func (o InputSetInputSetImportRequestOutput) ToInputSetInputSetImportRequestPtrOutputWithContext(ctx context.Context) InputSetInputSetImportRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputSetInputSetImportRequest) *InputSetInputSetImportRequest {
		return &v
	}).(InputSetInputSetImportRequestPtrOutput)
}

// Description of the input set.
func (o InputSetInputSetImportRequestOutput) InputSetDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetInputSetImportRequest) *string { return v.InputSetDescription }).(pulumi.StringPtrOutput)
}

// Name of the input set.
func (o InputSetInputSetImportRequestOutput) InputSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetInputSetImportRequest) *string { return v.InputSetName }).(pulumi.StringPtrOutput)
}

type InputSetInputSetImportRequestPtrOutput struct{ *pulumi.OutputState }

func (InputSetInputSetImportRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetInputSetImportRequest)(nil)).Elem()
}

func (o InputSetInputSetImportRequestPtrOutput) ToInputSetInputSetImportRequestPtrOutput() InputSetInputSetImportRequestPtrOutput {
	return o
}

func (o InputSetInputSetImportRequestPtrOutput) ToInputSetInputSetImportRequestPtrOutputWithContext(ctx context.Context) InputSetInputSetImportRequestPtrOutput {
	return o
}

func (o InputSetInputSetImportRequestPtrOutput) Elem() InputSetInputSetImportRequestOutput {
	return o.ApplyT(func(v *InputSetInputSetImportRequest) InputSetInputSetImportRequest {
		if v != nil {
			return *v
		}
		var ret InputSetInputSetImportRequest
		return ret
	}).(InputSetInputSetImportRequestOutput)
}

// Description of the input set.
func (o InputSetInputSetImportRequestPtrOutput) InputSetDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetInputSetImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.InputSetDescription
	}).(pulumi.StringPtrOutput)
}

// Name of the input set.
func (o InputSetInputSetImportRequestPtrOutput) InputSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetInputSetImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.InputSetName
	}).(pulumi.StringPtrOutput)
}

type JenkinsConnectorAuth struct {
	// Authenticate to App Dynamics using bearer token.
	JenkinsBearerToken *JenkinsConnectorAuthJenkinsBearerToken `pulumi:"jenkinsBearerToken"`
	// Authenticate to App Dynamics using user name and password.
	JenkinsUserNamePassword *JenkinsConnectorAuthJenkinsUserNamePassword `pulumi:"jenkinsUserNamePassword"`
	// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
	Type string `pulumi:"type"`
}

// JenkinsConnectorAuthInput is an input type that accepts JenkinsConnectorAuthArgs and JenkinsConnectorAuthOutput values.
// You can construct a concrete instance of `JenkinsConnectorAuthInput` via:
//
//	JenkinsConnectorAuthArgs{...}
type JenkinsConnectorAuthInput interface {
	pulumi.Input

	ToJenkinsConnectorAuthOutput() JenkinsConnectorAuthOutput
	ToJenkinsConnectorAuthOutputWithContext(context.Context) JenkinsConnectorAuthOutput
}

type JenkinsConnectorAuthArgs struct {
	// Authenticate to App Dynamics using bearer token.
	JenkinsBearerToken JenkinsConnectorAuthJenkinsBearerTokenPtrInput `pulumi:"jenkinsBearerToken"`
	// Authenticate to App Dynamics using user name and password.
	JenkinsUserNamePassword JenkinsConnectorAuthJenkinsUserNamePasswordPtrInput `pulumi:"jenkinsUserNamePassword"`
	// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
	Type pulumi.StringInput `pulumi:"type"`
}

func (JenkinsConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JenkinsConnectorAuth)(nil)).Elem()
}

func (i JenkinsConnectorAuthArgs) ToJenkinsConnectorAuthOutput() JenkinsConnectorAuthOutput {
	return i.ToJenkinsConnectorAuthOutputWithContext(context.Background())
}

func (i JenkinsConnectorAuthArgs) ToJenkinsConnectorAuthOutputWithContext(ctx context.Context) JenkinsConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthOutput)
}

func (i JenkinsConnectorAuthArgs) ToJenkinsConnectorAuthPtrOutput() JenkinsConnectorAuthPtrOutput {
	return i.ToJenkinsConnectorAuthPtrOutputWithContext(context.Background())
}

func (i JenkinsConnectorAuthArgs) ToJenkinsConnectorAuthPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthOutput).ToJenkinsConnectorAuthPtrOutputWithContext(ctx)
}

// JenkinsConnectorAuthPtrInput is an input type that accepts JenkinsConnectorAuthArgs, JenkinsConnectorAuthPtr and JenkinsConnectorAuthPtrOutput values.
// You can construct a concrete instance of `JenkinsConnectorAuthPtrInput` via:
//
//	        JenkinsConnectorAuthArgs{...}
//
//	or:
//
//	        nil
type JenkinsConnectorAuthPtrInput interface {
	pulumi.Input

	ToJenkinsConnectorAuthPtrOutput() JenkinsConnectorAuthPtrOutput
	ToJenkinsConnectorAuthPtrOutputWithContext(context.Context) JenkinsConnectorAuthPtrOutput
}

type jenkinsConnectorAuthPtrType JenkinsConnectorAuthArgs

func JenkinsConnectorAuthPtr(v *JenkinsConnectorAuthArgs) JenkinsConnectorAuthPtrInput {
	return (*jenkinsConnectorAuthPtrType)(v)
}

func (*jenkinsConnectorAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnectorAuth)(nil)).Elem()
}

func (i *jenkinsConnectorAuthPtrType) ToJenkinsConnectorAuthPtrOutput() JenkinsConnectorAuthPtrOutput {
	return i.ToJenkinsConnectorAuthPtrOutputWithContext(context.Background())
}

func (i *jenkinsConnectorAuthPtrType) ToJenkinsConnectorAuthPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthPtrOutput)
}

type JenkinsConnectorAuthOutput struct{ *pulumi.OutputState }

func (JenkinsConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JenkinsConnectorAuth)(nil)).Elem()
}

func (o JenkinsConnectorAuthOutput) ToJenkinsConnectorAuthOutput() JenkinsConnectorAuthOutput {
	return o
}

func (o JenkinsConnectorAuthOutput) ToJenkinsConnectorAuthOutputWithContext(ctx context.Context) JenkinsConnectorAuthOutput {
	return o
}

func (o JenkinsConnectorAuthOutput) ToJenkinsConnectorAuthPtrOutput() JenkinsConnectorAuthPtrOutput {
	return o.ToJenkinsConnectorAuthPtrOutputWithContext(context.Background())
}

func (o JenkinsConnectorAuthOutput) ToJenkinsConnectorAuthPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JenkinsConnectorAuth) *JenkinsConnectorAuth {
		return &v
	}).(JenkinsConnectorAuthPtrOutput)
}

// Authenticate to App Dynamics using bearer token.
func (o JenkinsConnectorAuthOutput) JenkinsBearerToken() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return o.ApplyT(func(v JenkinsConnectorAuth) *JenkinsConnectorAuthJenkinsBearerToken { return v.JenkinsBearerToken }).(JenkinsConnectorAuthJenkinsBearerTokenPtrOutput)
}

// Authenticate to App Dynamics using user name and password.
func (o JenkinsConnectorAuthOutput) JenkinsUserNamePassword() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return o.ApplyT(func(v JenkinsConnectorAuth) *JenkinsConnectorAuthJenkinsUserNamePassword {
		return v.JenkinsUserNamePassword
	}).(JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput)
}

// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
func (o JenkinsConnectorAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JenkinsConnectorAuth) string { return v.Type }).(pulumi.StringOutput)
}

type JenkinsConnectorAuthPtrOutput struct{ *pulumi.OutputState }

func (JenkinsConnectorAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnectorAuth)(nil)).Elem()
}

func (o JenkinsConnectorAuthPtrOutput) ToJenkinsConnectorAuthPtrOutput() JenkinsConnectorAuthPtrOutput {
	return o
}

func (o JenkinsConnectorAuthPtrOutput) ToJenkinsConnectorAuthPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthPtrOutput {
	return o
}

func (o JenkinsConnectorAuthPtrOutput) Elem() JenkinsConnectorAuthOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuth) JenkinsConnectorAuth {
		if v != nil {
			return *v
		}
		var ret JenkinsConnectorAuth
		return ret
	}).(JenkinsConnectorAuthOutput)
}

// Authenticate to App Dynamics using bearer token.
func (o JenkinsConnectorAuthPtrOutput) JenkinsBearerToken() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuth) *JenkinsConnectorAuthJenkinsBearerToken {
		if v == nil {
			return nil
		}
		return v.JenkinsBearerToken
	}).(JenkinsConnectorAuthJenkinsBearerTokenPtrOutput)
}

// Authenticate to App Dynamics using user name and password.
func (o JenkinsConnectorAuthPtrOutput) JenkinsUserNamePassword() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuth) *JenkinsConnectorAuthJenkinsUserNamePassword {
		if v == nil {
			return nil
		}
		return v.JenkinsUserNamePassword
	}).(JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput)
}

// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
func (o JenkinsConnectorAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type JenkinsConnectorAuthJenkinsBearerToken struct {
	// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// JenkinsConnectorAuthJenkinsBearerTokenInput is an input type that accepts JenkinsConnectorAuthJenkinsBearerTokenArgs and JenkinsConnectorAuthJenkinsBearerTokenOutput values.
// You can construct a concrete instance of `JenkinsConnectorAuthJenkinsBearerTokenInput` via:
//
//	JenkinsConnectorAuthJenkinsBearerTokenArgs{...}
type JenkinsConnectorAuthJenkinsBearerTokenInput interface {
	pulumi.Input

	ToJenkinsConnectorAuthJenkinsBearerTokenOutput() JenkinsConnectorAuthJenkinsBearerTokenOutput
	ToJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(context.Context) JenkinsConnectorAuthJenkinsBearerTokenOutput
}

type JenkinsConnectorAuthJenkinsBearerTokenArgs struct {
	// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (JenkinsConnectorAuthJenkinsBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (i JenkinsConnectorAuthJenkinsBearerTokenArgs) ToJenkinsConnectorAuthJenkinsBearerTokenOutput() JenkinsConnectorAuthJenkinsBearerTokenOutput {
	return i.ToJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(context.Background())
}

func (i JenkinsConnectorAuthJenkinsBearerTokenArgs) ToJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthJenkinsBearerTokenOutput)
}

func (i JenkinsConnectorAuthJenkinsBearerTokenArgs) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutput() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return i.ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(context.Background())
}

func (i JenkinsConnectorAuthJenkinsBearerTokenArgs) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthJenkinsBearerTokenOutput).ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(ctx)
}

// JenkinsConnectorAuthJenkinsBearerTokenPtrInput is an input type that accepts JenkinsConnectorAuthJenkinsBearerTokenArgs, JenkinsConnectorAuthJenkinsBearerTokenPtr and JenkinsConnectorAuthJenkinsBearerTokenPtrOutput values.
// You can construct a concrete instance of `JenkinsConnectorAuthJenkinsBearerTokenPtrInput` via:
//
//	        JenkinsConnectorAuthJenkinsBearerTokenArgs{...}
//
//	or:
//
//	        nil
type JenkinsConnectorAuthJenkinsBearerTokenPtrInput interface {
	pulumi.Input

	ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutput() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput
	ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(context.Context) JenkinsConnectorAuthJenkinsBearerTokenPtrOutput
}

type jenkinsConnectorAuthJenkinsBearerTokenPtrType JenkinsConnectorAuthJenkinsBearerTokenArgs

func JenkinsConnectorAuthJenkinsBearerTokenPtr(v *JenkinsConnectorAuthJenkinsBearerTokenArgs) JenkinsConnectorAuthJenkinsBearerTokenPtrInput {
	return (*jenkinsConnectorAuthJenkinsBearerTokenPtrType)(v)
}

func (*jenkinsConnectorAuthJenkinsBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (i *jenkinsConnectorAuthJenkinsBearerTokenPtrType) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutput() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return i.ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(context.Background())
}

func (i *jenkinsConnectorAuthJenkinsBearerTokenPtrType) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthJenkinsBearerTokenPtrOutput)
}

type JenkinsConnectorAuthJenkinsBearerTokenOutput struct{ *pulumi.OutputState }

func (JenkinsConnectorAuthJenkinsBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (o JenkinsConnectorAuthJenkinsBearerTokenOutput) ToJenkinsConnectorAuthJenkinsBearerTokenOutput() JenkinsConnectorAuthJenkinsBearerTokenOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsBearerTokenOutput) ToJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsBearerTokenOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsBearerTokenOutput) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutput() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return o.ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(context.Background())
}

func (o JenkinsConnectorAuthJenkinsBearerTokenOutput) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JenkinsConnectorAuthJenkinsBearerToken) *JenkinsConnectorAuthJenkinsBearerToken {
		return &v
	}).(JenkinsConnectorAuthJenkinsBearerTokenPtrOutput)
}

// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JenkinsConnectorAuthJenkinsBearerTokenOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v JenkinsConnectorAuthJenkinsBearerToken) string { return v.TokenRef }).(pulumi.StringOutput)
}

type JenkinsConnectorAuthJenkinsBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (JenkinsConnectorAuthJenkinsBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (o JenkinsConnectorAuthJenkinsBearerTokenPtrOutput) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutput() JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsBearerTokenPtrOutput) ToJenkinsConnectorAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsBearerTokenPtrOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsBearerTokenPtrOutput) Elem() JenkinsConnectorAuthJenkinsBearerTokenOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuthJenkinsBearerToken) JenkinsConnectorAuthJenkinsBearerToken {
		if v != nil {
			return *v
		}
		var ret JenkinsConnectorAuthJenkinsBearerToken
		return ret
	}).(JenkinsConnectorAuthJenkinsBearerTokenOutput)
}

// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JenkinsConnectorAuthJenkinsBearerTokenPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuthJenkinsBearerToken) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

type JenkinsConnectorAuthJenkinsUserNamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Username reference to use for authentication.
	UsernameRef *string `pulumi:"usernameRef"`
}

// JenkinsConnectorAuthJenkinsUserNamePasswordInput is an input type that accepts JenkinsConnectorAuthJenkinsUserNamePasswordArgs and JenkinsConnectorAuthJenkinsUserNamePasswordOutput values.
// You can construct a concrete instance of `JenkinsConnectorAuthJenkinsUserNamePasswordInput` via:
//
//	JenkinsConnectorAuthJenkinsUserNamePasswordArgs{...}
type JenkinsConnectorAuthJenkinsUserNamePasswordInput interface {
	pulumi.Input

	ToJenkinsConnectorAuthJenkinsUserNamePasswordOutput() JenkinsConnectorAuthJenkinsUserNamePasswordOutput
	ToJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordOutput
}

type JenkinsConnectorAuthJenkinsUserNamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Username reference to use for authentication.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (JenkinsConnectorAuthJenkinsUserNamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i JenkinsConnectorAuthJenkinsUserNamePasswordArgs) ToJenkinsConnectorAuthJenkinsUserNamePasswordOutput() JenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return i.ToJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(context.Background())
}

func (i JenkinsConnectorAuthJenkinsUserNamePasswordArgs) ToJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthJenkinsUserNamePasswordOutput)
}

func (i JenkinsConnectorAuthJenkinsUserNamePasswordArgs) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return i.ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Background())
}

func (i JenkinsConnectorAuthJenkinsUserNamePasswordArgs) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthJenkinsUserNamePasswordOutput).ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx)
}

// JenkinsConnectorAuthJenkinsUserNamePasswordPtrInput is an input type that accepts JenkinsConnectorAuthJenkinsUserNamePasswordArgs, JenkinsConnectorAuthJenkinsUserNamePasswordPtr and JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput values.
// You can construct a concrete instance of `JenkinsConnectorAuthJenkinsUserNamePasswordPtrInput` via:
//
//	        JenkinsConnectorAuthJenkinsUserNamePasswordArgs{...}
//
//	or:
//
//	        nil
type JenkinsConnectorAuthJenkinsUserNamePasswordPtrInput interface {
	pulumi.Input

	ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput
	ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput
}

type jenkinsConnectorAuthJenkinsUserNamePasswordPtrType JenkinsConnectorAuthJenkinsUserNamePasswordArgs

func JenkinsConnectorAuthJenkinsUserNamePasswordPtr(v *JenkinsConnectorAuthJenkinsUserNamePasswordArgs) JenkinsConnectorAuthJenkinsUserNamePasswordPtrInput {
	return (*jenkinsConnectorAuthJenkinsUserNamePasswordPtrType)(v)
}

func (*jenkinsConnectorAuthJenkinsUserNamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i *jenkinsConnectorAuthJenkinsUserNamePasswordPtrType) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return i.ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Background())
}

func (i *jenkinsConnectorAuthJenkinsUserNamePasswordPtrType) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput)
}

type JenkinsConnectorAuthJenkinsUserNamePasswordOutput struct{ *pulumi.OutputState }

func (JenkinsConnectorAuthJenkinsUserNamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) ToJenkinsConnectorAuthJenkinsUserNamePasswordOutput() JenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) ToJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return o.ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Background())
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JenkinsConnectorAuthJenkinsUserNamePassword) *JenkinsConnectorAuthJenkinsUserNamePassword {
		return &v
	}).(JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v JenkinsConnectorAuthJenkinsUserNamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JenkinsConnectorAuthJenkinsUserNamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Username reference to use for authentication.
func (o JenkinsConnectorAuthJenkinsUserNamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JenkinsConnectorAuthJenkinsUserNamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput struct{ *pulumi.OutputState }

func (JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput() JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) ToJenkinsConnectorAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput {
	return o
}

func (o JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) Elem() JenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuthJenkinsUserNamePassword) JenkinsConnectorAuthJenkinsUserNamePassword {
		if v != nil {
			return *v
		}
		var ret JenkinsConnectorAuthJenkinsUserNamePassword
		return ret
	}).(JenkinsConnectorAuthJenkinsUserNamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuthJenkinsUserNamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuthJenkinsUserNamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Username reference to use for authentication.
func (o JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JenkinsConnectorAuthJenkinsUserNamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type JiraConnectorAuth struct {
	// Authentication types for Jira connector
	AuthType string `pulumi:"authType"`
	// Authenticate using personal access token.
	PersonalAccessToken *JiraConnectorAuthPersonalAccessToken `pulumi:"personalAccessToken"`
	// Authenticate using username password.
	UsernamePassword *JiraConnectorAuthUsernamePassword `pulumi:"usernamePassword"`
}

// JiraConnectorAuthInput is an input type that accepts JiraConnectorAuthArgs and JiraConnectorAuthOutput values.
// You can construct a concrete instance of `JiraConnectorAuthInput` via:
//
//	JiraConnectorAuthArgs{...}
type JiraConnectorAuthInput interface {
	pulumi.Input

	ToJiraConnectorAuthOutput() JiraConnectorAuthOutput
	ToJiraConnectorAuthOutputWithContext(context.Context) JiraConnectorAuthOutput
}

type JiraConnectorAuthArgs struct {
	// Authentication types for Jira connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Authenticate using personal access token.
	PersonalAccessToken JiraConnectorAuthPersonalAccessTokenPtrInput `pulumi:"personalAccessToken"`
	// Authenticate using username password.
	UsernamePassword JiraConnectorAuthUsernamePasswordPtrInput `pulumi:"usernamePassword"`
}

func (JiraConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuth)(nil)).Elem()
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthOutput() JiraConnectorAuthOutput {
	return i.ToJiraConnectorAuthOutputWithContext(context.Background())
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthOutputWithContext(ctx context.Context) JiraConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthOutput)
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return i.ToJiraConnectorAuthPtrOutputWithContext(context.Background())
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthOutput).ToJiraConnectorAuthPtrOutputWithContext(ctx)
}

// JiraConnectorAuthPtrInput is an input type that accepts JiraConnectorAuthArgs, JiraConnectorAuthPtr and JiraConnectorAuthPtrOutput values.
// You can construct a concrete instance of `JiraConnectorAuthPtrInput` via:
//
//	        JiraConnectorAuthArgs{...}
//
//	or:
//
//	        nil
type JiraConnectorAuthPtrInput interface {
	pulumi.Input

	ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput
	ToJiraConnectorAuthPtrOutputWithContext(context.Context) JiraConnectorAuthPtrOutput
}

type jiraConnectorAuthPtrType JiraConnectorAuthArgs

func JiraConnectorAuthPtr(v *JiraConnectorAuthArgs) JiraConnectorAuthPtrInput {
	return (*jiraConnectorAuthPtrType)(v)
}

func (*jiraConnectorAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuth)(nil)).Elem()
}

func (i *jiraConnectorAuthPtrType) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return i.ToJiraConnectorAuthPtrOutputWithContext(context.Background())
}

func (i *jiraConnectorAuthPtrType) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthPtrOutput)
}

type JiraConnectorAuthOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuth)(nil)).Elem()
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthOutput() JiraConnectorAuthOutput {
	return o
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthOutputWithContext(ctx context.Context) JiraConnectorAuthOutput {
	return o
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return o.ToJiraConnectorAuthPtrOutputWithContext(context.Background())
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JiraConnectorAuth) *JiraConnectorAuth {
		return &v
	}).(JiraConnectorAuthPtrOutput)
}

// Authentication types for Jira connector
func (o JiraConnectorAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v JiraConnectorAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Authenticate using personal access token.
func (o JiraConnectorAuthOutput) PersonalAccessToken() JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuth) *JiraConnectorAuthPersonalAccessToken { return v.PersonalAccessToken }).(JiraConnectorAuthPersonalAccessTokenPtrOutput)
}

// Authenticate using username password.
func (o JiraConnectorAuthOutput) UsernamePassword() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuth) *JiraConnectorAuthUsernamePassword { return v.UsernamePassword }).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

type JiraConnectorAuthPtrOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuth)(nil)).Elem()
}

func (o JiraConnectorAuthPtrOutput) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return o
}

func (o JiraConnectorAuthPtrOutput) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return o
}

func (o JiraConnectorAuthPtrOutput) Elem() JiraConnectorAuthOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) JiraConnectorAuth {
		if v != nil {
			return *v
		}
		var ret JiraConnectorAuth
		return ret
	}).(JiraConnectorAuthOutput)
}

// Authentication types for Jira connector
func (o JiraConnectorAuthPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Authenticate using personal access token.
func (o JiraConnectorAuthPtrOutput) PersonalAccessToken() JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) *JiraConnectorAuthPersonalAccessToken {
		if v == nil {
			return nil
		}
		return v.PersonalAccessToken
	}).(JiraConnectorAuthPersonalAccessTokenPtrOutput)
}

// Authenticate using username password.
func (o JiraConnectorAuthPtrOutput) UsernamePassword() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) *JiraConnectorAuthUsernamePassword {
		if v == nil {
			return nil
		}
		return v.UsernamePassword
	}).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

type JiraConnectorAuthPersonalAccessToken struct {
	// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PatRef string `pulumi:"patRef"`
}

// JiraConnectorAuthPersonalAccessTokenInput is an input type that accepts JiraConnectorAuthPersonalAccessTokenArgs and JiraConnectorAuthPersonalAccessTokenOutput values.
// You can construct a concrete instance of `JiraConnectorAuthPersonalAccessTokenInput` via:
//
//	JiraConnectorAuthPersonalAccessTokenArgs{...}
type JiraConnectorAuthPersonalAccessTokenInput interface {
	pulumi.Input

	ToJiraConnectorAuthPersonalAccessTokenOutput() JiraConnectorAuthPersonalAccessTokenOutput
	ToJiraConnectorAuthPersonalAccessTokenOutputWithContext(context.Context) JiraConnectorAuthPersonalAccessTokenOutput
}

type JiraConnectorAuthPersonalAccessTokenArgs struct {
	// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PatRef pulumi.StringInput `pulumi:"patRef"`
}

func (JiraConnectorAuthPersonalAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (i JiraConnectorAuthPersonalAccessTokenArgs) ToJiraConnectorAuthPersonalAccessTokenOutput() JiraConnectorAuthPersonalAccessTokenOutput {
	return i.ToJiraConnectorAuthPersonalAccessTokenOutputWithContext(context.Background())
}

func (i JiraConnectorAuthPersonalAccessTokenArgs) ToJiraConnectorAuthPersonalAccessTokenOutputWithContext(ctx context.Context) JiraConnectorAuthPersonalAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthPersonalAccessTokenOutput)
}

func (i JiraConnectorAuthPersonalAccessTokenArgs) ToJiraConnectorAuthPersonalAccessTokenPtrOutput() JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return i.ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (i JiraConnectorAuthPersonalAccessTokenArgs) ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthPersonalAccessTokenOutput).ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(ctx)
}

// JiraConnectorAuthPersonalAccessTokenPtrInput is an input type that accepts JiraConnectorAuthPersonalAccessTokenArgs, JiraConnectorAuthPersonalAccessTokenPtr and JiraConnectorAuthPersonalAccessTokenPtrOutput values.
// You can construct a concrete instance of `JiraConnectorAuthPersonalAccessTokenPtrInput` via:
//
//	        JiraConnectorAuthPersonalAccessTokenArgs{...}
//
//	or:
//
//	        nil
type JiraConnectorAuthPersonalAccessTokenPtrInput interface {
	pulumi.Input

	ToJiraConnectorAuthPersonalAccessTokenPtrOutput() JiraConnectorAuthPersonalAccessTokenPtrOutput
	ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(context.Context) JiraConnectorAuthPersonalAccessTokenPtrOutput
}

type jiraConnectorAuthPersonalAccessTokenPtrType JiraConnectorAuthPersonalAccessTokenArgs

func JiraConnectorAuthPersonalAccessTokenPtr(v *JiraConnectorAuthPersonalAccessTokenArgs) JiraConnectorAuthPersonalAccessTokenPtrInput {
	return (*jiraConnectorAuthPersonalAccessTokenPtrType)(v)
}

func (*jiraConnectorAuthPersonalAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (i *jiraConnectorAuthPersonalAccessTokenPtrType) ToJiraConnectorAuthPersonalAccessTokenPtrOutput() JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return i.ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (i *jiraConnectorAuthPersonalAccessTokenPtrType) ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthPersonalAccessTokenPtrOutput)
}

type JiraConnectorAuthPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (o JiraConnectorAuthPersonalAccessTokenOutput) ToJiraConnectorAuthPersonalAccessTokenOutput() JiraConnectorAuthPersonalAccessTokenOutput {
	return o
}

func (o JiraConnectorAuthPersonalAccessTokenOutput) ToJiraConnectorAuthPersonalAccessTokenOutputWithContext(ctx context.Context) JiraConnectorAuthPersonalAccessTokenOutput {
	return o
}

func (o JiraConnectorAuthPersonalAccessTokenOutput) ToJiraConnectorAuthPersonalAccessTokenPtrOutput() JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return o.ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (o JiraConnectorAuthPersonalAccessTokenOutput) ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JiraConnectorAuthPersonalAccessToken) *JiraConnectorAuthPersonalAccessToken {
		return &v
	}).(JiraConnectorAuthPersonalAccessTokenPtrOutput)
}

// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthPersonalAccessTokenOutput) PatRef() pulumi.StringOutput {
	return o.ApplyT(func(v JiraConnectorAuthPersonalAccessToken) string { return v.PatRef }).(pulumi.StringOutput)
}

type JiraConnectorAuthPersonalAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthPersonalAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (o JiraConnectorAuthPersonalAccessTokenPtrOutput) ToJiraConnectorAuthPersonalAccessTokenPtrOutput() JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return o
}

func (o JiraConnectorAuthPersonalAccessTokenPtrOutput) ToJiraConnectorAuthPersonalAccessTokenPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPersonalAccessTokenPtrOutput {
	return o
}

func (o JiraConnectorAuthPersonalAccessTokenPtrOutput) Elem() JiraConnectorAuthPersonalAccessTokenOutput {
	return o.ApplyT(func(v *JiraConnectorAuthPersonalAccessToken) JiraConnectorAuthPersonalAccessToken {
		if v != nil {
			return *v
		}
		var ret JiraConnectorAuthPersonalAccessToken
		return ret
	}).(JiraConnectorAuthPersonalAccessTokenOutput)
}

// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthPersonalAccessTokenPtrOutput) PatRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthPersonalAccessToken) *string {
		if v == nil {
			return nil
		}
		return &v.PatRef
	}).(pulumi.StringPtrOutput)
}

type JiraConnectorAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// JiraConnectorAuthUsernamePasswordInput is an input type that accepts JiraConnectorAuthUsernamePasswordArgs and JiraConnectorAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `JiraConnectorAuthUsernamePasswordInput` via:
//
//	JiraConnectorAuthUsernamePasswordArgs{...}
type JiraConnectorAuthUsernamePasswordInput interface {
	pulumi.Input

	ToJiraConnectorAuthUsernamePasswordOutput() JiraConnectorAuthUsernamePasswordOutput
	ToJiraConnectorAuthUsernamePasswordOutputWithContext(context.Context) JiraConnectorAuthUsernamePasswordOutput
}

type JiraConnectorAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (JiraConnectorAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordOutput() JiraConnectorAuthUsernamePasswordOutput {
	return i.ToJiraConnectorAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthUsernamePasswordOutput)
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return i.ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthUsernamePasswordOutput).ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx)
}

// JiraConnectorAuthUsernamePasswordPtrInput is an input type that accepts JiraConnectorAuthUsernamePasswordArgs, JiraConnectorAuthUsernamePasswordPtr and JiraConnectorAuthUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `JiraConnectorAuthUsernamePasswordPtrInput` via:
//
//	        JiraConnectorAuthUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type JiraConnectorAuthUsernamePasswordPtrInput interface {
	pulumi.Input

	ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput
	ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Context) JiraConnectorAuthUsernamePasswordPtrOutput
}

type jiraConnectorAuthUsernamePasswordPtrType JiraConnectorAuthUsernamePasswordArgs

func JiraConnectorAuthUsernamePasswordPtr(v *JiraConnectorAuthUsernamePasswordArgs) JiraConnectorAuthUsernamePasswordPtrInput {
	return (*jiraConnectorAuthUsernamePasswordPtrType)(v)
}

func (*jiraConnectorAuthUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i *jiraConnectorAuthUsernamePasswordPtrType) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return i.ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *jiraConnectorAuthUsernamePasswordPtrType) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

type JiraConnectorAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordOutput() JiraConnectorAuthUsernamePasswordOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JiraConnectorAuthUsernamePassword) *JiraConnectorAuthUsernamePassword {
		return &v
	}).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v JiraConnectorAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o JiraConnectorAuthUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuthUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuthUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type JiraConnectorAuthUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o JiraConnectorAuthUsernamePasswordPtrOutput) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordPtrOutput) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordPtrOutput) Elem() JiraConnectorAuthUsernamePasswordOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) JiraConnectorAuthUsernamePassword {
		if v != nil {
			return *v
		}
		var ret JiraConnectorAuthUsernamePassword
		return ret
	}).(JiraConnectorAuthUsernamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o JiraConnectorAuthUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorClientKeyCert struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef *string `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientCertRef string `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm string `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyPassphraseRef *string `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyRef string `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
}

// KubernetesConnectorClientKeyCertInput is an input type that accepts KubernetesConnectorClientKeyCertArgs and KubernetesConnectorClientKeyCertOutput values.
// You can construct a concrete instance of `KubernetesConnectorClientKeyCertInput` via:
//
//	KubernetesConnectorClientKeyCertArgs{...}
type KubernetesConnectorClientKeyCertInput interface {
	pulumi.Input

	ToKubernetesConnectorClientKeyCertOutput() KubernetesConnectorClientKeyCertOutput
	ToKubernetesConnectorClientKeyCertOutputWithContext(context.Context) KubernetesConnectorClientKeyCertOutput
}

type KubernetesConnectorClientKeyCertArgs struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef pulumi.StringPtrInput `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientCertRef pulumi.StringInput `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm pulumi.StringInput `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyPassphraseRef pulumi.StringPtrInput `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyRef pulumi.StringInput `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
}

func (KubernetesConnectorClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertOutput() KubernetesConnectorClientKeyCertOutput {
	return i.ToKubernetesConnectorClientKeyCertOutputWithContext(context.Background())
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorClientKeyCertOutput)
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return i.ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorClientKeyCertOutput).ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx)
}

// KubernetesConnectorClientKeyCertPtrInput is an input type that accepts KubernetesConnectorClientKeyCertArgs, KubernetesConnectorClientKeyCertPtr and KubernetesConnectorClientKeyCertPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorClientKeyCertPtrInput` via:
//
//	        KubernetesConnectorClientKeyCertArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorClientKeyCertPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput
	ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Context) KubernetesConnectorClientKeyCertPtrOutput
}

type kubernetesConnectorClientKeyCertPtrType KubernetesConnectorClientKeyCertArgs

func KubernetesConnectorClientKeyCertPtr(v *KubernetesConnectorClientKeyCertArgs) KubernetesConnectorClientKeyCertPtrInput {
	return (*kubernetesConnectorClientKeyCertPtrType)(v)
}

func (*kubernetesConnectorClientKeyCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i *kubernetesConnectorClientKeyCertPtrType) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return i.ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorClientKeyCertPtrType) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorClientKeyCertPtrOutput)
}

type KubernetesConnectorClientKeyCertOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertOutput() KubernetesConnectorClientKeyCertOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return o.ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorClientKeyCert) *KubernetesConnectorClientKeyCert {
		return &v
	}).(KubernetesConnectorClientKeyCertPtrOutput)
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) *string { return v.CaCertRef }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) ClientCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.ClientCertRef }).(pulumi.StringOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o KubernetesConnectorClientKeyCertOutput) ClientKeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.ClientKeyAlgorithm }).(pulumi.StringOutput)
}

// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) ClientKeyPassphraseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) *string { return v.ClientKeyPassphraseRef }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) ClientKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.ClientKeyRef }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorClientKeyCertOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.MasterUrl }).(pulumi.StringOutput)
}

type KubernetesConnectorClientKeyCertPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorClientKeyCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o KubernetesConnectorClientKeyCertPtrOutput) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertPtrOutput) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertPtrOutput) Elem() KubernetesConnectorClientKeyCertOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) KubernetesConnectorClientKeyCert {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorClientKeyCert
		return ret
	}).(KubernetesConnectorClientKeyCertOutput)
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.CaCertRef
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertRef
	}).(pulumi.StringPtrOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientKeyPassphraseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.ClientKeyPassphraseRef
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKeyRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorClientKeyCertPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorInheritFromDelegate struct {
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// KubernetesConnectorInheritFromDelegateInput is an input type that accepts KubernetesConnectorInheritFromDelegateArgs and KubernetesConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `KubernetesConnectorInheritFromDelegateInput` via:
//
//	KubernetesConnectorInheritFromDelegateArgs{...}
type KubernetesConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToKubernetesConnectorInheritFromDelegateOutput() KubernetesConnectorInheritFromDelegateOutput
	ToKubernetesConnectorInheritFromDelegateOutputWithContext(context.Context) KubernetesConnectorInheritFromDelegateOutput
}

type KubernetesConnectorInheritFromDelegateArgs struct {
	// Selectors to use for the delegate.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (KubernetesConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegateOutput() KubernetesConnectorInheritFromDelegateOutput {
	return i.ToKubernetesConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorInheritFromDelegateOutput)
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return i.ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorInheritFromDelegateOutput).ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx)
}

// KubernetesConnectorInheritFromDelegatePtrInput is an input type that accepts KubernetesConnectorInheritFromDelegateArgs, KubernetesConnectorInheritFromDelegatePtr and KubernetesConnectorInheritFromDelegatePtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorInheritFromDelegatePtrInput` via:
//
//	        KubernetesConnectorInheritFromDelegateArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorInheritFromDelegatePtrInput interface {
	pulumi.Input

	ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput
	ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Context) KubernetesConnectorInheritFromDelegatePtrOutput
}

type kubernetesConnectorInheritFromDelegatePtrType KubernetesConnectorInheritFromDelegateArgs

func KubernetesConnectorInheritFromDelegatePtr(v *KubernetesConnectorInheritFromDelegateArgs) KubernetesConnectorInheritFromDelegatePtrInput {
	return (*kubernetesConnectorInheritFromDelegatePtrType)(v)
}

func (*kubernetesConnectorInheritFromDelegatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i *kubernetesConnectorInheritFromDelegatePtrType) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return i.ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorInheritFromDelegatePtrType) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorInheritFromDelegatePtrOutput)
}

type KubernetesConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegateOutput() KubernetesConnectorInheritFromDelegateOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegateOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return o.ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorInheritFromDelegate) *KubernetesConnectorInheritFromDelegate {
		return &v
	}).(KubernetesConnectorInheritFromDelegatePtrOutput)
}

// Selectors to use for the delegate.
func (o KubernetesConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type KubernetesConnectorInheritFromDelegatePtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorInheritFromDelegatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o KubernetesConnectorInheritFromDelegatePtrOutput) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegatePtrOutput) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegatePtrOutput) Elem() KubernetesConnectorInheritFromDelegateOutput {
	return o.ApplyT(func(v *KubernetesConnectorInheritFromDelegate) KubernetesConnectorInheritFromDelegate {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorInheritFromDelegate
		return ret
	}).(KubernetesConnectorInheritFromDelegateOutput)
}

// Selectors to use for the delegate.
func (o KubernetesConnectorInheritFromDelegatePtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesConnectorInheritFromDelegate) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type KubernetesConnectorOpenidConnect struct {
	// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes []string `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretRef *string `pulumi:"secretRef"`
	// Username for the connector.
	Username *string `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// KubernetesConnectorOpenidConnectInput is an input type that accepts KubernetesConnectorOpenidConnectArgs and KubernetesConnectorOpenidConnectOutput values.
// You can construct a concrete instance of `KubernetesConnectorOpenidConnectInput` via:
//
//	KubernetesConnectorOpenidConnectArgs{...}
type KubernetesConnectorOpenidConnectInput interface {
	pulumi.Input

	ToKubernetesConnectorOpenidConnectOutput() KubernetesConnectorOpenidConnectOutput
	ToKubernetesConnectorOpenidConnectOutputWithContext(context.Context) KubernetesConnectorOpenidConnectOutput
}

type KubernetesConnectorOpenidConnectArgs struct {
	// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Username for the connector.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (KubernetesConnectorOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectOutput() KubernetesConnectorOpenidConnectOutput {
	return i.ToKubernetesConnectorOpenidConnectOutputWithContext(context.Background())
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorOpenidConnectOutput)
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return i.ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorOpenidConnectOutput).ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx)
}

// KubernetesConnectorOpenidConnectPtrInput is an input type that accepts KubernetesConnectorOpenidConnectArgs, KubernetesConnectorOpenidConnectPtr and KubernetesConnectorOpenidConnectPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorOpenidConnectPtrInput` via:
//
//	        KubernetesConnectorOpenidConnectArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorOpenidConnectPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput
	ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Context) KubernetesConnectorOpenidConnectPtrOutput
}

type kubernetesConnectorOpenidConnectPtrType KubernetesConnectorOpenidConnectArgs

func KubernetesConnectorOpenidConnectPtr(v *KubernetesConnectorOpenidConnectArgs) KubernetesConnectorOpenidConnectPtrInput {
	return (*kubernetesConnectorOpenidConnectPtrType)(v)
}

func (*kubernetesConnectorOpenidConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i *kubernetesConnectorOpenidConnectPtrType) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return i.ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorOpenidConnectPtrType) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorOpenidConnectPtrOutput)
}

type KubernetesConnectorOpenidConnectOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectOutput() KubernetesConnectorOpenidConnectOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return o.ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorOpenidConnect) *KubernetesConnectorOpenidConnect {
		return &v
	}).(KubernetesConnectorOpenidConnectPtrOutput)
}

// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// The URL of the OpenID Connect issuer.
func (o KubernetesConnectorOpenidConnectOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorOpenidConnectOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Scopes to request for the connector.
func (o KubernetesConnectorOpenidConnectOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesConnectorOpenidConnectOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type KubernetesConnectorOpenidConnectPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorOpenidConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o KubernetesConnectorOpenidConnectPtrOutput) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectPtrOutput) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectPtrOutput) Elem() KubernetesConnectorOpenidConnectOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) KubernetesConnectorOpenidConnect {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorOpenidConnect
		return ret
	}).(KubernetesConnectorOpenidConnectOutput)
}

// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) ClientIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.ClientIdRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the OpenID Connect issuer.
func (o KubernetesConnectorOpenidConnectPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorOpenidConnectPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Scopes to request for the connector.
func (o KubernetesConnectorOpenidConnectPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesConnectorOpenidConnectPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorServiceAccount struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef *string `pulumi:"caCertRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ServiceAccountTokenRef string `pulumi:"serviceAccountTokenRef"`
}

// KubernetesConnectorServiceAccountInput is an input type that accepts KubernetesConnectorServiceAccountArgs and KubernetesConnectorServiceAccountOutput values.
// You can construct a concrete instance of `KubernetesConnectorServiceAccountInput` via:
//
//	KubernetesConnectorServiceAccountArgs{...}
type KubernetesConnectorServiceAccountInput interface {
	pulumi.Input

	ToKubernetesConnectorServiceAccountOutput() KubernetesConnectorServiceAccountOutput
	ToKubernetesConnectorServiceAccountOutputWithContext(context.Context) KubernetesConnectorServiceAccountOutput
}

type KubernetesConnectorServiceAccountArgs struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef pulumi.StringPtrInput `pulumi:"caCertRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ServiceAccountTokenRef pulumi.StringInput `pulumi:"serviceAccountTokenRef"`
}

func (KubernetesConnectorServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountOutput() KubernetesConnectorServiceAccountOutput {
	return i.ToKubernetesConnectorServiceAccountOutputWithContext(context.Background())
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorServiceAccountOutput)
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return i.ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorServiceAccountOutput).ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx)
}

// KubernetesConnectorServiceAccountPtrInput is an input type that accepts KubernetesConnectorServiceAccountArgs, KubernetesConnectorServiceAccountPtr and KubernetesConnectorServiceAccountPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorServiceAccountPtrInput` via:
//
//	        KubernetesConnectorServiceAccountArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorServiceAccountPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput
	ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Context) KubernetesConnectorServiceAccountPtrOutput
}

type kubernetesConnectorServiceAccountPtrType KubernetesConnectorServiceAccountArgs

func KubernetesConnectorServiceAccountPtr(v *KubernetesConnectorServiceAccountArgs) KubernetesConnectorServiceAccountPtrInput {
	return (*kubernetesConnectorServiceAccountPtrType)(v)
}

func (*kubernetesConnectorServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i *kubernetesConnectorServiceAccountPtrType) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return i.ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorServiceAccountPtrType) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorServiceAccountPtrOutput)
}

type KubernetesConnectorServiceAccountOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountOutput() KubernetesConnectorServiceAccountOutput {
	return o
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountOutput {
	return o
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return o.ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorServiceAccount) *KubernetesConnectorServiceAccount {
		return &v
	}).(KubernetesConnectorServiceAccountPtrOutput)
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorServiceAccountOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorServiceAccount) *string { return v.CaCertRef }).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorServiceAccountOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorServiceAccount) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorServiceAccountOutput) ServiceAccountTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorServiceAccount) string { return v.ServiceAccountTokenRef }).(pulumi.StringOutput)
}

type KubernetesConnectorServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o KubernetesConnectorServiceAccountPtrOutput) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return o
}

func (o KubernetesConnectorServiceAccountPtrOutput) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return o
}

func (o KubernetesConnectorServiceAccountPtrOutput) Elem() KubernetesConnectorServiceAccountOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) KubernetesConnectorServiceAccount {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorServiceAccount
		return ret
	}).(KubernetesConnectorServiceAccountOutput)
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorServiceAccountPtrOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) *string {
		if v == nil {
			return nil
		}
		return v.CaCertRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorServiceAccountPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorServiceAccountPtrOutput) ServiceAccountTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountTokenRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorUsernamePassword struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username for the connector.
	Username *string `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// KubernetesConnectorUsernamePasswordInput is an input type that accepts KubernetesConnectorUsernamePasswordArgs and KubernetesConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `KubernetesConnectorUsernamePasswordInput` via:
//
//	KubernetesConnectorUsernamePasswordArgs{...}
type KubernetesConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToKubernetesConnectorUsernamePasswordOutput() KubernetesConnectorUsernamePasswordOutput
	ToKubernetesConnectorUsernamePasswordOutputWithContext(context.Context) KubernetesConnectorUsernamePasswordOutput
}

type KubernetesConnectorUsernamePasswordArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username for the connector.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (KubernetesConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordOutput() KubernetesConnectorUsernamePasswordOutput {
	return i.ToKubernetesConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorUsernamePasswordOutput)
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return i.ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorUsernamePasswordOutput).ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx)
}

// KubernetesConnectorUsernamePasswordPtrInput is an input type that accepts KubernetesConnectorUsernamePasswordArgs, KubernetesConnectorUsernamePasswordPtr and KubernetesConnectorUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorUsernamePasswordPtrInput` via:
//
//	        KubernetesConnectorUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorUsernamePasswordPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput
	ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Context) KubernetesConnectorUsernamePasswordPtrOutput
}

type kubernetesConnectorUsernamePasswordPtrType KubernetesConnectorUsernamePasswordArgs

func KubernetesConnectorUsernamePasswordPtr(v *KubernetesConnectorUsernamePasswordArgs) KubernetesConnectorUsernamePasswordPtrInput {
	return (*kubernetesConnectorUsernamePasswordPtrType)(v)
}

func (*kubernetesConnectorUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i *kubernetesConnectorUsernamePasswordPtrType) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return i.ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorUsernamePasswordPtrType) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorUsernamePasswordPtrOutput)
}

type KubernetesConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordOutput() KubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return o.ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorUsernamePassword) *KubernetesConnectorUsernamePassword {
		return &v
	}).(KubernetesConnectorUsernamePasswordPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorUsernamePasswordOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username for the connector.
func (o KubernetesConnectorUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type KubernetesConnectorUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o KubernetesConnectorUsernamePasswordPtrOutput) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordPtrOutput) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordPtrOutput) Elem() KubernetesConnectorUsernamePasswordOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) KubernetesConnectorUsernamePassword {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorUsernamePassword
		return ret
	}).(KubernetesConnectorUsernamePasswordOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorUsernamePasswordPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesConnectorUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ManualFreezeCurrentOrUpcomingWindow struct {
	// End time of the freeze window
	EndTime *int `pulumi:"endTime"`
	// Start time of the freeze window
	StartTime *int `pulumi:"startTime"`
}

// ManualFreezeCurrentOrUpcomingWindowInput is an input type that accepts ManualFreezeCurrentOrUpcomingWindowArgs and ManualFreezeCurrentOrUpcomingWindowOutput values.
// You can construct a concrete instance of `ManualFreezeCurrentOrUpcomingWindowInput` via:
//
//	ManualFreezeCurrentOrUpcomingWindowArgs{...}
type ManualFreezeCurrentOrUpcomingWindowInput interface {
	pulumi.Input

	ToManualFreezeCurrentOrUpcomingWindowOutput() ManualFreezeCurrentOrUpcomingWindowOutput
	ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Context) ManualFreezeCurrentOrUpcomingWindowOutput
}

type ManualFreezeCurrentOrUpcomingWindowArgs struct {
	// End time of the freeze window
	EndTime pulumi.IntPtrInput `pulumi:"endTime"`
	// Start time of the freeze window
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
}

func (ManualFreezeCurrentOrUpcomingWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i ManualFreezeCurrentOrUpcomingWindowArgs) ToManualFreezeCurrentOrUpcomingWindowOutput() ManualFreezeCurrentOrUpcomingWindowOutput {
	return i.ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Background())
}

func (i ManualFreezeCurrentOrUpcomingWindowArgs) ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeCurrentOrUpcomingWindowOutput)
}

// ManualFreezeCurrentOrUpcomingWindowArrayInput is an input type that accepts ManualFreezeCurrentOrUpcomingWindowArray and ManualFreezeCurrentOrUpcomingWindowArrayOutput values.
// You can construct a concrete instance of `ManualFreezeCurrentOrUpcomingWindowArrayInput` via:
//
//	ManualFreezeCurrentOrUpcomingWindowArray{ ManualFreezeCurrentOrUpcomingWindowArgs{...} }
type ManualFreezeCurrentOrUpcomingWindowArrayInput interface {
	pulumi.Input

	ToManualFreezeCurrentOrUpcomingWindowArrayOutput() ManualFreezeCurrentOrUpcomingWindowArrayOutput
	ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Context) ManualFreezeCurrentOrUpcomingWindowArrayOutput
}

type ManualFreezeCurrentOrUpcomingWindowArray []ManualFreezeCurrentOrUpcomingWindowInput

func (ManualFreezeCurrentOrUpcomingWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i ManualFreezeCurrentOrUpcomingWindowArray) ToManualFreezeCurrentOrUpcomingWindowArrayOutput() ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return i.ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Background())
}

func (i ManualFreezeCurrentOrUpcomingWindowArray) ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeCurrentOrUpcomingWindowArrayOutput)
}

type ManualFreezeCurrentOrUpcomingWindowOutput struct{ *pulumi.OutputState }

func (ManualFreezeCurrentOrUpcomingWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o ManualFreezeCurrentOrUpcomingWindowOutput) ToManualFreezeCurrentOrUpcomingWindowOutput() ManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

func (o ManualFreezeCurrentOrUpcomingWindowOutput) ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

// End time of the freeze window
func (o ManualFreezeCurrentOrUpcomingWindowOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualFreezeCurrentOrUpcomingWindow) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

// Start time of the freeze window
func (o ManualFreezeCurrentOrUpcomingWindowOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualFreezeCurrentOrUpcomingWindow) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

type ManualFreezeCurrentOrUpcomingWindowArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeCurrentOrUpcomingWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o ManualFreezeCurrentOrUpcomingWindowArrayOutput) ToManualFreezeCurrentOrUpcomingWindowArrayOutput() ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o ManualFreezeCurrentOrUpcomingWindowArrayOutput) ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o ManualFreezeCurrentOrUpcomingWindowArrayOutput) Index(i pulumi.IntInput) ManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeCurrentOrUpcomingWindow {
		return vs[0].([]ManualFreezeCurrentOrUpcomingWindow)[vs[1].(int)]
	}).(ManualFreezeCurrentOrUpcomingWindowOutput)
}

type ManualFreezeFreezeWindow struct {
	// Duration of the freeze window
	Duration *string `pulumi:"duration"`
	// End Time of the freeze window
	EndTime *string `pulumi:"endTime"`
	// Recurrence of the freeze window
	Recurrences []ManualFreezeFreezeWindowRecurrence `pulumi:"recurrences"`
	// Start Time of the freeze window
	StartTime *string `pulumi:"startTime"`
	// Time zone of the freeze window
	TimeZone *string `pulumi:"timeZone"`
}

// ManualFreezeFreezeWindowInput is an input type that accepts ManualFreezeFreezeWindowArgs and ManualFreezeFreezeWindowOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowInput` via:
//
//	ManualFreezeFreezeWindowArgs{...}
type ManualFreezeFreezeWindowInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowOutput() ManualFreezeFreezeWindowOutput
	ToManualFreezeFreezeWindowOutputWithContext(context.Context) ManualFreezeFreezeWindowOutput
}

type ManualFreezeFreezeWindowArgs struct {
	// Duration of the freeze window
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// End Time of the freeze window
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Recurrence of the freeze window
	Recurrences ManualFreezeFreezeWindowRecurrenceArrayInput `pulumi:"recurrences"`
	// Start Time of the freeze window
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Time zone of the freeze window
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (ManualFreezeFreezeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindow)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowArgs) ToManualFreezeFreezeWindowOutput() ManualFreezeFreezeWindowOutput {
	return i.ToManualFreezeFreezeWindowOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowArgs) ToManualFreezeFreezeWindowOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowOutput)
}

// ManualFreezeFreezeWindowArrayInput is an input type that accepts ManualFreezeFreezeWindowArray and ManualFreezeFreezeWindowArrayOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowArrayInput` via:
//
//	ManualFreezeFreezeWindowArray{ ManualFreezeFreezeWindowArgs{...} }
type ManualFreezeFreezeWindowArrayInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowArrayOutput() ManualFreezeFreezeWindowArrayOutput
	ToManualFreezeFreezeWindowArrayOutputWithContext(context.Context) ManualFreezeFreezeWindowArrayOutput
}

type ManualFreezeFreezeWindowArray []ManualFreezeFreezeWindowInput

func (ManualFreezeFreezeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindow)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowArray) ToManualFreezeFreezeWindowArrayOutput() ManualFreezeFreezeWindowArrayOutput {
	return i.ToManualFreezeFreezeWindowArrayOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowArray) ToManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowArrayOutput)
}

type ManualFreezeFreezeWindowOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindow)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowOutput) ToManualFreezeFreezeWindowOutput() ManualFreezeFreezeWindowOutput {
	return o
}

func (o ManualFreezeFreezeWindowOutput) ToManualFreezeFreezeWindowOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowOutput {
	return o
}

// Duration of the freeze window
func (o ManualFreezeFreezeWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// End Time of the freeze window
func (o ManualFreezeFreezeWindowOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Recurrence of the freeze window
func (o ManualFreezeFreezeWindowOutput) Recurrences() ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) []ManualFreezeFreezeWindowRecurrence { return v.Recurrences }).(ManualFreezeFreezeWindowRecurrenceArrayOutput)
}

// Start Time of the freeze window
func (o ManualFreezeFreezeWindowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Time zone of the freeze window
func (o ManualFreezeFreezeWindowOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type ManualFreezeFreezeWindowArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindow)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowArrayOutput) ToManualFreezeFreezeWindowArrayOutput() ManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowArrayOutput) ToManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowArrayOutput) Index(i pulumi.IntInput) ManualFreezeFreezeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeFreezeWindow {
		return vs[0].([]ManualFreezeFreezeWindow)[vs[1].(int)]
	}).(ManualFreezeFreezeWindowOutput)
}

type ManualFreezeFreezeWindowRecurrence struct {
	// Used to filter resources on their attributes
	RecurrenceSpecs []ManualFreezeFreezeWindowRecurrenceRecurrenceSpec `pulumi:"recurrenceSpecs"`
	// Type of the recurrence
	Type *string `pulumi:"type"`
}

// ManualFreezeFreezeWindowRecurrenceInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceArgs and ManualFreezeFreezeWindowRecurrenceOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceArgs{...}
type ManualFreezeFreezeWindowRecurrenceInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceOutput() ManualFreezeFreezeWindowRecurrenceOutput
	ToManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceOutput
}

type ManualFreezeFreezeWindowRecurrenceArgs struct {
	// Used to filter resources on their attributes
	RecurrenceSpecs ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput `pulumi:"recurrenceSpecs"`
	// Type of the recurrence
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManualFreezeFreezeWindowRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceArgs) ToManualFreezeFreezeWindowRecurrenceOutput() ManualFreezeFreezeWindowRecurrenceOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceArgs) ToManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceOutput)
}

// ManualFreezeFreezeWindowRecurrenceArrayInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceArray and ManualFreezeFreezeWindowRecurrenceArrayOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceArrayInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceArray{ ManualFreezeFreezeWindowRecurrenceArgs{...} }
type ManualFreezeFreezeWindowRecurrenceArrayInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceArrayOutput() ManualFreezeFreezeWindowRecurrenceArrayOutput
	ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceArrayOutput
}

type ManualFreezeFreezeWindowRecurrenceArray []ManualFreezeFreezeWindowRecurrenceInput

func (ManualFreezeFreezeWindowRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceArray) ToManualFreezeFreezeWindowRecurrenceArrayOutput() ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceArray) ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceArrayOutput)
}

type ManualFreezeFreezeWindowRecurrenceOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceOutput) ToManualFreezeFreezeWindowRecurrenceOutput() ManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceOutput) ToManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

// Used to filter resources on their attributes
func (o ManualFreezeFreezeWindowRecurrenceOutput) RecurrenceSpecs() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrence) []ManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return v.RecurrenceSpecs
	}).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

// Type of the recurrence
func (o ManualFreezeFreezeWindowRecurrenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrence) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManualFreezeFreezeWindowRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceArrayOutput) ToManualFreezeFreezeWindowRecurrenceArrayOutput() ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceArrayOutput) ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceArrayOutput) Index(i pulumi.IntInput) ManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeFreezeWindowRecurrence {
		return vs[0].([]ManualFreezeFreezeWindowRecurrence)[vs[1].(int)]
	}).(ManualFreezeFreezeWindowRecurrenceOutput)
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpec struct {
	// Time till which freeze window recurrs
	Until *string `pulumi:"until"`
	// Every n months recurrence
	Value *int `pulumi:"value"`
}

// ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs and ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...}
type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs struct {
	// Time till which freeze window recurrs
	Until pulumi.StringPtrInput `pulumi:"until"`
	// Every n months recurrence
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

// ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray and ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{ ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...} }
type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray []ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

// Time till which freeze window recurrs
func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Until() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrenceRecurrenceSpec) *string { return v.Until }).(pulumi.StringPtrOutput)
}

// Every n months recurrence
func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrenceRecurrenceSpec) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) Index(i pulumi.IntInput) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return vs[0].([]ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)[vs[1].(int)]
	}).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

type MonitoredServiceRequest struct {
	// Set of change sources for the monitored service.
	ChangeSources []MonitoredServiceRequestChangeSource `pulumi:"changeSources"`
	// Dependencies of the monitored service.
	Dependencies []MonitoredServiceRequestDependency `pulumi:"dependencies"`
	// Description for the monitored service.
	Description *string `pulumi:"description"`
	// Enable or disable the monitored service.
	//
	// Deprecated: enabled field is deprecated
	Enabled *bool `pulumi:"enabled"`
	// Environment in which the service is deployed.
	EnvironmentRef string `pulumi:"environmentRef"`
	// Environment reference list for the monitored service.
	EnvironmentRefLists []string `pulumi:"environmentRefLists"`
	// Set of health sources for the monitored service.
	HealthSources []MonitoredServiceRequestHealthSource `pulumi:"healthSources"`
	// Name for the monitored service.
	Name string `pulumi:"name"`
	// Notification rule references for the monitored service.
	NotificationRuleRefs []MonitoredServiceRequestNotificationRuleRef `pulumi:"notificationRuleRefs"`
	// Service reference for the monitored service.
	ServiceRef string `pulumi:"serviceRef"`
	// Tags for the monitored service. comma-separated key value string pairs.
	Tags []string `pulumi:"tags"`
	// Template reference for the monitored service.
	TemplateRef *string `pulumi:"templateRef"`
	// Type of the monitored service.
	Type string `pulumi:"type"`
	// Template version label for the monitored service.
	VersionLabel *string `pulumi:"versionLabel"`
}

// MonitoredServiceRequestInput is an input type that accepts MonitoredServiceRequestArgs and MonitoredServiceRequestOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestInput` via:
//
//	MonitoredServiceRequestArgs{...}
type MonitoredServiceRequestInput interface {
	pulumi.Input

	ToMonitoredServiceRequestOutput() MonitoredServiceRequestOutput
	ToMonitoredServiceRequestOutputWithContext(context.Context) MonitoredServiceRequestOutput
}

type MonitoredServiceRequestArgs struct {
	// Set of change sources for the monitored service.
	ChangeSources MonitoredServiceRequestChangeSourceArrayInput `pulumi:"changeSources"`
	// Dependencies of the monitored service.
	Dependencies MonitoredServiceRequestDependencyArrayInput `pulumi:"dependencies"`
	// Description for the monitored service.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enable or disable the monitored service.
	//
	// Deprecated: enabled field is deprecated
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Environment in which the service is deployed.
	EnvironmentRef pulumi.StringInput `pulumi:"environmentRef"`
	// Environment reference list for the monitored service.
	EnvironmentRefLists pulumi.StringArrayInput `pulumi:"environmentRefLists"`
	// Set of health sources for the monitored service.
	HealthSources MonitoredServiceRequestHealthSourceArrayInput `pulumi:"healthSources"`
	// Name for the monitored service.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification rule references for the monitored service.
	NotificationRuleRefs MonitoredServiceRequestNotificationRuleRefArrayInput `pulumi:"notificationRuleRefs"`
	// Service reference for the monitored service.
	ServiceRef pulumi.StringInput `pulumi:"serviceRef"`
	// Tags for the monitored service. comma-separated key value string pairs.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Template reference for the monitored service.
	TemplateRef pulumi.StringPtrInput `pulumi:"templateRef"`
	// Type of the monitored service.
	Type pulumi.StringInput `pulumi:"type"`
	// Template version label for the monitored service.
	VersionLabel pulumi.StringPtrInput `pulumi:"versionLabel"`
}

func (MonitoredServiceRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequest)(nil)).Elem()
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestOutput() MonitoredServiceRequestOutput {
	return i.ToMonitoredServiceRequestOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestOutputWithContext(ctx context.Context) MonitoredServiceRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestOutput)
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return i.ToMonitoredServiceRequestPtrOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestOutput).ToMonitoredServiceRequestPtrOutputWithContext(ctx)
}

// MonitoredServiceRequestPtrInput is an input type that accepts MonitoredServiceRequestArgs, MonitoredServiceRequestPtr and MonitoredServiceRequestPtrOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestPtrInput` via:
//
//	        MonitoredServiceRequestArgs{...}
//
//	or:
//
//	        nil
type MonitoredServiceRequestPtrInput interface {
	pulumi.Input

	ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput
	ToMonitoredServiceRequestPtrOutputWithContext(context.Context) MonitoredServiceRequestPtrOutput
}

type monitoredServiceRequestPtrType MonitoredServiceRequestArgs

func MonitoredServiceRequestPtr(v *MonitoredServiceRequestArgs) MonitoredServiceRequestPtrInput {
	return (*monitoredServiceRequestPtrType)(v)
}

func (*monitoredServiceRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredServiceRequest)(nil)).Elem()
}

func (i *monitoredServiceRequestPtrType) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return i.ToMonitoredServiceRequestPtrOutputWithContext(context.Background())
}

func (i *monitoredServiceRequestPtrType) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestPtrOutput)
}

type MonitoredServiceRequestOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequest)(nil)).Elem()
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestOutput() MonitoredServiceRequestOutput {
	return o
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestOutputWithContext(ctx context.Context) MonitoredServiceRequestOutput {
	return o
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return o.ToMonitoredServiceRequestPtrOutputWithContext(context.Background())
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoredServiceRequest) *MonitoredServiceRequest {
		return &v
	}).(MonitoredServiceRequestPtrOutput)
}

// Set of change sources for the monitored service.
func (o MonitoredServiceRequestOutput) ChangeSources() MonitoredServiceRequestChangeSourceArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestChangeSource { return v.ChangeSources }).(MonitoredServiceRequestChangeSourceArrayOutput)
}

// Dependencies of the monitored service.
func (o MonitoredServiceRequestOutput) Dependencies() MonitoredServiceRequestDependencyArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestDependency { return v.Dependencies }).(MonitoredServiceRequestDependencyArrayOutput)
}

// Description for the monitored service.
func (o MonitoredServiceRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable or disable the monitored service.
//
// Deprecated: enabled field is deprecated
func (o MonitoredServiceRequestOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Environment in which the service is deployed.
func (o MonitoredServiceRequestOutput) EnvironmentRef() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.EnvironmentRef }).(pulumi.StringOutput)
}

// Environment reference list for the monitored service.
func (o MonitoredServiceRequestOutput) EnvironmentRefLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []string { return v.EnvironmentRefLists }).(pulumi.StringArrayOutput)
}

// Set of health sources for the monitored service.
func (o MonitoredServiceRequestOutput) HealthSources() MonitoredServiceRequestHealthSourceArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestHealthSource { return v.HealthSources }).(MonitoredServiceRequestHealthSourceArrayOutput)
}

// Name for the monitored service.
func (o MonitoredServiceRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.Name }).(pulumi.StringOutput)
}

// Notification rule references for the monitored service.
func (o MonitoredServiceRequestOutput) NotificationRuleRefs() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestNotificationRuleRef {
		return v.NotificationRuleRefs
	}).(MonitoredServiceRequestNotificationRuleRefArrayOutput)
}

// Service reference for the monitored service.
func (o MonitoredServiceRequestOutput) ServiceRef() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.ServiceRef }).(pulumi.StringOutput)
}

// Tags for the monitored service. comma-separated key value string pairs.
func (o MonitoredServiceRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Template reference for the monitored service.
func (o MonitoredServiceRequestOutput) TemplateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *string { return v.TemplateRef }).(pulumi.StringPtrOutput)
}

// Type of the monitored service.
func (o MonitoredServiceRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.Type }).(pulumi.StringOutput)
}

// Template version label for the monitored service.
func (o MonitoredServiceRequestOutput) VersionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *string { return v.VersionLabel }).(pulumi.StringPtrOutput)
}

type MonitoredServiceRequestPtrOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredServiceRequest)(nil)).Elem()
}

func (o MonitoredServiceRequestPtrOutput) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return o
}

func (o MonitoredServiceRequestPtrOutput) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return o
}

func (o MonitoredServiceRequestPtrOutput) Elem() MonitoredServiceRequestOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) MonitoredServiceRequest {
		if v != nil {
			return *v
		}
		var ret MonitoredServiceRequest
		return ret
	}).(MonitoredServiceRequestOutput)
}

// Set of change sources for the monitored service.
func (o MonitoredServiceRequestPtrOutput) ChangeSources() MonitoredServiceRequestChangeSourceArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestChangeSource {
		if v == nil {
			return nil
		}
		return v.ChangeSources
	}).(MonitoredServiceRequestChangeSourceArrayOutput)
}

// Dependencies of the monitored service.
func (o MonitoredServiceRequestPtrOutput) Dependencies() MonitoredServiceRequestDependencyArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestDependency {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(MonitoredServiceRequestDependencyArrayOutput)
}

// Description for the monitored service.
func (o MonitoredServiceRequestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Enable or disable the monitored service.
//
// Deprecated: enabled field is deprecated
func (o MonitoredServiceRequestPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Environment in which the service is deployed.
func (o MonitoredServiceRequestPtrOutput) EnvironmentRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.EnvironmentRef
	}).(pulumi.StringPtrOutput)
}

// Environment reference list for the monitored service.
func (o MonitoredServiceRequestPtrOutput) EnvironmentRefLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentRefLists
	}).(pulumi.StringArrayOutput)
}

// Set of health sources for the monitored service.
func (o MonitoredServiceRequestPtrOutput) HealthSources() MonitoredServiceRequestHealthSourceArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestHealthSource {
		if v == nil {
			return nil
		}
		return v.HealthSources
	}).(MonitoredServiceRequestHealthSourceArrayOutput)
}

// Name for the monitored service.
func (o MonitoredServiceRequestPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification rule references for the monitored service.
func (o MonitoredServiceRequestPtrOutput) NotificationRuleRefs() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestNotificationRuleRef {
		if v == nil {
			return nil
		}
		return v.NotificationRuleRefs
	}).(MonitoredServiceRequestNotificationRuleRefArrayOutput)
}

// Service reference for the monitored service.
func (o MonitoredServiceRequestPtrOutput) ServiceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceRef
	}).(pulumi.StringPtrOutput)
}

// Tags for the monitored service. comma-separated key value string pairs.
func (o MonitoredServiceRequestPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Template reference for the monitored service.
func (o MonitoredServiceRequestPtrOutput) TemplateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return v.TemplateRef
	}).(pulumi.StringPtrOutput)
}

// Type of the monitored service.
func (o MonitoredServiceRequestPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Template version label for the monitored service.
func (o MonitoredServiceRequestPtrOutput) VersionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return v.VersionLabel
	}).(pulumi.StringPtrOutput)
}

type MonitoredServiceRequestChangeSource struct {
	// Category of the change source.
	Category string `pulumi:"category"`
	// Enable or disable the change source.
	Enabled *bool `pulumi:"enabled"`
	// Identifier of the change source.
	Identifier string `pulumi:"identifier"`
	// Name of the change source.
	Name string `pulumi:"name"`
	// Specification of the change source. Depends on the type of the change source.
	Spec *string `pulumi:"spec"`
	// Type of the change source.
	Type string `pulumi:"type"`
}

// MonitoredServiceRequestChangeSourceInput is an input type that accepts MonitoredServiceRequestChangeSourceArgs and MonitoredServiceRequestChangeSourceOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestChangeSourceInput` via:
//
//	MonitoredServiceRequestChangeSourceArgs{...}
type MonitoredServiceRequestChangeSourceInput interface {
	pulumi.Input

	ToMonitoredServiceRequestChangeSourceOutput() MonitoredServiceRequestChangeSourceOutput
	ToMonitoredServiceRequestChangeSourceOutputWithContext(context.Context) MonitoredServiceRequestChangeSourceOutput
}

type MonitoredServiceRequestChangeSourceArgs struct {
	// Category of the change source.
	Category pulumi.StringInput `pulumi:"category"`
	// Enable or disable the change source.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Identifier of the change source.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the change source.
	Name pulumi.StringInput `pulumi:"name"`
	// Specification of the change source. Depends on the type of the change source.
	Spec pulumi.StringPtrInput `pulumi:"spec"`
	// Type of the change source.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MonitoredServiceRequestChangeSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (i MonitoredServiceRequestChangeSourceArgs) ToMonitoredServiceRequestChangeSourceOutput() MonitoredServiceRequestChangeSourceOutput {
	return i.ToMonitoredServiceRequestChangeSourceOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestChangeSourceArgs) ToMonitoredServiceRequestChangeSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestChangeSourceOutput)
}

// MonitoredServiceRequestChangeSourceArrayInput is an input type that accepts MonitoredServiceRequestChangeSourceArray and MonitoredServiceRequestChangeSourceArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestChangeSourceArrayInput` via:
//
//	MonitoredServiceRequestChangeSourceArray{ MonitoredServiceRequestChangeSourceArgs{...} }
type MonitoredServiceRequestChangeSourceArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestChangeSourceArrayOutput() MonitoredServiceRequestChangeSourceArrayOutput
	ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(context.Context) MonitoredServiceRequestChangeSourceArrayOutput
}

type MonitoredServiceRequestChangeSourceArray []MonitoredServiceRequestChangeSourceInput

func (MonitoredServiceRequestChangeSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (i MonitoredServiceRequestChangeSourceArray) ToMonitoredServiceRequestChangeSourceArrayOutput() MonitoredServiceRequestChangeSourceArrayOutput {
	return i.ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestChangeSourceArray) ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestChangeSourceArrayOutput)
}

type MonitoredServiceRequestChangeSourceOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestChangeSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (o MonitoredServiceRequestChangeSourceOutput) ToMonitoredServiceRequestChangeSourceOutput() MonitoredServiceRequestChangeSourceOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceOutput) ToMonitoredServiceRequestChangeSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceOutput {
	return o
}

// Category of the change source.
func (o MonitoredServiceRequestChangeSourceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Category }).(pulumi.StringOutput)
}

// Enable or disable the change source.
func (o MonitoredServiceRequestChangeSourceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identifier of the change source.
func (o MonitoredServiceRequestChangeSourceOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the change source.
func (o MonitoredServiceRequestChangeSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Name }).(pulumi.StringOutput)
}

// Specification of the change source. Depends on the type of the change source.
func (o MonitoredServiceRequestChangeSourceOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

// Type of the change source.
func (o MonitoredServiceRequestChangeSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Type }).(pulumi.StringOutput)
}

type MonitoredServiceRequestChangeSourceArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestChangeSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (o MonitoredServiceRequestChangeSourceArrayOutput) ToMonitoredServiceRequestChangeSourceArrayOutput() MonitoredServiceRequestChangeSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceArrayOutput) ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestChangeSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestChangeSource {
		return vs[0].([]MonitoredServiceRequestChangeSource)[vs[1].(int)]
	}).(MonitoredServiceRequestChangeSourceOutput)
}

type MonitoredServiceRequestDependency struct {
	// Dependency metadata for the monitored service.
	DependencyMetadata *string `pulumi:"dependencyMetadata"`
	// Monitored service identifier of the dependency.
	MonitoredServiceIdentifier string `pulumi:"monitoredServiceIdentifier"`
	// Type of the service dependency.
	Type string `pulumi:"type"`
}

// MonitoredServiceRequestDependencyInput is an input type that accepts MonitoredServiceRequestDependencyArgs and MonitoredServiceRequestDependencyOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestDependencyInput` via:
//
//	MonitoredServiceRequestDependencyArgs{...}
type MonitoredServiceRequestDependencyInput interface {
	pulumi.Input

	ToMonitoredServiceRequestDependencyOutput() MonitoredServiceRequestDependencyOutput
	ToMonitoredServiceRequestDependencyOutputWithContext(context.Context) MonitoredServiceRequestDependencyOutput
}

type MonitoredServiceRequestDependencyArgs struct {
	// Dependency metadata for the monitored service.
	DependencyMetadata pulumi.StringPtrInput `pulumi:"dependencyMetadata"`
	// Monitored service identifier of the dependency.
	MonitoredServiceIdentifier pulumi.StringInput `pulumi:"monitoredServiceIdentifier"`
	// Type of the service dependency.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MonitoredServiceRequestDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestDependency)(nil)).Elem()
}

func (i MonitoredServiceRequestDependencyArgs) ToMonitoredServiceRequestDependencyOutput() MonitoredServiceRequestDependencyOutput {
	return i.ToMonitoredServiceRequestDependencyOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestDependencyArgs) ToMonitoredServiceRequestDependencyOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestDependencyOutput)
}

// MonitoredServiceRequestDependencyArrayInput is an input type that accepts MonitoredServiceRequestDependencyArray and MonitoredServiceRequestDependencyArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestDependencyArrayInput` via:
//
//	MonitoredServiceRequestDependencyArray{ MonitoredServiceRequestDependencyArgs{...} }
type MonitoredServiceRequestDependencyArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestDependencyArrayOutput() MonitoredServiceRequestDependencyArrayOutput
	ToMonitoredServiceRequestDependencyArrayOutputWithContext(context.Context) MonitoredServiceRequestDependencyArrayOutput
}

type MonitoredServiceRequestDependencyArray []MonitoredServiceRequestDependencyInput

func (MonitoredServiceRequestDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestDependency)(nil)).Elem()
}

func (i MonitoredServiceRequestDependencyArray) ToMonitoredServiceRequestDependencyArrayOutput() MonitoredServiceRequestDependencyArrayOutput {
	return i.ToMonitoredServiceRequestDependencyArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestDependencyArray) ToMonitoredServiceRequestDependencyArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestDependencyArrayOutput)
}

type MonitoredServiceRequestDependencyOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestDependency)(nil)).Elem()
}

func (o MonitoredServiceRequestDependencyOutput) ToMonitoredServiceRequestDependencyOutput() MonitoredServiceRequestDependencyOutput {
	return o
}

func (o MonitoredServiceRequestDependencyOutput) ToMonitoredServiceRequestDependencyOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyOutput {
	return o
}

// Dependency metadata for the monitored service.
func (o MonitoredServiceRequestDependencyOutput) DependencyMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestDependency) *string { return v.DependencyMetadata }).(pulumi.StringPtrOutput)
}

// Monitored service identifier of the dependency.
func (o MonitoredServiceRequestDependencyOutput) MonitoredServiceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestDependency) string { return v.MonitoredServiceIdentifier }).(pulumi.StringOutput)
}

// Type of the service dependency.
func (o MonitoredServiceRequestDependencyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestDependency) string { return v.Type }).(pulumi.StringOutput)
}

type MonitoredServiceRequestDependencyArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestDependency)(nil)).Elem()
}

func (o MonitoredServiceRequestDependencyArrayOutput) ToMonitoredServiceRequestDependencyArrayOutput() MonitoredServiceRequestDependencyArrayOutput {
	return o
}

func (o MonitoredServiceRequestDependencyArrayOutput) ToMonitoredServiceRequestDependencyArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyArrayOutput {
	return o
}

func (o MonitoredServiceRequestDependencyArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestDependency {
		return vs[0].([]MonitoredServiceRequestDependency)[vs[1].(int)]
	}).(MonitoredServiceRequestDependencyOutput)
}

type MonitoredServiceRequestHealthSource struct {
	// Identifier of the health source.
	Identifier string `pulumi:"identifier"`
	// Name of the health source.
	Name string `pulumi:"name"`
	// Specification of the health source. Depends on the type of the health source.
	Spec string `pulumi:"spec"`
	// Type of the health source.
	Type string `pulumi:"type"`
	// Version of the health source.
	Version *string `pulumi:"version"`
}

// MonitoredServiceRequestHealthSourceInput is an input type that accepts MonitoredServiceRequestHealthSourceArgs and MonitoredServiceRequestHealthSourceOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestHealthSourceInput` via:
//
//	MonitoredServiceRequestHealthSourceArgs{...}
type MonitoredServiceRequestHealthSourceInput interface {
	pulumi.Input

	ToMonitoredServiceRequestHealthSourceOutput() MonitoredServiceRequestHealthSourceOutput
	ToMonitoredServiceRequestHealthSourceOutputWithContext(context.Context) MonitoredServiceRequestHealthSourceOutput
}

type MonitoredServiceRequestHealthSourceArgs struct {
	// Identifier of the health source.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the health source.
	Name pulumi.StringInput `pulumi:"name"`
	// Specification of the health source. Depends on the type of the health source.
	Spec pulumi.StringInput `pulumi:"spec"`
	// Type of the health source.
	Type pulumi.StringInput `pulumi:"type"`
	// Version of the health source.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MonitoredServiceRequestHealthSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (i MonitoredServiceRequestHealthSourceArgs) ToMonitoredServiceRequestHealthSourceOutput() MonitoredServiceRequestHealthSourceOutput {
	return i.ToMonitoredServiceRequestHealthSourceOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestHealthSourceArgs) ToMonitoredServiceRequestHealthSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestHealthSourceOutput)
}

// MonitoredServiceRequestHealthSourceArrayInput is an input type that accepts MonitoredServiceRequestHealthSourceArray and MonitoredServiceRequestHealthSourceArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestHealthSourceArrayInput` via:
//
//	MonitoredServiceRequestHealthSourceArray{ MonitoredServiceRequestHealthSourceArgs{...} }
type MonitoredServiceRequestHealthSourceArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestHealthSourceArrayOutput() MonitoredServiceRequestHealthSourceArrayOutput
	ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(context.Context) MonitoredServiceRequestHealthSourceArrayOutput
}

type MonitoredServiceRequestHealthSourceArray []MonitoredServiceRequestHealthSourceInput

func (MonitoredServiceRequestHealthSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (i MonitoredServiceRequestHealthSourceArray) ToMonitoredServiceRequestHealthSourceArrayOutput() MonitoredServiceRequestHealthSourceArrayOutput {
	return i.ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestHealthSourceArray) ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestHealthSourceArrayOutput)
}

type MonitoredServiceRequestHealthSourceOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestHealthSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (o MonitoredServiceRequestHealthSourceOutput) ToMonitoredServiceRequestHealthSourceOutput() MonitoredServiceRequestHealthSourceOutput {
	return o
}

func (o MonitoredServiceRequestHealthSourceOutput) ToMonitoredServiceRequestHealthSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceOutput {
	return o
}

// Identifier of the health source.
func (o MonitoredServiceRequestHealthSourceOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the health source.
func (o MonitoredServiceRequestHealthSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Name }).(pulumi.StringOutput)
}

// Specification of the health source. Depends on the type of the health source.
func (o MonitoredServiceRequestHealthSourceOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Spec }).(pulumi.StringOutput)
}

// Type of the health source.
func (o MonitoredServiceRequestHealthSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the health source.
func (o MonitoredServiceRequestHealthSourceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MonitoredServiceRequestHealthSourceArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestHealthSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (o MonitoredServiceRequestHealthSourceArrayOutput) ToMonitoredServiceRequestHealthSourceArrayOutput() MonitoredServiceRequestHealthSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestHealthSourceArrayOutput) ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestHealthSourceArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestHealthSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestHealthSource {
		return vs[0].([]MonitoredServiceRequestHealthSource)[vs[1].(int)]
	}).(MonitoredServiceRequestHealthSourceOutput)
}

type MonitoredServiceRequestNotificationRuleRef struct {
	// Enable or disable notification rule reference for the monitored service.
	Enabled bool `pulumi:"enabled"`
	// Notification rule reference for the monitored service.
	NotificationRuleRef string `pulumi:"notificationRuleRef"`
}

// MonitoredServiceRequestNotificationRuleRefInput is an input type that accepts MonitoredServiceRequestNotificationRuleRefArgs and MonitoredServiceRequestNotificationRuleRefOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestNotificationRuleRefInput` via:
//
//	MonitoredServiceRequestNotificationRuleRefArgs{...}
type MonitoredServiceRequestNotificationRuleRefInput interface {
	pulumi.Input

	ToMonitoredServiceRequestNotificationRuleRefOutput() MonitoredServiceRequestNotificationRuleRefOutput
	ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(context.Context) MonitoredServiceRequestNotificationRuleRefOutput
}

type MonitoredServiceRequestNotificationRuleRefArgs struct {
	// Enable or disable notification rule reference for the monitored service.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Notification rule reference for the monitored service.
	NotificationRuleRef pulumi.StringInput `pulumi:"notificationRuleRef"`
}

func (MonitoredServiceRequestNotificationRuleRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (i MonitoredServiceRequestNotificationRuleRefArgs) ToMonitoredServiceRequestNotificationRuleRefOutput() MonitoredServiceRequestNotificationRuleRefOutput {
	return i.ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestNotificationRuleRefArgs) ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestNotificationRuleRefOutput)
}

// MonitoredServiceRequestNotificationRuleRefArrayInput is an input type that accepts MonitoredServiceRequestNotificationRuleRefArray and MonitoredServiceRequestNotificationRuleRefArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestNotificationRuleRefArrayInput` via:
//
//	MonitoredServiceRequestNotificationRuleRefArray{ MonitoredServiceRequestNotificationRuleRefArgs{...} }
type MonitoredServiceRequestNotificationRuleRefArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestNotificationRuleRefArrayOutput() MonitoredServiceRequestNotificationRuleRefArrayOutput
	ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(context.Context) MonitoredServiceRequestNotificationRuleRefArrayOutput
}

type MonitoredServiceRequestNotificationRuleRefArray []MonitoredServiceRequestNotificationRuleRefInput

func (MonitoredServiceRequestNotificationRuleRefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (i MonitoredServiceRequestNotificationRuleRefArray) ToMonitoredServiceRequestNotificationRuleRefArrayOutput() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return i.ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestNotificationRuleRefArray) ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestNotificationRuleRefArrayOutput)
}

type MonitoredServiceRequestNotificationRuleRefOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestNotificationRuleRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (o MonitoredServiceRequestNotificationRuleRefOutput) ToMonitoredServiceRequestNotificationRuleRefOutput() MonitoredServiceRequestNotificationRuleRefOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefOutput) ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefOutput {
	return o
}

// Enable or disable notification rule reference for the monitored service.
func (o MonitoredServiceRequestNotificationRuleRefOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MonitoredServiceRequestNotificationRuleRef) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Notification rule reference for the monitored service.
func (o MonitoredServiceRequestNotificationRuleRefOutput) NotificationRuleRef() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestNotificationRuleRef) string { return v.NotificationRuleRef }).(pulumi.StringOutput)
}

type MonitoredServiceRequestNotificationRuleRefArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestNotificationRuleRefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (o MonitoredServiceRequestNotificationRuleRefArrayOutput) ToMonitoredServiceRequestNotificationRuleRefArrayOutput() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefArrayOutput) ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestNotificationRuleRefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestNotificationRuleRef {
		return vs[0].([]MonitoredServiceRequestNotificationRuleRef)[vs[1].(int)]
	}).(MonitoredServiceRequestNotificationRuleRefOutput)
}

type NexusConnectorCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// NexusConnectorCredentialsInput is an input type that accepts NexusConnectorCredentialsArgs and NexusConnectorCredentialsOutput values.
// You can construct a concrete instance of `NexusConnectorCredentialsInput` via:
//
//	NexusConnectorCredentialsArgs{...}
type NexusConnectorCredentialsInput interface {
	pulumi.Input

	ToNexusConnectorCredentialsOutput() NexusConnectorCredentialsOutput
	ToNexusConnectorCredentialsOutputWithContext(context.Context) NexusConnectorCredentialsOutput
}

type NexusConnectorCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (NexusConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NexusConnectorCredentials)(nil)).Elem()
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsOutput() NexusConnectorCredentialsOutput {
	return i.ToNexusConnectorCredentialsOutputWithContext(context.Background())
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsOutputWithContext(ctx context.Context) NexusConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusConnectorCredentialsOutput)
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return i.ToNexusConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusConnectorCredentialsOutput).ToNexusConnectorCredentialsPtrOutputWithContext(ctx)
}

// NexusConnectorCredentialsPtrInput is an input type that accepts NexusConnectorCredentialsArgs, NexusConnectorCredentialsPtr and NexusConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `NexusConnectorCredentialsPtrInput` via:
//
//	        NexusConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type NexusConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput
	ToNexusConnectorCredentialsPtrOutputWithContext(context.Context) NexusConnectorCredentialsPtrOutput
}

type nexusConnectorCredentialsPtrType NexusConnectorCredentialsArgs

func NexusConnectorCredentialsPtr(v *NexusConnectorCredentialsArgs) NexusConnectorCredentialsPtrInput {
	return (*nexusConnectorCredentialsPtrType)(v)
}

func (*nexusConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusConnectorCredentials)(nil)).Elem()
}

func (i *nexusConnectorCredentialsPtrType) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return i.ToNexusConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *nexusConnectorCredentialsPtrType) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusConnectorCredentialsPtrOutput)
}

type NexusConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (NexusConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NexusConnectorCredentials)(nil)).Elem()
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsOutput() NexusConnectorCredentialsOutput {
	return o
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsOutputWithContext(ctx context.Context) NexusConnectorCredentialsOutput {
	return o
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return o.ToNexusConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NexusConnectorCredentials) *NexusConnectorCredentials {
		return &v
	}).(NexusConnectorCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v NexusConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o NexusConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NexusConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NexusConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type NexusConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (NexusConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusConnectorCredentials)(nil)).Elem()
}

func (o NexusConnectorCredentialsPtrOutput) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return o
}

func (o NexusConnectorCredentialsPtrOutput) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return o
}

func (o NexusConnectorCredentialsPtrOutput) Elem() NexusConnectorCredentialsOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) NexusConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret NexusConnectorCredentials
		return ret
	}).(NexusConnectorCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o NexusConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type NotificationRuleRequest struct {
	// Notification Rule conditions specification.
	Conditions []NotificationRuleRequestCondition `pulumi:"conditions"`
	// Name for the Notification Rule.
	Name string `pulumi:"name"`
	// Notification Method specifications.
	NotificationMethod NotificationRuleRequestNotificationMethod `pulumi:"notificationMethod"`
	// Type of the Notification Rule.
	Type string `pulumi:"type"`
}

// NotificationRuleRequestInput is an input type that accepts NotificationRuleRequestArgs and NotificationRuleRequestOutput values.
// You can construct a concrete instance of `NotificationRuleRequestInput` via:
//
//	NotificationRuleRequestArgs{...}
type NotificationRuleRequestInput interface {
	pulumi.Input

	ToNotificationRuleRequestOutput() NotificationRuleRequestOutput
	ToNotificationRuleRequestOutputWithContext(context.Context) NotificationRuleRequestOutput
}

type NotificationRuleRequestArgs struct {
	// Notification Rule conditions specification.
	Conditions NotificationRuleRequestConditionArrayInput `pulumi:"conditions"`
	// Name for the Notification Rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification Method specifications.
	NotificationMethod NotificationRuleRequestNotificationMethodInput `pulumi:"notificationMethod"`
	// Type of the Notification Rule.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NotificationRuleRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationRuleRequest)(nil)).Elem()
}

func (i NotificationRuleRequestArgs) ToNotificationRuleRequestOutput() NotificationRuleRequestOutput {
	return i.ToNotificationRuleRequestOutputWithContext(context.Background())
}

func (i NotificationRuleRequestArgs) ToNotificationRuleRequestOutputWithContext(ctx context.Context) NotificationRuleRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestOutput)
}

func (i NotificationRuleRequestArgs) ToNotificationRuleRequestPtrOutput() NotificationRuleRequestPtrOutput {
	return i.ToNotificationRuleRequestPtrOutputWithContext(context.Background())
}

func (i NotificationRuleRequestArgs) ToNotificationRuleRequestPtrOutputWithContext(ctx context.Context) NotificationRuleRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestOutput).ToNotificationRuleRequestPtrOutputWithContext(ctx)
}

// NotificationRuleRequestPtrInput is an input type that accepts NotificationRuleRequestArgs, NotificationRuleRequestPtr and NotificationRuleRequestPtrOutput values.
// You can construct a concrete instance of `NotificationRuleRequestPtrInput` via:
//
//	        NotificationRuleRequestArgs{...}
//
//	or:
//
//	        nil
type NotificationRuleRequestPtrInput interface {
	pulumi.Input

	ToNotificationRuleRequestPtrOutput() NotificationRuleRequestPtrOutput
	ToNotificationRuleRequestPtrOutputWithContext(context.Context) NotificationRuleRequestPtrOutput
}

type notificationRuleRequestPtrType NotificationRuleRequestArgs

func NotificationRuleRequestPtr(v *NotificationRuleRequestArgs) NotificationRuleRequestPtrInput {
	return (*notificationRuleRequestPtrType)(v)
}

func (*notificationRuleRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationRuleRequest)(nil)).Elem()
}

func (i *notificationRuleRequestPtrType) ToNotificationRuleRequestPtrOutput() NotificationRuleRequestPtrOutput {
	return i.ToNotificationRuleRequestPtrOutputWithContext(context.Background())
}

func (i *notificationRuleRequestPtrType) ToNotificationRuleRequestPtrOutputWithContext(ctx context.Context) NotificationRuleRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestPtrOutput)
}

type NotificationRuleRequestOutput struct{ *pulumi.OutputState }

func (NotificationRuleRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationRuleRequest)(nil)).Elem()
}

func (o NotificationRuleRequestOutput) ToNotificationRuleRequestOutput() NotificationRuleRequestOutput {
	return o
}

func (o NotificationRuleRequestOutput) ToNotificationRuleRequestOutputWithContext(ctx context.Context) NotificationRuleRequestOutput {
	return o
}

func (o NotificationRuleRequestOutput) ToNotificationRuleRequestPtrOutput() NotificationRuleRequestPtrOutput {
	return o.ToNotificationRuleRequestPtrOutputWithContext(context.Background())
}

func (o NotificationRuleRequestOutput) ToNotificationRuleRequestPtrOutputWithContext(ctx context.Context) NotificationRuleRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationRuleRequest) *NotificationRuleRequest {
		return &v
	}).(NotificationRuleRequestPtrOutput)
}

// Notification Rule conditions specification.
func (o NotificationRuleRequestOutput) Conditions() NotificationRuleRequestConditionArrayOutput {
	return o.ApplyT(func(v NotificationRuleRequest) []NotificationRuleRequestCondition { return v.Conditions }).(NotificationRuleRequestConditionArrayOutput)
}

// Name for the Notification Rule.
func (o NotificationRuleRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationRuleRequest) string { return v.Name }).(pulumi.StringOutput)
}

// Notification Method specifications.
func (o NotificationRuleRequestOutput) NotificationMethod() NotificationRuleRequestNotificationMethodOutput {
	return o.ApplyT(func(v NotificationRuleRequest) NotificationRuleRequestNotificationMethod { return v.NotificationMethod }).(NotificationRuleRequestNotificationMethodOutput)
}

// Type of the Notification Rule.
func (o NotificationRuleRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationRuleRequest) string { return v.Type }).(pulumi.StringOutput)
}

type NotificationRuleRequestPtrOutput struct{ *pulumi.OutputState }

func (NotificationRuleRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationRuleRequest)(nil)).Elem()
}

func (o NotificationRuleRequestPtrOutput) ToNotificationRuleRequestPtrOutput() NotificationRuleRequestPtrOutput {
	return o
}

func (o NotificationRuleRequestPtrOutput) ToNotificationRuleRequestPtrOutputWithContext(ctx context.Context) NotificationRuleRequestPtrOutput {
	return o
}

func (o NotificationRuleRequestPtrOutput) Elem() NotificationRuleRequestOutput {
	return o.ApplyT(func(v *NotificationRuleRequest) NotificationRuleRequest {
		if v != nil {
			return *v
		}
		var ret NotificationRuleRequest
		return ret
	}).(NotificationRuleRequestOutput)
}

// Notification Rule conditions specification.
func (o NotificationRuleRequestPtrOutput) Conditions() NotificationRuleRequestConditionArrayOutput {
	return o.ApplyT(func(v *NotificationRuleRequest) []NotificationRuleRequestCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(NotificationRuleRequestConditionArrayOutput)
}

// Name for the Notification Rule.
func (o NotificationRuleRequestPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationRuleRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification Method specifications.
func (o NotificationRuleRequestPtrOutput) NotificationMethod() NotificationRuleRequestNotificationMethodPtrOutput {
	return o.ApplyT(func(v *NotificationRuleRequest) *NotificationRuleRequestNotificationMethod {
		if v == nil {
			return nil
		}
		return &v.NotificationMethod
	}).(NotificationRuleRequestNotificationMethodPtrOutput)
}

// Type of the Notification Rule.
func (o NotificationRuleRequestPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationRuleRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NotificationRuleRequestCondition struct {
	// Specification of the notification condition. Depends on the type of the notification condition.
	Spec *string `pulumi:"spec"`
	// Type of the condition.
	Type string `pulumi:"type"`
}

// NotificationRuleRequestConditionInput is an input type that accepts NotificationRuleRequestConditionArgs and NotificationRuleRequestConditionOutput values.
// You can construct a concrete instance of `NotificationRuleRequestConditionInput` via:
//
//	NotificationRuleRequestConditionArgs{...}
type NotificationRuleRequestConditionInput interface {
	pulumi.Input

	ToNotificationRuleRequestConditionOutput() NotificationRuleRequestConditionOutput
	ToNotificationRuleRequestConditionOutputWithContext(context.Context) NotificationRuleRequestConditionOutput
}

type NotificationRuleRequestConditionArgs struct {
	// Specification of the notification condition. Depends on the type of the notification condition.
	Spec pulumi.StringPtrInput `pulumi:"spec"`
	// Type of the condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NotificationRuleRequestConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationRuleRequestCondition)(nil)).Elem()
}

func (i NotificationRuleRequestConditionArgs) ToNotificationRuleRequestConditionOutput() NotificationRuleRequestConditionOutput {
	return i.ToNotificationRuleRequestConditionOutputWithContext(context.Background())
}

func (i NotificationRuleRequestConditionArgs) ToNotificationRuleRequestConditionOutputWithContext(ctx context.Context) NotificationRuleRequestConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestConditionOutput)
}

// NotificationRuleRequestConditionArrayInput is an input type that accepts NotificationRuleRequestConditionArray and NotificationRuleRequestConditionArrayOutput values.
// You can construct a concrete instance of `NotificationRuleRequestConditionArrayInput` via:
//
//	NotificationRuleRequestConditionArray{ NotificationRuleRequestConditionArgs{...} }
type NotificationRuleRequestConditionArrayInput interface {
	pulumi.Input

	ToNotificationRuleRequestConditionArrayOutput() NotificationRuleRequestConditionArrayOutput
	ToNotificationRuleRequestConditionArrayOutputWithContext(context.Context) NotificationRuleRequestConditionArrayOutput
}

type NotificationRuleRequestConditionArray []NotificationRuleRequestConditionInput

func (NotificationRuleRequestConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationRuleRequestCondition)(nil)).Elem()
}

func (i NotificationRuleRequestConditionArray) ToNotificationRuleRequestConditionArrayOutput() NotificationRuleRequestConditionArrayOutput {
	return i.ToNotificationRuleRequestConditionArrayOutputWithContext(context.Background())
}

func (i NotificationRuleRequestConditionArray) ToNotificationRuleRequestConditionArrayOutputWithContext(ctx context.Context) NotificationRuleRequestConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestConditionArrayOutput)
}

type NotificationRuleRequestConditionOutput struct{ *pulumi.OutputState }

func (NotificationRuleRequestConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationRuleRequestCondition)(nil)).Elem()
}

func (o NotificationRuleRequestConditionOutput) ToNotificationRuleRequestConditionOutput() NotificationRuleRequestConditionOutput {
	return o
}

func (o NotificationRuleRequestConditionOutput) ToNotificationRuleRequestConditionOutputWithContext(ctx context.Context) NotificationRuleRequestConditionOutput {
	return o
}

// Specification of the notification condition. Depends on the type of the notification condition.
func (o NotificationRuleRequestConditionOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationRuleRequestCondition) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

// Type of the condition.
func (o NotificationRuleRequestConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationRuleRequestCondition) string { return v.Type }).(pulumi.StringOutput)
}

type NotificationRuleRequestConditionArrayOutput struct{ *pulumi.OutputState }

func (NotificationRuleRequestConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationRuleRequestCondition)(nil)).Elem()
}

func (o NotificationRuleRequestConditionArrayOutput) ToNotificationRuleRequestConditionArrayOutput() NotificationRuleRequestConditionArrayOutput {
	return o
}

func (o NotificationRuleRequestConditionArrayOutput) ToNotificationRuleRequestConditionArrayOutputWithContext(ctx context.Context) NotificationRuleRequestConditionArrayOutput {
	return o
}

func (o NotificationRuleRequestConditionArrayOutput) Index(i pulumi.IntInput) NotificationRuleRequestConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationRuleRequestCondition {
		return vs[0].([]NotificationRuleRequestCondition)[vs[1].(int)]
	}).(NotificationRuleRequestConditionOutput)
}

type NotificationRuleRequestNotificationMethod struct {
	// Specification of the notification method. Depends on the type of the notification method.
	Spec *string `pulumi:"spec"`
	// Type of the Notification Method.
	Type string `pulumi:"type"`
}

// NotificationRuleRequestNotificationMethodInput is an input type that accepts NotificationRuleRequestNotificationMethodArgs and NotificationRuleRequestNotificationMethodOutput values.
// You can construct a concrete instance of `NotificationRuleRequestNotificationMethodInput` via:
//
//	NotificationRuleRequestNotificationMethodArgs{...}
type NotificationRuleRequestNotificationMethodInput interface {
	pulumi.Input

	ToNotificationRuleRequestNotificationMethodOutput() NotificationRuleRequestNotificationMethodOutput
	ToNotificationRuleRequestNotificationMethodOutputWithContext(context.Context) NotificationRuleRequestNotificationMethodOutput
}

type NotificationRuleRequestNotificationMethodArgs struct {
	// Specification of the notification method. Depends on the type of the notification method.
	Spec pulumi.StringPtrInput `pulumi:"spec"`
	// Type of the Notification Method.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NotificationRuleRequestNotificationMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationRuleRequestNotificationMethod)(nil)).Elem()
}

func (i NotificationRuleRequestNotificationMethodArgs) ToNotificationRuleRequestNotificationMethodOutput() NotificationRuleRequestNotificationMethodOutput {
	return i.ToNotificationRuleRequestNotificationMethodOutputWithContext(context.Background())
}

func (i NotificationRuleRequestNotificationMethodArgs) ToNotificationRuleRequestNotificationMethodOutputWithContext(ctx context.Context) NotificationRuleRequestNotificationMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestNotificationMethodOutput)
}

func (i NotificationRuleRequestNotificationMethodArgs) ToNotificationRuleRequestNotificationMethodPtrOutput() NotificationRuleRequestNotificationMethodPtrOutput {
	return i.ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(context.Background())
}

func (i NotificationRuleRequestNotificationMethodArgs) ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(ctx context.Context) NotificationRuleRequestNotificationMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestNotificationMethodOutput).ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(ctx)
}

// NotificationRuleRequestNotificationMethodPtrInput is an input type that accepts NotificationRuleRequestNotificationMethodArgs, NotificationRuleRequestNotificationMethodPtr and NotificationRuleRequestNotificationMethodPtrOutput values.
// You can construct a concrete instance of `NotificationRuleRequestNotificationMethodPtrInput` via:
//
//	        NotificationRuleRequestNotificationMethodArgs{...}
//
//	or:
//
//	        nil
type NotificationRuleRequestNotificationMethodPtrInput interface {
	pulumi.Input

	ToNotificationRuleRequestNotificationMethodPtrOutput() NotificationRuleRequestNotificationMethodPtrOutput
	ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(context.Context) NotificationRuleRequestNotificationMethodPtrOutput
}

type notificationRuleRequestNotificationMethodPtrType NotificationRuleRequestNotificationMethodArgs

func NotificationRuleRequestNotificationMethodPtr(v *NotificationRuleRequestNotificationMethodArgs) NotificationRuleRequestNotificationMethodPtrInput {
	return (*notificationRuleRequestNotificationMethodPtrType)(v)
}

func (*notificationRuleRequestNotificationMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationRuleRequestNotificationMethod)(nil)).Elem()
}

func (i *notificationRuleRequestNotificationMethodPtrType) ToNotificationRuleRequestNotificationMethodPtrOutput() NotificationRuleRequestNotificationMethodPtrOutput {
	return i.ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(context.Background())
}

func (i *notificationRuleRequestNotificationMethodPtrType) ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(ctx context.Context) NotificationRuleRequestNotificationMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationRuleRequestNotificationMethodPtrOutput)
}

type NotificationRuleRequestNotificationMethodOutput struct{ *pulumi.OutputState }

func (NotificationRuleRequestNotificationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationRuleRequestNotificationMethod)(nil)).Elem()
}

func (o NotificationRuleRequestNotificationMethodOutput) ToNotificationRuleRequestNotificationMethodOutput() NotificationRuleRequestNotificationMethodOutput {
	return o
}

func (o NotificationRuleRequestNotificationMethodOutput) ToNotificationRuleRequestNotificationMethodOutputWithContext(ctx context.Context) NotificationRuleRequestNotificationMethodOutput {
	return o
}

func (o NotificationRuleRequestNotificationMethodOutput) ToNotificationRuleRequestNotificationMethodPtrOutput() NotificationRuleRequestNotificationMethodPtrOutput {
	return o.ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(context.Background())
}

func (o NotificationRuleRequestNotificationMethodOutput) ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(ctx context.Context) NotificationRuleRequestNotificationMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationRuleRequestNotificationMethod) *NotificationRuleRequestNotificationMethod {
		return &v
	}).(NotificationRuleRequestNotificationMethodPtrOutput)
}

// Specification of the notification method. Depends on the type of the notification method.
func (o NotificationRuleRequestNotificationMethodOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationRuleRequestNotificationMethod) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

// Type of the Notification Method.
func (o NotificationRuleRequestNotificationMethodOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationRuleRequestNotificationMethod) string { return v.Type }).(pulumi.StringOutput)
}

type NotificationRuleRequestNotificationMethodPtrOutput struct{ *pulumi.OutputState }

func (NotificationRuleRequestNotificationMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationRuleRequestNotificationMethod)(nil)).Elem()
}

func (o NotificationRuleRequestNotificationMethodPtrOutput) ToNotificationRuleRequestNotificationMethodPtrOutput() NotificationRuleRequestNotificationMethodPtrOutput {
	return o
}

func (o NotificationRuleRequestNotificationMethodPtrOutput) ToNotificationRuleRequestNotificationMethodPtrOutputWithContext(ctx context.Context) NotificationRuleRequestNotificationMethodPtrOutput {
	return o
}

func (o NotificationRuleRequestNotificationMethodPtrOutput) Elem() NotificationRuleRequestNotificationMethodOutput {
	return o.ApplyT(func(v *NotificationRuleRequestNotificationMethod) NotificationRuleRequestNotificationMethod {
		if v != nil {
			return *v
		}
		var ret NotificationRuleRequestNotificationMethod
		return ret
	}).(NotificationRuleRequestNotificationMethodOutput)
}

// Specification of the notification method. Depends on the type of the notification method.
func (o NotificationRuleRequestNotificationMethodPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationRuleRequestNotificationMethod) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

// Type of the Notification Method.
func (o NotificationRuleRequestNotificationMethodPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationRuleRequestNotificationMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OciHelmConnectorCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// OciHelmConnectorCredentialsInput is an input type that accepts OciHelmConnectorCredentialsArgs and OciHelmConnectorCredentialsOutput values.
// You can construct a concrete instance of `OciHelmConnectorCredentialsInput` via:
//
//	OciHelmConnectorCredentialsArgs{...}
type OciHelmConnectorCredentialsInput interface {
	pulumi.Input

	ToOciHelmConnectorCredentialsOutput() OciHelmConnectorCredentialsOutput
	ToOciHelmConnectorCredentialsOutputWithContext(context.Context) OciHelmConnectorCredentialsOutput
}

type OciHelmConnectorCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (OciHelmConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OciHelmConnectorCredentials)(nil)).Elem()
}

func (i OciHelmConnectorCredentialsArgs) ToOciHelmConnectorCredentialsOutput() OciHelmConnectorCredentialsOutput {
	return i.ToOciHelmConnectorCredentialsOutputWithContext(context.Background())
}

func (i OciHelmConnectorCredentialsArgs) ToOciHelmConnectorCredentialsOutputWithContext(ctx context.Context) OciHelmConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciHelmConnectorCredentialsOutput)
}

func (i OciHelmConnectorCredentialsArgs) ToOciHelmConnectorCredentialsPtrOutput() OciHelmConnectorCredentialsPtrOutput {
	return i.ToOciHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i OciHelmConnectorCredentialsArgs) ToOciHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) OciHelmConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciHelmConnectorCredentialsOutput).ToOciHelmConnectorCredentialsPtrOutputWithContext(ctx)
}

// OciHelmConnectorCredentialsPtrInput is an input type that accepts OciHelmConnectorCredentialsArgs, OciHelmConnectorCredentialsPtr and OciHelmConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `OciHelmConnectorCredentialsPtrInput` via:
//
//	        OciHelmConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type OciHelmConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToOciHelmConnectorCredentialsPtrOutput() OciHelmConnectorCredentialsPtrOutput
	ToOciHelmConnectorCredentialsPtrOutputWithContext(context.Context) OciHelmConnectorCredentialsPtrOutput
}

type ociHelmConnectorCredentialsPtrType OciHelmConnectorCredentialsArgs

func OciHelmConnectorCredentialsPtr(v *OciHelmConnectorCredentialsArgs) OciHelmConnectorCredentialsPtrInput {
	return (*ociHelmConnectorCredentialsPtrType)(v)
}

func (*ociHelmConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OciHelmConnectorCredentials)(nil)).Elem()
}

func (i *ociHelmConnectorCredentialsPtrType) ToOciHelmConnectorCredentialsPtrOutput() OciHelmConnectorCredentialsPtrOutput {
	return i.ToOciHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *ociHelmConnectorCredentialsPtrType) ToOciHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) OciHelmConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OciHelmConnectorCredentialsPtrOutput)
}

type OciHelmConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (OciHelmConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OciHelmConnectorCredentials)(nil)).Elem()
}

func (o OciHelmConnectorCredentialsOutput) ToOciHelmConnectorCredentialsOutput() OciHelmConnectorCredentialsOutput {
	return o
}

func (o OciHelmConnectorCredentialsOutput) ToOciHelmConnectorCredentialsOutputWithContext(ctx context.Context) OciHelmConnectorCredentialsOutput {
	return o
}

func (o OciHelmConnectorCredentialsOutput) ToOciHelmConnectorCredentialsPtrOutput() OciHelmConnectorCredentialsPtrOutput {
	return o.ToOciHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o OciHelmConnectorCredentialsOutput) ToOciHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) OciHelmConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OciHelmConnectorCredentials) *OciHelmConnectorCredentials {
		return &v
	}).(OciHelmConnectorCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o OciHelmConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v OciHelmConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o OciHelmConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OciHelmConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o OciHelmConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OciHelmConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type OciHelmConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (OciHelmConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OciHelmConnectorCredentials)(nil)).Elem()
}

func (o OciHelmConnectorCredentialsPtrOutput) ToOciHelmConnectorCredentialsPtrOutput() OciHelmConnectorCredentialsPtrOutput {
	return o
}

func (o OciHelmConnectorCredentialsPtrOutput) ToOciHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) OciHelmConnectorCredentialsPtrOutput {
	return o
}

func (o OciHelmConnectorCredentialsPtrOutput) Elem() OciHelmConnectorCredentialsOutput {
	return o.ApplyT(func(v *OciHelmConnectorCredentials) OciHelmConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret OciHelmConnectorCredentials
		return ret
	}).(OciHelmConnectorCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o OciHelmConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OciHelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o OciHelmConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OciHelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o OciHelmConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OciHelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type OverridesGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	Branch *string `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// If the repo is in harness code
	IsHarnessCodeRepo *bool `pulumi:"isHarnessCodeRepo"`
	// If the branch being created is new
	IsNewBranch *bool `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating override.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Load service yaml from catch
	LoadFromCache *bool `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch *bool `pulumi:"loadFromFallbackBranch"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// OverridesGitDetailsInput is an input type that accepts OverridesGitDetailsArgs and OverridesGitDetailsOutput values.
// You can construct a concrete instance of `OverridesGitDetailsInput` via:
//
//	OverridesGitDetailsArgs{...}
type OverridesGitDetailsInput interface {
	pulumi.Input

	ToOverridesGitDetailsOutput() OverridesGitDetailsOutput
	ToOverridesGitDetailsOutputWithContext(context.Context) OverridesGitDetailsOutput
}

type OverridesGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// If the repo is in harness code
	IsHarnessCodeRepo pulumi.BoolPtrInput `pulumi:"isHarnessCodeRepo"`
	// If the branch being created is new
	IsNewBranch pulumi.BoolPtrInput `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating override.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Load service yaml from catch
	LoadFromCache pulumi.BoolPtrInput `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolPtrInput `pulumi:"loadFromFallbackBranch"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (OverridesGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OverridesGitDetails)(nil)).Elem()
}

func (i OverridesGitDetailsArgs) ToOverridesGitDetailsOutput() OverridesGitDetailsOutput {
	return i.ToOverridesGitDetailsOutputWithContext(context.Background())
}

func (i OverridesGitDetailsArgs) ToOverridesGitDetailsOutputWithContext(ctx context.Context) OverridesGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverridesGitDetailsOutput)
}

func (i OverridesGitDetailsArgs) ToOverridesGitDetailsPtrOutput() OverridesGitDetailsPtrOutput {
	return i.ToOverridesGitDetailsPtrOutputWithContext(context.Background())
}

func (i OverridesGitDetailsArgs) ToOverridesGitDetailsPtrOutputWithContext(ctx context.Context) OverridesGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverridesGitDetailsOutput).ToOverridesGitDetailsPtrOutputWithContext(ctx)
}

// OverridesGitDetailsPtrInput is an input type that accepts OverridesGitDetailsArgs, OverridesGitDetailsPtr and OverridesGitDetailsPtrOutput values.
// You can construct a concrete instance of `OverridesGitDetailsPtrInput` via:
//
//	        OverridesGitDetailsArgs{...}
//
//	or:
//
//	        nil
type OverridesGitDetailsPtrInput interface {
	pulumi.Input

	ToOverridesGitDetailsPtrOutput() OverridesGitDetailsPtrOutput
	ToOverridesGitDetailsPtrOutputWithContext(context.Context) OverridesGitDetailsPtrOutput
}

type overridesGitDetailsPtrType OverridesGitDetailsArgs

func OverridesGitDetailsPtr(v *OverridesGitDetailsArgs) OverridesGitDetailsPtrInput {
	return (*overridesGitDetailsPtrType)(v)
}

func (*overridesGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OverridesGitDetails)(nil)).Elem()
}

func (i *overridesGitDetailsPtrType) ToOverridesGitDetailsPtrOutput() OverridesGitDetailsPtrOutput {
	return i.ToOverridesGitDetailsPtrOutputWithContext(context.Background())
}

func (i *overridesGitDetailsPtrType) ToOverridesGitDetailsPtrOutputWithContext(ctx context.Context) OverridesGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OverridesGitDetailsPtrOutput)
}

type OverridesGitDetailsOutput struct{ *pulumi.OutputState }

func (OverridesGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OverridesGitDetails)(nil)).Elem()
}

func (o OverridesGitDetailsOutput) ToOverridesGitDetailsOutput() OverridesGitDetailsOutput {
	return o
}

func (o OverridesGitDetailsOutput) ToOverridesGitDetailsOutputWithContext(ctx context.Context) OverridesGitDetailsOutput {
	return o
}

func (o OverridesGitDetailsOutput) ToOverridesGitDetailsPtrOutput() OverridesGitDetailsPtrOutput {
	return o.ToOverridesGitDetailsPtrOutputWithContext(context.Background())
}

func (o OverridesGitDetailsOutput) ToOverridesGitDetailsPtrOutputWithContext(ctx context.Context) OverridesGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OverridesGitDetails) *OverridesGitDetails {
		return &v
	}).(OverridesGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o OverridesGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o OverridesGitDetailsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o OverridesGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o OverridesGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o OverridesGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// If the repo is in harness code
func (o OverridesGitDetailsOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *bool { return v.IsHarnessCodeRepo }).(pulumi.BoolPtrOutput)
}

// If the branch being created is new
func (o OverridesGitDetailsOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *bool { return v.IsNewBranch }).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
func (o OverridesGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating override.
func (o OverridesGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Load service yaml from catch
func (o OverridesGitDetailsOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *bool { return v.LoadFromCache }).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o OverridesGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *bool { return v.LoadFromFallbackBranch }).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o OverridesGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o OverridesGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OverridesGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type OverridesGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (OverridesGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OverridesGitDetails)(nil)).Elem()
}

func (o OverridesGitDetailsPtrOutput) ToOverridesGitDetailsPtrOutput() OverridesGitDetailsPtrOutput {
	return o
}

func (o OverridesGitDetailsPtrOutput) ToOverridesGitDetailsPtrOutputWithContext(ctx context.Context) OverridesGitDetailsPtrOutput {
	return o
}

func (o OverridesGitDetailsPtrOutput) Elem() OverridesGitDetailsOutput {
	return o.ApplyT(func(v *OverridesGitDetails) OverridesGitDetails {
		if v != nil {
			return *v
		}
		var ret OverridesGitDetails
		return ret
	}).(OverridesGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o OverridesGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o OverridesGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o OverridesGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o OverridesGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o OverridesGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// If the repo is in harness code
func (o OverridesGitDetailsPtrOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsHarnessCodeRepo
	}).(pulumi.BoolPtrOutput)
}

// If the branch being created is new
func (o OverridesGitDetailsPtrOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsNewBranch
	}).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
func (o OverridesGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating override.
func (o OverridesGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Load service yaml from catch
func (o OverridesGitDetailsPtrOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromCache
	}).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o OverridesGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o OverridesGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o OverridesGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type PipelineFiltersFilterProperties struct {
	// description of the pipline filter.
	Description *string `pulumi:"description"`
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType string `pulumi:"filterType"`
	// module properties of the pipline filter.
	ModuleProperties *PipelineFiltersFilterPropertiesModuleProperties `pulumi:"moduleProperties"`
	// Name of the pipeline filter.
	Name *string `pulumi:"name"`
	// Pipeline identifiers to filter on.
	PipelineIdentifiers []string `pulumi:"pipelineIdentifiers"`
	// Name of the pipeline execution filter.
	PipelineName *string `pulumi:"pipelineName"`
	// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
	PipelineTags []map[string]string `pulumi:"pipelineTags"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// PipelineFiltersFilterPropertiesInput is an input type that accepts PipelineFiltersFilterPropertiesArgs and PipelineFiltersFilterPropertiesOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesInput` via:
//
//	PipelineFiltersFilterPropertiesArgs{...}
type PipelineFiltersFilterPropertiesInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesOutput() PipelineFiltersFilterPropertiesOutput
	ToPipelineFiltersFilterPropertiesOutputWithContext(context.Context) PipelineFiltersFilterPropertiesOutput
}

type PipelineFiltersFilterPropertiesArgs struct {
	// description of the pipline filter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// module properties of the pipline filter.
	ModuleProperties PipelineFiltersFilterPropertiesModulePropertiesPtrInput `pulumi:"moduleProperties"`
	// Name of the pipeline filter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pipeline identifiers to filter on.
	PipelineIdentifiers pulumi.StringArrayInput `pulumi:"pipelineIdentifiers"`
	// Name of the pipeline execution filter.
	PipelineName pulumi.StringPtrInput `pulumi:"pipelineName"`
	// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
	PipelineTags pulumi.StringMapArrayInput `pulumi:"pipelineTags"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (PipelineFiltersFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterProperties)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesOutput() PipelineFiltersFilterPropertiesOutput {
	return i.ToPipelineFiltersFilterPropertiesOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesOutput)
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesOutput).ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesPtrInput is an input type that accepts PipelineFiltersFilterPropertiesArgs, PipelineFiltersFilterPropertiesPtr and PipelineFiltersFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput
	ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesPtrOutput
}

type pipelineFiltersFilterPropertiesPtrType PipelineFiltersFilterPropertiesArgs

func PipelineFiltersFilterPropertiesPtr(v *PipelineFiltersFilterPropertiesArgs) PipelineFiltersFilterPropertiesPtrInput {
	return (*pipelineFiltersFilterPropertiesPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterProperties)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesPtrType) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesPtrType) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesPtrOutput)
}

type PipelineFiltersFilterPropertiesOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterProperties)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesOutput() PipelineFiltersFilterPropertiesOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterProperties) *PipelineFiltersFilterProperties {
		return &v
	}).(PipelineFiltersFilterPropertiesPtrOutput)
}

// description of the pipline filter.
func (o PipelineFiltersFilterPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
func (o PipelineFiltersFilterPropertiesOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) string { return v.FilterType }).(pulumi.StringOutput)
}

// module properties of the pipline filter.
func (o PipelineFiltersFilterPropertiesOutput) ModuleProperties() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) *PipelineFiltersFilterPropertiesModuleProperties {
		return v.ModuleProperties
	}).(PipelineFiltersFilterPropertiesModulePropertiesPtrOutput)
}

// Name of the pipeline filter.
func (o PipelineFiltersFilterPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pipeline identifiers to filter on.
func (o PipelineFiltersFilterPropertiesOutput) PipelineIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) []string { return v.PipelineIdentifiers }).(pulumi.StringArrayOutput)
}

// Name of the pipeline execution filter.
func (o PipelineFiltersFilterPropertiesOutput) PipelineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) *string { return v.PipelineName }).(pulumi.StringPtrOutput)
}

// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
func (o PipelineFiltersFilterPropertiesOutput) PipelineTags() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) []map[string]string { return v.PipelineTags }).(pulumi.StringMapArrayOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o PipelineFiltersFilterPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type PipelineFiltersFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterProperties)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesPtrOutput) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesPtrOutput) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesPtrOutput) Elem() PipelineFiltersFilterPropertiesOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) PipelineFiltersFilterProperties {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterProperties
		return ret
	}).(PipelineFiltersFilterPropertiesOutput)
}

// description of the pipline filter.
func (o PipelineFiltersFilterPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
func (o PipelineFiltersFilterPropertiesPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// module properties of the pipline filter.
func (o PipelineFiltersFilterPropertiesPtrOutput) ModuleProperties() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) *PipelineFiltersFilterPropertiesModuleProperties {
		if v == nil {
			return nil
		}
		return v.ModuleProperties
	}).(PipelineFiltersFilterPropertiesModulePropertiesPtrOutput)
}

// Name of the pipeline filter.
func (o PipelineFiltersFilterPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Pipeline identifiers to filter on.
func (o PipelineFiltersFilterPropertiesPtrOutput) PipelineIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.PipelineIdentifiers
	}).(pulumi.StringArrayOutput)
}

// Name of the pipeline execution filter.
func (o PipelineFiltersFilterPropertiesPtrOutput) PipelineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.PipelineName
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
func (o PipelineFiltersFilterPropertiesPtrOutput) PipelineTags() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) []map[string]string {
		if v == nil {
			return nil
		}
		return v.PipelineTags
	}).(pulumi.StringMapArrayOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o PipelineFiltersFilterPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type PipelineFiltersFilterPropertiesModuleProperties struct {
	// CD related properties to be filtered on.
	Cd *PipelineFiltersFilterPropertiesModulePropertiesCd `pulumi:"cd"`
	// CI related properties to be filtered on.
	Ci *PipelineFiltersFilterPropertiesModulePropertiesCi `pulumi:"ci"`
}

// PipelineFiltersFilterPropertiesModulePropertiesInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesArgs and PipelineFiltersFilterPropertiesModulePropertiesOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesInput` via:
//
//	PipelineFiltersFilterPropertiesModulePropertiesArgs{...}
type PipelineFiltersFilterPropertiesModulePropertiesInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesOutput() PipelineFiltersFilterPropertiesModulePropertiesOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesOutput
}

type PipelineFiltersFilterPropertiesModulePropertiesArgs struct {
	// CD related properties to be filtered on.
	Cd PipelineFiltersFilterPropertiesModulePropertiesCdPtrInput `pulumi:"cd"`
	// CI related properties to be filtered on.
	Ci PipelineFiltersFilterPropertiesModulePropertiesCiPtrInput `pulumi:"ci"`
}

func (PipelineFiltersFilterPropertiesModulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModuleProperties)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesModulePropertiesArgs) ToPipelineFiltersFilterPropertiesModulePropertiesOutput() PipelineFiltersFilterPropertiesModulePropertiesOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesArgs) ToPipelineFiltersFilterPropertiesModulePropertiesOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesOutput)
}

func (i PipelineFiltersFilterPropertiesModulePropertiesArgs) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesArgs) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesOutput).ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesModulePropertiesPtrInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesArgs, PipelineFiltersFilterPropertiesModulePropertiesPtr and PipelineFiltersFilterPropertiesModulePropertiesPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesModulePropertiesArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesModulePropertiesPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesPtrOutput
}

type pipelineFiltersFilterPropertiesModulePropertiesPtrType PipelineFiltersFilterPropertiesModulePropertiesArgs

func PipelineFiltersFilterPropertiesModulePropertiesPtr(v *PipelineFiltersFilterPropertiesModulePropertiesArgs) PipelineFiltersFilterPropertiesModulePropertiesPtrInput {
	return (*pipelineFiltersFilterPropertiesModulePropertiesPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesModulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModuleProperties)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModuleProperties)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesOutput) ToPipelineFiltersFilterPropertiesModulePropertiesOutput() PipelineFiltersFilterPropertiesModulePropertiesOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesOutput) ToPipelineFiltersFilterPropertiesModulePropertiesOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesOutput) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesModulePropertiesOutput) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterPropertiesModuleProperties) *PipelineFiltersFilterPropertiesModuleProperties {
		return &v
	}).(PipelineFiltersFilterPropertiesModulePropertiesPtrOutput)
}

// CD related properties to be filtered on.
func (o PipelineFiltersFilterPropertiesModulePropertiesOutput) Cd() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModuleProperties) *PipelineFiltersFilterPropertiesModulePropertiesCd {
		return v.Cd
	}).(PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput)
}

// CI related properties to be filtered on.
func (o PipelineFiltersFilterPropertiesModulePropertiesOutput) Ci() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModuleProperties) *PipelineFiltersFilterPropertiesModulePropertiesCi {
		return v.Ci
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModuleProperties)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesPtrOutput) Elem() PipelineFiltersFilterPropertiesModulePropertiesOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModuleProperties) PipelineFiltersFilterPropertiesModuleProperties {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterPropertiesModuleProperties
		return ret
	}).(PipelineFiltersFilterPropertiesModulePropertiesOutput)
}

// CD related properties to be filtered on.
func (o PipelineFiltersFilterPropertiesModulePropertiesPtrOutput) Cd() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModuleProperties) *PipelineFiltersFilterPropertiesModulePropertiesCd {
		if v == nil {
			return nil
		}
		return v.Cd
	}).(PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput)
}

// CI related properties to be filtered on.
func (o PipelineFiltersFilterPropertiesModulePropertiesPtrOutput) Ci() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModuleProperties) *PipelineFiltersFilterPropertiesModulePropertiesCi {
		if v == nil {
			return nil
		}
		return v.Ci
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCd struct {
	// Artifact display names of the CD pipeline.
	ArtifactDisplayNames []string `pulumi:"artifactDisplayNames"`
	// Deployment type of the CD pipeline, eg. Kubernetes
	DeploymentTypes *string `pulumi:"deploymentTypes"`
	// Environment identifier of the CD pipeline.
	EnvironmentIdentifiers []string `pulumi:"environmentIdentifiers"`
	// Environment names of the CD pipeline.
	EnvironmentNames []string `pulumi:"environmentNames"`
	// Deployment type of the CD pipeline, eg. Kubernetes
	ServiceDefinitionTypes *string `pulumi:"serviceDefinitionTypes"`
	// Service identifiers of the CD pipeline.
	ServiceIdentifiers []string `pulumi:"serviceIdentifiers"`
	// Service names of the CD pipeline.
	ServiceNames []string `pulumi:"serviceNames"`
}

// PipelineFiltersFilterPropertiesModulePropertiesCdInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCdArgs and PipelineFiltersFilterPropertiesModulePropertiesCdOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCdInput` via:
//
//	PipelineFiltersFilterPropertiesModulePropertiesCdArgs{...}
type PipelineFiltersFilterPropertiesModulePropertiesCdInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCdOutput() PipelineFiltersFilterPropertiesModulePropertiesCdOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCdOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdOutput
}

type PipelineFiltersFilterPropertiesModulePropertiesCdArgs struct {
	// Artifact display names of the CD pipeline.
	ArtifactDisplayNames pulumi.StringArrayInput `pulumi:"artifactDisplayNames"`
	// Deployment type of the CD pipeline, eg. Kubernetes
	DeploymentTypes pulumi.StringPtrInput `pulumi:"deploymentTypes"`
	// Environment identifier of the CD pipeline.
	EnvironmentIdentifiers pulumi.StringArrayInput `pulumi:"environmentIdentifiers"`
	// Environment names of the CD pipeline.
	EnvironmentNames pulumi.StringArrayInput `pulumi:"environmentNames"`
	// Deployment type of the CD pipeline, eg. Kubernetes
	ServiceDefinitionTypes pulumi.StringPtrInput `pulumi:"serviceDefinitionTypes"`
	// Service identifiers of the CD pipeline.
	ServiceIdentifiers pulumi.StringArrayInput `pulumi:"serviceIdentifiers"`
	// Service names of the CD pipeline.
	ServiceNames pulumi.StringArrayInput `pulumi:"serviceNames"`
}

func (PipelineFiltersFilterPropertiesModulePropertiesCdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCd)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCdArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCdOutput() PipelineFiltersFilterPropertiesModulePropertiesCdOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCdOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCdArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCdOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCdOutput)
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCdArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCdArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCdOutput).ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesModulePropertiesCdPtrInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCdArgs, PipelineFiltersFilterPropertiesModulePropertiesCdPtr and PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCdPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesModulePropertiesCdArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesModulePropertiesCdPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput
}

type pipelineFiltersFilterPropertiesModulePropertiesCdPtrType PipelineFiltersFilterPropertiesModulePropertiesCdArgs

func PipelineFiltersFilterPropertiesModulePropertiesCdPtr(v *PipelineFiltersFilterPropertiesModulePropertiesCdArgs) PipelineFiltersFilterPropertiesModulePropertiesCdPtrInput {
	return (*pipelineFiltersFilterPropertiesModulePropertiesCdPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesModulePropertiesCdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCd)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCdPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCdPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCdOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCd)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCdOutput() PipelineFiltersFilterPropertiesModulePropertiesCdOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCdOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterPropertiesModulePropertiesCd) *PipelineFiltersFilterPropertiesModulePropertiesCd {
		return &v
	}).(PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput)
}

// Artifact display names of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ArtifactDisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) []string { return v.ArtifactDisplayNames }).(pulumi.StringArrayOutput)
}

// Deployment type of the CD pipeline, eg. Kubernetes
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) DeploymentTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) *string { return v.DeploymentTypes }).(pulumi.StringPtrOutput)
}

// Environment identifier of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) EnvironmentIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) []string { return v.EnvironmentIdentifiers }).(pulumi.StringArrayOutput)
}

// Environment names of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) EnvironmentNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) []string { return v.EnvironmentNames }).(pulumi.StringArrayOutput)
}

// Deployment type of the CD pipeline, eg. Kubernetes
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ServiceDefinitionTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) *string { return v.ServiceDefinitionTypes }).(pulumi.StringPtrOutput)
}

// Service identifiers of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ServiceIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) []string { return v.ServiceIdentifiers }).(pulumi.StringArrayOutput)
}

// Service names of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdOutput) ServiceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCd) []string { return v.ServiceNames }).(pulumi.StringArrayOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCd)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCdPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) Elem() PipelineFiltersFilterPropertiesModulePropertiesCdOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) PipelineFiltersFilterPropertiesModulePropertiesCd {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterPropertiesModulePropertiesCd
		return ret
	}).(PipelineFiltersFilterPropertiesModulePropertiesCdOutput)
}

// Artifact display names of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ArtifactDisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) []string {
		if v == nil {
			return nil
		}
		return v.ArtifactDisplayNames
	}).(pulumi.StringArrayOutput)
}

// Deployment type of the CD pipeline, eg. Kubernetes
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) DeploymentTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentTypes
	}).(pulumi.StringPtrOutput)
}

// Environment identifier of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) EnvironmentIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentIdentifiers
	}).(pulumi.StringArrayOutput)
}

// Environment names of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) EnvironmentNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentNames
	}).(pulumi.StringArrayOutput)
}

// Deployment type of the CD pipeline, eg. Kubernetes
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ServiceDefinitionTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDefinitionTypes
	}).(pulumi.StringPtrOutput)
}

// Service identifiers of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ServiceIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) []string {
		if v == nil {
			return nil
		}
		return v.ServiceIdentifiers
	}).(pulumi.StringArrayOutput)
}

// Service names of the CD pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput) ServiceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCd) []string {
		if v == nil {
			return nil
		}
		return v.ServiceNames
	}).(pulumi.StringArrayOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCi struct {
	// Branch which was used while building.
	Branch *string `pulumi:"branch"`
	// Build type of the pipeline. Possible values: branch.
	BuildType *string `pulumi:"buildType"`
	// CI execution info for the pipeline.
	CiExecutionInfo *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo `pulumi:"ciExecutionInfo"`
	// name of the repository used in the pipeline.
	RepoNames *string `pulumi:"repoNames"`
	// Tags to associate with the CI pipeline resource.
	Tag *string `pulumi:"tag"`
}

// PipelineFiltersFilterPropertiesModulePropertiesCiInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCiArgs and PipelineFiltersFilterPropertiesModulePropertiesCiOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCiInput` via:
//
//	PipelineFiltersFilterPropertiesModulePropertiesCiArgs{...}
type PipelineFiltersFilterPropertiesModulePropertiesCiInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCiOutput() PipelineFiltersFilterPropertiesModulePropertiesCiOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCiOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiOutput
}

type PipelineFiltersFilterPropertiesModulePropertiesCiArgs struct {
	// Branch which was used while building.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Build type of the pipeline. Possible values: branch.
	BuildType pulumi.StringPtrInput `pulumi:"buildType"`
	// CI execution info for the pipeline.
	CiExecutionInfo PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrInput `pulumi:"ciExecutionInfo"`
	// name of the repository used in the pipeline.
	RepoNames pulumi.StringPtrInput `pulumi:"repoNames"`
	// Tags to associate with the CI pipeline resource.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (PipelineFiltersFilterPropertiesModulePropertiesCiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCi)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiOutput() PipelineFiltersFilterPropertiesModulePropertiesCiOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiOutput)
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiOutput).ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesModulePropertiesCiPtrInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCiArgs, PipelineFiltersFilterPropertiesModulePropertiesCiPtr and PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCiPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesModulePropertiesCiArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesModulePropertiesCiPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput
}

type pipelineFiltersFilterPropertiesModulePropertiesCiPtrType PipelineFiltersFilterPropertiesModulePropertiesCiArgs

func PipelineFiltersFilterPropertiesModulePropertiesCiPtr(v *PipelineFiltersFilterPropertiesModulePropertiesCiArgs) PipelineFiltersFilterPropertiesModulePropertiesCiPtrInput {
	return (*pipelineFiltersFilterPropertiesModulePropertiesCiPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesModulePropertiesCiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCi)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCiPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCiPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCi)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiOutput() PipelineFiltersFilterPropertiesModulePropertiesCiOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterPropertiesModulePropertiesCi) *PipelineFiltersFilterPropertiesModulePropertiesCi {
		return &v
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput)
}

// Branch which was used while building.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCi) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Build type of the pipeline. Possible values: branch.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) BuildType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCi) *string { return v.BuildType }).(pulumi.StringPtrOutput)
}

// CI execution info for the pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) CiExecutionInfo() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCi) *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo {
		return v.CiExecutionInfo
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput)
}

// name of the repository used in the pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) RepoNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCi) *string { return v.RepoNames }).(pulumi.StringPtrOutput)
}

// Tags to associate with the CI pipeline resource.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCi) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCi)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) Elem() PipelineFiltersFilterPropertiesModulePropertiesCiOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCi) PipelineFiltersFilterPropertiesModulePropertiesCi {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterPropertiesModulePropertiesCi
		return ret
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiOutput)
}

// Branch which was used while building.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCi) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Build type of the pipeline. Possible values: branch.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) BuildType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCi) *string {
		if v == nil {
			return nil
		}
		return v.BuildType
	}).(pulumi.StringPtrOutput)
}

// CI execution info for the pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) CiExecutionInfo() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCi) *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo {
		if v == nil {
			return nil
		}
		return v.CiExecutionInfo
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput)
}

// name of the repository used in the pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) RepoNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCi) *string {
		if v == nil {
			return nil
		}
		return v.RepoNames
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the CI pipeline resource.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCi) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo struct {
	// Event for the ci execution, Possible values: pullRequest.
	Event *string `pulumi:"event"`
	// The pull request details of the CI pipeline.
	PullRequest *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest `pulumi:"pullRequest"`
}

// PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs and PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoInput` via:
//
//	PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs{...}
type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs struct {
	// Event for the ci execution, Possible values: pullRequest.
	Event pulumi.StringPtrInput `pulumi:"event"`
	// The pull request details of the CI pipeline.
	PullRequest PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrInput `pulumi:"pullRequest"`
}

func (PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput)
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput).ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs, PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtr and PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput
}

type pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrType PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs

func PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtr(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrInput {
	return (*pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo) *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo {
		return &v
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput)
}

// Event for the ci execution, Possible values: pullRequest.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// The pull request details of the CI pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput) PullRequest() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo) *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest {
		return v.PullRequest
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput) Elem() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo
		return ret
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput)
}

// Event for the ci execution, Possible values: pullRequest.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Event
	}).(pulumi.StringPtrOutput)
}

// The pull request details of the CI pipeline.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput) PullRequest() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo) *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest {
		if v == nil {
			return nil
		}
		return v.PullRequest
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest struct {
	// Source branch of the pull request.
	SourceBranch *string `pulumi:"sourceBranch"`
	// Target branch of the pull request.
	TargetBranch *string `pulumi:"targetBranch"`
}

// PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs and PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestInput` via:
//
//	PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs{...}
type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs struct {
	// Source branch of the pull request.
	SourceBranch pulumi.StringPtrInput `pulumi:"sourceBranch"`
	// Target branch of the pull request.
	TargetBranch pulumi.StringPtrInput `pulumi:"targetBranch"`
}

func (PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput)
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput).ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrInput is an input type that accepts PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs, PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtr and PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput
	ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput
}

type pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrType PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs

func PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtr(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrInput {
	return (*pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrType) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest) *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest {
		return &v
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput)
}

// Source branch of the pull request.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) SourceBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest) *string {
		return v.SourceBranch
	}).(pulumi.StringPtrOutput)
}

// Target branch of the pull request.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput) TargetBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest) *string {
		return v.TargetBranch
	}).(pulumi.StringPtrOutput)
}

type PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput) ToPipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput) Elem() PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest) PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest
		return ret
	}).(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput)
}

// Source branch of the pull request.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput) SourceBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest) *string {
		if v == nil {
			return nil
		}
		return v.SourceBranch
	}).(pulumi.StringPtrOutput)
}

// Target branch of the pull request.
func (o PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput) TargetBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequest) *string {
		if v == nil {
			return nil
		}
		return v.TargetBranch
	}).(pulumi.StringPtrOutput)
}

type PipelineGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// If the repo is harness code.
	IsHarnessCodeRepo *bool `pulumi:"isHarnessCodeRepo"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// PipelineGitDetailsInput is an input type that accepts PipelineGitDetailsArgs and PipelineGitDetailsOutput values.
// You can construct a concrete instance of `PipelineGitDetailsInput` via:
//
//	PipelineGitDetailsArgs{...}
type PipelineGitDetailsInput interface {
	pulumi.Input

	ToPipelineGitDetailsOutput() PipelineGitDetailsOutput
	ToPipelineGitDetailsOutputWithContext(context.Context) PipelineGitDetailsOutput
}

type PipelineGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// If the repo is harness code.
	IsHarnessCodeRepo pulumi.BoolPtrInput `pulumi:"isHarnessCodeRepo"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (PipelineGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitDetails)(nil)).Elem()
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsOutput() PipelineGitDetailsOutput {
	return i.ToPipelineGitDetailsOutputWithContext(context.Background())
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsOutputWithContext(ctx context.Context) PipelineGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitDetailsOutput)
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return i.ToPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitDetailsOutput).ToPipelineGitDetailsPtrOutputWithContext(ctx)
}

// PipelineGitDetailsPtrInput is an input type that accepts PipelineGitDetailsArgs, PipelineGitDetailsPtr and PipelineGitDetailsPtrOutput values.
// You can construct a concrete instance of `PipelineGitDetailsPtrInput` via:
//
//	        PipelineGitDetailsArgs{...}
//
//	or:
//
//	        nil
type PipelineGitDetailsPtrInput interface {
	pulumi.Input

	ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput
	ToPipelineGitDetailsPtrOutputWithContext(context.Context) PipelineGitDetailsPtrOutput
}

type pipelineGitDetailsPtrType PipelineGitDetailsArgs

func PipelineGitDetailsPtr(v *PipelineGitDetailsArgs) PipelineGitDetailsPtrInput {
	return (*pipelineGitDetailsPtrType)(v)
}

func (*pipelineGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitDetails)(nil)).Elem()
}

func (i *pipelineGitDetailsPtrType) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return i.ToPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i *pipelineGitDetailsPtrType) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitDetailsPtrOutput)
}

type PipelineGitDetailsOutput struct{ *pulumi.OutputState }

func (PipelineGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitDetails)(nil)).Elem()
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsOutput() PipelineGitDetailsOutput {
	return o
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsOutputWithContext(ctx context.Context) PipelineGitDetailsOutput {
	return o
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return o.ToPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineGitDetails) *PipelineGitDetails {
		return &v
	}).(PipelineGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o PipelineGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o PipelineGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o PipelineGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PipelineGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o PipelineGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// If the repo is harness code.
func (o PipelineGitDetailsOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *bool { return v.IsHarnessCodeRepo }).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o PipelineGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o PipelineGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type PipelineGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (PipelineGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitDetails)(nil)).Elem()
}

func (o PipelineGitDetailsPtrOutput) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return o
}

func (o PipelineGitDetailsPtrOutput) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return o
}

func (o PipelineGitDetailsPtrOutput) Elem() PipelineGitDetailsOutput {
	return o.ApplyT(func(v *PipelineGitDetails) PipelineGitDetails {
		if v != nil {
			return *v
		}
		var ret PipelineGitDetails
		return ret
	}).(PipelineGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o PipelineGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o PipelineGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o PipelineGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PipelineGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o PipelineGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// If the repo is harness code.
func (o PipelineGitDetailsPtrOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsHarnessCodeRepo
	}).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o PipelineGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o PipelineGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type PipelineGitImportInfo struct {
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
}

// PipelineGitImportInfoInput is an input type that accepts PipelineGitImportInfoArgs and PipelineGitImportInfoOutput values.
// You can construct a concrete instance of `PipelineGitImportInfoInput` via:
//
//	PipelineGitImportInfoArgs{...}
type PipelineGitImportInfoInput interface {
	pulumi.Input

	ToPipelineGitImportInfoOutput() PipelineGitImportInfoOutput
	ToPipelineGitImportInfoOutputWithContext(context.Context) PipelineGitImportInfoOutput
}

type PipelineGitImportInfoArgs struct {
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
}

func (PipelineGitImportInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitImportInfo)(nil)).Elem()
}

func (i PipelineGitImportInfoArgs) ToPipelineGitImportInfoOutput() PipelineGitImportInfoOutput {
	return i.ToPipelineGitImportInfoOutputWithContext(context.Background())
}

func (i PipelineGitImportInfoArgs) ToPipelineGitImportInfoOutputWithContext(ctx context.Context) PipelineGitImportInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitImportInfoOutput)
}

func (i PipelineGitImportInfoArgs) ToPipelineGitImportInfoPtrOutput() PipelineGitImportInfoPtrOutput {
	return i.ToPipelineGitImportInfoPtrOutputWithContext(context.Background())
}

func (i PipelineGitImportInfoArgs) ToPipelineGitImportInfoPtrOutputWithContext(ctx context.Context) PipelineGitImportInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitImportInfoOutput).ToPipelineGitImportInfoPtrOutputWithContext(ctx)
}

// PipelineGitImportInfoPtrInput is an input type that accepts PipelineGitImportInfoArgs, PipelineGitImportInfoPtr and PipelineGitImportInfoPtrOutput values.
// You can construct a concrete instance of `PipelineGitImportInfoPtrInput` via:
//
//	        PipelineGitImportInfoArgs{...}
//
//	or:
//
//	        nil
type PipelineGitImportInfoPtrInput interface {
	pulumi.Input

	ToPipelineGitImportInfoPtrOutput() PipelineGitImportInfoPtrOutput
	ToPipelineGitImportInfoPtrOutputWithContext(context.Context) PipelineGitImportInfoPtrOutput
}

type pipelineGitImportInfoPtrType PipelineGitImportInfoArgs

func PipelineGitImportInfoPtr(v *PipelineGitImportInfoArgs) PipelineGitImportInfoPtrInput {
	return (*pipelineGitImportInfoPtrType)(v)
}

func (*pipelineGitImportInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitImportInfo)(nil)).Elem()
}

func (i *pipelineGitImportInfoPtrType) ToPipelineGitImportInfoPtrOutput() PipelineGitImportInfoPtrOutput {
	return i.ToPipelineGitImportInfoPtrOutputWithContext(context.Background())
}

func (i *pipelineGitImportInfoPtrType) ToPipelineGitImportInfoPtrOutputWithContext(ctx context.Context) PipelineGitImportInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitImportInfoPtrOutput)
}

type PipelineGitImportInfoOutput struct{ *pulumi.OutputState }

func (PipelineGitImportInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitImportInfo)(nil)).Elem()
}

func (o PipelineGitImportInfoOutput) ToPipelineGitImportInfoOutput() PipelineGitImportInfoOutput {
	return o
}

func (o PipelineGitImportInfoOutput) ToPipelineGitImportInfoOutputWithContext(ctx context.Context) PipelineGitImportInfoOutput {
	return o
}

func (o PipelineGitImportInfoOutput) ToPipelineGitImportInfoPtrOutput() PipelineGitImportInfoPtrOutput {
	return o.ToPipelineGitImportInfoPtrOutputWithContext(context.Background())
}

func (o PipelineGitImportInfoOutput) ToPipelineGitImportInfoPtrOutputWithContext(ctx context.Context) PipelineGitImportInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineGitImportInfo) *PipelineGitImportInfo {
		return &v
	}).(PipelineGitImportInfoPtrOutput)
}

// Name of the branch.
func (o PipelineGitImportInfoOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitImportInfo) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PipelineGitImportInfoOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitImportInfo) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o PipelineGitImportInfoOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitImportInfo) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o PipelineGitImportInfoOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitImportInfo) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

type PipelineGitImportInfoPtrOutput struct{ *pulumi.OutputState }

func (PipelineGitImportInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitImportInfo)(nil)).Elem()
}

func (o PipelineGitImportInfoPtrOutput) ToPipelineGitImportInfoPtrOutput() PipelineGitImportInfoPtrOutput {
	return o
}

func (o PipelineGitImportInfoPtrOutput) ToPipelineGitImportInfoPtrOutputWithContext(ctx context.Context) PipelineGitImportInfoPtrOutput {
	return o
}

func (o PipelineGitImportInfoPtrOutput) Elem() PipelineGitImportInfoOutput {
	return o.ApplyT(func(v *PipelineGitImportInfo) PipelineGitImportInfo {
		if v != nil {
			return *v
		}
		var ret PipelineGitImportInfo
		return ret
	}).(PipelineGitImportInfoOutput)
}

// Name of the branch.
func (o PipelineGitImportInfoPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PipelineGitImportInfoPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o PipelineGitImportInfoPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o PipelineGitImportInfoPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitImportInfo) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

type PipelinePipelineImportRequest struct {
	// Description of the pipeline.
	PipelineDescription *string `pulumi:"pipelineDescription"`
	// Name of the pipeline.
	PipelineName *string `pulumi:"pipelineName"`
}

// PipelinePipelineImportRequestInput is an input type that accepts PipelinePipelineImportRequestArgs and PipelinePipelineImportRequestOutput values.
// You can construct a concrete instance of `PipelinePipelineImportRequestInput` via:
//
//	PipelinePipelineImportRequestArgs{...}
type PipelinePipelineImportRequestInput interface {
	pulumi.Input

	ToPipelinePipelineImportRequestOutput() PipelinePipelineImportRequestOutput
	ToPipelinePipelineImportRequestOutputWithContext(context.Context) PipelinePipelineImportRequestOutput
}

type PipelinePipelineImportRequestArgs struct {
	// Description of the pipeline.
	PipelineDescription pulumi.StringPtrInput `pulumi:"pipelineDescription"`
	// Name of the pipeline.
	PipelineName pulumi.StringPtrInput `pulumi:"pipelineName"`
}

func (PipelinePipelineImportRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelinePipelineImportRequest)(nil)).Elem()
}

func (i PipelinePipelineImportRequestArgs) ToPipelinePipelineImportRequestOutput() PipelinePipelineImportRequestOutput {
	return i.ToPipelinePipelineImportRequestOutputWithContext(context.Background())
}

func (i PipelinePipelineImportRequestArgs) ToPipelinePipelineImportRequestOutputWithContext(ctx context.Context) PipelinePipelineImportRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelinePipelineImportRequestOutput)
}

func (i PipelinePipelineImportRequestArgs) ToPipelinePipelineImportRequestPtrOutput() PipelinePipelineImportRequestPtrOutput {
	return i.ToPipelinePipelineImportRequestPtrOutputWithContext(context.Background())
}

func (i PipelinePipelineImportRequestArgs) ToPipelinePipelineImportRequestPtrOutputWithContext(ctx context.Context) PipelinePipelineImportRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelinePipelineImportRequestOutput).ToPipelinePipelineImportRequestPtrOutputWithContext(ctx)
}

// PipelinePipelineImportRequestPtrInput is an input type that accepts PipelinePipelineImportRequestArgs, PipelinePipelineImportRequestPtr and PipelinePipelineImportRequestPtrOutput values.
// You can construct a concrete instance of `PipelinePipelineImportRequestPtrInput` via:
//
//	        PipelinePipelineImportRequestArgs{...}
//
//	or:
//
//	        nil
type PipelinePipelineImportRequestPtrInput interface {
	pulumi.Input

	ToPipelinePipelineImportRequestPtrOutput() PipelinePipelineImportRequestPtrOutput
	ToPipelinePipelineImportRequestPtrOutputWithContext(context.Context) PipelinePipelineImportRequestPtrOutput
}

type pipelinePipelineImportRequestPtrType PipelinePipelineImportRequestArgs

func PipelinePipelineImportRequestPtr(v *PipelinePipelineImportRequestArgs) PipelinePipelineImportRequestPtrInput {
	return (*pipelinePipelineImportRequestPtrType)(v)
}

func (*pipelinePipelineImportRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelinePipelineImportRequest)(nil)).Elem()
}

func (i *pipelinePipelineImportRequestPtrType) ToPipelinePipelineImportRequestPtrOutput() PipelinePipelineImportRequestPtrOutput {
	return i.ToPipelinePipelineImportRequestPtrOutputWithContext(context.Background())
}

func (i *pipelinePipelineImportRequestPtrType) ToPipelinePipelineImportRequestPtrOutputWithContext(ctx context.Context) PipelinePipelineImportRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelinePipelineImportRequestPtrOutput)
}

type PipelinePipelineImportRequestOutput struct{ *pulumi.OutputState }

func (PipelinePipelineImportRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelinePipelineImportRequest)(nil)).Elem()
}

func (o PipelinePipelineImportRequestOutput) ToPipelinePipelineImportRequestOutput() PipelinePipelineImportRequestOutput {
	return o
}

func (o PipelinePipelineImportRequestOutput) ToPipelinePipelineImportRequestOutputWithContext(ctx context.Context) PipelinePipelineImportRequestOutput {
	return o
}

func (o PipelinePipelineImportRequestOutput) ToPipelinePipelineImportRequestPtrOutput() PipelinePipelineImportRequestPtrOutput {
	return o.ToPipelinePipelineImportRequestPtrOutputWithContext(context.Background())
}

func (o PipelinePipelineImportRequestOutput) ToPipelinePipelineImportRequestPtrOutputWithContext(ctx context.Context) PipelinePipelineImportRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelinePipelineImportRequest) *PipelinePipelineImportRequest {
		return &v
	}).(PipelinePipelineImportRequestPtrOutput)
}

// Description of the pipeline.
func (o PipelinePipelineImportRequestOutput) PipelineDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelinePipelineImportRequest) *string { return v.PipelineDescription }).(pulumi.StringPtrOutput)
}

// Name of the pipeline.
func (o PipelinePipelineImportRequestOutput) PipelineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelinePipelineImportRequest) *string { return v.PipelineName }).(pulumi.StringPtrOutput)
}

type PipelinePipelineImportRequestPtrOutput struct{ *pulumi.OutputState }

func (PipelinePipelineImportRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelinePipelineImportRequest)(nil)).Elem()
}

func (o PipelinePipelineImportRequestPtrOutput) ToPipelinePipelineImportRequestPtrOutput() PipelinePipelineImportRequestPtrOutput {
	return o
}

func (o PipelinePipelineImportRequestPtrOutput) ToPipelinePipelineImportRequestPtrOutputWithContext(ctx context.Context) PipelinePipelineImportRequestPtrOutput {
	return o
}

func (o PipelinePipelineImportRequestPtrOutput) Elem() PipelinePipelineImportRequestOutput {
	return o.ApplyT(func(v *PipelinePipelineImportRequest) PipelinePipelineImportRequest {
		if v != nil {
			return *v
		}
		var ret PipelinePipelineImportRequest
		return ret
	}).(PipelinePipelineImportRequestOutput)
}

// Description of the pipeline.
func (o PipelinePipelineImportRequestPtrOutput) PipelineDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelinePipelineImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.PipelineDescription
	}).(pulumi.StringPtrOutput)
}

// Name of the pipeline.
func (o PipelinePipelineImportRequestPtrOutput) PipelineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelinePipelineImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.PipelineName
	}).(pulumi.StringPtrOutput)
}

type PolicySetPolicy struct {
	// Account Identifier of the account
	Identifier string `pulumi:"identifier"`
	// Policy failure response - 'warning' for continuation, 'error' for exit
	Severity string `pulumi:"severity"`
}

// PolicySetPolicyInput is an input type that accepts PolicySetPolicyArgs and PolicySetPolicyOutput values.
// You can construct a concrete instance of `PolicySetPolicyInput` via:
//
//	PolicySetPolicyArgs{...}
type PolicySetPolicyInput interface {
	pulumi.Input

	ToPolicySetPolicyOutput() PolicySetPolicyOutput
	ToPolicySetPolicyOutputWithContext(context.Context) PolicySetPolicyOutput
}

type PolicySetPolicyArgs struct {
	// Account Identifier of the account
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Policy failure response - 'warning' for continuation, 'error' for exit
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (PolicySetPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetPolicy)(nil)).Elem()
}

func (i PolicySetPolicyArgs) ToPolicySetPolicyOutput() PolicySetPolicyOutput {
	return i.ToPolicySetPolicyOutputWithContext(context.Background())
}

func (i PolicySetPolicyArgs) ToPolicySetPolicyOutputWithContext(ctx context.Context) PolicySetPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetPolicyOutput)
}

// PolicySetPolicyArrayInput is an input type that accepts PolicySetPolicyArray and PolicySetPolicyArrayOutput values.
// You can construct a concrete instance of `PolicySetPolicyArrayInput` via:
//
//	PolicySetPolicyArray{ PolicySetPolicyArgs{...} }
type PolicySetPolicyArrayInput interface {
	pulumi.Input

	ToPolicySetPolicyArrayOutput() PolicySetPolicyArrayOutput
	ToPolicySetPolicyArrayOutputWithContext(context.Context) PolicySetPolicyArrayOutput
}

type PolicySetPolicyArray []PolicySetPolicyInput

func (PolicySetPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetPolicy)(nil)).Elem()
}

func (i PolicySetPolicyArray) ToPolicySetPolicyArrayOutput() PolicySetPolicyArrayOutput {
	return i.ToPolicySetPolicyArrayOutputWithContext(context.Background())
}

func (i PolicySetPolicyArray) ToPolicySetPolicyArrayOutputWithContext(ctx context.Context) PolicySetPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetPolicyArrayOutput)
}

type PolicySetPolicyOutput struct{ *pulumi.OutputState }

func (PolicySetPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetPolicy)(nil)).Elem()
}

func (o PolicySetPolicyOutput) ToPolicySetPolicyOutput() PolicySetPolicyOutput {
	return o
}

func (o PolicySetPolicyOutput) ToPolicySetPolicyOutputWithContext(ctx context.Context) PolicySetPolicyOutput {
	return o
}

// Account Identifier of the account
func (o PolicySetPolicyOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetPolicy) string { return v.Identifier }).(pulumi.StringOutput)
}

// Policy failure response - 'warning' for continuation, 'error' for exit
func (o PolicySetPolicyOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetPolicy) string { return v.Severity }).(pulumi.StringOutput)
}

type PolicySetPolicyArrayOutput struct{ *pulumi.OutputState }

func (PolicySetPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetPolicy)(nil)).Elem()
}

func (o PolicySetPolicyArrayOutput) ToPolicySetPolicyArrayOutput() PolicySetPolicyArrayOutput {
	return o
}

func (o PolicySetPolicyArrayOutput) ToPolicySetPolicyArrayOutputWithContext(ctx context.Context) PolicySetPolicyArrayOutput {
	return o
}

func (o PolicySetPolicyArrayOutput) Index(i pulumi.IntInput) PolicySetPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySetPolicy {
		return vs[0].([]PolicySetPolicy)[vs[1].(int)]
	}).(PolicySetPolicyOutput)
}

type PrometheusConnectorHeader struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef *string `pulumi:"encryptedValueRef"`
	// Key.
	Key string `pulumi:"key"`
	// Value.
	Value *string `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted *bool `pulumi:"valueEncrypted"`
}

// PrometheusConnectorHeaderInput is an input type that accepts PrometheusConnectorHeaderArgs and PrometheusConnectorHeaderOutput values.
// You can construct a concrete instance of `PrometheusConnectorHeaderInput` via:
//
//	PrometheusConnectorHeaderArgs{...}
type PrometheusConnectorHeaderInput interface {
	pulumi.Input

	ToPrometheusConnectorHeaderOutput() PrometheusConnectorHeaderOutput
	ToPrometheusConnectorHeaderOutputWithContext(context.Context) PrometheusConnectorHeaderOutput
}

type PrometheusConnectorHeaderArgs struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef pulumi.StringPtrInput `pulumi:"encryptedValueRef"`
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted pulumi.BoolPtrInput `pulumi:"valueEncrypted"`
}

func (PrometheusConnectorHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusConnectorHeader)(nil)).Elem()
}

func (i PrometheusConnectorHeaderArgs) ToPrometheusConnectorHeaderOutput() PrometheusConnectorHeaderOutput {
	return i.ToPrometheusConnectorHeaderOutputWithContext(context.Background())
}

func (i PrometheusConnectorHeaderArgs) ToPrometheusConnectorHeaderOutputWithContext(ctx context.Context) PrometheusConnectorHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusConnectorHeaderOutput)
}

// PrometheusConnectorHeaderArrayInput is an input type that accepts PrometheusConnectorHeaderArray and PrometheusConnectorHeaderArrayOutput values.
// You can construct a concrete instance of `PrometheusConnectorHeaderArrayInput` via:
//
//	PrometheusConnectorHeaderArray{ PrometheusConnectorHeaderArgs{...} }
type PrometheusConnectorHeaderArrayInput interface {
	pulumi.Input

	ToPrometheusConnectorHeaderArrayOutput() PrometheusConnectorHeaderArrayOutput
	ToPrometheusConnectorHeaderArrayOutputWithContext(context.Context) PrometheusConnectorHeaderArrayOutput
}

type PrometheusConnectorHeaderArray []PrometheusConnectorHeaderInput

func (PrometheusConnectorHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusConnectorHeader)(nil)).Elem()
}

func (i PrometheusConnectorHeaderArray) ToPrometheusConnectorHeaderArrayOutput() PrometheusConnectorHeaderArrayOutput {
	return i.ToPrometheusConnectorHeaderArrayOutputWithContext(context.Background())
}

func (i PrometheusConnectorHeaderArray) ToPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) PrometheusConnectorHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusConnectorHeaderArrayOutput)
}

type PrometheusConnectorHeaderOutput struct{ *pulumi.OutputState }

func (PrometheusConnectorHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusConnectorHeader)(nil)).Elem()
}

func (o PrometheusConnectorHeaderOutput) ToPrometheusConnectorHeaderOutput() PrometheusConnectorHeaderOutput {
	return o
}

func (o PrometheusConnectorHeaderOutput) ToPrometheusConnectorHeaderOutputWithContext(ctx context.Context) PrometheusConnectorHeaderOutput {
	return o
}

// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PrometheusConnectorHeaderOutput) EncryptedValueRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) *string { return v.EncryptedValueRef }).(pulumi.StringPtrOutput)
}

// Key.
func (o PrometheusConnectorHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) string { return v.Key }).(pulumi.StringOutput)
}

// Value.
func (o PrometheusConnectorHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Encrypted value.
func (o PrometheusConnectorHeaderOutput) ValueEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) *bool { return v.ValueEncrypted }).(pulumi.BoolPtrOutput)
}

type PrometheusConnectorHeaderArrayOutput struct{ *pulumi.OutputState }

func (PrometheusConnectorHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusConnectorHeader)(nil)).Elem()
}

func (o PrometheusConnectorHeaderArrayOutput) ToPrometheusConnectorHeaderArrayOutput() PrometheusConnectorHeaderArrayOutput {
	return o
}

func (o PrometheusConnectorHeaderArrayOutput) ToPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) PrometheusConnectorHeaderArrayOutput {
	return o
}

func (o PrometheusConnectorHeaderArrayOutput) Index(i pulumi.IntInput) PrometheusConnectorHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrometheusConnectorHeader {
		return vs[0].([]PrometheusConnectorHeader)[vs[1].(int)]
	}).(PrometheusConnectorHeaderOutput)
}

type ProviderSpec struct {
	// Client Id of the OAuth app to connect
	ClientId *string `pulumi:"clientId"`
	// Client Secret Ref of the OAuth app to connect
	ClientSecretRef *string `pulumi:"clientSecretRef"`
	// Delegate selectors to fetch the access token
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Host domain of the provider.
	Domain *string `pulumi:"domain"`
	// Secret Manager Ref to store the access/refresh tokens
	SecretManagerRef *string `pulumi:"secretManagerRef"`
	// The type of the provider entity.
	Type string `pulumi:"type"`
}

// ProviderSpecInput is an input type that accepts ProviderSpecArgs and ProviderSpecOutput values.
// You can construct a concrete instance of `ProviderSpecInput` via:
//
//	ProviderSpecArgs{...}
type ProviderSpecInput interface {
	pulumi.Input

	ToProviderSpecOutput() ProviderSpecOutput
	ToProviderSpecOutputWithContext(context.Context) ProviderSpecOutput
}

type ProviderSpecArgs struct {
	// Client Id of the OAuth app to connect
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret Ref of the OAuth app to connect
	ClientSecretRef pulumi.StringPtrInput `pulumi:"clientSecretRef"`
	// Delegate selectors to fetch the access token
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Host domain of the provider.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Secret Manager Ref to store the access/refresh tokens
	SecretManagerRef pulumi.StringPtrInput `pulumi:"secretManagerRef"`
	// The type of the provider entity.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProviderSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpec)(nil)).Elem()
}

func (i ProviderSpecArgs) ToProviderSpecOutput() ProviderSpecOutput {
	return i.ToProviderSpecOutputWithContext(context.Background())
}

func (i ProviderSpecArgs) ToProviderSpecOutputWithContext(ctx context.Context) ProviderSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecOutput)
}

func (i ProviderSpecArgs) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return i.ToProviderSpecPtrOutputWithContext(context.Background())
}

func (i ProviderSpecArgs) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecOutput).ToProviderSpecPtrOutputWithContext(ctx)
}

// ProviderSpecPtrInput is an input type that accepts ProviderSpecArgs, ProviderSpecPtr and ProviderSpecPtrOutput values.
// You can construct a concrete instance of `ProviderSpecPtrInput` via:
//
//	        ProviderSpecArgs{...}
//
//	or:
//
//	        nil
type ProviderSpecPtrInput interface {
	pulumi.Input

	ToProviderSpecPtrOutput() ProviderSpecPtrOutput
	ToProviderSpecPtrOutputWithContext(context.Context) ProviderSpecPtrOutput
}

type providerSpecPtrType ProviderSpecArgs

func ProviderSpecPtr(v *ProviderSpecArgs) ProviderSpecPtrInput {
	return (*providerSpecPtrType)(v)
}

func (*providerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpec)(nil)).Elem()
}

func (i *providerSpecPtrType) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return i.ToProviderSpecPtrOutputWithContext(context.Background())
}

func (i *providerSpecPtrType) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderSpecPtrOutput)
}

type ProviderSpecOutput struct{ *pulumi.OutputState }

func (ProviderSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderSpec)(nil)).Elem()
}

func (o ProviderSpecOutput) ToProviderSpecOutput() ProviderSpecOutput {
	return o
}

func (o ProviderSpecOutput) ToProviderSpecOutputWithContext(ctx context.Context) ProviderSpecOutput {
	return o
}

func (o ProviderSpecOutput) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return o.ToProviderSpecPtrOutputWithContext(context.Background())
}

func (o ProviderSpecOutput) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderSpec) *ProviderSpec {
		return &v
	}).(ProviderSpecPtrOutput)
}

// Client Id of the OAuth app to connect
func (o ProviderSpecOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret Ref of the OAuth app to connect
func (o ProviderSpecOutput) ClientSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.ClientSecretRef }).(pulumi.StringPtrOutput)
}

// Delegate selectors to fetch the access token
func (o ProviderSpecOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderSpec) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Host domain of the provider.
func (o ProviderSpecOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Secret Manager Ref to store the access/refresh tokens
func (o ProviderSpecOutput) SecretManagerRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderSpec) *string { return v.SecretManagerRef }).(pulumi.StringPtrOutput)
}

// The type of the provider entity.
func (o ProviderSpecOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderSpec) string { return v.Type }).(pulumi.StringOutput)
}

type ProviderSpecPtrOutput struct{ *pulumi.OutputState }

func (ProviderSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderSpec)(nil)).Elem()
}

func (o ProviderSpecPtrOutput) ToProviderSpecPtrOutput() ProviderSpecPtrOutput {
	return o
}

func (o ProviderSpecPtrOutput) ToProviderSpecPtrOutputWithContext(ctx context.Context) ProviderSpecPtrOutput {
	return o
}

func (o ProviderSpecPtrOutput) Elem() ProviderSpecOutput {
	return o.ApplyT(func(v *ProviderSpec) ProviderSpec {
		if v != nil {
			return *v
		}
		var ret ProviderSpec
		return ret
	}).(ProviderSpecOutput)
}

// Client Id of the OAuth app to connect
func (o ProviderSpecPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret Ref of the OAuth app to connect
func (o ProviderSpecPtrOutput) ClientSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretRef
	}).(pulumi.StringPtrOutput)
}

// Delegate selectors to fetch the access token
func (o ProviderSpecPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderSpec) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Host domain of the provider.
func (o ProviderSpecPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Secret Manager Ref to store the access/refresh tokens
func (o ProviderSpecPtrOutput) SecretManagerRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return v.SecretManagerRef
	}).(pulumi.StringPtrOutput)
}

// The type of the provider entity.
func (o ProviderSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type RepoRuleBranchBypass struct {
	// Allow users with repository edit permission to bypass.
	RepoOwners *bool `pulumi:"repoOwners"`
	// List of user ids with who can bypass.
	UserIds []string `pulumi:"userIds"`
}

// RepoRuleBranchBypassInput is an input type that accepts RepoRuleBranchBypassArgs and RepoRuleBranchBypassOutput values.
// You can construct a concrete instance of `RepoRuleBranchBypassInput` via:
//
//	RepoRuleBranchBypassArgs{...}
type RepoRuleBranchBypassInput interface {
	pulumi.Input

	ToRepoRuleBranchBypassOutput() RepoRuleBranchBypassOutput
	ToRepoRuleBranchBypassOutputWithContext(context.Context) RepoRuleBranchBypassOutput
}

type RepoRuleBranchBypassArgs struct {
	// Allow users with repository edit permission to bypass.
	RepoOwners pulumi.BoolPtrInput `pulumi:"repoOwners"`
	// List of user ids with who can bypass.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
}

func (RepoRuleBranchBypassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoRuleBranchBypass)(nil)).Elem()
}

func (i RepoRuleBranchBypassArgs) ToRepoRuleBranchBypassOutput() RepoRuleBranchBypassOutput {
	return i.ToRepoRuleBranchBypassOutputWithContext(context.Background())
}

func (i RepoRuleBranchBypassArgs) ToRepoRuleBranchBypassOutputWithContext(ctx context.Context) RepoRuleBranchBypassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoRuleBranchBypassOutput)
}

// RepoRuleBranchBypassArrayInput is an input type that accepts RepoRuleBranchBypassArray and RepoRuleBranchBypassArrayOutput values.
// You can construct a concrete instance of `RepoRuleBranchBypassArrayInput` via:
//
//	RepoRuleBranchBypassArray{ RepoRuleBranchBypassArgs{...} }
type RepoRuleBranchBypassArrayInput interface {
	pulumi.Input

	ToRepoRuleBranchBypassArrayOutput() RepoRuleBranchBypassArrayOutput
	ToRepoRuleBranchBypassArrayOutputWithContext(context.Context) RepoRuleBranchBypassArrayOutput
}

type RepoRuleBranchBypassArray []RepoRuleBranchBypassInput

func (RepoRuleBranchBypassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoRuleBranchBypass)(nil)).Elem()
}

func (i RepoRuleBranchBypassArray) ToRepoRuleBranchBypassArrayOutput() RepoRuleBranchBypassArrayOutput {
	return i.ToRepoRuleBranchBypassArrayOutputWithContext(context.Background())
}

func (i RepoRuleBranchBypassArray) ToRepoRuleBranchBypassArrayOutputWithContext(ctx context.Context) RepoRuleBranchBypassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoRuleBranchBypassArrayOutput)
}

type RepoRuleBranchBypassOutput struct{ *pulumi.OutputState }

func (RepoRuleBranchBypassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoRuleBranchBypass)(nil)).Elem()
}

func (o RepoRuleBranchBypassOutput) ToRepoRuleBranchBypassOutput() RepoRuleBranchBypassOutput {
	return o
}

func (o RepoRuleBranchBypassOutput) ToRepoRuleBranchBypassOutputWithContext(ctx context.Context) RepoRuleBranchBypassOutput {
	return o
}

// Allow users with repository edit permission to bypass.
func (o RepoRuleBranchBypassOutput) RepoOwners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchBypass) *bool { return v.RepoOwners }).(pulumi.BoolPtrOutput)
}

// List of user ids with who can bypass.
func (o RepoRuleBranchBypassOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoRuleBranchBypass) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

type RepoRuleBranchBypassArrayOutput struct{ *pulumi.OutputState }

func (RepoRuleBranchBypassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoRuleBranchBypass)(nil)).Elem()
}

func (o RepoRuleBranchBypassArrayOutput) ToRepoRuleBranchBypassArrayOutput() RepoRuleBranchBypassArrayOutput {
	return o
}

func (o RepoRuleBranchBypassArrayOutput) ToRepoRuleBranchBypassArrayOutputWithContext(ctx context.Context) RepoRuleBranchBypassArrayOutput {
	return o
}

func (o RepoRuleBranchBypassArrayOutput) Index(i pulumi.IntInput) RepoRuleBranchBypassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoRuleBranchBypass {
		return vs[0].([]RepoRuleBranchBypass)[vs[1].(int)]
	}).(RepoRuleBranchBypassOutput)
}

type RepoRuleBranchPattern struct {
	// Should rule apply to default branch of the repository.
	DefaultBranch *bool `pulumi:"defaultBranch"`
	// Globstar branch patterns on which rules will NOT be applied.
	Excludes []string `pulumi:"excludes"`
	// Globstar branch patterns on which rules will be applied.
	Includes []string `pulumi:"includes"`
}

// RepoRuleBranchPatternInput is an input type that accepts RepoRuleBranchPatternArgs and RepoRuleBranchPatternOutput values.
// You can construct a concrete instance of `RepoRuleBranchPatternInput` via:
//
//	RepoRuleBranchPatternArgs{...}
type RepoRuleBranchPatternInput interface {
	pulumi.Input

	ToRepoRuleBranchPatternOutput() RepoRuleBranchPatternOutput
	ToRepoRuleBranchPatternOutputWithContext(context.Context) RepoRuleBranchPatternOutput
}

type RepoRuleBranchPatternArgs struct {
	// Should rule apply to default branch of the repository.
	DefaultBranch pulumi.BoolPtrInput `pulumi:"defaultBranch"`
	// Globstar branch patterns on which rules will NOT be applied.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// Globstar branch patterns on which rules will be applied.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (RepoRuleBranchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoRuleBranchPattern)(nil)).Elem()
}

func (i RepoRuleBranchPatternArgs) ToRepoRuleBranchPatternOutput() RepoRuleBranchPatternOutput {
	return i.ToRepoRuleBranchPatternOutputWithContext(context.Background())
}

func (i RepoRuleBranchPatternArgs) ToRepoRuleBranchPatternOutputWithContext(ctx context.Context) RepoRuleBranchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoRuleBranchPatternOutput)
}

// RepoRuleBranchPatternArrayInput is an input type that accepts RepoRuleBranchPatternArray and RepoRuleBranchPatternArrayOutput values.
// You can construct a concrete instance of `RepoRuleBranchPatternArrayInput` via:
//
//	RepoRuleBranchPatternArray{ RepoRuleBranchPatternArgs{...} }
type RepoRuleBranchPatternArrayInput interface {
	pulumi.Input

	ToRepoRuleBranchPatternArrayOutput() RepoRuleBranchPatternArrayOutput
	ToRepoRuleBranchPatternArrayOutputWithContext(context.Context) RepoRuleBranchPatternArrayOutput
}

type RepoRuleBranchPatternArray []RepoRuleBranchPatternInput

func (RepoRuleBranchPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoRuleBranchPattern)(nil)).Elem()
}

func (i RepoRuleBranchPatternArray) ToRepoRuleBranchPatternArrayOutput() RepoRuleBranchPatternArrayOutput {
	return i.ToRepoRuleBranchPatternArrayOutputWithContext(context.Background())
}

func (i RepoRuleBranchPatternArray) ToRepoRuleBranchPatternArrayOutputWithContext(ctx context.Context) RepoRuleBranchPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoRuleBranchPatternArrayOutput)
}

type RepoRuleBranchPatternOutput struct{ *pulumi.OutputState }

func (RepoRuleBranchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoRuleBranchPattern)(nil)).Elem()
}

func (o RepoRuleBranchPatternOutput) ToRepoRuleBranchPatternOutput() RepoRuleBranchPatternOutput {
	return o
}

func (o RepoRuleBranchPatternOutput) ToRepoRuleBranchPatternOutputWithContext(ctx context.Context) RepoRuleBranchPatternOutput {
	return o
}

// Should rule apply to default branch of the repository.
func (o RepoRuleBranchPatternOutput) DefaultBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPattern) *bool { return v.DefaultBranch }).(pulumi.BoolPtrOutput)
}

// Globstar branch patterns on which rules will NOT be applied.
func (o RepoRuleBranchPatternOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoRuleBranchPattern) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// Globstar branch patterns on which rules will be applied.
func (o RepoRuleBranchPatternOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoRuleBranchPattern) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type RepoRuleBranchPatternArrayOutput struct{ *pulumi.OutputState }

func (RepoRuleBranchPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoRuleBranchPattern)(nil)).Elem()
}

func (o RepoRuleBranchPatternArrayOutput) ToRepoRuleBranchPatternArrayOutput() RepoRuleBranchPatternArrayOutput {
	return o
}

func (o RepoRuleBranchPatternArrayOutput) ToRepoRuleBranchPatternArrayOutputWithContext(ctx context.Context) RepoRuleBranchPatternArrayOutput {
	return o
}

func (o RepoRuleBranchPatternArrayOutput) Index(i pulumi.IntInput) RepoRuleBranchPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoRuleBranchPattern {
		return vs[0].([]RepoRuleBranchPattern)[vs[1].(int)]
	}).(RepoRuleBranchPatternOutput)
}

type RepoRuleBranchPolicy struct {
	// Limit which merge strategies are available to merge a pull request(Any of squash, rebase, merge).
	AllowMergeStrategies []string `pulumi:"allowMergeStrategies"`
	// Only allow users with bypass permission to create matching branches.
	BlockBranchCreation *bool `pulumi:"blockBranchCreation"`
	// Only allow users with bypass permission to delete matching branches.
	BlockBranchDeletion *bool `pulumi:"blockBranchDeletion"`
	// Automatically delete the source branch of a pull request after it is merged.
	DeleteBranchOnMerge *bool `pulumi:"deleteBranchOnMerge"`
	// Require approval on pull requests from one reviewer for each codeowner rule.
	RequireCodeOwners *bool `pulumi:"requireCodeOwners"`
	// Require re-approval when there are new changes in the pull request.
	RequireLatestCommitApproval *bool `pulumi:"requireLatestCommitApproval"`
	// Require approval on pull requests from a minimum number of reviewers.
	RequireMinimumApprovalCount *int `pulumi:"requireMinimumApprovalCount"`
	// Require all request for changes have been resolved.
	RequireNoChangeRequest *bool `pulumi:"requireNoChangeRequest"`
	// Do not allow any changes to matching branches without a pull request.
	RequirePullRequest *bool `pulumi:"requirePullRequest"`
	// All comments on a pull request must be resolved before it can be merged.
	RequireResolveAllComments *bool `pulumi:"requireResolveAllComments"`
	// Selected status checks must pass before a pull request can be merged.
	RequireStatusChecks []string `pulumi:"requireStatusChecks"`
}

// RepoRuleBranchPolicyInput is an input type that accepts RepoRuleBranchPolicyArgs and RepoRuleBranchPolicyOutput values.
// You can construct a concrete instance of `RepoRuleBranchPolicyInput` via:
//
//	RepoRuleBranchPolicyArgs{...}
type RepoRuleBranchPolicyInput interface {
	pulumi.Input

	ToRepoRuleBranchPolicyOutput() RepoRuleBranchPolicyOutput
	ToRepoRuleBranchPolicyOutputWithContext(context.Context) RepoRuleBranchPolicyOutput
}

type RepoRuleBranchPolicyArgs struct {
	// Limit which merge strategies are available to merge a pull request(Any of squash, rebase, merge).
	AllowMergeStrategies pulumi.StringArrayInput `pulumi:"allowMergeStrategies"`
	// Only allow users with bypass permission to create matching branches.
	BlockBranchCreation pulumi.BoolPtrInput `pulumi:"blockBranchCreation"`
	// Only allow users with bypass permission to delete matching branches.
	BlockBranchDeletion pulumi.BoolPtrInput `pulumi:"blockBranchDeletion"`
	// Automatically delete the source branch of a pull request after it is merged.
	DeleteBranchOnMerge pulumi.BoolPtrInput `pulumi:"deleteBranchOnMerge"`
	// Require approval on pull requests from one reviewer for each codeowner rule.
	RequireCodeOwners pulumi.BoolPtrInput `pulumi:"requireCodeOwners"`
	// Require re-approval when there are new changes in the pull request.
	RequireLatestCommitApproval pulumi.BoolPtrInput `pulumi:"requireLatestCommitApproval"`
	// Require approval on pull requests from a minimum number of reviewers.
	RequireMinimumApprovalCount pulumi.IntPtrInput `pulumi:"requireMinimumApprovalCount"`
	// Require all request for changes have been resolved.
	RequireNoChangeRequest pulumi.BoolPtrInput `pulumi:"requireNoChangeRequest"`
	// Do not allow any changes to matching branches without a pull request.
	RequirePullRequest pulumi.BoolPtrInput `pulumi:"requirePullRequest"`
	// All comments on a pull request must be resolved before it can be merged.
	RequireResolveAllComments pulumi.BoolPtrInput `pulumi:"requireResolveAllComments"`
	// Selected status checks must pass before a pull request can be merged.
	RequireStatusChecks pulumi.StringArrayInput `pulumi:"requireStatusChecks"`
}

func (RepoRuleBranchPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoRuleBranchPolicy)(nil)).Elem()
}

func (i RepoRuleBranchPolicyArgs) ToRepoRuleBranchPolicyOutput() RepoRuleBranchPolicyOutput {
	return i.ToRepoRuleBranchPolicyOutputWithContext(context.Background())
}

func (i RepoRuleBranchPolicyArgs) ToRepoRuleBranchPolicyOutputWithContext(ctx context.Context) RepoRuleBranchPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoRuleBranchPolicyOutput)
}

// RepoRuleBranchPolicyArrayInput is an input type that accepts RepoRuleBranchPolicyArray and RepoRuleBranchPolicyArrayOutput values.
// You can construct a concrete instance of `RepoRuleBranchPolicyArrayInput` via:
//
//	RepoRuleBranchPolicyArray{ RepoRuleBranchPolicyArgs{...} }
type RepoRuleBranchPolicyArrayInput interface {
	pulumi.Input

	ToRepoRuleBranchPolicyArrayOutput() RepoRuleBranchPolicyArrayOutput
	ToRepoRuleBranchPolicyArrayOutputWithContext(context.Context) RepoRuleBranchPolicyArrayOutput
}

type RepoRuleBranchPolicyArray []RepoRuleBranchPolicyInput

func (RepoRuleBranchPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoRuleBranchPolicy)(nil)).Elem()
}

func (i RepoRuleBranchPolicyArray) ToRepoRuleBranchPolicyArrayOutput() RepoRuleBranchPolicyArrayOutput {
	return i.ToRepoRuleBranchPolicyArrayOutputWithContext(context.Background())
}

func (i RepoRuleBranchPolicyArray) ToRepoRuleBranchPolicyArrayOutputWithContext(ctx context.Context) RepoRuleBranchPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoRuleBranchPolicyArrayOutput)
}

type RepoRuleBranchPolicyOutput struct{ *pulumi.OutputState }

func (RepoRuleBranchPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoRuleBranchPolicy)(nil)).Elem()
}

func (o RepoRuleBranchPolicyOutput) ToRepoRuleBranchPolicyOutput() RepoRuleBranchPolicyOutput {
	return o
}

func (o RepoRuleBranchPolicyOutput) ToRepoRuleBranchPolicyOutputWithContext(ctx context.Context) RepoRuleBranchPolicyOutput {
	return o
}

// Limit which merge strategies are available to merge a pull request(Any of squash, rebase, merge).
func (o RepoRuleBranchPolicyOutput) AllowMergeStrategies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) []string { return v.AllowMergeStrategies }).(pulumi.StringArrayOutput)
}

// Only allow users with bypass permission to create matching branches.
func (o RepoRuleBranchPolicyOutput) BlockBranchCreation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.BlockBranchCreation }).(pulumi.BoolPtrOutput)
}

// Only allow users with bypass permission to delete matching branches.
func (o RepoRuleBranchPolicyOutput) BlockBranchDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.BlockBranchDeletion }).(pulumi.BoolPtrOutput)
}

// Automatically delete the source branch of a pull request after it is merged.
func (o RepoRuleBranchPolicyOutput) DeleteBranchOnMerge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.DeleteBranchOnMerge }).(pulumi.BoolPtrOutput)
}

// Require approval on pull requests from one reviewer for each codeowner rule.
func (o RepoRuleBranchPolicyOutput) RequireCodeOwners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.RequireCodeOwners }).(pulumi.BoolPtrOutput)
}

// Require re-approval when there are new changes in the pull request.
func (o RepoRuleBranchPolicyOutput) RequireLatestCommitApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.RequireLatestCommitApproval }).(pulumi.BoolPtrOutput)
}

// Require approval on pull requests from a minimum number of reviewers.
func (o RepoRuleBranchPolicyOutput) RequireMinimumApprovalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *int { return v.RequireMinimumApprovalCount }).(pulumi.IntPtrOutput)
}

// Require all request for changes have been resolved.
func (o RepoRuleBranchPolicyOutput) RequireNoChangeRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.RequireNoChangeRequest }).(pulumi.BoolPtrOutput)
}

// Do not allow any changes to matching branches without a pull request.
func (o RepoRuleBranchPolicyOutput) RequirePullRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.RequirePullRequest }).(pulumi.BoolPtrOutput)
}

// All comments on a pull request must be resolved before it can be merged.
func (o RepoRuleBranchPolicyOutput) RequireResolveAllComments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) *bool { return v.RequireResolveAllComments }).(pulumi.BoolPtrOutput)
}

// Selected status checks must pass before a pull request can be merged.
func (o RepoRuleBranchPolicyOutput) RequireStatusChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoRuleBranchPolicy) []string { return v.RequireStatusChecks }).(pulumi.StringArrayOutput)
}

type RepoRuleBranchPolicyArrayOutput struct{ *pulumi.OutputState }

func (RepoRuleBranchPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoRuleBranchPolicy)(nil)).Elem()
}

func (o RepoRuleBranchPolicyArrayOutput) ToRepoRuleBranchPolicyArrayOutput() RepoRuleBranchPolicyArrayOutput {
	return o
}

func (o RepoRuleBranchPolicyArrayOutput) ToRepoRuleBranchPolicyArrayOutputWithContext(ctx context.Context) RepoRuleBranchPolicyArrayOutput {
	return o
}

func (o RepoRuleBranchPolicyArrayOutput) Index(i pulumi.IntInput) RepoRuleBranchPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoRuleBranchPolicy {
		return vs[0].([]RepoRuleBranchPolicy)[vs[1].(int)]
	}).(RepoRuleBranchPolicyOutput)
}

type RepoSource struct {
	// The host URL for the import source.
	Host *string `pulumi:"host"`
	// The password for authentication when importing.
	Password *string `pulumi:"password"`
	// The full identifier of the repository on the SCM provider's platform.
	Repo *string `pulumi:"repo"`
	// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
	Type *string `pulumi:"type"`
	// The username for authentication when importing.
	Username *string `pulumi:"username"`
}

// RepoSourceInput is an input type that accepts RepoSourceArgs and RepoSourceOutput values.
// You can construct a concrete instance of `RepoSourceInput` via:
//
//	RepoSourceArgs{...}
type RepoSourceInput interface {
	pulumi.Input

	ToRepoSourceOutput() RepoSourceOutput
	ToRepoSourceOutputWithContext(context.Context) RepoSourceOutput
}

type RepoSourceArgs struct {
	// The host URL for the import source.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The password for authentication when importing.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The full identifier of the repository on the SCM provider's platform.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
	// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The username for authentication when importing.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (RepoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoSource)(nil)).Elem()
}

func (i RepoSourceArgs) ToRepoSourceOutput() RepoSourceOutput {
	return i.ToRepoSourceOutputWithContext(context.Background())
}

func (i RepoSourceArgs) ToRepoSourceOutputWithContext(ctx context.Context) RepoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoSourceOutput)
}

// RepoSourceArrayInput is an input type that accepts RepoSourceArray and RepoSourceArrayOutput values.
// You can construct a concrete instance of `RepoSourceArrayInput` via:
//
//	RepoSourceArray{ RepoSourceArgs{...} }
type RepoSourceArrayInput interface {
	pulumi.Input

	ToRepoSourceArrayOutput() RepoSourceArrayOutput
	ToRepoSourceArrayOutputWithContext(context.Context) RepoSourceArrayOutput
}

type RepoSourceArray []RepoSourceInput

func (RepoSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoSource)(nil)).Elem()
}

func (i RepoSourceArray) ToRepoSourceArrayOutput() RepoSourceArrayOutput {
	return i.ToRepoSourceArrayOutputWithContext(context.Background())
}

func (i RepoSourceArray) ToRepoSourceArrayOutputWithContext(ctx context.Context) RepoSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoSourceArrayOutput)
}

type RepoSourceOutput struct{ *pulumi.OutputState }

func (RepoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoSource)(nil)).Elem()
}

func (o RepoSourceOutput) ToRepoSourceOutput() RepoSourceOutput {
	return o
}

func (o RepoSourceOutput) ToRepoSourceOutputWithContext(ctx context.Context) RepoSourceOutput {
	return o
}

// The host URL for the import source.
func (o RepoSourceOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoSource) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The password for authentication when importing.
func (o RepoSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The full identifier of the repository on the SCM provider's platform.
func (o RepoSourceOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoSource) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
func (o RepoSourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoSource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The username for authentication when importing.
func (o RepoSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type RepoSourceArrayOutput struct{ *pulumi.OutputState }

func (RepoSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoSource)(nil)).Elem()
}

func (o RepoSourceArrayOutput) ToRepoSourceArrayOutput() RepoSourceArrayOutput {
	return o
}

func (o RepoSourceArrayOutput) ToRepoSourceArrayOutputWithContext(ctx context.Context) RepoSourceArrayOutput {
	return o
}

func (o RepoSourceArrayOutput) Index(i pulumi.IntInput) RepoSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoSource {
		return vs[0].([]RepoSource)[vs[1].(int)]
	}).(RepoSourceOutput)
}

type ResourceGroupIncludedScope struct {
	// Account Identifier of the account
	AccountId *string `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
	Filter string `pulumi:"filter"`
	// Organization Identifier
	OrgId *string `pulumi:"orgId"`
	// Project Identifier
	ProjectId *string `pulumi:"projectId"`
}

// ResourceGroupIncludedScopeInput is an input type that accepts ResourceGroupIncludedScopeArgs and ResourceGroupIncludedScopeOutput values.
// You can construct a concrete instance of `ResourceGroupIncludedScopeInput` via:
//
//	ResourceGroupIncludedScopeArgs{...}
type ResourceGroupIncludedScopeInput interface {
	pulumi.Input

	ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput
	ToResourceGroupIncludedScopeOutputWithContext(context.Context) ResourceGroupIncludedScopeOutput
}

type ResourceGroupIncludedScopeArgs struct {
	// Account Identifier of the account
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
	Filter pulumi.StringInput `pulumi:"filter"`
	// Organization Identifier
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Project Identifier
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (ResourceGroupIncludedScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupIncludedScope)(nil)).Elem()
}

func (i ResourceGroupIncludedScopeArgs) ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput {
	return i.ToResourceGroupIncludedScopeOutputWithContext(context.Background())
}

func (i ResourceGroupIncludedScopeArgs) ToResourceGroupIncludedScopeOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupIncludedScopeOutput)
}

// ResourceGroupIncludedScopeArrayInput is an input type that accepts ResourceGroupIncludedScopeArray and ResourceGroupIncludedScopeArrayOutput values.
// You can construct a concrete instance of `ResourceGroupIncludedScopeArrayInput` via:
//
//	ResourceGroupIncludedScopeArray{ ResourceGroupIncludedScopeArgs{...} }
type ResourceGroupIncludedScopeArrayInput interface {
	pulumi.Input

	ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput
	ToResourceGroupIncludedScopeArrayOutputWithContext(context.Context) ResourceGroupIncludedScopeArrayOutput
}

type ResourceGroupIncludedScopeArray []ResourceGroupIncludedScopeInput

func (ResourceGroupIncludedScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupIncludedScope)(nil)).Elem()
}

func (i ResourceGroupIncludedScopeArray) ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput {
	return i.ToResourceGroupIncludedScopeArrayOutputWithContext(context.Background())
}

func (i ResourceGroupIncludedScopeArray) ToResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupIncludedScopeArrayOutput)
}

type ResourceGroupIncludedScopeOutput struct{ *pulumi.OutputState }

func (ResourceGroupIncludedScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupIncludedScope)(nil)).Elem()
}

func (o ResourceGroupIncludedScopeOutput) ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput {
	return o
}

func (o ResourceGroupIncludedScopeOutput) ToResourceGroupIncludedScopeOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeOutput {
	return o
}

// Account Identifier of the account
func (o ResourceGroupIncludedScopeOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
func (o ResourceGroupIncludedScopeOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) string { return v.Filter }).(pulumi.StringOutput)
}

// Organization Identifier
func (o ResourceGroupIncludedScopeOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project Identifier
func (o ResourceGroupIncludedScopeOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

type ResourceGroupIncludedScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupIncludedScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupIncludedScope)(nil)).Elem()
}

func (o ResourceGroupIncludedScopeArrayOutput) ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o ResourceGroupIncludedScopeArrayOutput) ToResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o ResourceGroupIncludedScopeArrayOutput) Index(i pulumi.IntInput) ResourceGroupIncludedScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupIncludedScope {
		return vs[0].([]ResourceGroupIncludedScope)[vs[1].(int)]
	}).(ResourceGroupIncludedScopeOutput)
}

type ResourceGroupResourceFilter struct {
	// Include all resource or not
	IncludeAllResources *bool `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources []ResourceGroupResourceFilterResource `pulumi:"resources"`
}

// ResourceGroupResourceFilterInput is an input type that accepts ResourceGroupResourceFilterArgs and ResourceGroupResourceFilterOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterInput` via:
//
//	ResourceGroupResourceFilterArgs{...}
type ResourceGroupResourceFilterInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput
	ToResourceGroupResourceFilterOutputWithContext(context.Context) ResourceGroupResourceFilterOutput
}

type ResourceGroupResourceFilterArgs struct {
	// Include all resource or not
	IncludeAllResources pulumi.BoolPtrInput `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources ResourceGroupResourceFilterResourceArrayInput `pulumi:"resources"`
}

func (ResourceGroupResourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterArgs) ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput {
	return i.ToResourceGroupResourceFilterOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterArgs) ToResourceGroupResourceFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterOutput)
}

// ResourceGroupResourceFilterArrayInput is an input type that accepts ResourceGroupResourceFilterArray and ResourceGroupResourceFilterArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterArrayInput` via:
//
//	ResourceGroupResourceFilterArray{ ResourceGroupResourceFilterArgs{...} }
type ResourceGroupResourceFilterArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput
	ToResourceGroupResourceFilterArrayOutputWithContext(context.Context) ResourceGroupResourceFilterArrayOutput
}

type ResourceGroupResourceFilterArray []ResourceGroupResourceFilterInput

func (ResourceGroupResourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterArray) ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput {
	return i.ToResourceGroupResourceFilterArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterArray) ToResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterArrayOutput)
}

type ResourceGroupResourceFilterOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterOutput) ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterOutput) ToResourceGroupResourceFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterOutput {
	return o
}

// Include all resource or not
func (o ResourceGroupResourceFilterOutput) IncludeAllResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilter) *bool { return v.IncludeAllResources }).(pulumi.BoolPtrOutput)
}

// Resources for a resource group
func (o ResourceGroupResourceFilterOutput) Resources() ResourceGroupResourceFilterResourceArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilter) []ResourceGroupResourceFilterResource { return v.Resources }).(ResourceGroupResourceFilterResourceArrayOutput)
}

type ResourceGroupResourceFilterArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterArrayOutput) ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterArrayOutput) ToResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilter {
		return vs[0].([]ResourceGroupResourceFilter)[vs[1].(int)]
	}).(ResourceGroupResourceFilterOutput)
}

type ResourceGroupResourceFilterResource struct {
	// Used to filter resources on their attributes
	AttributeFilters []ResourceGroupResourceFilterResourceAttributeFilter `pulumi:"attributeFilters"`
	// List of the identifiers
	Identifiers []string `pulumi:"identifiers"`
	// Type of the resource
	ResourceType string `pulumi:"resourceType"`
}

// ResourceGroupResourceFilterResourceInput is an input type that accepts ResourceGroupResourceFilterResourceArgs and ResourceGroupResourceFilterResourceOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceInput` via:
//
//	ResourceGroupResourceFilterResourceArgs{...}
type ResourceGroupResourceFilterResourceInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput
	ToResourceGroupResourceFilterResourceOutputWithContext(context.Context) ResourceGroupResourceFilterResourceOutput
}

type ResourceGroupResourceFilterResourceArgs struct {
	// Used to filter resources on their attributes
	AttributeFilters ResourceGroupResourceFilterResourceAttributeFilterArrayInput `pulumi:"attributeFilters"`
	// List of the identifiers
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	// Type of the resource
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (ResourceGroupResourceFilterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceArgs) ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput {
	return i.ToResourceGroupResourceFilterResourceOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceArgs) ToResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceOutput)
}

// ResourceGroupResourceFilterResourceArrayInput is an input type that accepts ResourceGroupResourceFilterResourceArray and ResourceGroupResourceFilterResourceArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceArrayInput` via:
//
//	ResourceGroupResourceFilterResourceArray{ ResourceGroupResourceFilterResourceArgs{...} }
type ResourceGroupResourceFilterResourceArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput
	ToResourceGroupResourceFilterResourceArrayOutputWithContext(context.Context) ResourceGroupResourceFilterResourceArrayOutput
}

type ResourceGroupResourceFilterResourceArray []ResourceGroupResourceFilterResourceInput

func (ResourceGroupResourceFilterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceArray) ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput {
	return i.ToResourceGroupResourceFilterResourceArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceArray) ToResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceArrayOutput)
}

type ResourceGroupResourceFilterResourceOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceOutput) ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceOutput) ToResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceOutput {
	return o
}

// Used to filter resources on their attributes
func (o ResourceGroupResourceFilterResourceOutput) AttributeFilters() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) []ResourceGroupResourceFilterResourceAttributeFilter {
		return v.AttributeFilters
	}).(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

// List of the identifiers
func (o ResourceGroupResourceFilterResourceOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

// Type of the resource
func (o ResourceGroupResourceFilterResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ResourceGroupResourceFilterResourceArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceArrayOutput) ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceArrayOutput) ToResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilterResource {
		return vs[0].([]ResourceGroupResourceFilterResource)[vs[1].(int)]
	}).(ResourceGroupResourceFilterResourceOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilter struct {
	// Name of the attribute. Valid values are `category`, `type`, `labels`, `tag` or `tags`.
	AttributeName *string `pulumi:"attributeName"`
	// Value of the attributes.Valid values for `category` are [ARTIFACTORY,CLOUD*COST,CLOUD*PROVIDER,CODE*REPO,MONITORING,SECRET*MANAGER,TICKETING], for `type` are [Production,PreProduction], for `labels`, it can be using the syntax 'label:value', for `tag` or `tags` it can be any string.
	AttributeValues []string `pulumi:"attributeValues"`
}

// ResourceGroupResourceFilterResourceAttributeFilterInput is an input type that accepts ResourceGroupResourceFilterResourceAttributeFilterArgs and ResourceGroupResourceFilterResourceAttributeFilterOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceAttributeFilterInput` via:
//
//	ResourceGroupResourceFilterResourceAttributeFilterArgs{...}
type ResourceGroupResourceFilterResourceAttributeFilterInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput
	ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput
}

type ResourceGroupResourceFilterResourceAttributeFilterArgs struct {
	// Name of the attribute. Valid values are `category`, `type`, `labels`, `tag` or `tags`.
	AttributeName pulumi.StringPtrInput `pulumi:"attributeName"`
	// Value of the attributes.Valid values for `category` are [ARTIFACTORY,CLOUD*COST,CLOUD*PROVIDER,CODE*REPO,MONITORING,SECRET*MANAGER,TICKETING], for `type` are [Production,PreProduction], for `labels`, it can be using the syntax 'label:value', for `tag` or `tags` it can be any string.
	AttributeValues pulumi.StringArrayInput `pulumi:"attributeValues"`
}

func (ResourceGroupResourceFilterResourceAttributeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArgs) ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return i.ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArgs) ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceAttributeFilterOutput)
}

// ResourceGroupResourceFilterResourceAttributeFilterArrayInput is an input type that accepts ResourceGroupResourceFilterResourceAttributeFilterArray and ResourceGroupResourceFilterResourceAttributeFilterArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceAttributeFilterArrayInput` via:
//
//	ResourceGroupResourceFilterResourceAttributeFilterArray{ ResourceGroupResourceFilterResourceAttributeFilterArgs{...} }
type ResourceGroupResourceFilterResourceAttributeFilterArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput
	ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput
}

type ResourceGroupResourceFilterResourceAttributeFilterArray []ResourceGroupResourceFilterResourceAttributeFilterInput

func (ResourceGroupResourceFilterResourceAttributeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArray) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return i.ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArray) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilterOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceAttributeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

// Name of the attribute. Valid values are `category`, `type`, `labels`, `tag` or `tags`.
func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResourceAttributeFilter) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

// Value of the attributes.Valid values for `category` are [ARTIFACTORY,CLOUD*COST,CLOUD*PROVIDER,CODE*REPO,MONITORING,SECRET*MANAGER,TICKETING], for `type` are [Production,PreProduction], for `labels`, it can be using the syntax 'label:value', for `tag` or `tags` it can be any string.
func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResourceAttributeFilter) []string { return v.AttributeValues }).(pulumi.StringArrayOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilterArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilterResourceAttributeFilter {
		return vs[0].([]ResourceGroupResourceFilterResourceAttributeFilter)[vs[1].(int)]
	}).(ResourceGroupResourceFilterResourceAttributeFilterOutput)
}

type RoleAssignmentsPrincipal struct {
	// Identifier.
	Identifier *string `pulumi:"identifier"`
	// Scope level.
	ScopeLevel *string `pulumi:"scopeLevel"`
	// Type.
	Type string `pulumi:"type"`
}

// RoleAssignmentsPrincipalInput is an input type that accepts RoleAssignmentsPrincipalArgs and RoleAssignmentsPrincipalOutput values.
// You can construct a concrete instance of `RoleAssignmentsPrincipalInput` via:
//
//	RoleAssignmentsPrincipalArgs{...}
type RoleAssignmentsPrincipalInput interface {
	pulumi.Input

	ToRoleAssignmentsPrincipalOutput() RoleAssignmentsPrincipalOutput
	ToRoleAssignmentsPrincipalOutputWithContext(context.Context) RoleAssignmentsPrincipalOutput
}

type RoleAssignmentsPrincipalArgs struct {
	// Identifier.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Scope level.
	ScopeLevel pulumi.StringPtrInput `pulumi:"scopeLevel"`
	// Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RoleAssignmentsPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentsPrincipal)(nil)).Elem()
}

func (i RoleAssignmentsPrincipalArgs) ToRoleAssignmentsPrincipalOutput() RoleAssignmentsPrincipalOutput {
	return i.ToRoleAssignmentsPrincipalOutputWithContext(context.Background())
}

func (i RoleAssignmentsPrincipalArgs) ToRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentsPrincipalOutput)
}

// RoleAssignmentsPrincipalArrayInput is an input type that accepts RoleAssignmentsPrincipalArray and RoleAssignmentsPrincipalArrayOutput values.
// You can construct a concrete instance of `RoleAssignmentsPrincipalArrayInput` via:
//
//	RoleAssignmentsPrincipalArray{ RoleAssignmentsPrincipalArgs{...} }
type RoleAssignmentsPrincipalArrayInput interface {
	pulumi.Input

	ToRoleAssignmentsPrincipalArrayOutput() RoleAssignmentsPrincipalArrayOutput
	ToRoleAssignmentsPrincipalArrayOutputWithContext(context.Context) RoleAssignmentsPrincipalArrayOutput
}

type RoleAssignmentsPrincipalArray []RoleAssignmentsPrincipalInput

func (RoleAssignmentsPrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentsPrincipal)(nil)).Elem()
}

func (i RoleAssignmentsPrincipalArray) ToRoleAssignmentsPrincipalArrayOutput() RoleAssignmentsPrincipalArrayOutput {
	return i.ToRoleAssignmentsPrincipalArrayOutputWithContext(context.Background())
}

func (i RoleAssignmentsPrincipalArray) ToRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentsPrincipalArrayOutput)
}

type RoleAssignmentsPrincipalOutput struct{ *pulumi.OutputState }

func (RoleAssignmentsPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentsPrincipal)(nil)).Elem()
}

func (o RoleAssignmentsPrincipalOutput) ToRoleAssignmentsPrincipalOutput() RoleAssignmentsPrincipalOutput {
	return o
}

func (o RoleAssignmentsPrincipalOutput) ToRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalOutput {
	return o
}

// Identifier.
func (o RoleAssignmentsPrincipalOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentsPrincipal) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Scope level.
func (o RoleAssignmentsPrincipalOutput) ScopeLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentsPrincipal) *string { return v.ScopeLevel }).(pulumi.StringPtrOutput)
}

// Type.
func (o RoleAssignmentsPrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoleAssignmentsPrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type RoleAssignmentsPrincipalArrayOutput struct{ *pulumi.OutputState }

func (RoleAssignmentsPrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentsPrincipal)(nil)).Elem()
}

func (o RoleAssignmentsPrincipalArrayOutput) ToRoleAssignmentsPrincipalArrayOutput() RoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o RoleAssignmentsPrincipalArrayOutput) ToRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o RoleAssignmentsPrincipalArrayOutput) Index(i pulumi.IntInput) RoleAssignmentsPrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleAssignmentsPrincipal {
		return vs[0].([]RoleAssignmentsPrincipal)[vs[1].(int)]
	}).(RoleAssignmentsPrincipalOutput)
}

type SecretSshkeyKerberos struct {
	// Username to use for authentication.
	Principal string `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm string `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod *string `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpec *SecretSshkeyKerberosTgtKeyTabFilePathSpec `pulumi:"tgtKeyTabFilePathSpec"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpec *SecretSshkeyKerberosTgtPasswordSpec `pulumi:"tgtPasswordSpec"`
}

// SecretSshkeyKerberosInput is an input type that accepts SecretSshkeyKerberosArgs and SecretSshkeyKerberosOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosInput` via:
//
//	SecretSshkeyKerberosArgs{...}
type SecretSshkeyKerberosInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput
	ToSecretSshkeyKerberosOutputWithContext(context.Context) SecretSshkeyKerberosOutput
}

type SecretSshkeyKerberosArgs struct {
	// Username to use for authentication.
	Principal pulumi.StringInput `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm pulumi.StringInput `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod pulumi.StringPtrInput `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpec SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput `pulumi:"tgtKeyTabFilePathSpec"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpec SecretSshkeyKerberosTgtPasswordSpecPtrInput `pulumi:"tgtPasswordSpec"`
}

func (SecretSshkeyKerberosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberos)(nil)).Elem()
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput {
	return i.ToSecretSshkeyKerberosOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosOutputWithContext(ctx context.Context) SecretSshkeyKerberosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosOutput)
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return i.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosOutput).ToSecretSshkeyKerberosPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosPtrInput is an input type that accepts SecretSshkeyKerberosArgs, SecretSshkeyKerberosPtr and SecretSshkeyKerberosPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosPtrInput` via:
//
//	        SecretSshkeyKerberosArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput
	ToSecretSshkeyKerberosPtrOutputWithContext(context.Context) SecretSshkeyKerberosPtrOutput
}

type secretSshkeyKerberosPtrType SecretSshkeyKerberosArgs

func SecretSshkeyKerberosPtr(v *SecretSshkeyKerberosArgs) SecretSshkeyKerberosPtrInput {
	return (*secretSshkeyKerberosPtrType)(v)
}

func (*secretSshkeyKerberosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberos)(nil)).Elem()
}

func (i *secretSshkeyKerberosPtrType) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return i.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosPtrType) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosPtrOutput)
}

type SecretSshkeyKerberosOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberos)(nil)).Elem()
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput {
	return o
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosOutputWithContext(ctx context.Context) SecretSshkeyKerberosOutput {
	return o
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return o.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberos) *SecretSshkeyKerberos {
		return &v
	}).(SecretSshkeyKerberosPtrOutput)
}

// Username to use for authentication.
func (o SecretSshkeyKerberosOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) string { return v.Principal }).(pulumi.StringOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o SecretSshkeyKerberosOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) string { return v.Realm }).(pulumi.StringOutput)
}

// Method to generate tgt
func (o SecretSshkeyKerberosOutput) TgtGenerationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *string { return v.TgtGenerationMethod }).(pulumi.StringPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosOutput) TgtKeyTabFilePathSpec() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		return v.TgtKeyTabFilePathSpec
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosOutput) TgtPasswordSpec() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *SecretSshkeyKerberosTgtPasswordSpec { return v.TgtPasswordSpec }).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberos)(nil)).Elem()
}

func (o SecretSshkeyKerberosPtrOutput) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return o
}

func (o SecretSshkeyKerberosPtrOutput) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return o
}

func (o SecretSshkeyKerberosPtrOutput) Elem() SecretSshkeyKerberosOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) SecretSshkeyKerberos {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberos
		return ret
	}).(SecretSshkeyKerberosOutput)
}

// Username to use for authentication.
func (o SecretSshkeyKerberosPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return &v.Principal
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o SecretSshkeyKerberosPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

// Method to generate tgt
func (o SecretSshkeyKerberosPtrOutput) TgtGenerationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return v.TgtGenerationMethod
	}).(pulumi.StringPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosPtrOutput) TgtKeyTabFilePathSpec() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		if v == nil {
			return nil
		}
		return v.TgtKeyTabFilePathSpec
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosPtrOutput) TgtPasswordSpec() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *SecretSshkeyKerberosTgtPasswordSpec {
		if v == nil {
			return nil
		}
		return v.TgtPasswordSpec
	}).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpec struct {
	// key path
	KeyPath *string `pulumi:"keyPath"`
}

// SecretSshkeyKerberosTgtKeyTabFilePathSpecInput is an input type that accepts SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs and SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtKeyTabFilePathSpecInput` via:
//
//	SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{...}
type SecretSshkeyKerberosTgtKeyTabFilePathSpecInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput
	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs struct {
	// key path
	KeyPath pulumi.StringPtrInput `pulumi:"keyPath"`
}

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput)
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput).ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput is an input type that accepts SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs, SecretSshkeyKerberosTgtKeyTabFilePathSpecPtr and SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput` via:
//
//	        SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput
	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput
}

type secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs

func SecretSshkeyKerberosTgtKeyTabFilePathSpecPtr(v *SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput {
	return (*secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType)(v)
}

func (*secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i *secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberosTgtKeyTabFilePathSpec) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		return &v
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// key path
func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberosTgtKeyTabFilePathSpec) *string { return v.KeyPath }).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) Elem() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtKeyTabFilePathSpec) SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberosTgtKeyTabFilePathSpec
		return ret
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput)
}

// key path
func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtKeyTabFilePathSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyPath
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpec struct {
	// password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
	Password *string `pulumi:"password"`
}

// SecretSshkeyKerberosTgtPasswordSpecInput is an input type that accepts SecretSshkeyKerberosTgtPasswordSpecArgs and SecretSshkeyKerberosTgtPasswordSpecOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtPasswordSpecInput` via:
//
//	SecretSshkeyKerberosTgtPasswordSpecArgs{...}
type SecretSshkeyKerberosTgtPasswordSpecInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput
	ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput
}

type SecretSshkeyKerberosTgtPasswordSpecArgs struct {
	// password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (SecretSshkeyKerberosTgtPasswordSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecOutput)
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecOutput).ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosTgtPasswordSpecPtrInput is an input type that accepts SecretSshkeyKerberosTgtPasswordSpecArgs, SecretSshkeyKerberosTgtPasswordSpecPtr and SecretSshkeyKerberosTgtPasswordSpecPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtPasswordSpecPtrInput` via:
//
//	        SecretSshkeyKerberosTgtPasswordSpecArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosTgtPasswordSpecPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput
	ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput
}

type secretSshkeyKerberosTgtPasswordSpecPtrType SecretSshkeyKerberosTgtPasswordSpecArgs

func SecretSshkeyKerberosTgtPasswordSpecPtr(v *SecretSshkeyKerberosTgtPasswordSpecArgs) SecretSshkeyKerberosTgtPasswordSpecPtrInput {
	return (*secretSshkeyKerberosTgtPasswordSpecPtrType)(v)
}

func (*secretSshkeyKerberosTgtPasswordSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (i *secretSshkeyKerberosTgtPasswordSpecPtrType) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosTgtPasswordSpecPtrType) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpecOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtPasswordSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberosTgtPasswordSpec) *SecretSshkeyKerberosTgtPasswordSpec {
		return &v
	}).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

// password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeyKerberosTgtPasswordSpecOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberosTgtPasswordSpec) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) Elem() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtPasswordSpec) SecretSshkeyKerberosTgtPasswordSpec {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberosTgtPasswordSpec
		return ret
	}).(SecretSshkeyKerberosTgtPasswordSpecOutput)
}

// password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtPasswordSpec) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySsh struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType string `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredential *SecretSshkeySshSshPasswordCredential `pulumi:"sshPasswordCredential"`
	// SSH credential of type keyPath
	SshkeyPathCredential *SecretSshkeySshSshkeyPathCredential `pulumi:"sshkeyPathCredential"`
	// SSH credential of type keyReference
	SshkeyReferenceCredential *SecretSshkeySshSshkeyReferenceCredential `pulumi:"sshkeyReferenceCredential"`
}

// SecretSshkeySshInput is an input type that accepts SecretSshkeySshArgs and SecretSshkeySshOutput values.
// You can construct a concrete instance of `SecretSshkeySshInput` via:
//
//	SecretSshkeySshArgs{...}
type SecretSshkeySshInput interface {
	pulumi.Input

	ToSecretSshkeySshOutput() SecretSshkeySshOutput
	ToSecretSshkeySshOutputWithContext(context.Context) SecretSshkeySshOutput
}

type SecretSshkeySshArgs struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType pulumi.StringInput `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredential SecretSshkeySshSshPasswordCredentialPtrInput `pulumi:"sshPasswordCredential"`
	// SSH credential of type keyPath
	SshkeyPathCredential SecretSshkeySshSshkeyPathCredentialPtrInput `pulumi:"sshkeyPathCredential"`
	// SSH credential of type keyReference
	SshkeyReferenceCredential SecretSshkeySshSshkeyReferenceCredentialPtrInput `pulumi:"sshkeyReferenceCredential"`
}

func (SecretSshkeySshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySsh)(nil)).Elem()
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshOutput() SecretSshkeySshOutput {
	return i.ToSecretSshkeySshOutputWithContext(context.Background())
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshOutputWithContext(ctx context.Context) SecretSshkeySshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshOutput)
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return i.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshOutput).ToSecretSshkeySshPtrOutputWithContext(ctx)
}

// SecretSshkeySshPtrInput is an input type that accepts SecretSshkeySshArgs, SecretSshkeySshPtr and SecretSshkeySshPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshPtrInput` via:
//
//	        SecretSshkeySshArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput
	ToSecretSshkeySshPtrOutputWithContext(context.Context) SecretSshkeySshPtrOutput
}

type secretSshkeySshPtrType SecretSshkeySshArgs

func SecretSshkeySshPtr(v *SecretSshkeySshArgs) SecretSshkeySshPtrInput {
	return (*secretSshkeySshPtrType)(v)
}

func (*secretSshkeySshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySsh)(nil)).Elem()
}

func (i *secretSshkeySshPtrType) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return i.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshPtrType) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshPtrOutput)
}

type SecretSshkeySshOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySsh)(nil)).Elem()
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshOutput() SecretSshkeySshOutput {
	return o
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshOutputWithContext(ctx context.Context) SecretSshkeySshOutput {
	return o
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return o.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySsh) *SecretSshkeySsh {
		return &v
	}).(SecretSshkeySshPtrOutput)
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o SecretSshkeySshOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySsh) string { return v.CredentialType }).(pulumi.StringOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshOutput) SshPasswordCredential() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshPasswordCredential { return v.SshPasswordCredential }).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH credential of type keyPath
func (o SecretSshkeySshOutput) SshkeyPathCredential() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshkeyPathCredential { return v.SshkeyPathCredential }).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshOutput) SshkeyReferenceCredential() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshkeyReferenceCredential { return v.SshkeyReferenceCredential }).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySsh)(nil)).Elem()
}

func (o SecretSshkeySshPtrOutput) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return o
}

func (o SecretSshkeySshPtrOutput) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return o
}

func (o SecretSshkeySshPtrOutput) Elem() SecretSshkeySshOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) SecretSshkeySsh {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySsh
		return ret
	}).(SecretSshkeySshOutput)
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o SecretSshkeySshPtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshPtrOutput) SshPasswordCredential() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshPasswordCredential {
		if v == nil {
			return nil
		}
		return v.SshPasswordCredential
	}).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH credential of type keyPath
func (o SecretSshkeySshPtrOutput) SshkeyPathCredential() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshkeyPathCredential {
		if v == nil {
			return nil
		}
		return v.SshkeyPathCredential
	}).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshPtrOutput) SshkeyReferenceCredential() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshkeyReferenceCredential {
		if v == nil {
			return nil
		}
		return v.SshkeyReferenceCredential
	}).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshSshPasswordCredential struct {
	// SSH Password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
	Password string `pulumi:"password"`
	// SSH Username.
	UserName string `pulumi:"userName"`
}

// SecretSshkeySshSshPasswordCredentialInput is an input type that accepts SecretSshkeySshSshPasswordCredentialArgs and SecretSshkeySshSshPasswordCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshPasswordCredentialInput` via:
//
//	SecretSshkeySshSshPasswordCredentialArgs{...}
type SecretSshkeySshSshPasswordCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput
	ToSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Context) SecretSshkeySshSshPasswordCredentialOutput
}

type SecretSshkeySshSshPasswordCredentialArgs struct {
	// SSH Password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
	Password pulumi.StringInput `pulumi:"password"`
	// SSH Username.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SecretSshkeySshSshPasswordCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialOutput)
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialOutput).ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshPasswordCredentialPtrInput is an input type that accepts SecretSshkeySshSshPasswordCredentialArgs, SecretSshkeySshSshPasswordCredentialPtr and SecretSshkeySshSshPasswordCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshPasswordCredentialPtrInput` via:
//
//	        SecretSshkeySshSshPasswordCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshPasswordCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput
	ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput
}

type secretSshkeySshSshPasswordCredentialPtrType SecretSshkeySshSshPasswordCredentialArgs

func SecretSshkeySshSshPasswordCredentialPtr(v *SecretSshkeySshSshPasswordCredentialArgs) SecretSshkeySshSshPasswordCredentialPtrInput {
	return (*secretSshkeySshSshPasswordCredentialPtrType)(v)
}

func (*secretSshkeySshSshPasswordCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshPasswordCredentialPtrType) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshPasswordCredentialPtrType) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

type SecretSshkeySshSshPasswordCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshPasswordCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshPasswordCredential) *SecretSshkeySshSshPasswordCredential {
		return &v
	}).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH Password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshPasswordCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshPasswordCredential) string { return v.Password }).(pulumi.StringOutput)
}

// SSH Username.
func (o SecretSshkeySshSshPasswordCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshPasswordCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshPasswordCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshPasswordCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) Elem() SecretSshkeySshSshPasswordCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) SecretSshkeySshSshPasswordCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshPasswordCredential
		return ret
	}).(SecretSshkeySshSshPasswordCredentialOutput)
}

// SSH Password. To reference a password at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a password at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshPasswordCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// SSH Username.
func (o SecretSshkeySshSshPasswordCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySshSshkeyPathCredential struct {
	// Encrypted Passphrase . To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
	EncryptedPassphrase *string `pulumi:"encryptedPassphrase"`
	// Path of the key file.
	KeyPath string `pulumi:"keyPath"`
	// SSH Username.
	UserName string `pulumi:"userName"`
}

// SecretSshkeySshSshkeyPathCredentialInput is an input type that accepts SecretSshkeySshSshkeyPathCredentialArgs and SecretSshkeySshSshkeyPathCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyPathCredentialInput` via:
//
//	SecretSshkeySshSshkeyPathCredentialArgs{...}
type SecretSshkeySshSshkeyPathCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput
	ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Context) SecretSshkeySshSshkeyPathCredentialOutput
}

type SecretSshkeySshSshkeyPathCredentialArgs struct {
	// Encrypted Passphrase . To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
	EncryptedPassphrase pulumi.StringPtrInput `pulumi:"encryptedPassphrase"`
	// Path of the key file.
	KeyPath pulumi.StringInput `pulumi:"keyPath"`
	// SSH Username.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SecretSshkeySshSshkeyPathCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialOutput)
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialOutput).ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshkeyPathCredentialPtrInput is an input type that accepts SecretSshkeySshSshkeyPathCredentialArgs, SecretSshkeySshSshkeyPathCredentialPtr and SecretSshkeySshSshkeyPathCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyPathCredentialPtrInput` via:
//
//	        SecretSshkeySshSshkeyPathCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshkeyPathCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput
	ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput
}

type secretSshkeySshSshkeyPathCredentialPtrType SecretSshkeySshSshkeyPathCredentialArgs

func SecretSshkeySshSshkeyPathCredentialPtr(v *SecretSshkeySshSshkeyPathCredentialArgs) SecretSshkeySshSshkeyPathCredentialPtrInput {
	return (*secretSshkeySshSshkeyPathCredentialPtrType)(v)
}

func (*secretSshkeySshSshkeyPathCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshkeyPathCredentialPtrType) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshkeyPathCredentialPtrType) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

type SecretSshkeySshSshkeyPathCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyPathCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshkeyPathCredential) *SecretSshkeySshSshkeyPathCredential {
		return &v
	}).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// Encrypted Passphrase . To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshkeyPathCredentialOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) *string { return v.EncryptedPassphrase }).(pulumi.StringPtrOutput)
}

// Path of the key file.
func (o SecretSshkeySshSshkeyPathCredentialOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) string { return v.KeyPath }).(pulumi.StringOutput)
}

// SSH Username.
func (o SecretSshkeySshSshkeyPathCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshkeyPathCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyPathCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) Elem() SecretSshkeySshSshkeyPathCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) SecretSshkeySshSshkeyPathCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshkeyPathCredential
		return ret
	}).(SecretSshkeySshSshkeyPathCredentialOutput)
}

// Encrypted Passphrase . To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return v.EncryptedPassphrase
	}).(pulumi.StringPtrOutput)
}

// Path of the key file.
func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return &v.KeyPath
	}).(pulumi.StringPtrOutput)
}

// SSH Username.
func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySshSshkeyReferenceCredential struct {
	// Encrypted Passphrase. To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
	EncryptedPassphrase *string `pulumi:"encryptedPassphrase"`
	// SSH key. To reference a key at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a key at the account scope, prefix 'account` to the expression: account.{identifier}
	Key string `pulumi:"key"`
	// SSH Username.
	UserName string `pulumi:"userName"`
}

// SecretSshkeySshSshkeyReferenceCredentialInput is an input type that accepts SecretSshkeySshSshkeyReferenceCredentialArgs and SecretSshkeySshSshkeyReferenceCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyReferenceCredentialInput` via:
//
//	SecretSshkeySshSshkeyReferenceCredentialArgs{...}
type SecretSshkeySshSshkeyReferenceCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput
	ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput
}

type SecretSshkeySshSshkeyReferenceCredentialArgs struct {
	// Encrypted Passphrase. To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
	EncryptedPassphrase pulumi.StringPtrInput `pulumi:"encryptedPassphrase"`
	// SSH key. To reference a key at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a key at the account scope, prefix 'account` to the expression: account.{identifier}
	Key pulumi.StringInput `pulumi:"key"`
	// SSH Username.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SecretSshkeySshSshkeyReferenceCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialOutput)
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialOutput).ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshkeyReferenceCredentialPtrInput is an input type that accepts SecretSshkeySshSshkeyReferenceCredentialArgs, SecretSshkeySshSshkeyReferenceCredentialPtr and SecretSshkeySshSshkeyReferenceCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyReferenceCredentialPtrInput` via:
//
//	        SecretSshkeySshSshkeyReferenceCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshkeyReferenceCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput
	ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput
}

type secretSshkeySshSshkeyReferenceCredentialPtrType SecretSshkeySshSshkeyReferenceCredentialArgs

func SecretSshkeySshSshkeyReferenceCredentialPtr(v *SecretSshkeySshSshkeyReferenceCredentialArgs) SecretSshkeySshSshkeyReferenceCredentialPtrInput {
	return (*secretSshkeySshSshkeyReferenceCredentialPtrType)(v)
}

func (*secretSshkeySshSshkeyReferenceCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshkeyReferenceCredentialPtrType) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshkeyReferenceCredentialPtrType) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshSshkeyReferenceCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyReferenceCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshkeyReferenceCredential) *SecretSshkeySshSshkeyReferenceCredential {
		return &v
	}).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

// Encrypted Passphrase. To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshkeyReferenceCredentialOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) *string { return v.EncryptedPassphrase }).(pulumi.StringPtrOutput)
}

// SSH key. To reference a key at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a key at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshkeyReferenceCredentialOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) string { return v.Key }).(pulumi.StringOutput)
}

// SSH Username.
func (o SecretSshkeySshSshkeyReferenceCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshkeyReferenceCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) Elem() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) SecretSshkeySshSshkeyReferenceCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshkeyReferenceCredential
		return ret
	}).(SecretSshkeySshSshkeyReferenceCredentialOutput)
}

// Encrypted Passphrase. To reference a encryptedPassphrase at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a encryptedPassPhrase at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return v.EncryptedPassphrase
	}).(pulumi.StringPtrOutput)
}

// SSH key. To reference a key at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a key at the account scope, prefix 'account` to the expression: account.{identifier}
func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// SSH Username.
func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretTextAdditionalMetadata struct {
	Values []SecretTextAdditionalMetadataValue `pulumi:"values"`
}

// SecretTextAdditionalMetadataInput is an input type that accepts SecretTextAdditionalMetadataArgs and SecretTextAdditionalMetadataOutput values.
// You can construct a concrete instance of `SecretTextAdditionalMetadataInput` via:
//
//	SecretTextAdditionalMetadataArgs{...}
type SecretTextAdditionalMetadataInput interface {
	pulumi.Input

	ToSecretTextAdditionalMetadataOutput() SecretTextAdditionalMetadataOutput
	ToSecretTextAdditionalMetadataOutputWithContext(context.Context) SecretTextAdditionalMetadataOutput
}

type SecretTextAdditionalMetadataArgs struct {
	Values SecretTextAdditionalMetadataValueArrayInput `pulumi:"values"`
}

func (SecretTextAdditionalMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTextAdditionalMetadata)(nil)).Elem()
}

func (i SecretTextAdditionalMetadataArgs) ToSecretTextAdditionalMetadataOutput() SecretTextAdditionalMetadataOutput {
	return i.ToSecretTextAdditionalMetadataOutputWithContext(context.Background())
}

func (i SecretTextAdditionalMetadataArgs) ToSecretTextAdditionalMetadataOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTextAdditionalMetadataOutput)
}

// SecretTextAdditionalMetadataArrayInput is an input type that accepts SecretTextAdditionalMetadataArray and SecretTextAdditionalMetadataArrayOutput values.
// You can construct a concrete instance of `SecretTextAdditionalMetadataArrayInput` via:
//
//	SecretTextAdditionalMetadataArray{ SecretTextAdditionalMetadataArgs{...} }
type SecretTextAdditionalMetadataArrayInput interface {
	pulumi.Input

	ToSecretTextAdditionalMetadataArrayOutput() SecretTextAdditionalMetadataArrayOutput
	ToSecretTextAdditionalMetadataArrayOutputWithContext(context.Context) SecretTextAdditionalMetadataArrayOutput
}

type SecretTextAdditionalMetadataArray []SecretTextAdditionalMetadataInput

func (SecretTextAdditionalMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTextAdditionalMetadata)(nil)).Elem()
}

func (i SecretTextAdditionalMetadataArray) ToSecretTextAdditionalMetadataArrayOutput() SecretTextAdditionalMetadataArrayOutput {
	return i.ToSecretTextAdditionalMetadataArrayOutputWithContext(context.Background())
}

func (i SecretTextAdditionalMetadataArray) ToSecretTextAdditionalMetadataArrayOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTextAdditionalMetadataArrayOutput)
}

type SecretTextAdditionalMetadataOutput struct{ *pulumi.OutputState }

func (SecretTextAdditionalMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTextAdditionalMetadata)(nil)).Elem()
}

func (o SecretTextAdditionalMetadataOutput) ToSecretTextAdditionalMetadataOutput() SecretTextAdditionalMetadataOutput {
	return o
}

func (o SecretTextAdditionalMetadataOutput) ToSecretTextAdditionalMetadataOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataOutput {
	return o
}

func (o SecretTextAdditionalMetadataOutput) Values() SecretTextAdditionalMetadataValueArrayOutput {
	return o.ApplyT(func(v SecretTextAdditionalMetadata) []SecretTextAdditionalMetadataValue { return v.Values }).(SecretTextAdditionalMetadataValueArrayOutput)
}

type SecretTextAdditionalMetadataArrayOutput struct{ *pulumi.OutputState }

func (SecretTextAdditionalMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTextAdditionalMetadata)(nil)).Elem()
}

func (o SecretTextAdditionalMetadataArrayOutput) ToSecretTextAdditionalMetadataArrayOutput() SecretTextAdditionalMetadataArrayOutput {
	return o
}

func (o SecretTextAdditionalMetadataArrayOutput) ToSecretTextAdditionalMetadataArrayOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataArrayOutput {
	return o
}

func (o SecretTextAdditionalMetadataArrayOutput) Index(i pulumi.IntInput) SecretTextAdditionalMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretTextAdditionalMetadata {
		return vs[0].([]SecretTextAdditionalMetadata)[vs[1].(int)]
	}).(SecretTextAdditionalMetadataOutput)
}

type SecretTextAdditionalMetadataValue struct {
	Version *string `pulumi:"version"`
}

// SecretTextAdditionalMetadataValueInput is an input type that accepts SecretTextAdditionalMetadataValueArgs and SecretTextAdditionalMetadataValueOutput values.
// You can construct a concrete instance of `SecretTextAdditionalMetadataValueInput` via:
//
//	SecretTextAdditionalMetadataValueArgs{...}
type SecretTextAdditionalMetadataValueInput interface {
	pulumi.Input

	ToSecretTextAdditionalMetadataValueOutput() SecretTextAdditionalMetadataValueOutput
	ToSecretTextAdditionalMetadataValueOutputWithContext(context.Context) SecretTextAdditionalMetadataValueOutput
}

type SecretTextAdditionalMetadataValueArgs struct {
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SecretTextAdditionalMetadataValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (i SecretTextAdditionalMetadataValueArgs) ToSecretTextAdditionalMetadataValueOutput() SecretTextAdditionalMetadataValueOutput {
	return i.ToSecretTextAdditionalMetadataValueOutputWithContext(context.Background())
}

func (i SecretTextAdditionalMetadataValueArgs) ToSecretTextAdditionalMetadataValueOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTextAdditionalMetadataValueOutput)
}

// SecretTextAdditionalMetadataValueArrayInput is an input type that accepts SecretTextAdditionalMetadataValueArray and SecretTextAdditionalMetadataValueArrayOutput values.
// You can construct a concrete instance of `SecretTextAdditionalMetadataValueArrayInput` via:
//
//	SecretTextAdditionalMetadataValueArray{ SecretTextAdditionalMetadataValueArgs{...} }
type SecretTextAdditionalMetadataValueArrayInput interface {
	pulumi.Input

	ToSecretTextAdditionalMetadataValueArrayOutput() SecretTextAdditionalMetadataValueArrayOutput
	ToSecretTextAdditionalMetadataValueArrayOutputWithContext(context.Context) SecretTextAdditionalMetadataValueArrayOutput
}

type SecretTextAdditionalMetadataValueArray []SecretTextAdditionalMetadataValueInput

func (SecretTextAdditionalMetadataValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (i SecretTextAdditionalMetadataValueArray) ToSecretTextAdditionalMetadataValueArrayOutput() SecretTextAdditionalMetadataValueArrayOutput {
	return i.ToSecretTextAdditionalMetadataValueArrayOutputWithContext(context.Background())
}

func (i SecretTextAdditionalMetadataValueArray) ToSecretTextAdditionalMetadataValueArrayOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTextAdditionalMetadataValueArrayOutput)
}

type SecretTextAdditionalMetadataValueOutput struct{ *pulumi.OutputState }

func (SecretTextAdditionalMetadataValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (o SecretTextAdditionalMetadataValueOutput) ToSecretTextAdditionalMetadataValueOutput() SecretTextAdditionalMetadataValueOutput {
	return o
}

func (o SecretTextAdditionalMetadataValueOutput) ToSecretTextAdditionalMetadataValueOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataValueOutput {
	return o
}

func (o SecretTextAdditionalMetadataValueOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretTextAdditionalMetadataValue) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretTextAdditionalMetadataValueArrayOutput struct{ *pulumi.OutputState }

func (SecretTextAdditionalMetadataValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (o SecretTextAdditionalMetadataValueArrayOutput) ToSecretTextAdditionalMetadataValueArrayOutput() SecretTextAdditionalMetadataValueArrayOutput {
	return o
}

func (o SecretTextAdditionalMetadataValueArrayOutput) ToSecretTextAdditionalMetadataValueArrayOutputWithContext(ctx context.Context) SecretTextAdditionalMetadataValueArrayOutput {
	return o
}

func (o SecretTextAdditionalMetadataValueArrayOutput) Index(i pulumi.IntInput) SecretTextAdditionalMetadataValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretTextAdditionalMetadataValue {
		return vs[0].([]SecretTextAdditionalMetadataValue)[vs[1].(int)]
	}).(SecretTextAdditionalMetadataValueOutput)
}

type ServiceGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	Branch *string `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// If the repo is harness code
	IsHarnessCodeRepo *bool `pulumi:"isHarnessCodeRepo"`
	// If the branch being created is new
	IsNewBranch *bool `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Load service yaml from catch
	LoadFromCache *bool `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch *bool `pulumi:"loadFromFallbackBranch"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// ServiceGitDetailsInput is an input type that accepts ServiceGitDetailsArgs and ServiceGitDetailsOutput values.
// You can construct a concrete instance of `ServiceGitDetailsInput` via:
//
//	ServiceGitDetailsArgs{...}
type ServiceGitDetailsInput interface {
	pulumi.Input

	ToServiceGitDetailsOutput() ServiceGitDetailsOutput
	ToServiceGitDetailsOutputWithContext(context.Context) ServiceGitDetailsOutput
}

type ServiceGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// If the repo is harness code
	IsHarnessCodeRepo pulumi.BoolPtrInput `pulumi:"isHarnessCodeRepo"`
	// If the branch being created is new
	IsNewBranch pulumi.BoolPtrInput `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Load service yaml from catch
	LoadFromCache pulumi.BoolPtrInput `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolPtrInput `pulumi:"loadFromFallbackBranch"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (ServiceGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGitDetails)(nil)).Elem()
}

func (i ServiceGitDetailsArgs) ToServiceGitDetailsOutput() ServiceGitDetailsOutput {
	return i.ToServiceGitDetailsOutputWithContext(context.Background())
}

func (i ServiceGitDetailsArgs) ToServiceGitDetailsOutputWithContext(ctx context.Context) ServiceGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGitDetailsOutput)
}

func (i ServiceGitDetailsArgs) ToServiceGitDetailsPtrOutput() ServiceGitDetailsPtrOutput {
	return i.ToServiceGitDetailsPtrOutputWithContext(context.Background())
}

func (i ServiceGitDetailsArgs) ToServiceGitDetailsPtrOutputWithContext(ctx context.Context) ServiceGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGitDetailsOutput).ToServiceGitDetailsPtrOutputWithContext(ctx)
}

// ServiceGitDetailsPtrInput is an input type that accepts ServiceGitDetailsArgs, ServiceGitDetailsPtr and ServiceGitDetailsPtrOutput values.
// You can construct a concrete instance of `ServiceGitDetailsPtrInput` via:
//
//	        ServiceGitDetailsArgs{...}
//
//	or:
//
//	        nil
type ServiceGitDetailsPtrInput interface {
	pulumi.Input

	ToServiceGitDetailsPtrOutput() ServiceGitDetailsPtrOutput
	ToServiceGitDetailsPtrOutputWithContext(context.Context) ServiceGitDetailsPtrOutput
}

type serviceGitDetailsPtrType ServiceGitDetailsArgs

func ServiceGitDetailsPtr(v *ServiceGitDetailsArgs) ServiceGitDetailsPtrInput {
	return (*serviceGitDetailsPtrType)(v)
}

func (*serviceGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGitDetails)(nil)).Elem()
}

func (i *serviceGitDetailsPtrType) ToServiceGitDetailsPtrOutput() ServiceGitDetailsPtrOutput {
	return i.ToServiceGitDetailsPtrOutputWithContext(context.Background())
}

func (i *serviceGitDetailsPtrType) ToServiceGitDetailsPtrOutputWithContext(ctx context.Context) ServiceGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGitDetailsPtrOutput)
}

type ServiceGitDetailsOutput struct{ *pulumi.OutputState }

func (ServiceGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGitDetails)(nil)).Elem()
}

func (o ServiceGitDetailsOutput) ToServiceGitDetailsOutput() ServiceGitDetailsOutput {
	return o
}

func (o ServiceGitDetailsOutput) ToServiceGitDetailsOutputWithContext(ctx context.Context) ServiceGitDetailsOutput {
	return o
}

func (o ServiceGitDetailsOutput) ToServiceGitDetailsPtrOutput() ServiceGitDetailsPtrOutput {
	return o.ToServiceGitDetailsPtrOutputWithContext(context.Background())
}

func (o ServiceGitDetailsOutput) ToServiceGitDetailsPtrOutputWithContext(ctx context.Context) ServiceGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceGitDetails) *ServiceGitDetails {
		return &v
	}).(ServiceGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o ServiceGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o ServiceGitDetailsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o ServiceGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o ServiceGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// If the repo is harness code
func (o ServiceGitDetailsOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *bool { return v.IsHarnessCodeRepo }).(pulumi.BoolPtrOutput)
}

// If the branch being created is new
func (o ServiceGitDetailsOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *bool { return v.IsNewBranch }).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o ServiceGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o ServiceGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Load service yaml from catch
func (o ServiceGitDetailsOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *bool { return v.LoadFromCache }).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o ServiceGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *bool { return v.LoadFromFallbackBranch }).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o ServiceGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o ServiceGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type ServiceGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServiceGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGitDetails)(nil)).Elem()
}

func (o ServiceGitDetailsPtrOutput) ToServiceGitDetailsPtrOutput() ServiceGitDetailsPtrOutput {
	return o
}

func (o ServiceGitDetailsPtrOutput) ToServiceGitDetailsPtrOutputWithContext(ctx context.Context) ServiceGitDetailsPtrOutput {
	return o
}

func (o ServiceGitDetailsPtrOutput) Elem() ServiceGitDetailsOutput {
	return o.ApplyT(func(v *ServiceGitDetails) ServiceGitDetails {
		if v != nil {
			return *v
		}
		var ret ServiceGitDetails
		return ret
	}).(ServiceGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o ServiceGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o ServiceGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o ServiceGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o ServiceGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// If the repo is harness code
func (o ServiceGitDetailsPtrOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsHarnessCodeRepo
	}).(pulumi.BoolPtrOutput)
}

// If the branch being created is new
func (o ServiceGitDetailsPtrOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsNewBranch
	}).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o ServiceGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o ServiceGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Load service yaml from catch
func (o ServiceGitDetailsPtrOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromCache
	}).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o ServiceGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o ServiceGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o ServiceGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type ServiceNowConnectorAuth struct {
	// Authenticate using adfs client credentials with certificate.
	Adfs *ServiceNowConnectorAuthAdfs `pulumi:"adfs"`
	// Authentication types for Jira connector
	AuthType string `pulumi:"authType"`
	// Authenticate using refresh token grant type.
	RefreshToken *ServiceNowConnectorAuthRefreshToken `pulumi:"refreshToken"`
	// Authenticate using username password.
	UsernamePassword *ServiceNowConnectorAuthUsernamePassword `pulumi:"usernamePassword"`
}

// ServiceNowConnectorAuthInput is an input type that accepts ServiceNowConnectorAuthArgs and ServiceNowConnectorAuthOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthInput` via:
//
//	ServiceNowConnectorAuthArgs{...}
type ServiceNowConnectorAuthInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthOutput() ServiceNowConnectorAuthOutput
	ToServiceNowConnectorAuthOutputWithContext(context.Context) ServiceNowConnectorAuthOutput
}

type ServiceNowConnectorAuthArgs struct {
	// Authenticate using adfs client credentials with certificate.
	Adfs ServiceNowConnectorAuthAdfsPtrInput `pulumi:"adfs"`
	// Authentication types for Jira connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Authenticate using refresh token grant type.
	RefreshToken ServiceNowConnectorAuthRefreshTokenPtrInput `pulumi:"refreshToken"`
	// Authenticate using username password.
	UsernamePassword ServiceNowConnectorAuthUsernamePasswordPtrInput `pulumi:"usernamePassword"`
}

func (ServiceNowConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuth)(nil)).Elem()
}

func (i ServiceNowConnectorAuthArgs) ToServiceNowConnectorAuthOutput() ServiceNowConnectorAuthOutput {
	return i.ToServiceNowConnectorAuthOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthArgs) ToServiceNowConnectorAuthOutputWithContext(ctx context.Context) ServiceNowConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthOutput)
}

func (i ServiceNowConnectorAuthArgs) ToServiceNowConnectorAuthPtrOutput() ServiceNowConnectorAuthPtrOutput {
	return i.ToServiceNowConnectorAuthPtrOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthArgs) ToServiceNowConnectorAuthPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthOutput).ToServiceNowConnectorAuthPtrOutputWithContext(ctx)
}

// ServiceNowConnectorAuthPtrInput is an input type that accepts ServiceNowConnectorAuthArgs, ServiceNowConnectorAuthPtr and ServiceNowConnectorAuthPtrOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthPtrInput` via:
//
//	        ServiceNowConnectorAuthArgs{...}
//
//	or:
//
//	        nil
type ServiceNowConnectorAuthPtrInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthPtrOutput() ServiceNowConnectorAuthPtrOutput
	ToServiceNowConnectorAuthPtrOutputWithContext(context.Context) ServiceNowConnectorAuthPtrOutput
}

type serviceNowConnectorAuthPtrType ServiceNowConnectorAuthArgs

func ServiceNowConnectorAuthPtr(v *ServiceNowConnectorAuthArgs) ServiceNowConnectorAuthPtrInput {
	return (*serviceNowConnectorAuthPtrType)(v)
}

func (*serviceNowConnectorAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuth)(nil)).Elem()
}

func (i *serviceNowConnectorAuthPtrType) ToServiceNowConnectorAuthPtrOutput() ServiceNowConnectorAuthPtrOutput {
	return i.ToServiceNowConnectorAuthPtrOutputWithContext(context.Background())
}

func (i *serviceNowConnectorAuthPtrType) ToServiceNowConnectorAuthPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthPtrOutput)
}

type ServiceNowConnectorAuthOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuth)(nil)).Elem()
}

func (o ServiceNowConnectorAuthOutput) ToServiceNowConnectorAuthOutput() ServiceNowConnectorAuthOutput {
	return o
}

func (o ServiceNowConnectorAuthOutput) ToServiceNowConnectorAuthOutputWithContext(ctx context.Context) ServiceNowConnectorAuthOutput {
	return o
}

func (o ServiceNowConnectorAuthOutput) ToServiceNowConnectorAuthPtrOutput() ServiceNowConnectorAuthPtrOutput {
	return o.ToServiceNowConnectorAuthPtrOutputWithContext(context.Background())
}

func (o ServiceNowConnectorAuthOutput) ToServiceNowConnectorAuthPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNowConnectorAuth) *ServiceNowConnectorAuth {
		return &v
	}).(ServiceNowConnectorAuthPtrOutput)
}

// Authenticate using adfs client credentials with certificate.
func (o ServiceNowConnectorAuthOutput) Adfs() ServiceNowConnectorAuthAdfsPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuth) *ServiceNowConnectorAuthAdfs { return v.Adfs }).(ServiceNowConnectorAuthAdfsPtrOutput)
}

// Authentication types for Jira connector
func (o ServiceNowConnectorAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Authenticate using refresh token grant type.
func (o ServiceNowConnectorAuthOutput) RefreshToken() ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuth) *ServiceNowConnectorAuthRefreshToken { return v.RefreshToken }).(ServiceNowConnectorAuthRefreshTokenPtrOutput)
}

// Authenticate using username password.
func (o ServiceNowConnectorAuthOutput) UsernamePassword() ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuth) *ServiceNowConnectorAuthUsernamePassword { return v.UsernamePassword }).(ServiceNowConnectorAuthUsernamePasswordPtrOutput)
}

type ServiceNowConnectorAuthPtrOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuth)(nil)).Elem()
}

func (o ServiceNowConnectorAuthPtrOutput) ToServiceNowConnectorAuthPtrOutput() ServiceNowConnectorAuthPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthPtrOutput) ToServiceNowConnectorAuthPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthPtrOutput) Elem() ServiceNowConnectorAuthOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuth) ServiceNowConnectorAuth {
		if v != nil {
			return *v
		}
		var ret ServiceNowConnectorAuth
		return ret
	}).(ServiceNowConnectorAuthOutput)
}

// Authenticate using adfs client credentials with certificate.
func (o ServiceNowConnectorAuthPtrOutput) Adfs() ServiceNowConnectorAuthAdfsPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuth) *ServiceNowConnectorAuthAdfs {
		if v == nil {
			return nil
		}
		return v.Adfs
	}).(ServiceNowConnectorAuthAdfsPtrOutput)
}

// Authentication types for Jira connector
func (o ServiceNowConnectorAuthPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuth) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Authenticate using refresh token grant type.
func (o ServiceNowConnectorAuthPtrOutput) RefreshToken() ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuth) *ServiceNowConnectorAuthRefreshToken {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(ServiceNowConnectorAuthRefreshTokenPtrOutput)
}

// Authenticate using username password.
func (o ServiceNowConnectorAuthPtrOutput) UsernamePassword() ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuth) *ServiceNowConnectorAuthUsernamePassword {
		if v == nil {
			return nil
		}
		return v.UsernamePassword
	}).(ServiceNowConnectorAuthUsernamePasswordPtrOutput)
}

type ServiceNowConnectorAuthAdfs struct {
	// asdf URL.
	AdfsUrl string `pulumi:"adfsUrl"`
	// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CertificateRef string `pulumi:"certificateRef"`
	// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef string `pulumi:"privateKeyRef"`
	// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ResourceIdRef string `pulumi:"resourceIdRef"`
}

// ServiceNowConnectorAuthAdfsInput is an input type that accepts ServiceNowConnectorAuthAdfsArgs and ServiceNowConnectorAuthAdfsOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthAdfsInput` via:
//
//	ServiceNowConnectorAuthAdfsArgs{...}
type ServiceNowConnectorAuthAdfsInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthAdfsOutput() ServiceNowConnectorAuthAdfsOutput
	ToServiceNowConnectorAuthAdfsOutputWithContext(context.Context) ServiceNowConnectorAuthAdfsOutput
}

type ServiceNowConnectorAuthAdfsArgs struct {
	// asdf URL.
	AdfsUrl pulumi.StringInput `pulumi:"adfsUrl"`
	// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CertificateRef pulumi.StringInput `pulumi:"certificateRef"`
	// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef pulumi.StringInput `pulumi:"privateKeyRef"`
	// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ResourceIdRef pulumi.StringInput `pulumi:"resourceIdRef"`
}

func (ServiceNowConnectorAuthAdfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuthAdfs)(nil)).Elem()
}

func (i ServiceNowConnectorAuthAdfsArgs) ToServiceNowConnectorAuthAdfsOutput() ServiceNowConnectorAuthAdfsOutput {
	return i.ToServiceNowConnectorAuthAdfsOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthAdfsArgs) ToServiceNowConnectorAuthAdfsOutputWithContext(ctx context.Context) ServiceNowConnectorAuthAdfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthAdfsOutput)
}

func (i ServiceNowConnectorAuthAdfsArgs) ToServiceNowConnectorAuthAdfsPtrOutput() ServiceNowConnectorAuthAdfsPtrOutput {
	return i.ToServiceNowConnectorAuthAdfsPtrOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthAdfsArgs) ToServiceNowConnectorAuthAdfsPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthAdfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthAdfsOutput).ToServiceNowConnectorAuthAdfsPtrOutputWithContext(ctx)
}

// ServiceNowConnectorAuthAdfsPtrInput is an input type that accepts ServiceNowConnectorAuthAdfsArgs, ServiceNowConnectorAuthAdfsPtr and ServiceNowConnectorAuthAdfsPtrOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthAdfsPtrInput` via:
//
//	        ServiceNowConnectorAuthAdfsArgs{...}
//
//	or:
//
//	        nil
type ServiceNowConnectorAuthAdfsPtrInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthAdfsPtrOutput() ServiceNowConnectorAuthAdfsPtrOutput
	ToServiceNowConnectorAuthAdfsPtrOutputWithContext(context.Context) ServiceNowConnectorAuthAdfsPtrOutput
}

type serviceNowConnectorAuthAdfsPtrType ServiceNowConnectorAuthAdfsArgs

func ServiceNowConnectorAuthAdfsPtr(v *ServiceNowConnectorAuthAdfsArgs) ServiceNowConnectorAuthAdfsPtrInput {
	return (*serviceNowConnectorAuthAdfsPtrType)(v)
}

func (*serviceNowConnectorAuthAdfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuthAdfs)(nil)).Elem()
}

func (i *serviceNowConnectorAuthAdfsPtrType) ToServiceNowConnectorAuthAdfsPtrOutput() ServiceNowConnectorAuthAdfsPtrOutput {
	return i.ToServiceNowConnectorAuthAdfsPtrOutputWithContext(context.Background())
}

func (i *serviceNowConnectorAuthAdfsPtrType) ToServiceNowConnectorAuthAdfsPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthAdfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthAdfsPtrOutput)
}

type ServiceNowConnectorAuthAdfsOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthAdfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuthAdfs)(nil)).Elem()
}

func (o ServiceNowConnectorAuthAdfsOutput) ToServiceNowConnectorAuthAdfsOutput() ServiceNowConnectorAuthAdfsOutput {
	return o
}

func (o ServiceNowConnectorAuthAdfsOutput) ToServiceNowConnectorAuthAdfsOutputWithContext(ctx context.Context) ServiceNowConnectorAuthAdfsOutput {
	return o
}

func (o ServiceNowConnectorAuthAdfsOutput) ToServiceNowConnectorAuthAdfsPtrOutput() ServiceNowConnectorAuthAdfsPtrOutput {
	return o.ToServiceNowConnectorAuthAdfsPtrOutputWithContext(context.Background())
}

func (o ServiceNowConnectorAuthAdfsOutput) ToServiceNowConnectorAuthAdfsPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthAdfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNowConnectorAuthAdfs) *ServiceNowConnectorAuthAdfs {
		return &v
	}).(ServiceNowConnectorAuthAdfsPtrOutput)
}

// asdf URL.
func (o ServiceNowConnectorAuthAdfsOutput) AdfsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthAdfs) string { return v.AdfsUrl }).(pulumi.StringOutput)
}

// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsOutput) CertificateRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthAdfs) string { return v.CertificateRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthAdfs) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthAdfs) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsOutput) ResourceIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthAdfs) string { return v.ResourceIdRef }).(pulumi.StringOutput)
}

type ServiceNowConnectorAuthAdfsPtrOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthAdfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuthAdfs)(nil)).Elem()
}

func (o ServiceNowConnectorAuthAdfsPtrOutput) ToServiceNowConnectorAuthAdfsPtrOutput() ServiceNowConnectorAuthAdfsPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthAdfsPtrOutput) ToServiceNowConnectorAuthAdfsPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthAdfsPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthAdfsPtrOutput) Elem() ServiceNowConnectorAuthAdfsOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthAdfs) ServiceNowConnectorAuthAdfs {
		if v != nil {
			return *v
		}
		var ret ServiceNowConnectorAuthAdfs
		return ret
	}).(ServiceNowConnectorAuthAdfsOutput)
}

// asdf URL.
func (o ServiceNowConnectorAuthAdfsPtrOutput) AdfsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.AdfsUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsPtrOutput) CertificateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateRef
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsPtrOutput) ClientIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.ClientIdRef
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsPtrOutput) PrivateKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKeyRef
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthAdfsPtrOutput) ResourceIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceIdRef
	}).(pulumi.StringPtrOutput)
}

type ServiceNowConnectorAuthRefreshToken struct {
	// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef *string `pulumi:"clientSecretRef"`
	// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	RefreshTokenRef string `pulumi:"refreshTokenRef"`
	// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Scope *string `pulumi:"scope"`
	// Token url to use for authentication.
	TokenUrl string `pulumi:"tokenUrl"`
}

// ServiceNowConnectorAuthRefreshTokenInput is an input type that accepts ServiceNowConnectorAuthRefreshTokenArgs and ServiceNowConnectorAuthRefreshTokenOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthRefreshTokenInput` via:
//
//	ServiceNowConnectorAuthRefreshTokenArgs{...}
type ServiceNowConnectorAuthRefreshTokenInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthRefreshTokenOutput() ServiceNowConnectorAuthRefreshTokenOutput
	ToServiceNowConnectorAuthRefreshTokenOutputWithContext(context.Context) ServiceNowConnectorAuthRefreshTokenOutput
}

type ServiceNowConnectorAuthRefreshTokenArgs struct {
	// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef pulumi.StringPtrInput `pulumi:"clientSecretRef"`
	// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	RefreshTokenRef pulumi.StringInput `pulumi:"refreshTokenRef"`
	// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Token url to use for authentication.
	TokenUrl pulumi.StringInput `pulumi:"tokenUrl"`
}

func (ServiceNowConnectorAuthRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (i ServiceNowConnectorAuthRefreshTokenArgs) ToServiceNowConnectorAuthRefreshTokenOutput() ServiceNowConnectorAuthRefreshTokenOutput {
	return i.ToServiceNowConnectorAuthRefreshTokenOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthRefreshTokenArgs) ToServiceNowConnectorAuthRefreshTokenOutputWithContext(ctx context.Context) ServiceNowConnectorAuthRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthRefreshTokenOutput)
}

func (i ServiceNowConnectorAuthRefreshTokenArgs) ToServiceNowConnectorAuthRefreshTokenPtrOutput() ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return i.ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthRefreshTokenArgs) ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthRefreshTokenOutput).ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(ctx)
}

// ServiceNowConnectorAuthRefreshTokenPtrInput is an input type that accepts ServiceNowConnectorAuthRefreshTokenArgs, ServiceNowConnectorAuthRefreshTokenPtr and ServiceNowConnectorAuthRefreshTokenPtrOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthRefreshTokenPtrInput` via:
//
//	        ServiceNowConnectorAuthRefreshTokenArgs{...}
//
//	or:
//
//	        nil
type ServiceNowConnectorAuthRefreshTokenPtrInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthRefreshTokenPtrOutput() ServiceNowConnectorAuthRefreshTokenPtrOutput
	ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(context.Context) ServiceNowConnectorAuthRefreshTokenPtrOutput
}

type serviceNowConnectorAuthRefreshTokenPtrType ServiceNowConnectorAuthRefreshTokenArgs

func ServiceNowConnectorAuthRefreshTokenPtr(v *ServiceNowConnectorAuthRefreshTokenArgs) ServiceNowConnectorAuthRefreshTokenPtrInput {
	return (*serviceNowConnectorAuthRefreshTokenPtrType)(v)
}

func (*serviceNowConnectorAuthRefreshTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (i *serviceNowConnectorAuthRefreshTokenPtrType) ToServiceNowConnectorAuthRefreshTokenPtrOutput() ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return i.ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(context.Background())
}

func (i *serviceNowConnectorAuthRefreshTokenPtrType) ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthRefreshTokenPtrOutput)
}

type ServiceNowConnectorAuthRefreshTokenOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (o ServiceNowConnectorAuthRefreshTokenOutput) ToServiceNowConnectorAuthRefreshTokenOutput() ServiceNowConnectorAuthRefreshTokenOutput {
	return o
}

func (o ServiceNowConnectorAuthRefreshTokenOutput) ToServiceNowConnectorAuthRefreshTokenOutputWithContext(ctx context.Context) ServiceNowConnectorAuthRefreshTokenOutput {
	return o
}

func (o ServiceNowConnectorAuthRefreshTokenOutput) ToServiceNowConnectorAuthRefreshTokenPtrOutput() ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return o.ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(context.Background())
}

func (o ServiceNowConnectorAuthRefreshTokenOutput) ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNowConnectorAuthRefreshToken) *ServiceNowConnectorAuthRefreshToken {
		return &v
	}).(ServiceNowConnectorAuthRefreshTokenPtrOutput)
}

// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthRefreshToken) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenOutput) ClientSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthRefreshToken) *string { return v.ClientSecretRef }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenOutput) RefreshTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthRefreshToken) string { return v.RefreshTokenRef }).(pulumi.StringOutput)
}

// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthRefreshToken) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Token url to use for authentication.
func (o ServiceNowConnectorAuthRefreshTokenOutput) TokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthRefreshToken) string { return v.TokenUrl }).(pulumi.StringOutput)
}

type ServiceNowConnectorAuthRefreshTokenPtrOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthRefreshTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) ToServiceNowConnectorAuthRefreshTokenPtrOutput() ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) ToServiceNowConnectorAuthRefreshTokenPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthRefreshTokenPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) Elem() ServiceNowConnectorAuthRefreshTokenOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthRefreshToken) ServiceNowConnectorAuthRefreshToken {
		if v != nil {
			return *v
		}
		var ret ServiceNowConnectorAuthRefreshToken
		return ret
	}).(ServiceNowConnectorAuthRefreshTokenOutput)
}

// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) ClientIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.ClientIdRef
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) ClientSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthRefreshToken) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretRef
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) RefreshTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.RefreshTokenRef
	}).(pulumi.StringPtrOutput)
}

// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthRefreshToken) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Token url to use for authentication.
func (o ServiceNowConnectorAuthRefreshTokenPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type ServiceNowConnectorAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// ServiceNowConnectorAuthUsernamePasswordInput is an input type that accepts ServiceNowConnectorAuthUsernamePasswordArgs and ServiceNowConnectorAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthUsernamePasswordInput` via:
//
//	ServiceNowConnectorAuthUsernamePasswordArgs{...}
type ServiceNowConnectorAuthUsernamePasswordInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthUsernamePasswordOutput() ServiceNowConnectorAuthUsernamePasswordOutput
	ToServiceNowConnectorAuthUsernamePasswordOutputWithContext(context.Context) ServiceNowConnectorAuthUsernamePasswordOutput
}

type ServiceNowConnectorAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ServiceNowConnectorAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i ServiceNowConnectorAuthUsernamePasswordArgs) ToServiceNowConnectorAuthUsernamePasswordOutput() ServiceNowConnectorAuthUsernamePasswordOutput {
	return i.ToServiceNowConnectorAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthUsernamePasswordArgs) ToServiceNowConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) ServiceNowConnectorAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthUsernamePasswordOutput)
}

func (i ServiceNowConnectorAuthUsernamePasswordArgs) ToServiceNowConnectorAuthUsernamePasswordPtrOutput() ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return i.ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i ServiceNowConnectorAuthUsernamePasswordArgs) ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthUsernamePasswordOutput).ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(ctx)
}

// ServiceNowConnectorAuthUsernamePasswordPtrInput is an input type that accepts ServiceNowConnectorAuthUsernamePasswordArgs, ServiceNowConnectorAuthUsernamePasswordPtr and ServiceNowConnectorAuthUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `ServiceNowConnectorAuthUsernamePasswordPtrInput` via:
//
//	        ServiceNowConnectorAuthUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type ServiceNowConnectorAuthUsernamePasswordPtrInput interface {
	pulumi.Input

	ToServiceNowConnectorAuthUsernamePasswordPtrOutput() ServiceNowConnectorAuthUsernamePasswordPtrOutput
	ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(context.Context) ServiceNowConnectorAuthUsernamePasswordPtrOutput
}

type serviceNowConnectorAuthUsernamePasswordPtrType ServiceNowConnectorAuthUsernamePasswordArgs

func ServiceNowConnectorAuthUsernamePasswordPtr(v *ServiceNowConnectorAuthUsernamePasswordArgs) ServiceNowConnectorAuthUsernamePasswordPtrInput {
	return (*serviceNowConnectorAuthUsernamePasswordPtrType)(v)
}

func (*serviceNowConnectorAuthUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i *serviceNowConnectorAuthUsernamePasswordPtrType) ToServiceNowConnectorAuthUsernamePasswordPtrOutput() ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return i.ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *serviceNowConnectorAuthUsernamePasswordPtrType) ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNowConnectorAuthUsernamePasswordPtrOutput)
}

type ServiceNowConnectorAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o ServiceNowConnectorAuthUsernamePasswordOutput) ToServiceNowConnectorAuthUsernamePasswordOutput() ServiceNowConnectorAuthUsernamePasswordOutput {
	return o
}

func (o ServiceNowConnectorAuthUsernamePasswordOutput) ToServiceNowConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) ServiceNowConnectorAuthUsernamePasswordOutput {
	return o
}

func (o ServiceNowConnectorAuthUsernamePasswordOutput) ToServiceNowConnectorAuthUsernamePasswordPtrOutput() ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return o.ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o ServiceNowConnectorAuthUsernamePasswordOutput) ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNowConnectorAuthUsernamePassword) *ServiceNowConnectorAuthUsernamePassword {
		return &v
	}).(ServiceNowConnectorAuthUsernamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o ServiceNowConnectorAuthUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNowConnectorAuthUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ServiceNowConnectorAuthUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (ServiceNowConnectorAuthUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o ServiceNowConnectorAuthUsernamePasswordPtrOutput) ToServiceNowConnectorAuthUsernamePasswordPtrOutput() ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthUsernamePasswordPtrOutput) ToServiceNowConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ServiceNowConnectorAuthUsernamePasswordPtrOutput {
	return o
}

func (o ServiceNowConnectorAuthUsernamePasswordPtrOutput) Elem() ServiceNowConnectorAuthUsernamePasswordOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthUsernamePassword) ServiceNowConnectorAuthUsernamePassword {
		if v != nil {
			return *v
		}
		var ret ServiceNowConnectorAuthUsernamePassword
		return ret
	}).(ServiceNowConnectorAuthUsernamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o ServiceNowConnectorAuthUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceNowConnectorAuthUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNowConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ServiceOverridesV2GitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	Branch *string `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// If the repo is in harness code
	IsHarnessCodeRepo *bool `pulumi:"isHarnessCodeRepo"`
	// If the branch being created is new
	IsNewBranch *bool `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating override.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Load service yaml from catch
	LoadFromCache *bool `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch *bool `pulumi:"loadFromFallbackBranch"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// ServiceOverridesV2GitDetailsInput is an input type that accepts ServiceOverridesV2GitDetailsArgs and ServiceOverridesV2GitDetailsOutput values.
// You can construct a concrete instance of `ServiceOverridesV2GitDetailsInput` via:
//
//	ServiceOverridesV2GitDetailsArgs{...}
type ServiceOverridesV2GitDetailsInput interface {
	pulumi.Input

	ToServiceOverridesV2GitDetailsOutput() ServiceOverridesV2GitDetailsOutput
	ToServiceOverridesV2GitDetailsOutputWithContext(context.Context) ServiceOverridesV2GitDetailsOutput
}

type ServiceOverridesV2GitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// If the repo is in harness code
	IsHarnessCodeRepo pulumi.BoolPtrInput `pulumi:"isHarnessCodeRepo"`
	// If the branch being created is new
	IsNewBranch pulumi.BoolPtrInput `pulumi:"isNewBranch"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating override.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Load service yaml from catch
	LoadFromCache pulumi.BoolPtrInput `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolPtrInput `pulumi:"loadFromFallbackBranch"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (ServiceOverridesV2GitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceOverridesV2GitDetails)(nil)).Elem()
}

func (i ServiceOverridesV2GitDetailsArgs) ToServiceOverridesV2GitDetailsOutput() ServiceOverridesV2GitDetailsOutput {
	return i.ToServiceOverridesV2GitDetailsOutputWithContext(context.Background())
}

func (i ServiceOverridesV2GitDetailsArgs) ToServiceOverridesV2GitDetailsOutputWithContext(ctx context.Context) ServiceOverridesV2GitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOverridesV2GitDetailsOutput)
}

func (i ServiceOverridesV2GitDetailsArgs) ToServiceOverridesV2GitDetailsPtrOutput() ServiceOverridesV2GitDetailsPtrOutput {
	return i.ToServiceOverridesV2GitDetailsPtrOutputWithContext(context.Background())
}

func (i ServiceOverridesV2GitDetailsArgs) ToServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) ServiceOverridesV2GitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOverridesV2GitDetailsOutput).ToServiceOverridesV2GitDetailsPtrOutputWithContext(ctx)
}

// ServiceOverridesV2GitDetailsPtrInput is an input type that accepts ServiceOverridesV2GitDetailsArgs, ServiceOverridesV2GitDetailsPtr and ServiceOverridesV2GitDetailsPtrOutput values.
// You can construct a concrete instance of `ServiceOverridesV2GitDetailsPtrInput` via:
//
//	        ServiceOverridesV2GitDetailsArgs{...}
//
//	or:
//
//	        nil
type ServiceOverridesV2GitDetailsPtrInput interface {
	pulumi.Input

	ToServiceOverridesV2GitDetailsPtrOutput() ServiceOverridesV2GitDetailsPtrOutput
	ToServiceOverridesV2GitDetailsPtrOutputWithContext(context.Context) ServiceOverridesV2GitDetailsPtrOutput
}

type serviceOverridesV2GitDetailsPtrType ServiceOverridesV2GitDetailsArgs

func ServiceOverridesV2GitDetailsPtr(v *ServiceOverridesV2GitDetailsArgs) ServiceOverridesV2GitDetailsPtrInput {
	return (*serviceOverridesV2GitDetailsPtrType)(v)
}

func (*serviceOverridesV2GitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceOverridesV2GitDetails)(nil)).Elem()
}

func (i *serviceOverridesV2GitDetailsPtrType) ToServiceOverridesV2GitDetailsPtrOutput() ServiceOverridesV2GitDetailsPtrOutput {
	return i.ToServiceOverridesV2GitDetailsPtrOutputWithContext(context.Background())
}

func (i *serviceOverridesV2GitDetailsPtrType) ToServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) ServiceOverridesV2GitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOverridesV2GitDetailsPtrOutput)
}

type ServiceOverridesV2GitDetailsOutput struct{ *pulumi.OutputState }

func (ServiceOverridesV2GitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceOverridesV2GitDetails)(nil)).Elem()
}

func (o ServiceOverridesV2GitDetailsOutput) ToServiceOverridesV2GitDetailsOutput() ServiceOverridesV2GitDetailsOutput {
	return o
}

func (o ServiceOverridesV2GitDetailsOutput) ToServiceOverridesV2GitDetailsOutputWithContext(ctx context.Context) ServiceOverridesV2GitDetailsOutput {
	return o
}

func (o ServiceOverridesV2GitDetailsOutput) ToServiceOverridesV2GitDetailsPtrOutput() ServiceOverridesV2GitDetailsPtrOutput {
	return o.ToServiceOverridesV2GitDetailsPtrOutputWithContext(context.Background())
}

func (o ServiceOverridesV2GitDetailsOutput) ToServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) ServiceOverridesV2GitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceOverridesV2GitDetails) *ServiceOverridesV2GitDetails {
		return &v
	}).(ServiceOverridesV2GitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o ServiceOverridesV2GitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o ServiceOverridesV2GitDetailsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o ServiceOverridesV2GitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceOverridesV2GitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o ServiceOverridesV2GitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// If the repo is in harness code
func (o ServiceOverridesV2GitDetailsOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *bool { return v.IsHarnessCodeRepo }).(pulumi.BoolPtrOutput)
}

// If the branch being created is new
func (o ServiceOverridesV2GitDetailsOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *bool { return v.IsNewBranch }).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
func (o ServiceOverridesV2GitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating override.
func (o ServiceOverridesV2GitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Load service yaml from catch
func (o ServiceOverridesV2GitDetailsOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *bool { return v.LoadFromCache }).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o ServiceOverridesV2GitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *bool { return v.LoadFromFallbackBranch }).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o ServiceOverridesV2GitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o ServiceOverridesV2GitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOverridesV2GitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type ServiceOverridesV2GitDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServiceOverridesV2GitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceOverridesV2GitDetails)(nil)).Elem()
}

func (o ServiceOverridesV2GitDetailsPtrOutput) ToServiceOverridesV2GitDetailsPtrOutput() ServiceOverridesV2GitDetailsPtrOutput {
	return o
}

func (o ServiceOverridesV2GitDetailsPtrOutput) ToServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) ServiceOverridesV2GitDetailsPtrOutput {
	return o
}

func (o ServiceOverridesV2GitDetailsPtrOutput) Elem() ServiceOverridesV2GitDetailsOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) ServiceOverridesV2GitDetails {
		if v != nil {
			return *v
		}
		var ret ServiceOverridesV2GitDetails
		return ret
	}).(ServiceOverridesV2GitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o ServiceOverridesV2GitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o ServiceOverridesV2GitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o ServiceOverridesV2GitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ServiceOverridesV2GitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o ServiceOverridesV2GitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// If the repo is in harness code
func (o ServiceOverridesV2GitDetailsPtrOutput) IsHarnessCodeRepo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsHarnessCodeRepo
	}).(pulumi.BoolPtrOutput)
}

// If the branch being created is new
func (o ServiceOverridesV2GitDetailsPtrOutput) IsNewBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsNewBranch
	}).(pulumi.BoolPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating override.
func (o ServiceOverridesV2GitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating override.
func (o ServiceOverridesV2GitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Load service yaml from catch
func (o ServiceOverridesV2GitDetailsPtrOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromCache
	}).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o ServiceOverridesV2GitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *bool {
		if v == nil {
			return nil
		}
		return v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o ServiceOverridesV2GitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o ServiceOverridesV2GitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type SloRequest struct {
	// Description for the SLO.
	Description *string `pulumi:"description"`
	// Name for the SLO.
	Name string `pulumi:"name"`
	// Notification rule references for the SLO.
	NotificationRuleRefs []SloRequestNotificationRuleRef `pulumi:"notificationRuleRefs"`
	// SLO Target specification.
	SloTarget SloRequestSloTarget `pulumi:"sloTarget"`
	// Specification of the SLO.
	Spec string `pulumi:"spec"`
	// Tags for the SLO. comma-separated key value string pairs.
	Tags []string `pulumi:"tags"`
	// Type of the SLO.
	Type string `pulumi:"type"`
	// User journey reference list for the SLO.
	UserJourneyRefs []string `pulumi:"userJourneyRefs"`
}

// SloRequestInput is an input type that accepts SloRequestArgs and SloRequestOutput values.
// You can construct a concrete instance of `SloRequestInput` via:
//
//	SloRequestArgs{...}
type SloRequestInput interface {
	pulumi.Input

	ToSloRequestOutput() SloRequestOutput
	ToSloRequestOutputWithContext(context.Context) SloRequestOutput
}

type SloRequestArgs struct {
	// Description for the SLO.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name for the SLO.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification rule references for the SLO.
	NotificationRuleRefs SloRequestNotificationRuleRefArrayInput `pulumi:"notificationRuleRefs"`
	// SLO Target specification.
	SloTarget SloRequestSloTargetInput `pulumi:"sloTarget"`
	// Specification of the SLO.
	Spec pulumi.StringInput `pulumi:"spec"`
	// Tags for the SLO. comma-separated key value string pairs.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Type of the SLO.
	Type pulumi.StringInput `pulumi:"type"`
	// User journey reference list for the SLO.
	UserJourneyRefs pulumi.StringArrayInput `pulumi:"userJourneyRefs"`
}

func (SloRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequest)(nil)).Elem()
}

func (i SloRequestArgs) ToSloRequestOutput() SloRequestOutput {
	return i.ToSloRequestOutputWithContext(context.Background())
}

func (i SloRequestArgs) ToSloRequestOutputWithContext(ctx context.Context) SloRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestOutput)
}

func (i SloRequestArgs) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return i.ToSloRequestPtrOutputWithContext(context.Background())
}

func (i SloRequestArgs) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestOutput).ToSloRequestPtrOutputWithContext(ctx)
}

// SloRequestPtrInput is an input type that accepts SloRequestArgs, SloRequestPtr and SloRequestPtrOutput values.
// You can construct a concrete instance of `SloRequestPtrInput` via:
//
//	        SloRequestArgs{...}
//
//	or:
//
//	        nil
type SloRequestPtrInput interface {
	pulumi.Input

	ToSloRequestPtrOutput() SloRequestPtrOutput
	ToSloRequestPtrOutputWithContext(context.Context) SloRequestPtrOutput
}

type sloRequestPtrType SloRequestArgs

func SloRequestPtr(v *SloRequestArgs) SloRequestPtrInput {
	return (*sloRequestPtrType)(v)
}

func (*sloRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequest)(nil)).Elem()
}

func (i *sloRequestPtrType) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return i.ToSloRequestPtrOutputWithContext(context.Background())
}

func (i *sloRequestPtrType) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestPtrOutput)
}

type SloRequestOutput struct{ *pulumi.OutputState }

func (SloRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequest)(nil)).Elem()
}

func (o SloRequestOutput) ToSloRequestOutput() SloRequestOutput {
	return o
}

func (o SloRequestOutput) ToSloRequestOutputWithContext(ctx context.Context) SloRequestOutput {
	return o
}

func (o SloRequestOutput) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return o.ToSloRequestPtrOutputWithContext(context.Background())
}

func (o SloRequestOutput) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloRequest) *SloRequest {
		return &v
	}).(SloRequestPtrOutput)
}

// Description for the SLO.
func (o SloRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloRequest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name for the SLO.
func (o SloRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequest) string { return v.Name }).(pulumi.StringOutput)
}

// Notification rule references for the SLO.
func (o SloRequestOutput) NotificationRuleRefs() SloRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v SloRequest) []SloRequestNotificationRuleRef { return v.NotificationRuleRefs }).(SloRequestNotificationRuleRefArrayOutput)
}

// SLO Target specification.
func (o SloRequestOutput) SloTarget() SloRequestSloTargetOutput {
	return o.ApplyT(func(v SloRequest) SloRequestSloTarget { return v.SloTarget }).(SloRequestSloTargetOutput)
}

// Specification of the SLO.
func (o SloRequestOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequest) string { return v.Spec }).(pulumi.StringOutput)
}

// Tags for the SLO. comma-separated key value string pairs.
func (o SloRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SloRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Type of the SLO.
func (o SloRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequest) string { return v.Type }).(pulumi.StringOutput)
}

// User journey reference list for the SLO.
func (o SloRequestOutput) UserJourneyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SloRequest) []string { return v.UserJourneyRefs }).(pulumi.StringArrayOutput)
}

type SloRequestPtrOutput struct{ *pulumi.OutputState }

func (SloRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequest)(nil)).Elem()
}

func (o SloRequestPtrOutput) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return o
}

func (o SloRequestPtrOutput) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return o
}

func (o SloRequestPtrOutput) Elem() SloRequestOutput {
	return o.ApplyT(func(v *SloRequest) SloRequest {
		if v != nil {
			return *v
		}
		var ret SloRequest
		return ret
	}).(SloRequestOutput)
}

// Description for the SLO.
func (o SloRequestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Name for the SLO.
func (o SloRequestPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification rule references for the SLO.
func (o SloRequestPtrOutput) NotificationRuleRefs() SloRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v *SloRequest) []SloRequestNotificationRuleRef {
		if v == nil {
			return nil
		}
		return v.NotificationRuleRefs
	}).(SloRequestNotificationRuleRefArrayOutput)
}

// SLO Target specification.
func (o SloRequestPtrOutput) SloTarget() SloRequestSloTargetPtrOutput {
	return o.ApplyT(func(v *SloRequest) *SloRequestSloTarget {
		if v == nil {
			return nil
		}
		return &v.SloTarget
	}).(SloRequestSloTargetPtrOutput)
}

// Specification of the SLO.
func (o SloRequestPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(pulumi.StringPtrOutput)
}

// Tags for the SLO. comma-separated key value string pairs.
func (o SloRequestPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SloRequest) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Type of the SLO.
func (o SloRequestPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User journey reference list for the SLO.
func (o SloRequestPtrOutput) UserJourneyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SloRequest) []string {
		if v == nil {
			return nil
		}
		return v.UserJourneyRefs
	}).(pulumi.StringArrayOutput)
}

type SloRequestNotificationRuleRef struct {
	// Enable or disable notification rule reference for the SLO.
	Enabled bool `pulumi:"enabled"`
	// Notification rule reference for the SLO.
	NotificationRuleRef string `pulumi:"notificationRuleRef"`
}

// SloRequestNotificationRuleRefInput is an input type that accepts SloRequestNotificationRuleRefArgs and SloRequestNotificationRuleRefOutput values.
// You can construct a concrete instance of `SloRequestNotificationRuleRefInput` via:
//
//	SloRequestNotificationRuleRefArgs{...}
type SloRequestNotificationRuleRefInput interface {
	pulumi.Input

	ToSloRequestNotificationRuleRefOutput() SloRequestNotificationRuleRefOutput
	ToSloRequestNotificationRuleRefOutputWithContext(context.Context) SloRequestNotificationRuleRefOutput
}

type SloRequestNotificationRuleRefArgs struct {
	// Enable or disable notification rule reference for the SLO.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Notification rule reference for the SLO.
	NotificationRuleRef pulumi.StringInput `pulumi:"notificationRuleRef"`
}

func (SloRequestNotificationRuleRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestNotificationRuleRef)(nil)).Elem()
}

func (i SloRequestNotificationRuleRefArgs) ToSloRequestNotificationRuleRefOutput() SloRequestNotificationRuleRefOutput {
	return i.ToSloRequestNotificationRuleRefOutputWithContext(context.Background())
}

func (i SloRequestNotificationRuleRefArgs) ToSloRequestNotificationRuleRefOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestNotificationRuleRefOutput)
}

// SloRequestNotificationRuleRefArrayInput is an input type that accepts SloRequestNotificationRuleRefArray and SloRequestNotificationRuleRefArrayOutput values.
// You can construct a concrete instance of `SloRequestNotificationRuleRefArrayInput` via:
//
//	SloRequestNotificationRuleRefArray{ SloRequestNotificationRuleRefArgs{...} }
type SloRequestNotificationRuleRefArrayInput interface {
	pulumi.Input

	ToSloRequestNotificationRuleRefArrayOutput() SloRequestNotificationRuleRefArrayOutput
	ToSloRequestNotificationRuleRefArrayOutputWithContext(context.Context) SloRequestNotificationRuleRefArrayOutput
}

type SloRequestNotificationRuleRefArray []SloRequestNotificationRuleRefInput

func (SloRequestNotificationRuleRefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloRequestNotificationRuleRef)(nil)).Elem()
}

func (i SloRequestNotificationRuleRefArray) ToSloRequestNotificationRuleRefArrayOutput() SloRequestNotificationRuleRefArrayOutput {
	return i.ToSloRequestNotificationRuleRefArrayOutputWithContext(context.Background())
}

func (i SloRequestNotificationRuleRefArray) ToSloRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestNotificationRuleRefArrayOutput)
}

type SloRequestNotificationRuleRefOutput struct{ *pulumi.OutputState }

func (SloRequestNotificationRuleRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestNotificationRuleRef)(nil)).Elem()
}

func (o SloRequestNotificationRuleRefOutput) ToSloRequestNotificationRuleRefOutput() SloRequestNotificationRuleRefOutput {
	return o
}

func (o SloRequestNotificationRuleRefOutput) ToSloRequestNotificationRuleRefOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefOutput {
	return o
}

// Enable or disable notification rule reference for the SLO.
func (o SloRequestNotificationRuleRefOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SloRequestNotificationRuleRef) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Notification rule reference for the SLO.
func (o SloRequestNotificationRuleRefOutput) NotificationRuleRef() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequestNotificationRuleRef) string { return v.NotificationRuleRef }).(pulumi.StringOutput)
}

type SloRequestNotificationRuleRefArrayOutput struct{ *pulumi.OutputState }

func (SloRequestNotificationRuleRefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloRequestNotificationRuleRef)(nil)).Elem()
}

func (o SloRequestNotificationRuleRefArrayOutput) ToSloRequestNotificationRuleRefArrayOutput() SloRequestNotificationRuleRefArrayOutput {
	return o
}

func (o SloRequestNotificationRuleRefArrayOutput) ToSloRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefArrayOutput {
	return o
}

func (o SloRequestNotificationRuleRefArrayOutput) Index(i pulumi.IntInput) SloRequestNotificationRuleRefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloRequestNotificationRuleRef {
		return vs[0].([]SloRequestNotificationRuleRef)[vs[1].(int)]
	}).(SloRequestNotificationRuleRefOutput)
}

type SloRequestSloTarget struct {
	// Target percentage for the SLO.
	SloTargetPercentage float64 `pulumi:"sloTargetPercentage"`
	// Specification of the SLO Target.
	Spec string `pulumi:"spec"`
	// Type of the SLO target.
	Type string `pulumi:"type"`
}

// SloRequestSloTargetInput is an input type that accepts SloRequestSloTargetArgs and SloRequestSloTargetOutput values.
// You can construct a concrete instance of `SloRequestSloTargetInput` via:
//
//	SloRequestSloTargetArgs{...}
type SloRequestSloTargetInput interface {
	pulumi.Input

	ToSloRequestSloTargetOutput() SloRequestSloTargetOutput
	ToSloRequestSloTargetOutputWithContext(context.Context) SloRequestSloTargetOutput
}

type SloRequestSloTargetArgs struct {
	// Target percentage for the SLO.
	SloTargetPercentage pulumi.Float64Input `pulumi:"sloTargetPercentage"`
	// Specification of the SLO Target.
	Spec pulumi.StringInput `pulumi:"spec"`
	// Type of the SLO target.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SloRequestSloTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestSloTarget)(nil)).Elem()
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetOutput() SloRequestSloTargetOutput {
	return i.ToSloRequestSloTargetOutputWithContext(context.Background())
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetOutputWithContext(ctx context.Context) SloRequestSloTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestSloTargetOutput)
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return i.ToSloRequestSloTargetPtrOutputWithContext(context.Background())
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestSloTargetOutput).ToSloRequestSloTargetPtrOutputWithContext(ctx)
}

// SloRequestSloTargetPtrInput is an input type that accepts SloRequestSloTargetArgs, SloRequestSloTargetPtr and SloRequestSloTargetPtrOutput values.
// You can construct a concrete instance of `SloRequestSloTargetPtrInput` via:
//
//	        SloRequestSloTargetArgs{...}
//
//	or:
//
//	        nil
type SloRequestSloTargetPtrInput interface {
	pulumi.Input

	ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput
	ToSloRequestSloTargetPtrOutputWithContext(context.Context) SloRequestSloTargetPtrOutput
}

type sloRequestSloTargetPtrType SloRequestSloTargetArgs

func SloRequestSloTargetPtr(v *SloRequestSloTargetArgs) SloRequestSloTargetPtrInput {
	return (*sloRequestSloTargetPtrType)(v)
}

func (*sloRequestSloTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequestSloTarget)(nil)).Elem()
}

func (i *sloRequestSloTargetPtrType) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return i.ToSloRequestSloTargetPtrOutputWithContext(context.Background())
}

func (i *sloRequestSloTargetPtrType) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestSloTargetPtrOutput)
}

type SloRequestSloTargetOutput struct{ *pulumi.OutputState }

func (SloRequestSloTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestSloTarget)(nil)).Elem()
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetOutput() SloRequestSloTargetOutput {
	return o
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetOutputWithContext(ctx context.Context) SloRequestSloTargetOutput {
	return o
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return o.ToSloRequestSloTargetPtrOutputWithContext(context.Background())
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloRequestSloTarget) *SloRequestSloTarget {
		return &v
	}).(SloRequestSloTargetPtrOutput)
}

// Target percentage for the SLO.
func (o SloRequestSloTargetOutput) SloTargetPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v SloRequestSloTarget) float64 { return v.SloTargetPercentage }).(pulumi.Float64Output)
}

// Specification of the SLO Target.
func (o SloRequestSloTargetOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequestSloTarget) string { return v.Spec }).(pulumi.StringOutput)
}

// Type of the SLO target.
func (o SloRequestSloTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequestSloTarget) string { return v.Type }).(pulumi.StringOutput)
}

type SloRequestSloTargetPtrOutput struct{ *pulumi.OutputState }

func (SloRequestSloTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequestSloTarget)(nil)).Elem()
}

func (o SloRequestSloTargetPtrOutput) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return o
}

func (o SloRequestSloTargetPtrOutput) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return o
}

func (o SloRequestSloTargetPtrOutput) Elem() SloRequestSloTargetOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) SloRequestSloTarget {
		if v != nil {
			return *v
		}
		var ret SloRequestSloTarget
		return ret
	}).(SloRequestSloTargetOutput)
}

// Target percentage for the SLO.
func (o SloRequestSloTargetPtrOutput) SloTargetPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) *float64 {
		if v == nil {
			return nil
		}
		return &v.SloTargetPercentage
	}).(pulumi.Float64PtrOutput)
}

// Specification of the SLO Target.
func (o SloRequestSloTargetPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(pulumi.StringPtrOutput)
}

// Type of the SLO target.
func (o SloRequestSloTargetPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SpotConnectorPermanentToken struct {
	// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef string `pulumi:"apiTokenRef"`
	// Connect only using delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Execute on delegate or not.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Spot account id.
	SpotAccountId *string `pulumi:"spotAccountId"`
	// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SpotAccountIdRef *string `pulumi:"spotAccountIdRef"`
}

// SpotConnectorPermanentTokenInput is an input type that accepts SpotConnectorPermanentTokenArgs and SpotConnectorPermanentTokenOutput values.
// You can construct a concrete instance of `SpotConnectorPermanentTokenInput` via:
//
//	SpotConnectorPermanentTokenArgs{...}
type SpotConnectorPermanentTokenInput interface {
	pulumi.Input

	ToSpotConnectorPermanentTokenOutput() SpotConnectorPermanentTokenOutput
	ToSpotConnectorPermanentTokenOutputWithContext(context.Context) SpotConnectorPermanentTokenOutput
}

type SpotConnectorPermanentTokenArgs struct {
	// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
	// Connect only using delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrInput `pulumi:"executeOnDelegate"`
	// Spot account id.
	SpotAccountId pulumi.StringPtrInput `pulumi:"spotAccountId"`
	// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SpotAccountIdRef pulumi.StringPtrInput `pulumi:"spotAccountIdRef"`
}

func (SpotConnectorPermanentTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotConnectorPermanentToken)(nil)).Elem()
}

func (i SpotConnectorPermanentTokenArgs) ToSpotConnectorPermanentTokenOutput() SpotConnectorPermanentTokenOutput {
	return i.ToSpotConnectorPermanentTokenOutputWithContext(context.Background())
}

func (i SpotConnectorPermanentTokenArgs) ToSpotConnectorPermanentTokenOutputWithContext(ctx context.Context) SpotConnectorPermanentTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotConnectorPermanentTokenOutput)
}

func (i SpotConnectorPermanentTokenArgs) ToSpotConnectorPermanentTokenPtrOutput() SpotConnectorPermanentTokenPtrOutput {
	return i.ToSpotConnectorPermanentTokenPtrOutputWithContext(context.Background())
}

func (i SpotConnectorPermanentTokenArgs) ToSpotConnectorPermanentTokenPtrOutputWithContext(ctx context.Context) SpotConnectorPermanentTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotConnectorPermanentTokenOutput).ToSpotConnectorPermanentTokenPtrOutputWithContext(ctx)
}

// SpotConnectorPermanentTokenPtrInput is an input type that accepts SpotConnectorPermanentTokenArgs, SpotConnectorPermanentTokenPtr and SpotConnectorPermanentTokenPtrOutput values.
// You can construct a concrete instance of `SpotConnectorPermanentTokenPtrInput` via:
//
//	        SpotConnectorPermanentTokenArgs{...}
//
//	or:
//
//	        nil
type SpotConnectorPermanentTokenPtrInput interface {
	pulumi.Input

	ToSpotConnectorPermanentTokenPtrOutput() SpotConnectorPermanentTokenPtrOutput
	ToSpotConnectorPermanentTokenPtrOutputWithContext(context.Context) SpotConnectorPermanentTokenPtrOutput
}

type spotConnectorPermanentTokenPtrType SpotConnectorPermanentTokenArgs

func SpotConnectorPermanentTokenPtr(v *SpotConnectorPermanentTokenArgs) SpotConnectorPermanentTokenPtrInput {
	return (*spotConnectorPermanentTokenPtrType)(v)
}

func (*spotConnectorPermanentTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotConnectorPermanentToken)(nil)).Elem()
}

func (i *spotConnectorPermanentTokenPtrType) ToSpotConnectorPermanentTokenPtrOutput() SpotConnectorPermanentTokenPtrOutput {
	return i.ToSpotConnectorPermanentTokenPtrOutputWithContext(context.Background())
}

func (i *spotConnectorPermanentTokenPtrType) ToSpotConnectorPermanentTokenPtrOutputWithContext(ctx context.Context) SpotConnectorPermanentTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotConnectorPermanentTokenPtrOutput)
}

type SpotConnectorPermanentTokenOutput struct{ *pulumi.OutputState }

func (SpotConnectorPermanentTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotConnectorPermanentToken)(nil)).Elem()
}

func (o SpotConnectorPermanentTokenOutput) ToSpotConnectorPermanentTokenOutput() SpotConnectorPermanentTokenOutput {
	return o
}

func (o SpotConnectorPermanentTokenOutput) ToSpotConnectorPermanentTokenOutputWithContext(ctx context.Context) SpotConnectorPermanentTokenOutput {
	return o
}

func (o SpotConnectorPermanentTokenOutput) ToSpotConnectorPermanentTokenPtrOutput() SpotConnectorPermanentTokenPtrOutput {
	return o.ToSpotConnectorPermanentTokenPtrOutputWithContext(context.Background())
}

func (o SpotConnectorPermanentTokenOutput) ToSpotConnectorPermanentTokenPtrOutputWithContext(ctx context.Context) SpotConnectorPermanentTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpotConnectorPermanentToken) *SpotConnectorPermanentToken {
		return &v
	}).(SpotConnectorPermanentTokenPtrOutput)
}

// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o SpotConnectorPermanentTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v SpotConnectorPermanentToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

// Connect only using delegates with these tags.
func (o SpotConnectorPermanentTokenOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotConnectorPermanentToken) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Execute on delegate or not.
func (o SpotConnectorPermanentTokenOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotConnectorPermanentToken) *bool { return v.ExecuteOnDelegate }).(pulumi.BoolPtrOutput)
}

// Spot account id.
func (o SpotConnectorPermanentTokenOutput) SpotAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotConnectorPermanentToken) *string { return v.SpotAccountId }).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o SpotConnectorPermanentTokenOutput) SpotAccountIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotConnectorPermanentToken) *string { return v.SpotAccountIdRef }).(pulumi.StringPtrOutput)
}

type SpotConnectorPermanentTokenPtrOutput struct{ *pulumi.OutputState }

func (SpotConnectorPermanentTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotConnectorPermanentToken)(nil)).Elem()
}

func (o SpotConnectorPermanentTokenPtrOutput) ToSpotConnectorPermanentTokenPtrOutput() SpotConnectorPermanentTokenPtrOutput {
	return o
}

func (o SpotConnectorPermanentTokenPtrOutput) ToSpotConnectorPermanentTokenPtrOutputWithContext(ctx context.Context) SpotConnectorPermanentTokenPtrOutput {
	return o
}

func (o SpotConnectorPermanentTokenPtrOutput) Elem() SpotConnectorPermanentTokenOutput {
	return o.ApplyT(func(v *SpotConnectorPermanentToken) SpotConnectorPermanentToken {
		if v != nil {
			return *v
		}
		var ret SpotConnectorPermanentToken
		return ret
	}).(SpotConnectorPermanentTokenOutput)
}

// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o SpotConnectorPermanentTokenPtrOutput) ApiTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotConnectorPermanentToken) *string {
		if v == nil {
			return nil
		}
		return &v.ApiTokenRef
	}).(pulumi.StringPtrOutput)
}

// Connect only using delegates with these tags.
func (o SpotConnectorPermanentTokenPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotConnectorPermanentToken) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Execute on delegate or not.
func (o SpotConnectorPermanentTokenPtrOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotConnectorPermanentToken) *bool {
		if v == nil {
			return nil
		}
		return v.ExecuteOnDelegate
	}).(pulumi.BoolPtrOutput)
}

// Spot account id.
func (o SpotConnectorPermanentTokenPtrOutput) SpotAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotConnectorPermanentToken) *string {
		if v == nil {
			return nil
		}
		return v.SpotAccountId
	}).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o SpotConnectorPermanentTokenPtrOutput) SpotAccountIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotConnectorPermanentToken) *string {
		if v == nil {
			return nil
		}
		return v.SpotAccountIdRef
	}).(pulumi.StringPtrOutput)
}

type TasConnectorCredentials struct {
	// Authenticate to Tas using manual details.
	TasManualDetails TasConnectorCredentialsTasManualDetails `pulumi:"tasManualDetails"`
	// Type can be ManualConfig.
	Type string `pulumi:"type"`
}

// TasConnectorCredentialsInput is an input type that accepts TasConnectorCredentialsArgs and TasConnectorCredentialsOutput values.
// You can construct a concrete instance of `TasConnectorCredentialsInput` via:
//
//	TasConnectorCredentialsArgs{...}
type TasConnectorCredentialsInput interface {
	pulumi.Input

	ToTasConnectorCredentialsOutput() TasConnectorCredentialsOutput
	ToTasConnectorCredentialsOutputWithContext(context.Context) TasConnectorCredentialsOutput
}

type TasConnectorCredentialsArgs struct {
	// Authenticate to Tas using manual details.
	TasManualDetails TasConnectorCredentialsTasManualDetailsInput `pulumi:"tasManualDetails"`
	// Type can be ManualConfig.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TasConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TasConnectorCredentials)(nil)).Elem()
}

func (i TasConnectorCredentialsArgs) ToTasConnectorCredentialsOutput() TasConnectorCredentialsOutput {
	return i.ToTasConnectorCredentialsOutputWithContext(context.Background())
}

func (i TasConnectorCredentialsArgs) ToTasConnectorCredentialsOutputWithContext(ctx context.Context) TasConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TasConnectorCredentialsOutput)
}

func (i TasConnectorCredentialsArgs) ToTasConnectorCredentialsPtrOutput() TasConnectorCredentialsPtrOutput {
	return i.ToTasConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i TasConnectorCredentialsArgs) ToTasConnectorCredentialsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TasConnectorCredentialsOutput).ToTasConnectorCredentialsPtrOutputWithContext(ctx)
}

// TasConnectorCredentialsPtrInput is an input type that accepts TasConnectorCredentialsArgs, TasConnectorCredentialsPtr and TasConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `TasConnectorCredentialsPtrInput` via:
//
//	        TasConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type TasConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToTasConnectorCredentialsPtrOutput() TasConnectorCredentialsPtrOutput
	ToTasConnectorCredentialsPtrOutputWithContext(context.Context) TasConnectorCredentialsPtrOutput
}

type tasConnectorCredentialsPtrType TasConnectorCredentialsArgs

func TasConnectorCredentialsPtr(v *TasConnectorCredentialsArgs) TasConnectorCredentialsPtrInput {
	return (*tasConnectorCredentialsPtrType)(v)
}

func (*tasConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TasConnectorCredentials)(nil)).Elem()
}

func (i *tasConnectorCredentialsPtrType) ToTasConnectorCredentialsPtrOutput() TasConnectorCredentialsPtrOutput {
	return i.ToTasConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *tasConnectorCredentialsPtrType) ToTasConnectorCredentialsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TasConnectorCredentialsPtrOutput)
}

type TasConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (TasConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TasConnectorCredentials)(nil)).Elem()
}

func (o TasConnectorCredentialsOutput) ToTasConnectorCredentialsOutput() TasConnectorCredentialsOutput {
	return o
}

func (o TasConnectorCredentialsOutput) ToTasConnectorCredentialsOutputWithContext(ctx context.Context) TasConnectorCredentialsOutput {
	return o
}

func (o TasConnectorCredentialsOutput) ToTasConnectorCredentialsPtrOutput() TasConnectorCredentialsPtrOutput {
	return o.ToTasConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o TasConnectorCredentialsOutput) ToTasConnectorCredentialsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TasConnectorCredentials) *TasConnectorCredentials {
		return &v
	}).(TasConnectorCredentialsPtrOutput)
}

// Authenticate to Tas using manual details.
func (o TasConnectorCredentialsOutput) TasManualDetails() TasConnectorCredentialsTasManualDetailsOutput {
	return o.ApplyT(func(v TasConnectorCredentials) TasConnectorCredentialsTasManualDetails { return v.TasManualDetails }).(TasConnectorCredentialsTasManualDetailsOutput)
}

// Type can be ManualConfig.
func (o TasConnectorCredentialsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TasConnectorCredentials) string { return v.Type }).(pulumi.StringOutput)
}

type TasConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (TasConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TasConnectorCredentials)(nil)).Elem()
}

func (o TasConnectorCredentialsPtrOutput) ToTasConnectorCredentialsPtrOutput() TasConnectorCredentialsPtrOutput {
	return o
}

func (o TasConnectorCredentialsPtrOutput) ToTasConnectorCredentialsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsPtrOutput {
	return o
}

func (o TasConnectorCredentialsPtrOutput) Elem() TasConnectorCredentialsOutput {
	return o.ApplyT(func(v *TasConnectorCredentials) TasConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret TasConnectorCredentials
		return ret
	}).(TasConnectorCredentialsOutput)
}

// Authenticate to Tas using manual details.
func (o TasConnectorCredentialsPtrOutput) TasManualDetails() TasConnectorCredentialsTasManualDetailsPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentials) *TasConnectorCredentialsTasManualDetails {
		if v == nil {
			return nil
		}
		return &v.TasManualDetails
	}).(TasConnectorCredentialsTasManualDetailsPtrOutput)
}

// Type can be ManualConfig.
func (o TasConnectorCredentialsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TasConnectorCredentialsTasManualDetails struct {
	// URL of the Tas server.
	EndpointUrl string `pulumi:"endpointUrl"`
	// Reference of the secret for the password. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Reference token for authentication.
	ReferenceToken *string `pulumi:"referenceToken"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// TasConnectorCredentialsTasManualDetailsInput is an input type that accepts TasConnectorCredentialsTasManualDetailsArgs and TasConnectorCredentialsTasManualDetailsOutput values.
// You can construct a concrete instance of `TasConnectorCredentialsTasManualDetailsInput` via:
//
//	TasConnectorCredentialsTasManualDetailsArgs{...}
type TasConnectorCredentialsTasManualDetailsInput interface {
	pulumi.Input

	ToTasConnectorCredentialsTasManualDetailsOutput() TasConnectorCredentialsTasManualDetailsOutput
	ToTasConnectorCredentialsTasManualDetailsOutputWithContext(context.Context) TasConnectorCredentialsTasManualDetailsOutput
}

type TasConnectorCredentialsTasManualDetailsArgs struct {
	// URL of the Tas server.
	EndpointUrl pulumi.StringInput `pulumi:"endpointUrl"`
	// Reference of the secret for the password. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Reference token for authentication.
	ReferenceToken pulumi.StringPtrInput `pulumi:"referenceToken"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (TasConnectorCredentialsTasManualDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TasConnectorCredentialsTasManualDetails)(nil)).Elem()
}

func (i TasConnectorCredentialsTasManualDetailsArgs) ToTasConnectorCredentialsTasManualDetailsOutput() TasConnectorCredentialsTasManualDetailsOutput {
	return i.ToTasConnectorCredentialsTasManualDetailsOutputWithContext(context.Background())
}

func (i TasConnectorCredentialsTasManualDetailsArgs) ToTasConnectorCredentialsTasManualDetailsOutputWithContext(ctx context.Context) TasConnectorCredentialsTasManualDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TasConnectorCredentialsTasManualDetailsOutput)
}

func (i TasConnectorCredentialsTasManualDetailsArgs) ToTasConnectorCredentialsTasManualDetailsPtrOutput() TasConnectorCredentialsTasManualDetailsPtrOutput {
	return i.ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(context.Background())
}

func (i TasConnectorCredentialsTasManualDetailsArgs) ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsTasManualDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TasConnectorCredentialsTasManualDetailsOutput).ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(ctx)
}

// TasConnectorCredentialsTasManualDetailsPtrInput is an input type that accepts TasConnectorCredentialsTasManualDetailsArgs, TasConnectorCredentialsTasManualDetailsPtr and TasConnectorCredentialsTasManualDetailsPtrOutput values.
// You can construct a concrete instance of `TasConnectorCredentialsTasManualDetailsPtrInput` via:
//
//	        TasConnectorCredentialsTasManualDetailsArgs{...}
//
//	or:
//
//	        nil
type TasConnectorCredentialsTasManualDetailsPtrInput interface {
	pulumi.Input

	ToTasConnectorCredentialsTasManualDetailsPtrOutput() TasConnectorCredentialsTasManualDetailsPtrOutput
	ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(context.Context) TasConnectorCredentialsTasManualDetailsPtrOutput
}

type tasConnectorCredentialsTasManualDetailsPtrType TasConnectorCredentialsTasManualDetailsArgs

func TasConnectorCredentialsTasManualDetailsPtr(v *TasConnectorCredentialsTasManualDetailsArgs) TasConnectorCredentialsTasManualDetailsPtrInput {
	return (*tasConnectorCredentialsTasManualDetailsPtrType)(v)
}

func (*tasConnectorCredentialsTasManualDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TasConnectorCredentialsTasManualDetails)(nil)).Elem()
}

func (i *tasConnectorCredentialsTasManualDetailsPtrType) ToTasConnectorCredentialsTasManualDetailsPtrOutput() TasConnectorCredentialsTasManualDetailsPtrOutput {
	return i.ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(context.Background())
}

func (i *tasConnectorCredentialsTasManualDetailsPtrType) ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsTasManualDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TasConnectorCredentialsTasManualDetailsPtrOutput)
}

type TasConnectorCredentialsTasManualDetailsOutput struct{ *pulumi.OutputState }

func (TasConnectorCredentialsTasManualDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TasConnectorCredentialsTasManualDetails)(nil)).Elem()
}

func (o TasConnectorCredentialsTasManualDetailsOutput) ToTasConnectorCredentialsTasManualDetailsOutput() TasConnectorCredentialsTasManualDetailsOutput {
	return o
}

func (o TasConnectorCredentialsTasManualDetailsOutput) ToTasConnectorCredentialsTasManualDetailsOutputWithContext(ctx context.Context) TasConnectorCredentialsTasManualDetailsOutput {
	return o
}

func (o TasConnectorCredentialsTasManualDetailsOutput) ToTasConnectorCredentialsTasManualDetailsPtrOutput() TasConnectorCredentialsTasManualDetailsPtrOutput {
	return o.ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(context.Background())
}

func (o TasConnectorCredentialsTasManualDetailsOutput) ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsTasManualDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TasConnectorCredentialsTasManualDetails) *TasConnectorCredentialsTasManualDetails {
		return &v
	}).(TasConnectorCredentialsTasManualDetailsPtrOutput)
}

// URL of the Tas server.
func (o TasConnectorCredentialsTasManualDetailsOutput) EndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TasConnectorCredentialsTasManualDetails) string { return v.EndpointUrl }).(pulumi.StringOutput)
}

// Reference of the secret for the password. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TasConnectorCredentialsTasManualDetailsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v TasConnectorCredentialsTasManualDetails) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Reference token for authentication.
func (o TasConnectorCredentialsTasManualDetailsOutput) ReferenceToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TasConnectorCredentialsTasManualDetails) *string { return v.ReferenceToken }).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o TasConnectorCredentialsTasManualDetailsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TasConnectorCredentialsTasManualDetails) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TasConnectorCredentialsTasManualDetailsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TasConnectorCredentialsTasManualDetails) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type TasConnectorCredentialsTasManualDetailsPtrOutput struct{ *pulumi.OutputState }

func (TasConnectorCredentialsTasManualDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TasConnectorCredentialsTasManualDetails)(nil)).Elem()
}

func (o TasConnectorCredentialsTasManualDetailsPtrOutput) ToTasConnectorCredentialsTasManualDetailsPtrOutput() TasConnectorCredentialsTasManualDetailsPtrOutput {
	return o
}

func (o TasConnectorCredentialsTasManualDetailsPtrOutput) ToTasConnectorCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) TasConnectorCredentialsTasManualDetailsPtrOutput {
	return o
}

func (o TasConnectorCredentialsTasManualDetailsPtrOutput) Elem() TasConnectorCredentialsTasManualDetailsOutput {
	return o.ApplyT(func(v *TasConnectorCredentialsTasManualDetails) TasConnectorCredentialsTasManualDetails {
		if v != nil {
			return *v
		}
		var ret TasConnectorCredentialsTasManualDetails
		return ret
	}).(TasConnectorCredentialsTasManualDetailsOutput)
}

// URL of the Tas server.
func (o TasConnectorCredentialsTasManualDetailsPtrOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointUrl
	}).(pulumi.StringPtrOutput)
}

// Reference of the secret for the password. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TasConnectorCredentialsTasManualDetailsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Reference token for authentication.
func (o TasConnectorCredentialsTasManualDetailsPtrOutput) ReferenceToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceToken
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o TasConnectorCredentialsTasManualDetailsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TasConnectorCredentialsTasManualDetailsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TasConnectorCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type TemplateFiltersFilterProperties struct {
	// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// TemplateFiltersFilterPropertiesInput is an input type that accepts TemplateFiltersFilterPropertiesArgs and TemplateFiltersFilterPropertiesOutput values.
// You can construct a concrete instance of `TemplateFiltersFilterPropertiesInput` via:
//
//	TemplateFiltersFilterPropertiesArgs{...}
type TemplateFiltersFilterPropertiesInput interface {
	pulumi.Input

	ToTemplateFiltersFilterPropertiesOutput() TemplateFiltersFilterPropertiesOutput
	ToTemplateFiltersFilterPropertiesOutputWithContext(context.Context) TemplateFiltersFilterPropertiesOutput
}

type TemplateFiltersFilterPropertiesArgs struct {
	// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (TemplateFiltersFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFiltersFilterProperties)(nil)).Elem()
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesOutput() TemplateFiltersFilterPropertiesOutput {
	return i.ToTemplateFiltersFilterPropertiesOutputWithContext(context.Background())
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFiltersFilterPropertiesOutput)
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return i.ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFiltersFilterPropertiesOutput).ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx)
}

// TemplateFiltersFilterPropertiesPtrInput is an input type that accepts TemplateFiltersFilterPropertiesArgs, TemplateFiltersFilterPropertiesPtr and TemplateFiltersFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateFiltersFilterPropertiesPtrInput` via:
//
//	        TemplateFiltersFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateFiltersFilterPropertiesPtrInput interface {
	pulumi.Input

	ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput
	ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Context) TemplateFiltersFilterPropertiesPtrOutput
}

type templateFiltersFilterPropertiesPtrType TemplateFiltersFilterPropertiesArgs

func TemplateFiltersFilterPropertiesPtr(v *TemplateFiltersFilterPropertiesArgs) TemplateFiltersFilterPropertiesPtrInput {
	return (*templateFiltersFilterPropertiesPtrType)(v)
}

func (*templateFiltersFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFiltersFilterProperties)(nil)).Elem()
}

func (i *templateFiltersFilterPropertiesPtrType) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return i.ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *templateFiltersFilterPropertiesPtrType) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFiltersFilterPropertiesPtrOutput)
}

type TemplateFiltersFilterPropertiesOutput struct{ *pulumi.OutputState }

func (TemplateFiltersFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFiltersFilterProperties)(nil)).Elem()
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesOutput() TemplateFiltersFilterPropertiesOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return o.ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFiltersFilterProperties) *TemplateFiltersFilterProperties {
		return &v
	}).(TemplateFiltersFilterPropertiesPtrOutput)
}

// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
func (o TemplateFiltersFilterPropertiesOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFiltersFilterProperties) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o TemplateFiltersFilterPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateFiltersFilterProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type TemplateFiltersFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateFiltersFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFiltersFilterProperties)(nil)).Elem()
}

func (o TemplateFiltersFilterPropertiesPtrOutput) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesPtrOutput) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesPtrOutput) Elem() TemplateFiltersFilterPropertiesOutput {
	return o.ApplyT(func(v *TemplateFiltersFilterProperties) TemplateFiltersFilterProperties {
		if v != nil {
			return *v
		}
		var ret TemplateFiltersFilterProperties
		return ret
	}).(TemplateFiltersFilterPropertiesOutput)
}

// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
func (o TemplateFiltersFilterPropertiesPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o TemplateFiltersFilterPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateFiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type TemplateGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// TemplateGitDetailsInput is an input type that accepts TemplateGitDetailsArgs and TemplateGitDetailsOutput values.
// You can construct a concrete instance of `TemplateGitDetailsInput` via:
//
//	TemplateGitDetailsArgs{...}
type TemplateGitDetailsInput interface {
	pulumi.Input

	ToTemplateGitDetailsOutput() TemplateGitDetailsOutput
	ToTemplateGitDetailsOutputWithContext(context.Context) TemplateGitDetailsOutput
}

type TemplateGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (TemplateGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGitDetails)(nil)).Elem()
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsOutput() TemplateGitDetailsOutput {
	return i.ToTemplateGitDetailsOutputWithContext(context.Background())
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsOutputWithContext(ctx context.Context) TemplateGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitDetailsOutput)
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return i.ToTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitDetailsOutput).ToTemplateGitDetailsPtrOutputWithContext(ctx)
}

// TemplateGitDetailsPtrInput is an input type that accepts TemplateGitDetailsArgs, TemplateGitDetailsPtr and TemplateGitDetailsPtrOutput values.
// You can construct a concrete instance of `TemplateGitDetailsPtrInput` via:
//
//	        TemplateGitDetailsArgs{...}
//
//	or:
//
//	        nil
type TemplateGitDetailsPtrInput interface {
	pulumi.Input

	ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput
	ToTemplateGitDetailsPtrOutputWithContext(context.Context) TemplateGitDetailsPtrOutput
}

type templateGitDetailsPtrType TemplateGitDetailsArgs

func TemplateGitDetailsPtr(v *TemplateGitDetailsArgs) TemplateGitDetailsPtrInput {
	return (*templateGitDetailsPtrType)(v)
}

func (*templateGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGitDetails)(nil)).Elem()
}

func (i *templateGitDetailsPtrType) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return i.ToTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i *templateGitDetailsPtrType) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitDetailsPtrOutput)
}

type TemplateGitDetailsOutput struct{ *pulumi.OutputState }

func (TemplateGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGitDetails)(nil)).Elem()
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsOutput() TemplateGitDetailsOutput {
	return o
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsOutputWithContext(ctx context.Context) TemplateGitDetailsOutput {
	return o
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return o.ToTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGitDetails) *TemplateGitDetails {
		return &v
	}).(TemplateGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o TemplateGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o TemplateGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o TemplateGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TemplateGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o TemplateGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o TemplateGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o TemplateGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type TemplateGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGitDetails)(nil)).Elem()
}

func (o TemplateGitDetailsPtrOutput) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return o
}

func (o TemplateGitDetailsPtrOutput) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return o
}

func (o TemplateGitDetailsPtrOutput) Elem() TemplateGitDetailsOutput {
	return o.ApplyT(func(v *TemplateGitDetails) TemplateGitDetails {
		if v != nil {
			return *v
		}
		var ret TemplateGitDetails
		return ret
	}).(TemplateGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o TemplateGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o TemplateGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o TemplateGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TemplateGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o TemplateGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o TemplateGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o TemplateGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type TemplateGitImportDetails struct {
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath      *string `pulumi:"filePath"`
	IsForceImport *bool   `pulumi:"isForceImport"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
}

// TemplateGitImportDetailsInput is an input type that accepts TemplateGitImportDetailsArgs and TemplateGitImportDetailsOutput values.
// You can construct a concrete instance of `TemplateGitImportDetailsInput` via:
//
//	TemplateGitImportDetailsArgs{...}
type TemplateGitImportDetailsInput interface {
	pulumi.Input

	ToTemplateGitImportDetailsOutput() TemplateGitImportDetailsOutput
	ToTemplateGitImportDetailsOutputWithContext(context.Context) TemplateGitImportDetailsOutput
}

type TemplateGitImportDetailsArgs struct {
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath      pulumi.StringPtrInput `pulumi:"filePath"`
	IsForceImport pulumi.BoolPtrInput   `pulumi:"isForceImport"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
}

func (TemplateGitImportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGitImportDetails)(nil)).Elem()
}

func (i TemplateGitImportDetailsArgs) ToTemplateGitImportDetailsOutput() TemplateGitImportDetailsOutput {
	return i.ToTemplateGitImportDetailsOutputWithContext(context.Background())
}

func (i TemplateGitImportDetailsArgs) ToTemplateGitImportDetailsOutputWithContext(ctx context.Context) TemplateGitImportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitImportDetailsOutput)
}

func (i TemplateGitImportDetailsArgs) ToTemplateGitImportDetailsPtrOutput() TemplateGitImportDetailsPtrOutput {
	return i.ToTemplateGitImportDetailsPtrOutputWithContext(context.Background())
}

func (i TemplateGitImportDetailsArgs) ToTemplateGitImportDetailsPtrOutputWithContext(ctx context.Context) TemplateGitImportDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitImportDetailsOutput).ToTemplateGitImportDetailsPtrOutputWithContext(ctx)
}

// TemplateGitImportDetailsPtrInput is an input type that accepts TemplateGitImportDetailsArgs, TemplateGitImportDetailsPtr and TemplateGitImportDetailsPtrOutput values.
// You can construct a concrete instance of `TemplateGitImportDetailsPtrInput` via:
//
//	        TemplateGitImportDetailsArgs{...}
//
//	or:
//
//	        nil
type TemplateGitImportDetailsPtrInput interface {
	pulumi.Input

	ToTemplateGitImportDetailsPtrOutput() TemplateGitImportDetailsPtrOutput
	ToTemplateGitImportDetailsPtrOutputWithContext(context.Context) TemplateGitImportDetailsPtrOutput
}

type templateGitImportDetailsPtrType TemplateGitImportDetailsArgs

func TemplateGitImportDetailsPtr(v *TemplateGitImportDetailsArgs) TemplateGitImportDetailsPtrInput {
	return (*templateGitImportDetailsPtrType)(v)
}

func (*templateGitImportDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGitImportDetails)(nil)).Elem()
}

func (i *templateGitImportDetailsPtrType) ToTemplateGitImportDetailsPtrOutput() TemplateGitImportDetailsPtrOutput {
	return i.ToTemplateGitImportDetailsPtrOutputWithContext(context.Background())
}

func (i *templateGitImportDetailsPtrType) ToTemplateGitImportDetailsPtrOutputWithContext(ctx context.Context) TemplateGitImportDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitImportDetailsPtrOutput)
}

type TemplateGitImportDetailsOutput struct{ *pulumi.OutputState }

func (TemplateGitImportDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGitImportDetails)(nil)).Elem()
}

func (o TemplateGitImportDetailsOutput) ToTemplateGitImportDetailsOutput() TemplateGitImportDetailsOutput {
	return o
}

func (o TemplateGitImportDetailsOutput) ToTemplateGitImportDetailsOutputWithContext(ctx context.Context) TemplateGitImportDetailsOutput {
	return o
}

func (o TemplateGitImportDetailsOutput) ToTemplateGitImportDetailsPtrOutput() TemplateGitImportDetailsPtrOutput {
	return o.ToTemplateGitImportDetailsPtrOutputWithContext(context.Background())
}

func (o TemplateGitImportDetailsOutput) ToTemplateGitImportDetailsPtrOutputWithContext(ctx context.Context) TemplateGitImportDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGitImportDetails) *TemplateGitImportDetails {
		return &v
	}).(TemplateGitImportDetailsPtrOutput)
}

// Name of the branch.
func (o TemplateGitImportDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitImportDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TemplateGitImportDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitImportDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o TemplateGitImportDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitImportDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

func (o TemplateGitImportDetailsOutput) IsForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGitImportDetails) *bool { return v.IsForceImport }).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o TemplateGitImportDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitImportDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

type TemplateGitImportDetailsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGitImportDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGitImportDetails)(nil)).Elem()
}

func (o TemplateGitImportDetailsPtrOutput) ToTemplateGitImportDetailsPtrOutput() TemplateGitImportDetailsPtrOutput {
	return o
}

func (o TemplateGitImportDetailsPtrOutput) ToTemplateGitImportDetailsPtrOutputWithContext(ctx context.Context) TemplateGitImportDetailsPtrOutput {
	return o
}

func (o TemplateGitImportDetailsPtrOutput) Elem() TemplateGitImportDetailsOutput {
	return o.ApplyT(func(v *TemplateGitImportDetails) TemplateGitImportDetails {
		if v != nil {
			return *v
		}
		var ret TemplateGitImportDetails
		return ret
	}).(TemplateGitImportDetailsOutput)
}

// Name of the branch.
func (o TemplateGitImportDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitImportDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for importing entity from Git To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TemplateGitImportDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitImportDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o TemplateGitImportDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitImportDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

func (o TemplateGitImportDetailsPtrOutput) IsForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateGitImportDetails) *bool {
		if v == nil {
			return nil
		}
		return v.IsForceImport
	}).(pulumi.BoolPtrOutput)
}

// Name of the repository.
func (o TemplateGitImportDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitImportDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

type TemplateTemplateImportRequest struct {
	// Description of the template.
	TemplateDescription *string `pulumi:"templateDescription"`
	// Name of the template.
	TemplateName *string `pulumi:"templateName"`
	// Version of the template.
	TemplateVersion *string `pulumi:"templateVersion"`
}

// TemplateTemplateImportRequestInput is an input type that accepts TemplateTemplateImportRequestArgs and TemplateTemplateImportRequestOutput values.
// You can construct a concrete instance of `TemplateTemplateImportRequestInput` via:
//
//	TemplateTemplateImportRequestArgs{...}
type TemplateTemplateImportRequestInput interface {
	pulumi.Input

	ToTemplateTemplateImportRequestOutput() TemplateTemplateImportRequestOutput
	ToTemplateTemplateImportRequestOutputWithContext(context.Context) TemplateTemplateImportRequestOutput
}

type TemplateTemplateImportRequestArgs struct {
	// Description of the template.
	TemplateDescription pulumi.StringPtrInput `pulumi:"templateDescription"`
	// Name of the template.
	TemplateName pulumi.StringPtrInput `pulumi:"templateName"`
	// Version of the template.
	TemplateVersion pulumi.StringPtrInput `pulumi:"templateVersion"`
}

func (TemplateTemplateImportRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateImportRequest)(nil)).Elem()
}

func (i TemplateTemplateImportRequestArgs) ToTemplateTemplateImportRequestOutput() TemplateTemplateImportRequestOutput {
	return i.ToTemplateTemplateImportRequestOutputWithContext(context.Background())
}

func (i TemplateTemplateImportRequestArgs) ToTemplateTemplateImportRequestOutputWithContext(ctx context.Context) TemplateTemplateImportRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateImportRequestOutput)
}

func (i TemplateTemplateImportRequestArgs) ToTemplateTemplateImportRequestPtrOutput() TemplateTemplateImportRequestPtrOutput {
	return i.ToTemplateTemplateImportRequestPtrOutputWithContext(context.Background())
}

func (i TemplateTemplateImportRequestArgs) ToTemplateTemplateImportRequestPtrOutputWithContext(ctx context.Context) TemplateTemplateImportRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateImportRequestOutput).ToTemplateTemplateImportRequestPtrOutputWithContext(ctx)
}

// TemplateTemplateImportRequestPtrInput is an input type that accepts TemplateTemplateImportRequestArgs, TemplateTemplateImportRequestPtr and TemplateTemplateImportRequestPtrOutput values.
// You can construct a concrete instance of `TemplateTemplateImportRequestPtrInput` via:
//
//	        TemplateTemplateImportRequestArgs{...}
//
//	or:
//
//	        nil
type TemplateTemplateImportRequestPtrInput interface {
	pulumi.Input

	ToTemplateTemplateImportRequestPtrOutput() TemplateTemplateImportRequestPtrOutput
	ToTemplateTemplateImportRequestPtrOutputWithContext(context.Context) TemplateTemplateImportRequestPtrOutput
}

type templateTemplateImportRequestPtrType TemplateTemplateImportRequestArgs

func TemplateTemplateImportRequestPtr(v *TemplateTemplateImportRequestArgs) TemplateTemplateImportRequestPtrInput {
	return (*templateTemplateImportRequestPtrType)(v)
}

func (*templateTemplateImportRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateImportRequest)(nil)).Elem()
}

func (i *templateTemplateImportRequestPtrType) ToTemplateTemplateImportRequestPtrOutput() TemplateTemplateImportRequestPtrOutput {
	return i.ToTemplateTemplateImportRequestPtrOutputWithContext(context.Background())
}

func (i *templateTemplateImportRequestPtrType) ToTemplateTemplateImportRequestPtrOutputWithContext(ctx context.Context) TemplateTemplateImportRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTemplateImportRequestPtrOutput)
}

type TemplateTemplateImportRequestOutput struct{ *pulumi.OutputState }

func (TemplateTemplateImportRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTemplateImportRequest)(nil)).Elem()
}

func (o TemplateTemplateImportRequestOutput) ToTemplateTemplateImportRequestOutput() TemplateTemplateImportRequestOutput {
	return o
}

func (o TemplateTemplateImportRequestOutput) ToTemplateTemplateImportRequestOutputWithContext(ctx context.Context) TemplateTemplateImportRequestOutput {
	return o
}

func (o TemplateTemplateImportRequestOutput) ToTemplateTemplateImportRequestPtrOutput() TemplateTemplateImportRequestPtrOutput {
	return o.ToTemplateTemplateImportRequestPtrOutputWithContext(context.Background())
}

func (o TemplateTemplateImportRequestOutput) ToTemplateTemplateImportRequestPtrOutputWithContext(ctx context.Context) TemplateTemplateImportRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTemplateImportRequest) *TemplateTemplateImportRequest {
		return &v
	}).(TemplateTemplateImportRequestPtrOutput)
}

// Description of the template.
func (o TemplateTemplateImportRequestOutput) TemplateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTemplateImportRequest) *string { return v.TemplateDescription }).(pulumi.StringPtrOutput)
}

// Name of the template.
func (o TemplateTemplateImportRequestOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTemplateImportRequest) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

// Version of the template.
func (o TemplateTemplateImportRequestOutput) TemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTemplateImportRequest) *string { return v.TemplateVersion }).(pulumi.StringPtrOutput)
}

type TemplateTemplateImportRequestPtrOutput struct{ *pulumi.OutputState }

func (TemplateTemplateImportRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTemplateImportRequest)(nil)).Elem()
}

func (o TemplateTemplateImportRequestPtrOutput) ToTemplateTemplateImportRequestPtrOutput() TemplateTemplateImportRequestPtrOutput {
	return o
}

func (o TemplateTemplateImportRequestPtrOutput) ToTemplateTemplateImportRequestPtrOutputWithContext(ctx context.Context) TemplateTemplateImportRequestPtrOutput {
	return o
}

func (o TemplateTemplateImportRequestPtrOutput) Elem() TemplateTemplateImportRequestOutput {
	return o.ApplyT(func(v *TemplateTemplateImportRequest) TemplateTemplateImportRequest {
		if v != nil {
			return *v
		}
		var ret TemplateTemplateImportRequest
		return ret
	}).(TemplateTemplateImportRequestOutput)
}

// Description of the template.
func (o TemplateTemplateImportRequestPtrOutput) TemplateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTemplateImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.TemplateDescription
	}).(pulumi.StringPtrOutput)
}

// Name of the template.
func (o TemplateTemplateImportRequestPtrOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTemplateImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.TemplateName
	}).(pulumi.StringPtrOutput)
}

// Version of the template.
func (o TemplateTemplateImportRequestPtrOutput) TemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTemplateImportRequest) *string {
		if v == nil {
			return nil
		}
		return v.TemplateVersion
	}).(pulumi.StringPtrOutput)
}

type TerraformCloudConnectorCredentials struct {
	// API token credentials to use for authentication.
	ApiToken TerraformCloudConnectorCredentialsApiToken `pulumi:"apiToken"`
}

// TerraformCloudConnectorCredentialsInput is an input type that accepts TerraformCloudConnectorCredentialsArgs and TerraformCloudConnectorCredentialsOutput values.
// You can construct a concrete instance of `TerraformCloudConnectorCredentialsInput` via:
//
//	TerraformCloudConnectorCredentialsArgs{...}
type TerraformCloudConnectorCredentialsInput interface {
	pulumi.Input

	ToTerraformCloudConnectorCredentialsOutput() TerraformCloudConnectorCredentialsOutput
	ToTerraformCloudConnectorCredentialsOutputWithContext(context.Context) TerraformCloudConnectorCredentialsOutput
}

type TerraformCloudConnectorCredentialsArgs struct {
	// API token credentials to use for authentication.
	ApiToken TerraformCloudConnectorCredentialsApiTokenInput `pulumi:"apiToken"`
}

func (TerraformCloudConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TerraformCloudConnectorCredentials)(nil)).Elem()
}

func (i TerraformCloudConnectorCredentialsArgs) ToTerraformCloudConnectorCredentialsOutput() TerraformCloudConnectorCredentialsOutput {
	return i.ToTerraformCloudConnectorCredentialsOutputWithContext(context.Background())
}

func (i TerraformCloudConnectorCredentialsArgs) ToTerraformCloudConnectorCredentialsOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorCredentialsOutput)
}

func (i TerraformCloudConnectorCredentialsArgs) ToTerraformCloudConnectorCredentialsPtrOutput() TerraformCloudConnectorCredentialsPtrOutput {
	return i.ToTerraformCloudConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i TerraformCloudConnectorCredentialsArgs) ToTerraformCloudConnectorCredentialsPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorCredentialsOutput).ToTerraformCloudConnectorCredentialsPtrOutputWithContext(ctx)
}

// TerraformCloudConnectorCredentialsPtrInput is an input type that accepts TerraformCloudConnectorCredentialsArgs, TerraformCloudConnectorCredentialsPtr and TerraformCloudConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `TerraformCloudConnectorCredentialsPtrInput` via:
//
//	        TerraformCloudConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type TerraformCloudConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToTerraformCloudConnectorCredentialsPtrOutput() TerraformCloudConnectorCredentialsPtrOutput
	ToTerraformCloudConnectorCredentialsPtrOutputWithContext(context.Context) TerraformCloudConnectorCredentialsPtrOutput
}

type terraformCloudConnectorCredentialsPtrType TerraformCloudConnectorCredentialsArgs

func TerraformCloudConnectorCredentialsPtr(v *TerraformCloudConnectorCredentialsArgs) TerraformCloudConnectorCredentialsPtrInput {
	return (*terraformCloudConnectorCredentialsPtrType)(v)
}

func (*terraformCloudConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TerraformCloudConnectorCredentials)(nil)).Elem()
}

func (i *terraformCloudConnectorCredentialsPtrType) ToTerraformCloudConnectorCredentialsPtrOutput() TerraformCloudConnectorCredentialsPtrOutput {
	return i.ToTerraformCloudConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *terraformCloudConnectorCredentialsPtrType) ToTerraformCloudConnectorCredentialsPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorCredentialsPtrOutput)
}

type TerraformCloudConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerraformCloudConnectorCredentials)(nil)).Elem()
}

func (o TerraformCloudConnectorCredentialsOutput) ToTerraformCloudConnectorCredentialsOutput() TerraformCloudConnectorCredentialsOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsOutput) ToTerraformCloudConnectorCredentialsOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsOutput) ToTerraformCloudConnectorCredentialsPtrOutput() TerraformCloudConnectorCredentialsPtrOutput {
	return o.ToTerraformCloudConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o TerraformCloudConnectorCredentialsOutput) ToTerraformCloudConnectorCredentialsPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TerraformCloudConnectorCredentials) *TerraformCloudConnectorCredentials {
		return &v
	}).(TerraformCloudConnectorCredentialsPtrOutput)
}

// API token credentials to use for authentication.
func (o TerraformCloudConnectorCredentialsOutput) ApiToken() TerraformCloudConnectorCredentialsApiTokenOutput {
	return o.ApplyT(func(v TerraformCloudConnectorCredentials) TerraformCloudConnectorCredentialsApiToken {
		return v.ApiToken
	}).(TerraformCloudConnectorCredentialsApiTokenOutput)
}

type TerraformCloudConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerraformCloudConnectorCredentials)(nil)).Elem()
}

func (o TerraformCloudConnectorCredentialsPtrOutput) ToTerraformCloudConnectorCredentialsPtrOutput() TerraformCloudConnectorCredentialsPtrOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsPtrOutput) ToTerraformCloudConnectorCredentialsPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsPtrOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsPtrOutput) Elem() TerraformCloudConnectorCredentialsOutput {
	return o.ApplyT(func(v *TerraformCloudConnectorCredentials) TerraformCloudConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret TerraformCloudConnectorCredentials
		return ret
	}).(TerraformCloudConnectorCredentialsOutput)
}

// API token credentials to use for authentication.
func (o TerraformCloudConnectorCredentialsPtrOutput) ApiToken() TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return o.ApplyT(func(v *TerraformCloudConnectorCredentials) *TerraformCloudConnectorCredentialsApiToken {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(TerraformCloudConnectorCredentialsApiTokenPtrOutput)
}

type TerraformCloudConnectorCredentialsApiToken struct {
	// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef string `pulumi:"apiTokenRef"`
}

// TerraformCloudConnectorCredentialsApiTokenInput is an input type that accepts TerraformCloudConnectorCredentialsApiTokenArgs and TerraformCloudConnectorCredentialsApiTokenOutput values.
// You can construct a concrete instance of `TerraformCloudConnectorCredentialsApiTokenInput` via:
//
//	TerraformCloudConnectorCredentialsApiTokenArgs{...}
type TerraformCloudConnectorCredentialsApiTokenInput interface {
	pulumi.Input

	ToTerraformCloudConnectorCredentialsApiTokenOutput() TerraformCloudConnectorCredentialsApiTokenOutput
	ToTerraformCloudConnectorCredentialsApiTokenOutputWithContext(context.Context) TerraformCloudConnectorCredentialsApiTokenOutput
}

type TerraformCloudConnectorCredentialsApiTokenArgs struct {
	// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
}

func (TerraformCloudConnectorCredentialsApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TerraformCloudConnectorCredentialsApiToken)(nil)).Elem()
}

func (i TerraformCloudConnectorCredentialsApiTokenArgs) ToTerraformCloudConnectorCredentialsApiTokenOutput() TerraformCloudConnectorCredentialsApiTokenOutput {
	return i.ToTerraformCloudConnectorCredentialsApiTokenOutputWithContext(context.Background())
}

func (i TerraformCloudConnectorCredentialsApiTokenArgs) ToTerraformCloudConnectorCredentialsApiTokenOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorCredentialsApiTokenOutput)
}

func (i TerraformCloudConnectorCredentialsApiTokenArgs) ToTerraformCloudConnectorCredentialsApiTokenPtrOutput() TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return i.ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(context.Background())
}

func (i TerraformCloudConnectorCredentialsApiTokenArgs) ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorCredentialsApiTokenOutput).ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(ctx)
}

// TerraformCloudConnectorCredentialsApiTokenPtrInput is an input type that accepts TerraformCloudConnectorCredentialsApiTokenArgs, TerraformCloudConnectorCredentialsApiTokenPtr and TerraformCloudConnectorCredentialsApiTokenPtrOutput values.
// You can construct a concrete instance of `TerraformCloudConnectorCredentialsApiTokenPtrInput` via:
//
//	        TerraformCloudConnectorCredentialsApiTokenArgs{...}
//
//	or:
//
//	        nil
type TerraformCloudConnectorCredentialsApiTokenPtrInput interface {
	pulumi.Input

	ToTerraformCloudConnectorCredentialsApiTokenPtrOutput() TerraformCloudConnectorCredentialsApiTokenPtrOutput
	ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(context.Context) TerraformCloudConnectorCredentialsApiTokenPtrOutput
}

type terraformCloudConnectorCredentialsApiTokenPtrType TerraformCloudConnectorCredentialsApiTokenArgs

func TerraformCloudConnectorCredentialsApiTokenPtr(v *TerraformCloudConnectorCredentialsApiTokenArgs) TerraformCloudConnectorCredentialsApiTokenPtrInput {
	return (*terraformCloudConnectorCredentialsApiTokenPtrType)(v)
}

func (*terraformCloudConnectorCredentialsApiTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TerraformCloudConnectorCredentialsApiToken)(nil)).Elem()
}

func (i *terraformCloudConnectorCredentialsApiTokenPtrType) ToTerraformCloudConnectorCredentialsApiTokenPtrOutput() TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return i.ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(context.Background())
}

func (i *terraformCloudConnectorCredentialsApiTokenPtrType) ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TerraformCloudConnectorCredentialsApiTokenPtrOutput)
}

type TerraformCloudConnectorCredentialsApiTokenOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorCredentialsApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TerraformCloudConnectorCredentialsApiToken)(nil)).Elem()
}

func (o TerraformCloudConnectorCredentialsApiTokenOutput) ToTerraformCloudConnectorCredentialsApiTokenOutput() TerraformCloudConnectorCredentialsApiTokenOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsApiTokenOutput) ToTerraformCloudConnectorCredentialsApiTokenOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsApiTokenOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsApiTokenOutput) ToTerraformCloudConnectorCredentialsApiTokenPtrOutput() TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return o.ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(context.Background())
}

func (o TerraformCloudConnectorCredentialsApiTokenOutput) ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TerraformCloudConnectorCredentialsApiToken) *TerraformCloudConnectorCredentialsApiToken {
		return &v
	}).(TerraformCloudConnectorCredentialsApiTokenPtrOutput)
}

// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TerraformCloudConnectorCredentialsApiTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v TerraformCloudConnectorCredentialsApiToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

type TerraformCloudConnectorCredentialsApiTokenPtrOutput struct{ *pulumi.OutputState }

func (TerraformCloudConnectorCredentialsApiTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TerraformCloudConnectorCredentialsApiToken)(nil)).Elem()
}

func (o TerraformCloudConnectorCredentialsApiTokenPtrOutput) ToTerraformCloudConnectorCredentialsApiTokenPtrOutput() TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsApiTokenPtrOutput) ToTerraformCloudConnectorCredentialsApiTokenPtrOutputWithContext(ctx context.Context) TerraformCloudConnectorCredentialsApiTokenPtrOutput {
	return o
}

func (o TerraformCloudConnectorCredentialsApiTokenPtrOutput) Elem() TerraformCloudConnectorCredentialsApiTokenOutput {
	return o.ApplyT(func(v *TerraformCloudConnectorCredentialsApiToken) TerraformCloudConnectorCredentialsApiToken {
		if v != nil {
			return *v
		}
		var ret TerraformCloudConnectorCredentialsApiToken
		return ret
	}).(TerraformCloudConnectorCredentialsApiTokenOutput)
}

// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TerraformCloudConnectorCredentialsApiTokenPtrOutput) ApiTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TerraformCloudConnectorCredentialsApiToken) *string {
		if v == nil {
			return nil
		}
		return &v.ApiTokenRef
	}).(pulumi.StringPtrOutput)
}

type UserRoleBinding struct {
	// Managed Role of the user.
	ManagedRole *bool `pulumi:"managedRole"`
	// Resource Group Identifier of the user.
	ResourceGroupIdentifier *string `pulumi:"resourceGroupIdentifier"`
	// Resource Group Name of the user.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Role Identifier of the user.
	RoleIdentifier *string `pulumi:"roleIdentifier"`
	// Role Name Identifier of the user.
	RoleName *string `pulumi:"roleName"`
}

// UserRoleBindingInput is an input type that accepts UserRoleBindingArgs and UserRoleBindingOutput values.
// You can construct a concrete instance of `UserRoleBindingInput` via:
//
//	UserRoleBindingArgs{...}
type UserRoleBindingInput interface {
	pulumi.Input

	ToUserRoleBindingOutput() UserRoleBindingOutput
	ToUserRoleBindingOutputWithContext(context.Context) UserRoleBindingOutput
}

type UserRoleBindingArgs struct {
	// Managed Role of the user.
	ManagedRole pulumi.BoolPtrInput `pulumi:"managedRole"`
	// Resource Group Identifier of the user.
	ResourceGroupIdentifier pulumi.StringPtrInput `pulumi:"resourceGroupIdentifier"`
	// Resource Group Name of the user.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// Role Identifier of the user.
	RoleIdentifier pulumi.StringPtrInput `pulumi:"roleIdentifier"`
	// Role Name Identifier of the user.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (UserRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleBinding)(nil)).Elem()
}

func (i UserRoleBindingArgs) ToUserRoleBindingOutput() UserRoleBindingOutput {
	return i.ToUserRoleBindingOutputWithContext(context.Background())
}

func (i UserRoleBindingArgs) ToUserRoleBindingOutputWithContext(ctx context.Context) UserRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleBindingOutput)
}

// UserRoleBindingArrayInput is an input type that accepts UserRoleBindingArray and UserRoleBindingArrayOutput values.
// You can construct a concrete instance of `UserRoleBindingArrayInput` via:
//
//	UserRoleBindingArray{ UserRoleBindingArgs{...} }
type UserRoleBindingArrayInput interface {
	pulumi.Input

	ToUserRoleBindingArrayOutput() UserRoleBindingArrayOutput
	ToUserRoleBindingArrayOutputWithContext(context.Context) UserRoleBindingArrayOutput
}

type UserRoleBindingArray []UserRoleBindingInput

func (UserRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRoleBinding)(nil)).Elem()
}

func (i UserRoleBindingArray) ToUserRoleBindingArrayOutput() UserRoleBindingArrayOutput {
	return i.ToUserRoleBindingArrayOutputWithContext(context.Background())
}

func (i UserRoleBindingArray) ToUserRoleBindingArrayOutputWithContext(ctx context.Context) UserRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleBindingArrayOutput)
}

type UserRoleBindingOutput struct{ *pulumi.OutputState }

func (UserRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleBinding)(nil)).Elem()
}

func (o UserRoleBindingOutput) ToUserRoleBindingOutput() UserRoleBindingOutput {
	return o
}

func (o UserRoleBindingOutput) ToUserRoleBindingOutputWithContext(ctx context.Context) UserRoleBindingOutput {
	return o
}

// Managed Role of the user.
func (o UserRoleBindingOutput) ManagedRole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *bool { return v.ManagedRole }).(pulumi.BoolPtrOutput)
}

// Resource Group Identifier of the user.
func (o UserRoleBindingOutput) ResourceGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.ResourceGroupIdentifier }).(pulumi.StringPtrOutput)
}

// Resource Group Name of the user.
func (o UserRoleBindingOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// Role Identifier of the user.
func (o UserRoleBindingOutput) RoleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.RoleIdentifier }).(pulumi.StringPtrOutput)
}

// Role Name Identifier of the user.
func (o UserRoleBindingOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type UserRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (UserRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRoleBinding)(nil)).Elem()
}

func (o UserRoleBindingArrayOutput) ToUserRoleBindingArrayOutput() UserRoleBindingArrayOutput {
	return o
}

func (o UserRoleBindingArrayOutput) ToUserRoleBindingArrayOutputWithContext(ctx context.Context) UserRoleBindingArrayOutput {
	return o
}

func (o UserRoleBindingArrayOutput) Index(i pulumi.IntInput) UserRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserRoleBinding {
		return vs[0].([]UserRoleBinding)[vs[1].(int)]
	}).(UserRoleBindingOutput)
}

type UsergroupNotificationConfig struct {
	// Group email.
	GroupEmail *string `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey *string `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers *bool `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl *string `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type *string `pulumi:"type"`
}

// UsergroupNotificationConfigInput is an input type that accepts UsergroupNotificationConfigArgs and UsergroupNotificationConfigOutput values.
// You can construct a concrete instance of `UsergroupNotificationConfigInput` via:
//
//	UsergroupNotificationConfigArgs{...}
type UsergroupNotificationConfigInput interface {
	pulumi.Input

	ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput
	ToUsergroupNotificationConfigOutputWithContext(context.Context) UsergroupNotificationConfigOutput
}

type UsergroupNotificationConfigArgs struct {
	// Group email.
	GroupEmail pulumi.StringPtrInput `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey pulumi.StringPtrInput `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers pulumi.BoolPtrInput `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl pulumi.StringPtrInput `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (UsergroupNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsergroupNotificationConfig)(nil)).Elem()
}

func (i UsergroupNotificationConfigArgs) ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput {
	return i.ToUsergroupNotificationConfigOutputWithContext(context.Background())
}

func (i UsergroupNotificationConfigArgs) ToUsergroupNotificationConfigOutputWithContext(ctx context.Context) UsergroupNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupNotificationConfigOutput)
}

// UsergroupNotificationConfigArrayInput is an input type that accepts UsergroupNotificationConfigArray and UsergroupNotificationConfigArrayOutput values.
// You can construct a concrete instance of `UsergroupNotificationConfigArrayInput` via:
//
//	UsergroupNotificationConfigArray{ UsergroupNotificationConfigArgs{...} }
type UsergroupNotificationConfigArrayInput interface {
	pulumi.Input

	ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput
	ToUsergroupNotificationConfigArrayOutputWithContext(context.Context) UsergroupNotificationConfigArrayOutput
}

type UsergroupNotificationConfigArray []UsergroupNotificationConfigInput

func (UsergroupNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsergroupNotificationConfig)(nil)).Elem()
}

func (i UsergroupNotificationConfigArray) ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput {
	return i.ToUsergroupNotificationConfigArrayOutputWithContext(context.Background())
}

func (i UsergroupNotificationConfigArray) ToUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) UsergroupNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupNotificationConfigArrayOutput)
}

type UsergroupNotificationConfigOutput struct{ *pulumi.OutputState }

func (UsergroupNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsergroupNotificationConfig)(nil)).Elem()
}

func (o UsergroupNotificationConfigOutput) ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput {
	return o
}

func (o UsergroupNotificationConfigOutput) ToUsergroupNotificationConfigOutputWithContext(ctx context.Context) UsergroupNotificationConfigOutput {
	return o
}

// Group email.
func (o UsergroupNotificationConfigOutput) GroupEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.GroupEmail }).(pulumi.StringPtrOutput)
}

// Url of Microsoft teams webhook.
func (o UsergroupNotificationConfigOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Pager duty key.
func (o UsergroupNotificationConfigOutput) PagerDutyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.PagerDutyKey }).(pulumi.StringPtrOutput)
}

// Send email to all the group members.
func (o UsergroupNotificationConfigOutput) SendEmailToAllUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *bool { return v.SendEmailToAllUsers }).(pulumi.BoolPtrOutput)
}

// Url of slack webhook.
func (o UsergroupNotificationConfigOutput) SlackWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.SlackWebhookUrl }).(pulumi.StringPtrOutput)
}

// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
func (o UsergroupNotificationConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type UsergroupNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (UsergroupNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsergroupNotificationConfig)(nil)).Elem()
}

func (o UsergroupNotificationConfigArrayOutput) ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput {
	return o
}

func (o UsergroupNotificationConfigArrayOutput) ToUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) UsergroupNotificationConfigArrayOutput {
	return o
}

func (o UsergroupNotificationConfigArrayOutput) Index(i pulumi.IntInput) UsergroupNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsergroupNotificationConfig {
		return vs[0].([]UsergroupNotificationConfig)[vs[1].(int)]
	}).(UsergroupNotificationConfigOutput)
}

type VariablesSpec struct {
	// FixedValue of the variable
	FixedValue string `pulumi:"fixedValue"`
	// Type of Value of the Variable. For now only FIXED is supported
	ValueType string `pulumi:"valueType"`
}

// VariablesSpecInput is an input type that accepts VariablesSpecArgs and VariablesSpecOutput values.
// You can construct a concrete instance of `VariablesSpecInput` via:
//
//	VariablesSpecArgs{...}
type VariablesSpecInput interface {
	pulumi.Input

	ToVariablesSpecOutput() VariablesSpecOutput
	ToVariablesSpecOutputWithContext(context.Context) VariablesSpecOutput
}

type VariablesSpecArgs struct {
	// FixedValue of the variable
	FixedValue pulumi.StringInput `pulumi:"fixedValue"`
	// Type of Value of the Variable. For now only FIXED is supported
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (VariablesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablesSpec)(nil)).Elem()
}

func (i VariablesSpecArgs) ToVariablesSpecOutput() VariablesSpecOutput {
	return i.ToVariablesSpecOutputWithContext(context.Background())
}

func (i VariablesSpecArgs) ToVariablesSpecOutputWithContext(ctx context.Context) VariablesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablesSpecOutput)
}

func (i VariablesSpecArgs) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return i.ToVariablesSpecPtrOutputWithContext(context.Background())
}

func (i VariablesSpecArgs) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablesSpecOutput).ToVariablesSpecPtrOutputWithContext(ctx)
}

// VariablesSpecPtrInput is an input type that accepts VariablesSpecArgs, VariablesSpecPtr and VariablesSpecPtrOutput values.
// You can construct a concrete instance of `VariablesSpecPtrInput` via:
//
//	        VariablesSpecArgs{...}
//
//	or:
//
//	        nil
type VariablesSpecPtrInput interface {
	pulumi.Input

	ToVariablesSpecPtrOutput() VariablesSpecPtrOutput
	ToVariablesSpecPtrOutputWithContext(context.Context) VariablesSpecPtrOutput
}

type variablesSpecPtrType VariablesSpecArgs

func VariablesSpecPtr(v *VariablesSpecArgs) VariablesSpecPtrInput {
	return (*variablesSpecPtrType)(v)
}

func (*variablesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablesSpec)(nil)).Elem()
}

func (i *variablesSpecPtrType) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return i.ToVariablesSpecPtrOutputWithContext(context.Background())
}

func (i *variablesSpecPtrType) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablesSpecPtrOutput)
}

type VariablesSpecOutput struct{ *pulumi.OutputState }

func (VariablesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablesSpec)(nil)).Elem()
}

func (o VariablesSpecOutput) ToVariablesSpecOutput() VariablesSpecOutput {
	return o
}

func (o VariablesSpecOutput) ToVariablesSpecOutputWithContext(ctx context.Context) VariablesSpecOutput {
	return o
}

func (o VariablesSpecOutput) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return o.ToVariablesSpecPtrOutputWithContext(context.Background())
}

func (o VariablesSpecOutput) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariablesSpec) *VariablesSpec {
		return &v
	}).(VariablesSpecPtrOutput)
}

// FixedValue of the variable
func (o VariablesSpecOutput) FixedValue() pulumi.StringOutput {
	return o.ApplyT(func(v VariablesSpec) string { return v.FixedValue }).(pulumi.StringOutput)
}

// Type of Value of the Variable. For now only FIXED is supported
func (o VariablesSpecOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v VariablesSpec) string { return v.ValueType }).(pulumi.StringOutput)
}

type VariablesSpecPtrOutput struct{ *pulumi.OutputState }

func (VariablesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablesSpec)(nil)).Elem()
}

func (o VariablesSpecPtrOutput) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return o
}

func (o VariablesSpecPtrOutput) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return o
}

func (o VariablesSpecPtrOutput) Elem() VariablesSpecOutput {
	return o.ApplyT(func(v *VariablesSpec) VariablesSpec {
		if v != nil {
			return *v
		}
		var ret VariablesSpec
		return ret
	}).(VariablesSpecOutput)
}

// FixedValue of the variable
func (o VariablesSpecPtrOutput) FixedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablesSpec) *string {
		if v == nil {
			return nil
		}
		return &v.FixedValue
	}).(pulumi.StringPtrOutput)
}

// Type of Value of the Variable. For now only FIXED is supported
func (o VariablesSpecPtrOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablesSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ValueType
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnector struct {
	// Connector Ref is the reference to the connector
	ConnectorRef string `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type string `pulumi:"type"`
}

// WorkspaceConnectorInput is an input type that accepts WorkspaceConnectorArgs and WorkspaceConnectorOutput values.
// You can construct a concrete instance of `WorkspaceConnectorInput` via:
//
//	WorkspaceConnectorArgs{...}
type WorkspaceConnectorInput interface {
	pulumi.Input

	ToWorkspaceConnectorOutput() WorkspaceConnectorOutput
	ToWorkspaceConnectorOutputWithContext(context.Context) WorkspaceConnectorOutput
}

type WorkspaceConnectorArgs struct {
	// Connector Ref is the reference to the connector
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkspaceConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnector)(nil)).Elem()
}

func (i WorkspaceConnectorArgs) ToWorkspaceConnectorOutput() WorkspaceConnectorOutput {
	return i.ToWorkspaceConnectorOutputWithContext(context.Background())
}

func (i WorkspaceConnectorArgs) ToWorkspaceConnectorOutputWithContext(ctx context.Context) WorkspaceConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectorOutput)
}

// WorkspaceConnectorArrayInput is an input type that accepts WorkspaceConnectorArray and WorkspaceConnectorArrayOutput values.
// You can construct a concrete instance of `WorkspaceConnectorArrayInput` via:
//
//	WorkspaceConnectorArray{ WorkspaceConnectorArgs{...} }
type WorkspaceConnectorArrayInput interface {
	pulumi.Input

	ToWorkspaceConnectorArrayOutput() WorkspaceConnectorArrayOutput
	ToWorkspaceConnectorArrayOutputWithContext(context.Context) WorkspaceConnectorArrayOutput
}

type WorkspaceConnectorArray []WorkspaceConnectorInput

func (WorkspaceConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceConnector)(nil)).Elem()
}

func (i WorkspaceConnectorArray) ToWorkspaceConnectorArrayOutput() WorkspaceConnectorArrayOutput {
	return i.ToWorkspaceConnectorArrayOutputWithContext(context.Background())
}

func (i WorkspaceConnectorArray) ToWorkspaceConnectorArrayOutputWithContext(ctx context.Context) WorkspaceConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectorArrayOutput)
}

type WorkspaceConnectorOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnector)(nil)).Elem()
}

func (o WorkspaceConnectorOutput) ToWorkspaceConnectorOutput() WorkspaceConnectorOutput {
	return o
}

func (o WorkspaceConnectorOutput) ToWorkspaceConnectorOutputWithContext(ctx context.Context) WorkspaceConnectorOutput {
	return o
}

// Connector Ref is the reference to the connector
func (o WorkspaceConnectorOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceConnector) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// Type is the connector type of the connector. Supported types: aws, azure, gcp
func (o WorkspaceConnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceConnector) string { return v.Type }).(pulumi.StringOutput)
}

type WorkspaceConnectorArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceConnector)(nil)).Elem()
}

func (o WorkspaceConnectorArrayOutput) ToWorkspaceConnectorArrayOutput() WorkspaceConnectorArrayOutput {
	return o
}

func (o WorkspaceConnectorArrayOutput) ToWorkspaceConnectorArrayOutputWithContext(ctx context.Context) WorkspaceConnectorArrayOutput {
	return o
}

func (o WorkspaceConnectorArrayOutput) Index(i pulumi.IntInput) WorkspaceConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceConnector {
		return vs[0].([]WorkspaceConnector)[vs[1].(int)]
	}).(WorkspaceConnectorOutput)
}

type WorkspaceEnvironmentVariable struct {
	// Key is the identifier for the variable. Must be unique within the workspace.
	Key string `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType string `pulumi:"valueType"`
}

// WorkspaceEnvironmentVariableInput is an input type that accepts WorkspaceEnvironmentVariableArgs and WorkspaceEnvironmentVariableOutput values.
// You can construct a concrete instance of `WorkspaceEnvironmentVariableInput` via:
//
//	WorkspaceEnvironmentVariableArgs{...}
type WorkspaceEnvironmentVariableInput interface {
	pulumi.Input

	ToWorkspaceEnvironmentVariableOutput() WorkspaceEnvironmentVariableOutput
	ToWorkspaceEnvironmentVariableOutputWithContext(context.Context) WorkspaceEnvironmentVariableOutput
}

type WorkspaceEnvironmentVariableArgs struct {
	// Key is the identifier for the variable. Must be unique within the workspace.
	Key pulumi.StringInput `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (WorkspaceEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceEnvironmentVariable)(nil)).Elem()
}

func (i WorkspaceEnvironmentVariableArgs) ToWorkspaceEnvironmentVariableOutput() WorkspaceEnvironmentVariableOutput {
	return i.ToWorkspaceEnvironmentVariableOutputWithContext(context.Background())
}

func (i WorkspaceEnvironmentVariableArgs) ToWorkspaceEnvironmentVariableOutputWithContext(ctx context.Context) WorkspaceEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceEnvironmentVariableOutput)
}

// WorkspaceEnvironmentVariableArrayInput is an input type that accepts WorkspaceEnvironmentVariableArray and WorkspaceEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `WorkspaceEnvironmentVariableArrayInput` via:
//
//	WorkspaceEnvironmentVariableArray{ WorkspaceEnvironmentVariableArgs{...} }
type WorkspaceEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToWorkspaceEnvironmentVariableArrayOutput() WorkspaceEnvironmentVariableArrayOutput
	ToWorkspaceEnvironmentVariableArrayOutputWithContext(context.Context) WorkspaceEnvironmentVariableArrayOutput
}

type WorkspaceEnvironmentVariableArray []WorkspaceEnvironmentVariableInput

func (WorkspaceEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceEnvironmentVariable)(nil)).Elem()
}

func (i WorkspaceEnvironmentVariableArray) ToWorkspaceEnvironmentVariableArrayOutput() WorkspaceEnvironmentVariableArrayOutput {
	return i.ToWorkspaceEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i WorkspaceEnvironmentVariableArray) ToWorkspaceEnvironmentVariableArrayOutputWithContext(ctx context.Context) WorkspaceEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceEnvironmentVariableArrayOutput)
}

type WorkspaceEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (WorkspaceEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceEnvironmentVariable)(nil)).Elem()
}

func (o WorkspaceEnvironmentVariableOutput) ToWorkspaceEnvironmentVariableOutput() WorkspaceEnvironmentVariableOutput {
	return o
}

func (o WorkspaceEnvironmentVariableOutput) ToWorkspaceEnvironmentVariableOutputWithContext(ctx context.Context) WorkspaceEnvironmentVariableOutput {
	return o
}

// Key is the identifier for the variable. Must be unique within the workspace.
func (o WorkspaceEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
func (o WorkspaceEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable. Currently we support string and secret.
func (o WorkspaceEnvironmentVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceEnvironmentVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type WorkspaceEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceEnvironmentVariable)(nil)).Elem()
}

func (o WorkspaceEnvironmentVariableArrayOutput) ToWorkspaceEnvironmentVariableArrayOutput() WorkspaceEnvironmentVariableArrayOutput {
	return o
}

func (o WorkspaceEnvironmentVariableArrayOutput) ToWorkspaceEnvironmentVariableArrayOutputWithContext(ctx context.Context) WorkspaceEnvironmentVariableArrayOutput {
	return o
}

func (o WorkspaceEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) WorkspaceEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceEnvironmentVariable {
		return vs[0].([]WorkspaceEnvironmentVariable)[vs[1].(int)]
	}).(WorkspaceEnvironmentVariableOutput)
}

type WorkspaceTerraformVariable struct {
	// Key is the identifier for the variable. Must be unique within the workspace.
	Key string `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType string `pulumi:"valueType"`
}

// WorkspaceTerraformVariableInput is an input type that accepts WorkspaceTerraformVariableArgs and WorkspaceTerraformVariableOutput values.
// You can construct a concrete instance of `WorkspaceTerraformVariableInput` via:
//
//	WorkspaceTerraformVariableArgs{...}
type WorkspaceTerraformVariableInput interface {
	pulumi.Input

	ToWorkspaceTerraformVariableOutput() WorkspaceTerraformVariableOutput
	ToWorkspaceTerraformVariableOutputWithContext(context.Context) WorkspaceTerraformVariableOutput
}

type WorkspaceTerraformVariableArgs struct {
	// Key is the identifier for the variable. Must be unique within the workspace.
	Key pulumi.StringInput `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (WorkspaceTerraformVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTerraformVariable)(nil)).Elem()
}

func (i WorkspaceTerraformVariableArgs) ToWorkspaceTerraformVariableOutput() WorkspaceTerraformVariableOutput {
	return i.ToWorkspaceTerraformVariableOutputWithContext(context.Background())
}

func (i WorkspaceTerraformVariableArgs) ToWorkspaceTerraformVariableOutputWithContext(ctx context.Context) WorkspaceTerraformVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTerraformVariableOutput)
}

// WorkspaceTerraformVariableArrayInput is an input type that accepts WorkspaceTerraformVariableArray and WorkspaceTerraformVariableArrayOutput values.
// You can construct a concrete instance of `WorkspaceTerraformVariableArrayInput` via:
//
//	WorkspaceTerraformVariableArray{ WorkspaceTerraformVariableArgs{...} }
type WorkspaceTerraformVariableArrayInput interface {
	pulumi.Input

	ToWorkspaceTerraformVariableArrayOutput() WorkspaceTerraformVariableArrayOutput
	ToWorkspaceTerraformVariableArrayOutputWithContext(context.Context) WorkspaceTerraformVariableArrayOutput
}

type WorkspaceTerraformVariableArray []WorkspaceTerraformVariableInput

func (WorkspaceTerraformVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTerraformVariable)(nil)).Elem()
}

func (i WorkspaceTerraformVariableArray) ToWorkspaceTerraformVariableArrayOutput() WorkspaceTerraformVariableArrayOutput {
	return i.ToWorkspaceTerraformVariableArrayOutputWithContext(context.Background())
}

func (i WorkspaceTerraformVariableArray) ToWorkspaceTerraformVariableArrayOutputWithContext(ctx context.Context) WorkspaceTerraformVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTerraformVariableArrayOutput)
}

type WorkspaceTerraformVariableOutput struct{ *pulumi.OutputState }

func (WorkspaceTerraformVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTerraformVariable)(nil)).Elem()
}

func (o WorkspaceTerraformVariableOutput) ToWorkspaceTerraformVariableOutput() WorkspaceTerraformVariableOutput {
	return o
}

func (o WorkspaceTerraformVariableOutput) ToWorkspaceTerraformVariableOutputWithContext(ctx context.Context) WorkspaceTerraformVariableOutput {
	return o
}

// Key is the identifier for the variable. Must be unique within the workspace.
func (o WorkspaceTerraformVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
func (o WorkspaceTerraformVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable. Currently we support string and secret.
func (o WorkspaceTerraformVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type WorkspaceTerraformVariableArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceTerraformVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTerraformVariable)(nil)).Elem()
}

func (o WorkspaceTerraformVariableArrayOutput) ToWorkspaceTerraformVariableArrayOutput() WorkspaceTerraformVariableArrayOutput {
	return o
}

func (o WorkspaceTerraformVariableArrayOutput) ToWorkspaceTerraformVariableArrayOutputWithContext(ctx context.Context) WorkspaceTerraformVariableArrayOutput {
	return o
}

func (o WorkspaceTerraformVariableArrayOutput) Index(i pulumi.IntInput) WorkspaceTerraformVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceTerraformVariable {
		return vs[0].([]WorkspaceTerraformVariable)[vs[1].(int)]
	}).(WorkspaceTerraformVariableOutput)
}

type WorkspaceTerraformVariableFile struct {
	// Repository is the name of the repository to fetch the code from.
	Repository string `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch *string `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit *string `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector string `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath *string `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha *string `pulumi:"repositorySha"`
}

// WorkspaceTerraformVariableFileInput is an input type that accepts WorkspaceTerraformVariableFileArgs and WorkspaceTerraformVariableFileOutput values.
// You can construct a concrete instance of `WorkspaceTerraformVariableFileInput` via:
//
//	WorkspaceTerraformVariableFileArgs{...}
type WorkspaceTerraformVariableFileInput interface {
	pulumi.Input

	ToWorkspaceTerraformVariableFileOutput() WorkspaceTerraformVariableFileOutput
	ToWorkspaceTerraformVariableFileOutputWithContext(context.Context) WorkspaceTerraformVariableFileOutput
}

type WorkspaceTerraformVariableFileArgs struct {
	// Repository is the name of the repository to fetch the code from.
	Repository pulumi.StringInput `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch pulumi.StringPtrInput `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit pulumi.StringPtrInput `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector pulumi.StringInput `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath pulumi.StringPtrInput `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha pulumi.StringPtrInput `pulumi:"repositorySha"`
}

func (WorkspaceTerraformVariableFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTerraformVariableFile)(nil)).Elem()
}

func (i WorkspaceTerraformVariableFileArgs) ToWorkspaceTerraformVariableFileOutput() WorkspaceTerraformVariableFileOutput {
	return i.ToWorkspaceTerraformVariableFileOutputWithContext(context.Background())
}

func (i WorkspaceTerraformVariableFileArgs) ToWorkspaceTerraformVariableFileOutputWithContext(ctx context.Context) WorkspaceTerraformVariableFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTerraformVariableFileOutput)
}

// WorkspaceTerraformVariableFileArrayInput is an input type that accepts WorkspaceTerraformVariableFileArray and WorkspaceTerraformVariableFileArrayOutput values.
// You can construct a concrete instance of `WorkspaceTerraformVariableFileArrayInput` via:
//
//	WorkspaceTerraformVariableFileArray{ WorkspaceTerraformVariableFileArgs{...} }
type WorkspaceTerraformVariableFileArrayInput interface {
	pulumi.Input

	ToWorkspaceTerraformVariableFileArrayOutput() WorkspaceTerraformVariableFileArrayOutput
	ToWorkspaceTerraformVariableFileArrayOutputWithContext(context.Context) WorkspaceTerraformVariableFileArrayOutput
}

type WorkspaceTerraformVariableFileArray []WorkspaceTerraformVariableFileInput

func (WorkspaceTerraformVariableFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTerraformVariableFile)(nil)).Elem()
}

func (i WorkspaceTerraformVariableFileArray) ToWorkspaceTerraformVariableFileArrayOutput() WorkspaceTerraformVariableFileArrayOutput {
	return i.ToWorkspaceTerraformVariableFileArrayOutputWithContext(context.Background())
}

func (i WorkspaceTerraformVariableFileArray) ToWorkspaceTerraformVariableFileArrayOutputWithContext(ctx context.Context) WorkspaceTerraformVariableFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTerraformVariableFileArrayOutput)
}

type WorkspaceTerraformVariableFileOutput struct{ *pulumi.OutputState }

func (WorkspaceTerraformVariableFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTerraformVariableFile)(nil)).Elem()
}

func (o WorkspaceTerraformVariableFileOutput) ToWorkspaceTerraformVariableFileOutput() WorkspaceTerraformVariableFileOutput {
	return o
}

func (o WorkspaceTerraformVariableFileOutput) ToWorkspaceTerraformVariableFileOutputWithContext(ctx context.Context) WorkspaceTerraformVariableFileOutput {
	return o
}

// Repository is the name of the repository to fetch the code from.
func (o WorkspaceTerraformVariableFileOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariableFile) string { return v.Repository }).(pulumi.StringOutput)
}

// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
func (o WorkspaceTerraformVariableFileOutput) RepositoryBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariableFile) *string { return v.RepositoryBranch }).(pulumi.StringPtrOutput)
}

// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
func (o WorkspaceTerraformVariableFileOutput) RepositoryCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariableFile) *string { return v.RepositoryCommit }).(pulumi.StringPtrOutput)
}

// Repository connector is the reference to the connector used to fetch the variables.
func (o WorkspaceTerraformVariableFileOutput) RepositoryConnector() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariableFile) string { return v.RepositoryConnector }).(pulumi.StringOutput)
}

// Repository path is the path in which the variables reside.
func (o WorkspaceTerraformVariableFileOutput) RepositoryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariableFile) *string { return v.RepositoryPath }).(pulumi.StringPtrOutput)
}

// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
func (o WorkspaceTerraformVariableFileOutput) RepositorySha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceTerraformVariableFile) *string { return v.RepositorySha }).(pulumi.StringPtrOutput)
}

type WorkspaceTerraformVariableFileArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceTerraformVariableFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTerraformVariableFile)(nil)).Elem()
}

func (o WorkspaceTerraformVariableFileArrayOutput) ToWorkspaceTerraformVariableFileArrayOutput() WorkspaceTerraformVariableFileArrayOutput {
	return o
}

func (o WorkspaceTerraformVariableFileArrayOutput) ToWorkspaceTerraformVariableFileArrayOutputWithContext(ctx context.Context) WorkspaceTerraformVariableFileArrayOutput {
	return o
}

func (o WorkspaceTerraformVariableFileArrayOutput) Index(i pulumi.IntInput) WorkspaceTerraformVariableFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceTerraformVariableFile {
		return vs[0].([]WorkspaceTerraformVariableFile)[vs[1].(int)]
	}).(WorkspaceTerraformVariableFileOutput)
}

type GetAppDynamicsConnectorApiToken struct {
	// The client id used for connecting to App Dynamics.
	ClientId string `pulumi:"clientId"`
	// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef string `pulumi:"clientSecretRef"`
}

// GetAppDynamicsConnectorApiTokenInput is an input type that accepts GetAppDynamicsConnectorApiTokenArgs and GetAppDynamicsConnectorApiTokenOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorApiTokenInput` via:
//
//	GetAppDynamicsConnectorApiTokenArgs{...}
type GetAppDynamicsConnectorApiTokenInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorApiTokenOutput() GetAppDynamicsConnectorApiTokenOutput
	ToGetAppDynamicsConnectorApiTokenOutputWithContext(context.Context) GetAppDynamicsConnectorApiTokenOutput
}

type GetAppDynamicsConnectorApiTokenArgs struct {
	// The client id used for connecting to App Dynamics.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
}

func (GetAppDynamicsConnectorApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (i GetAppDynamicsConnectorApiTokenArgs) ToGetAppDynamicsConnectorApiTokenOutput() GetAppDynamicsConnectorApiTokenOutput {
	return i.ToGetAppDynamicsConnectorApiTokenOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorApiTokenArgs) ToGetAppDynamicsConnectorApiTokenOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorApiTokenOutput)
}

// GetAppDynamicsConnectorApiTokenArrayInput is an input type that accepts GetAppDynamicsConnectorApiTokenArray and GetAppDynamicsConnectorApiTokenArrayOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorApiTokenArrayInput` via:
//
//	GetAppDynamicsConnectorApiTokenArray{ GetAppDynamicsConnectorApiTokenArgs{...} }
type GetAppDynamicsConnectorApiTokenArrayInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorApiTokenArrayOutput() GetAppDynamicsConnectorApiTokenArrayOutput
	ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(context.Context) GetAppDynamicsConnectorApiTokenArrayOutput
}

type GetAppDynamicsConnectorApiTokenArray []GetAppDynamicsConnectorApiTokenInput

func (GetAppDynamicsConnectorApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (i GetAppDynamicsConnectorApiTokenArray) ToGetAppDynamicsConnectorApiTokenArrayOutput() GetAppDynamicsConnectorApiTokenArrayOutput {
	return i.ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorApiTokenArray) ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorApiTokenArrayOutput)
}

type GetAppDynamicsConnectorApiTokenOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (o GetAppDynamicsConnectorApiTokenOutput) ToGetAppDynamicsConnectorApiTokenOutput() GetAppDynamicsConnectorApiTokenOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenOutput) ToGetAppDynamicsConnectorApiTokenOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenOutput {
	return o
}

// The client id used for connecting to App Dynamics.
func (o GetAppDynamicsConnectorApiTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorApiToken) string { return v.ClientId }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAppDynamicsConnectorApiTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorApiToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

type GetAppDynamicsConnectorApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (o GetAppDynamicsConnectorApiTokenArrayOutput) ToGetAppDynamicsConnectorApiTokenArrayOutput() GetAppDynamicsConnectorApiTokenArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenArrayOutput) ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenArrayOutput) Index(i pulumi.IntInput) GetAppDynamicsConnectorApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDynamicsConnectorApiToken {
		return vs[0].([]GetAppDynamicsConnectorApiToken)[vs[1].(int)]
	}).(GetAppDynamicsConnectorApiTokenOutput)
}

type GetAppDynamicsConnectorUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
}

// GetAppDynamicsConnectorUsernamePasswordInput is an input type that accepts GetAppDynamicsConnectorUsernamePasswordArgs and GetAppDynamicsConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorUsernamePasswordInput` via:
//
//	GetAppDynamicsConnectorUsernamePasswordArgs{...}
type GetAppDynamicsConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorUsernamePasswordOutput() GetAppDynamicsConnectorUsernamePasswordOutput
	ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(context.Context) GetAppDynamicsConnectorUsernamePasswordOutput
}

type GetAppDynamicsConnectorUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetAppDynamicsConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (i GetAppDynamicsConnectorUsernamePasswordArgs) ToGetAppDynamicsConnectorUsernamePasswordOutput() GetAppDynamicsConnectorUsernamePasswordOutput {
	return i.ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorUsernamePasswordArgs) ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorUsernamePasswordOutput)
}

// GetAppDynamicsConnectorUsernamePasswordArrayInput is an input type that accepts GetAppDynamicsConnectorUsernamePasswordArray and GetAppDynamicsConnectorUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorUsernamePasswordArrayInput` via:
//
//	GetAppDynamicsConnectorUsernamePasswordArray{ GetAppDynamicsConnectorUsernamePasswordArgs{...} }
type GetAppDynamicsConnectorUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorUsernamePasswordArrayOutput() GetAppDynamicsConnectorUsernamePasswordArrayOutput
	ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(context.Context) GetAppDynamicsConnectorUsernamePasswordArrayOutput
}

type GetAppDynamicsConnectorUsernamePasswordArray []GetAppDynamicsConnectorUsernamePasswordInput

func (GetAppDynamicsConnectorUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (i GetAppDynamicsConnectorUsernamePasswordArray) ToGetAppDynamicsConnectorUsernamePasswordArrayOutput() GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return i.ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorUsernamePasswordArray) ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorUsernamePasswordArrayOutput)
}

type GetAppDynamicsConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (o GetAppDynamicsConnectorUsernamePasswordOutput) ToGetAppDynamicsConnectorUsernamePasswordOutput() GetAppDynamicsConnectorUsernamePasswordOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordOutput) ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAppDynamicsConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetAppDynamicsConnectorUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

type GetAppDynamicsConnectorUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (o GetAppDynamicsConnectorUsernamePasswordArrayOutput) ToGetAppDynamicsConnectorUsernamePasswordArrayOutput() GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordArrayOutput) ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetAppDynamicsConnectorUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDynamicsConnectorUsernamePassword {
		return vs[0].([]GetAppDynamicsConnectorUsernamePassword)[vs[1].(int)]
	}).(GetAppDynamicsConnectorUsernamePasswordOutput)
}

type GetArtifactoryConnectorCredential struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetArtifactoryConnectorCredentialInput is an input type that accepts GetArtifactoryConnectorCredentialArgs and GetArtifactoryConnectorCredentialOutput values.
// You can construct a concrete instance of `GetArtifactoryConnectorCredentialInput` via:
//
//	GetArtifactoryConnectorCredentialArgs{...}
type GetArtifactoryConnectorCredentialInput interface {
	pulumi.Input

	ToGetArtifactoryConnectorCredentialOutput() GetArtifactoryConnectorCredentialOutput
	ToGetArtifactoryConnectorCredentialOutputWithContext(context.Context) GetArtifactoryConnectorCredentialOutput
}

type GetArtifactoryConnectorCredentialArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetArtifactoryConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (i GetArtifactoryConnectorCredentialArgs) ToGetArtifactoryConnectorCredentialOutput() GetArtifactoryConnectorCredentialOutput {
	return i.ToGetArtifactoryConnectorCredentialOutputWithContext(context.Background())
}

func (i GetArtifactoryConnectorCredentialArgs) ToGetArtifactoryConnectorCredentialOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArtifactoryConnectorCredentialOutput)
}

// GetArtifactoryConnectorCredentialArrayInput is an input type that accepts GetArtifactoryConnectorCredentialArray and GetArtifactoryConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetArtifactoryConnectorCredentialArrayInput` via:
//
//	GetArtifactoryConnectorCredentialArray{ GetArtifactoryConnectorCredentialArgs{...} }
type GetArtifactoryConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetArtifactoryConnectorCredentialArrayOutput() GetArtifactoryConnectorCredentialArrayOutput
	ToGetArtifactoryConnectorCredentialArrayOutputWithContext(context.Context) GetArtifactoryConnectorCredentialArrayOutput
}

type GetArtifactoryConnectorCredentialArray []GetArtifactoryConnectorCredentialInput

func (GetArtifactoryConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (i GetArtifactoryConnectorCredentialArray) ToGetArtifactoryConnectorCredentialArrayOutput() GetArtifactoryConnectorCredentialArrayOutput {
	return i.ToGetArtifactoryConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetArtifactoryConnectorCredentialArray) ToGetArtifactoryConnectorCredentialArrayOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArtifactoryConnectorCredentialArrayOutput)
}

type GetArtifactoryConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetArtifactoryConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (o GetArtifactoryConnectorCredentialOutput) ToGetArtifactoryConnectorCredentialOutput() GetArtifactoryConnectorCredentialOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialOutput) ToGetArtifactoryConnectorCredentialOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetArtifactoryConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetArtifactoryConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetArtifactoryConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetArtifactoryConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetArtifactoryConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (o GetArtifactoryConnectorCredentialArrayOutput) ToGetArtifactoryConnectorCredentialArrayOutput() GetArtifactoryConnectorCredentialArrayOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialArrayOutput) ToGetArtifactoryConnectorCredentialArrayOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialArrayOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetArtifactoryConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetArtifactoryConnectorCredential {
		return vs[0].([]GetArtifactoryConnectorCredential)[vs[1].(int)]
	}).(GetArtifactoryConnectorCredentialOutput)
}

type GetAwsCCConnectorCrossAccountAccess struct {
	// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
	ExternalId string `pulumi:"externalId"`
	// The ARN of the role to use for cross-account access.
	RoleArn string `pulumi:"roleArn"`
}

// GetAwsCCConnectorCrossAccountAccessInput is an input type that accepts GetAwsCCConnectorCrossAccountAccessArgs and GetAwsCCConnectorCrossAccountAccessOutput values.
// You can construct a concrete instance of `GetAwsCCConnectorCrossAccountAccessInput` via:
//
//	GetAwsCCConnectorCrossAccountAccessArgs{...}
type GetAwsCCConnectorCrossAccountAccessInput interface {
	pulumi.Input

	ToGetAwsCCConnectorCrossAccountAccessOutput() GetAwsCCConnectorCrossAccountAccessOutput
	ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(context.Context) GetAwsCCConnectorCrossAccountAccessOutput
}

type GetAwsCCConnectorCrossAccountAccessArgs struct {
	// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of the role to use for cross-account access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsCCConnectorCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCCConnectorCrossAccountAccessArgs) ToGetAwsCCConnectorCrossAccountAccessOutput() GetAwsCCConnectorCrossAccountAccessOutput {
	return i.ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(context.Background())
}

func (i GetAwsCCConnectorCrossAccountAccessArgs) ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCCConnectorCrossAccountAccessOutput)
}

// GetAwsCCConnectorCrossAccountAccessArrayInput is an input type that accepts GetAwsCCConnectorCrossAccountAccessArray and GetAwsCCConnectorCrossAccountAccessArrayOutput values.
// You can construct a concrete instance of `GetAwsCCConnectorCrossAccountAccessArrayInput` via:
//
//	GetAwsCCConnectorCrossAccountAccessArray{ GetAwsCCConnectorCrossAccountAccessArgs{...} }
type GetAwsCCConnectorCrossAccountAccessArrayInput interface {
	pulumi.Input

	ToGetAwsCCConnectorCrossAccountAccessArrayOutput() GetAwsCCConnectorCrossAccountAccessArrayOutput
	ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(context.Context) GetAwsCCConnectorCrossAccountAccessArrayOutput
}

type GetAwsCCConnectorCrossAccountAccessArray []GetAwsCCConnectorCrossAccountAccessInput

func (GetAwsCCConnectorCrossAccountAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCCConnectorCrossAccountAccessArray) ToGetAwsCCConnectorCrossAccountAccessArrayOutput() GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return i.ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(context.Background())
}

func (i GetAwsCCConnectorCrossAccountAccessArray) ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCCConnectorCrossAccountAccessArrayOutput)
}

type GetAwsCCConnectorCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (GetAwsCCConnectorCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCCConnectorCrossAccountAccessOutput) ToGetAwsCCConnectorCrossAccountAccessOutput() GetAwsCCConnectorCrossAccountAccessOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessOutput) ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessOutput {
	return o
}

// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
func (o GetAwsCCConnectorCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCCConnectorCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the role to use for cross-account access.
func (o GetAwsCCConnectorCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCCConnectorCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsCCConnectorCrossAccountAccessArrayOutput struct{ *pulumi.OutputState }

func (GetAwsCCConnectorCrossAccountAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCCConnectorCrossAccountAccessArrayOutput) ToGetAwsCCConnectorCrossAccountAccessArrayOutput() GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessArrayOutput) ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessArrayOutput) Index(i pulumi.IntInput) GetAwsCCConnectorCrossAccountAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsCCConnectorCrossAccountAccess {
		return vs[0].([]GetAwsCCConnectorCrossAccountAccess)[vs[1].(int)]
	}).(GetAwsCCConnectorCrossAccountAccessOutput)
}

type GetAwsConnectorCrossAccountAccess struct {
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId string `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
	RoleArn string `pulumi:"roleArn"`
}

// GetAwsConnectorCrossAccountAccessInput is an input type that accepts GetAwsConnectorCrossAccountAccessArgs and GetAwsConnectorCrossAccountAccessOutput values.
// You can construct a concrete instance of `GetAwsConnectorCrossAccountAccessInput` via:
//
//	GetAwsConnectorCrossAccountAccessArgs{...}
type GetAwsConnectorCrossAccountAccessInput interface {
	pulumi.Input

	ToGetAwsConnectorCrossAccountAccessOutput() GetAwsConnectorCrossAccountAccessOutput
	ToGetAwsConnectorCrossAccountAccessOutputWithContext(context.Context) GetAwsConnectorCrossAccountAccessOutput
}

type GetAwsConnectorCrossAccountAccessArgs struct {
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsConnectorCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsConnectorCrossAccountAccessArgs) ToGetAwsConnectorCrossAccountAccessOutput() GetAwsConnectorCrossAccountAccessOutput {
	return i.ToGetAwsConnectorCrossAccountAccessOutputWithContext(context.Background())
}

func (i GetAwsConnectorCrossAccountAccessArgs) ToGetAwsConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorCrossAccountAccessOutput)
}

// GetAwsConnectorCrossAccountAccessArrayInput is an input type that accepts GetAwsConnectorCrossAccountAccessArray and GetAwsConnectorCrossAccountAccessArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorCrossAccountAccessArrayInput` via:
//
//	GetAwsConnectorCrossAccountAccessArray{ GetAwsConnectorCrossAccountAccessArgs{...} }
type GetAwsConnectorCrossAccountAccessArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorCrossAccountAccessArrayOutput() GetAwsConnectorCrossAccountAccessArrayOutput
	ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(context.Context) GetAwsConnectorCrossAccountAccessArrayOutput
}

type GetAwsConnectorCrossAccountAccessArray []GetAwsConnectorCrossAccountAccessInput

func (GetAwsConnectorCrossAccountAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsConnectorCrossAccountAccessArray) ToGetAwsConnectorCrossAccountAccessArrayOutput() GetAwsConnectorCrossAccountAccessArrayOutput {
	return i.ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorCrossAccountAccessArray) ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorCrossAccountAccessArrayOutput)
}

type GetAwsConnectorCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsConnectorCrossAccountAccessOutput) ToGetAwsConnectorCrossAccountAccessOutput() GetAwsConnectorCrossAccountAccessOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessOutput) ToGetAwsConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessOutput {
	return o
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o GetAwsConnectorCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
func (o GetAwsConnectorCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsConnectorCrossAccountAccessArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorCrossAccountAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsConnectorCrossAccountAccessArrayOutput) ToGetAwsConnectorCrossAccountAccessArrayOutput() GetAwsConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessArrayOutput) ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorCrossAccountAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorCrossAccountAccess {
		return vs[0].([]GetAwsConnectorCrossAccountAccess)[vs[1].(int)]
	}).(GetAwsConnectorCrossAccountAccessOutput)
}

type GetAwsConnectorEqualJitterBackoffStrategy struct {
	// Base delay.
	BaseDelay int `pulumi:"baseDelay"`
	// Max BackOff Time.
	MaxBackoffTime int `pulumi:"maxBackoffTime"`
	// Retry Count.
	RetryCount int `pulumi:"retryCount"`
}

// GetAwsConnectorEqualJitterBackoffStrategyInput is an input type that accepts GetAwsConnectorEqualJitterBackoffStrategyArgs and GetAwsConnectorEqualJitterBackoffStrategyOutput values.
// You can construct a concrete instance of `GetAwsConnectorEqualJitterBackoffStrategyInput` via:
//
//	GetAwsConnectorEqualJitterBackoffStrategyArgs{...}
type GetAwsConnectorEqualJitterBackoffStrategyInput interface {
	pulumi.Input

	ToGetAwsConnectorEqualJitterBackoffStrategyOutput() GetAwsConnectorEqualJitterBackoffStrategyOutput
	ToGetAwsConnectorEqualJitterBackoffStrategyOutputWithContext(context.Context) GetAwsConnectorEqualJitterBackoffStrategyOutput
}

type GetAwsConnectorEqualJitterBackoffStrategyArgs struct {
	// Base delay.
	BaseDelay pulumi.IntInput `pulumi:"baseDelay"`
	// Max BackOff Time.
	MaxBackoffTime pulumi.IntInput `pulumi:"maxBackoffTime"`
	// Retry Count.
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
}

func (GetAwsConnectorEqualJitterBackoffStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorEqualJitterBackoffStrategy)(nil)).Elem()
}

func (i GetAwsConnectorEqualJitterBackoffStrategyArgs) ToGetAwsConnectorEqualJitterBackoffStrategyOutput() GetAwsConnectorEqualJitterBackoffStrategyOutput {
	return i.ToGetAwsConnectorEqualJitterBackoffStrategyOutputWithContext(context.Background())
}

func (i GetAwsConnectorEqualJitterBackoffStrategyArgs) ToGetAwsConnectorEqualJitterBackoffStrategyOutputWithContext(ctx context.Context) GetAwsConnectorEqualJitterBackoffStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorEqualJitterBackoffStrategyOutput)
}

// GetAwsConnectorEqualJitterBackoffStrategyArrayInput is an input type that accepts GetAwsConnectorEqualJitterBackoffStrategyArray and GetAwsConnectorEqualJitterBackoffStrategyArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorEqualJitterBackoffStrategyArrayInput` via:
//
//	GetAwsConnectorEqualJitterBackoffStrategyArray{ GetAwsConnectorEqualJitterBackoffStrategyArgs{...} }
type GetAwsConnectorEqualJitterBackoffStrategyArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutput() GetAwsConnectorEqualJitterBackoffStrategyArrayOutput
	ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutputWithContext(context.Context) GetAwsConnectorEqualJitterBackoffStrategyArrayOutput
}

type GetAwsConnectorEqualJitterBackoffStrategyArray []GetAwsConnectorEqualJitterBackoffStrategyInput

func (GetAwsConnectorEqualJitterBackoffStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorEqualJitterBackoffStrategy)(nil)).Elem()
}

func (i GetAwsConnectorEqualJitterBackoffStrategyArray) ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutput() GetAwsConnectorEqualJitterBackoffStrategyArrayOutput {
	return i.ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorEqualJitterBackoffStrategyArray) ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutputWithContext(ctx context.Context) GetAwsConnectorEqualJitterBackoffStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorEqualJitterBackoffStrategyArrayOutput)
}

type GetAwsConnectorEqualJitterBackoffStrategyOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorEqualJitterBackoffStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorEqualJitterBackoffStrategy)(nil)).Elem()
}

func (o GetAwsConnectorEqualJitterBackoffStrategyOutput) ToGetAwsConnectorEqualJitterBackoffStrategyOutput() GetAwsConnectorEqualJitterBackoffStrategyOutput {
	return o
}

func (o GetAwsConnectorEqualJitterBackoffStrategyOutput) ToGetAwsConnectorEqualJitterBackoffStrategyOutputWithContext(ctx context.Context) GetAwsConnectorEqualJitterBackoffStrategyOutput {
	return o
}

// Base delay.
func (o GetAwsConnectorEqualJitterBackoffStrategyOutput) BaseDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorEqualJitterBackoffStrategy) int { return v.BaseDelay }).(pulumi.IntOutput)
}

// Max BackOff Time.
func (o GetAwsConnectorEqualJitterBackoffStrategyOutput) MaxBackoffTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorEqualJitterBackoffStrategy) int { return v.MaxBackoffTime }).(pulumi.IntOutput)
}

// Retry Count.
func (o GetAwsConnectorEqualJitterBackoffStrategyOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorEqualJitterBackoffStrategy) int { return v.RetryCount }).(pulumi.IntOutput)
}

type GetAwsConnectorEqualJitterBackoffStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorEqualJitterBackoffStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorEqualJitterBackoffStrategy)(nil)).Elem()
}

func (o GetAwsConnectorEqualJitterBackoffStrategyArrayOutput) ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutput() GetAwsConnectorEqualJitterBackoffStrategyArrayOutput {
	return o
}

func (o GetAwsConnectorEqualJitterBackoffStrategyArrayOutput) ToGetAwsConnectorEqualJitterBackoffStrategyArrayOutputWithContext(ctx context.Context) GetAwsConnectorEqualJitterBackoffStrategyArrayOutput {
	return o
}

func (o GetAwsConnectorEqualJitterBackoffStrategyArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorEqualJitterBackoffStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorEqualJitterBackoffStrategy {
		return vs[0].([]GetAwsConnectorEqualJitterBackoffStrategy)[vs[1].(int)]
	}).(GetAwsConnectorEqualJitterBackoffStrategyOutput)
}

type GetAwsConnectorFixedDelayBackoffStrategy struct {
	// Fixed Backoff.
	FixedBackoff int `pulumi:"fixedBackoff"`
	// Retry Count.
	RetryCount int `pulumi:"retryCount"`
}

// GetAwsConnectorFixedDelayBackoffStrategyInput is an input type that accepts GetAwsConnectorFixedDelayBackoffStrategyArgs and GetAwsConnectorFixedDelayBackoffStrategyOutput values.
// You can construct a concrete instance of `GetAwsConnectorFixedDelayBackoffStrategyInput` via:
//
//	GetAwsConnectorFixedDelayBackoffStrategyArgs{...}
type GetAwsConnectorFixedDelayBackoffStrategyInput interface {
	pulumi.Input

	ToGetAwsConnectorFixedDelayBackoffStrategyOutput() GetAwsConnectorFixedDelayBackoffStrategyOutput
	ToGetAwsConnectorFixedDelayBackoffStrategyOutputWithContext(context.Context) GetAwsConnectorFixedDelayBackoffStrategyOutput
}

type GetAwsConnectorFixedDelayBackoffStrategyArgs struct {
	// Fixed Backoff.
	FixedBackoff pulumi.IntInput `pulumi:"fixedBackoff"`
	// Retry Count.
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
}

func (GetAwsConnectorFixedDelayBackoffStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorFixedDelayBackoffStrategy)(nil)).Elem()
}

func (i GetAwsConnectorFixedDelayBackoffStrategyArgs) ToGetAwsConnectorFixedDelayBackoffStrategyOutput() GetAwsConnectorFixedDelayBackoffStrategyOutput {
	return i.ToGetAwsConnectorFixedDelayBackoffStrategyOutputWithContext(context.Background())
}

func (i GetAwsConnectorFixedDelayBackoffStrategyArgs) ToGetAwsConnectorFixedDelayBackoffStrategyOutputWithContext(ctx context.Context) GetAwsConnectorFixedDelayBackoffStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorFixedDelayBackoffStrategyOutput)
}

// GetAwsConnectorFixedDelayBackoffStrategyArrayInput is an input type that accepts GetAwsConnectorFixedDelayBackoffStrategyArray and GetAwsConnectorFixedDelayBackoffStrategyArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorFixedDelayBackoffStrategyArrayInput` via:
//
//	GetAwsConnectorFixedDelayBackoffStrategyArray{ GetAwsConnectorFixedDelayBackoffStrategyArgs{...} }
type GetAwsConnectorFixedDelayBackoffStrategyArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutput() GetAwsConnectorFixedDelayBackoffStrategyArrayOutput
	ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutputWithContext(context.Context) GetAwsConnectorFixedDelayBackoffStrategyArrayOutput
}

type GetAwsConnectorFixedDelayBackoffStrategyArray []GetAwsConnectorFixedDelayBackoffStrategyInput

func (GetAwsConnectorFixedDelayBackoffStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorFixedDelayBackoffStrategy)(nil)).Elem()
}

func (i GetAwsConnectorFixedDelayBackoffStrategyArray) ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutput() GetAwsConnectorFixedDelayBackoffStrategyArrayOutput {
	return i.ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorFixedDelayBackoffStrategyArray) ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutputWithContext(ctx context.Context) GetAwsConnectorFixedDelayBackoffStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorFixedDelayBackoffStrategyArrayOutput)
}

type GetAwsConnectorFixedDelayBackoffStrategyOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorFixedDelayBackoffStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorFixedDelayBackoffStrategy)(nil)).Elem()
}

func (o GetAwsConnectorFixedDelayBackoffStrategyOutput) ToGetAwsConnectorFixedDelayBackoffStrategyOutput() GetAwsConnectorFixedDelayBackoffStrategyOutput {
	return o
}

func (o GetAwsConnectorFixedDelayBackoffStrategyOutput) ToGetAwsConnectorFixedDelayBackoffStrategyOutputWithContext(ctx context.Context) GetAwsConnectorFixedDelayBackoffStrategyOutput {
	return o
}

// Fixed Backoff.
func (o GetAwsConnectorFixedDelayBackoffStrategyOutput) FixedBackoff() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorFixedDelayBackoffStrategy) int { return v.FixedBackoff }).(pulumi.IntOutput)
}

// Retry Count.
func (o GetAwsConnectorFixedDelayBackoffStrategyOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorFixedDelayBackoffStrategy) int { return v.RetryCount }).(pulumi.IntOutput)
}

type GetAwsConnectorFixedDelayBackoffStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorFixedDelayBackoffStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorFixedDelayBackoffStrategy)(nil)).Elem()
}

func (o GetAwsConnectorFixedDelayBackoffStrategyArrayOutput) ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutput() GetAwsConnectorFixedDelayBackoffStrategyArrayOutput {
	return o
}

func (o GetAwsConnectorFixedDelayBackoffStrategyArrayOutput) ToGetAwsConnectorFixedDelayBackoffStrategyArrayOutputWithContext(ctx context.Context) GetAwsConnectorFixedDelayBackoffStrategyArrayOutput {
	return o
}

func (o GetAwsConnectorFixedDelayBackoffStrategyArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorFixedDelayBackoffStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorFixedDelayBackoffStrategy {
		return vs[0].([]GetAwsConnectorFixedDelayBackoffStrategy)[vs[1].(int)]
	}).(GetAwsConnectorFixedDelayBackoffStrategyOutput)
}

type GetAwsConnectorFullJitterBackoffStrategy struct {
	// Base delay.
	BaseDelay int `pulumi:"baseDelay"`
	// Max BackOff Time.
	MaxBackoffTime int `pulumi:"maxBackoffTime"`
	// Retry Count.
	RetryCount int `pulumi:"retryCount"`
}

// GetAwsConnectorFullJitterBackoffStrategyInput is an input type that accepts GetAwsConnectorFullJitterBackoffStrategyArgs and GetAwsConnectorFullJitterBackoffStrategyOutput values.
// You can construct a concrete instance of `GetAwsConnectorFullJitterBackoffStrategyInput` via:
//
//	GetAwsConnectorFullJitterBackoffStrategyArgs{...}
type GetAwsConnectorFullJitterBackoffStrategyInput interface {
	pulumi.Input

	ToGetAwsConnectorFullJitterBackoffStrategyOutput() GetAwsConnectorFullJitterBackoffStrategyOutput
	ToGetAwsConnectorFullJitterBackoffStrategyOutputWithContext(context.Context) GetAwsConnectorFullJitterBackoffStrategyOutput
}

type GetAwsConnectorFullJitterBackoffStrategyArgs struct {
	// Base delay.
	BaseDelay pulumi.IntInput `pulumi:"baseDelay"`
	// Max BackOff Time.
	MaxBackoffTime pulumi.IntInput `pulumi:"maxBackoffTime"`
	// Retry Count.
	RetryCount pulumi.IntInput `pulumi:"retryCount"`
}

func (GetAwsConnectorFullJitterBackoffStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorFullJitterBackoffStrategy)(nil)).Elem()
}

func (i GetAwsConnectorFullJitterBackoffStrategyArgs) ToGetAwsConnectorFullJitterBackoffStrategyOutput() GetAwsConnectorFullJitterBackoffStrategyOutput {
	return i.ToGetAwsConnectorFullJitterBackoffStrategyOutputWithContext(context.Background())
}

func (i GetAwsConnectorFullJitterBackoffStrategyArgs) ToGetAwsConnectorFullJitterBackoffStrategyOutputWithContext(ctx context.Context) GetAwsConnectorFullJitterBackoffStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorFullJitterBackoffStrategyOutput)
}

// GetAwsConnectorFullJitterBackoffStrategyArrayInput is an input type that accepts GetAwsConnectorFullJitterBackoffStrategyArray and GetAwsConnectorFullJitterBackoffStrategyArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorFullJitterBackoffStrategyArrayInput` via:
//
//	GetAwsConnectorFullJitterBackoffStrategyArray{ GetAwsConnectorFullJitterBackoffStrategyArgs{...} }
type GetAwsConnectorFullJitterBackoffStrategyArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorFullJitterBackoffStrategyArrayOutput() GetAwsConnectorFullJitterBackoffStrategyArrayOutput
	ToGetAwsConnectorFullJitterBackoffStrategyArrayOutputWithContext(context.Context) GetAwsConnectorFullJitterBackoffStrategyArrayOutput
}

type GetAwsConnectorFullJitterBackoffStrategyArray []GetAwsConnectorFullJitterBackoffStrategyInput

func (GetAwsConnectorFullJitterBackoffStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorFullJitterBackoffStrategy)(nil)).Elem()
}

func (i GetAwsConnectorFullJitterBackoffStrategyArray) ToGetAwsConnectorFullJitterBackoffStrategyArrayOutput() GetAwsConnectorFullJitterBackoffStrategyArrayOutput {
	return i.ToGetAwsConnectorFullJitterBackoffStrategyArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorFullJitterBackoffStrategyArray) ToGetAwsConnectorFullJitterBackoffStrategyArrayOutputWithContext(ctx context.Context) GetAwsConnectorFullJitterBackoffStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorFullJitterBackoffStrategyArrayOutput)
}

type GetAwsConnectorFullJitterBackoffStrategyOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorFullJitterBackoffStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorFullJitterBackoffStrategy)(nil)).Elem()
}

func (o GetAwsConnectorFullJitterBackoffStrategyOutput) ToGetAwsConnectorFullJitterBackoffStrategyOutput() GetAwsConnectorFullJitterBackoffStrategyOutput {
	return o
}

func (o GetAwsConnectorFullJitterBackoffStrategyOutput) ToGetAwsConnectorFullJitterBackoffStrategyOutputWithContext(ctx context.Context) GetAwsConnectorFullJitterBackoffStrategyOutput {
	return o
}

// Base delay.
func (o GetAwsConnectorFullJitterBackoffStrategyOutput) BaseDelay() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorFullJitterBackoffStrategy) int { return v.BaseDelay }).(pulumi.IntOutput)
}

// Max BackOff Time.
func (o GetAwsConnectorFullJitterBackoffStrategyOutput) MaxBackoffTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorFullJitterBackoffStrategy) int { return v.MaxBackoffTime }).(pulumi.IntOutput)
}

// Retry Count.
func (o GetAwsConnectorFullJitterBackoffStrategyOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsConnectorFullJitterBackoffStrategy) int { return v.RetryCount }).(pulumi.IntOutput)
}

type GetAwsConnectorFullJitterBackoffStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorFullJitterBackoffStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorFullJitterBackoffStrategy)(nil)).Elem()
}

func (o GetAwsConnectorFullJitterBackoffStrategyArrayOutput) ToGetAwsConnectorFullJitterBackoffStrategyArrayOutput() GetAwsConnectorFullJitterBackoffStrategyArrayOutput {
	return o
}

func (o GetAwsConnectorFullJitterBackoffStrategyArrayOutput) ToGetAwsConnectorFullJitterBackoffStrategyArrayOutputWithContext(ctx context.Context) GetAwsConnectorFullJitterBackoffStrategyArrayOutput {
	return o
}

func (o GetAwsConnectorFullJitterBackoffStrategyArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorFullJitterBackoffStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorFullJitterBackoffStrategy {
		return vs[0].([]GetAwsConnectorFullJitterBackoffStrategy)[vs[1].(int)]
	}).(GetAwsConnectorFullJitterBackoffStrategyOutput)
}

type GetAwsConnectorInheritFromDelegate struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region *string `pulumi:"region"`
}

// GetAwsConnectorInheritFromDelegateInput is an input type that accepts GetAwsConnectorInheritFromDelegateArgs and GetAwsConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetAwsConnectorInheritFromDelegateInput` via:
//
//	GetAwsConnectorInheritFromDelegateArgs{...}
type GetAwsConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGetAwsConnectorInheritFromDelegateOutput() GetAwsConnectorInheritFromDelegateOutput
	ToGetAwsConnectorInheritFromDelegateOutputWithContext(context.Context) GetAwsConnectorInheritFromDelegateOutput
}

type GetAwsConnectorInheritFromDelegateArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetAwsConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetAwsConnectorInheritFromDelegateArgs) ToGetAwsConnectorInheritFromDelegateOutput() GetAwsConnectorInheritFromDelegateOutput {
	return i.ToGetAwsConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetAwsConnectorInheritFromDelegateArgs) ToGetAwsConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorInheritFromDelegateOutput)
}

// GetAwsConnectorInheritFromDelegateArrayInput is an input type that accepts GetAwsConnectorInheritFromDelegateArray and GetAwsConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorInheritFromDelegateArrayInput` via:
//
//	GetAwsConnectorInheritFromDelegateArray{ GetAwsConnectorInheritFromDelegateArgs{...} }
type GetAwsConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorInheritFromDelegateArrayOutput() GetAwsConnectorInheritFromDelegateArrayOutput
	ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GetAwsConnectorInheritFromDelegateArrayOutput
}

type GetAwsConnectorInheritFromDelegateArray []GetAwsConnectorInheritFromDelegateInput

func (GetAwsConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetAwsConnectorInheritFromDelegateArray) ToGetAwsConnectorInheritFromDelegateArrayOutput() GetAwsConnectorInheritFromDelegateArrayOutput {
	return i.ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorInheritFromDelegateArray) ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorInheritFromDelegateArrayOutput)
}

type GetAwsConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetAwsConnectorInheritFromDelegateOutput) ToGetAwsConnectorInheritFromDelegateOutput() GetAwsConnectorInheritFromDelegateOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateOutput) ToGetAwsConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GetAwsConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorInheritFromDelegateOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsConnectorInheritFromDelegate) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type GetAwsConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetAwsConnectorInheritFromDelegateArrayOutput) ToGetAwsConnectorInheritFromDelegateArrayOutput() GetAwsConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateArrayOutput) ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorInheritFromDelegate {
		return vs[0].([]GetAwsConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GetAwsConnectorInheritFromDelegateOutput)
}

type GetAwsConnectorIrsa struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region *string `pulumi:"region"`
}

// GetAwsConnectorIrsaInput is an input type that accepts GetAwsConnectorIrsaArgs and GetAwsConnectorIrsaOutput values.
// You can construct a concrete instance of `GetAwsConnectorIrsaInput` via:
//
//	GetAwsConnectorIrsaArgs{...}
type GetAwsConnectorIrsaInput interface {
	pulumi.Input

	ToGetAwsConnectorIrsaOutput() GetAwsConnectorIrsaOutput
	ToGetAwsConnectorIrsaOutputWithContext(context.Context) GetAwsConnectorIrsaOutput
}

type GetAwsConnectorIrsaArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetAwsConnectorIrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorIrsa)(nil)).Elem()
}

func (i GetAwsConnectorIrsaArgs) ToGetAwsConnectorIrsaOutput() GetAwsConnectorIrsaOutput {
	return i.ToGetAwsConnectorIrsaOutputWithContext(context.Background())
}

func (i GetAwsConnectorIrsaArgs) ToGetAwsConnectorIrsaOutputWithContext(ctx context.Context) GetAwsConnectorIrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorIrsaOutput)
}

// GetAwsConnectorIrsaArrayInput is an input type that accepts GetAwsConnectorIrsaArray and GetAwsConnectorIrsaArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorIrsaArrayInput` via:
//
//	GetAwsConnectorIrsaArray{ GetAwsConnectorIrsaArgs{...} }
type GetAwsConnectorIrsaArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorIrsaArrayOutput() GetAwsConnectorIrsaArrayOutput
	ToGetAwsConnectorIrsaArrayOutputWithContext(context.Context) GetAwsConnectorIrsaArrayOutput
}

type GetAwsConnectorIrsaArray []GetAwsConnectorIrsaInput

func (GetAwsConnectorIrsaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorIrsa)(nil)).Elem()
}

func (i GetAwsConnectorIrsaArray) ToGetAwsConnectorIrsaArrayOutput() GetAwsConnectorIrsaArrayOutput {
	return i.ToGetAwsConnectorIrsaArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorIrsaArray) ToGetAwsConnectorIrsaArrayOutputWithContext(ctx context.Context) GetAwsConnectorIrsaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorIrsaArrayOutput)
}

type GetAwsConnectorIrsaOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorIrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorIrsa)(nil)).Elem()
}

func (o GetAwsConnectorIrsaOutput) ToGetAwsConnectorIrsaOutput() GetAwsConnectorIrsaOutput {
	return o
}

func (o GetAwsConnectorIrsaOutput) ToGetAwsConnectorIrsaOutputWithContext(ctx context.Context) GetAwsConnectorIrsaOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GetAwsConnectorIrsaOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorIrsa) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorIrsaOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsConnectorIrsa) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type GetAwsConnectorIrsaArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorIrsaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorIrsa)(nil)).Elem()
}

func (o GetAwsConnectorIrsaArrayOutput) ToGetAwsConnectorIrsaArrayOutput() GetAwsConnectorIrsaArrayOutput {
	return o
}

func (o GetAwsConnectorIrsaArrayOutput) ToGetAwsConnectorIrsaArrayOutputWithContext(ctx context.Context) GetAwsConnectorIrsaArrayOutput {
	return o
}

func (o GetAwsConnectorIrsaArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorIrsaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorIrsa {
		return vs[0].([]GetAwsConnectorIrsa)[vs[1].(int)]
	}).(GetAwsConnectorIrsaOutput)
}

type GetAwsConnectorManual struct {
	// AWS access key.
	AccessKey string `pulumi:"accessKey"`
	// The plain text AWS access key.
	AccessKeyPlainText *string `pulumi:"accessKeyPlainText"`
	// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef string `pulumi:"accessKeyRef"`
	// Connect only use delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region *string `pulumi:"region"`
	// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef string `pulumi:"secretKeyRef"`
	// Reference to the Harness secret containing the aws session token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SessionTokenRef *string `pulumi:"sessionTokenRef"`
}

// GetAwsConnectorManualInput is an input type that accepts GetAwsConnectorManualArgs and GetAwsConnectorManualOutput values.
// You can construct a concrete instance of `GetAwsConnectorManualInput` via:
//
//	GetAwsConnectorManualArgs{...}
type GetAwsConnectorManualInput interface {
	pulumi.Input

	ToGetAwsConnectorManualOutput() GetAwsConnectorManualOutput
	ToGetAwsConnectorManualOutputWithContext(context.Context) GetAwsConnectorManualOutput
}

type GetAwsConnectorManualArgs struct {
	// AWS access key.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The plain text AWS access key.
	AccessKeyPlainText pulumi.StringPtrInput `pulumi:"accessKeyPlainText"`
	// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	// Connect only use delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
	// Reference to the Harness secret containing the aws session token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SessionTokenRef pulumi.StringPtrInput `pulumi:"sessionTokenRef"`
}

func (GetAwsConnectorManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorManual)(nil)).Elem()
}

func (i GetAwsConnectorManualArgs) ToGetAwsConnectorManualOutput() GetAwsConnectorManualOutput {
	return i.ToGetAwsConnectorManualOutputWithContext(context.Background())
}

func (i GetAwsConnectorManualArgs) ToGetAwsConnectorManualOutputWithContext(ctx context.Context) GetAwsConnectorManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorManualOutput)
}

// GetAwsConnectorManualArrayInput is an input type that accepts GetAwsConnectorManualArray and GetAwsConnectorManualArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorManualArrayInput` via:
//
//	GetAwsConnectorManualArray{ GetAwsConnectorManualArgs{...} }
type GetAwsConnectorManualArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorManualArrayOutput() GetAwsConnectorManualArrayOutput
	ToGetAwsConnectorManualArrayOutputWithContext(context.Context) GetAwsConnectorManualArrayOutput
}

type GetAwsConnectorManualArray []GetAwsConnectorManualInput

func (GetAwsConnectorManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorManual)(nil)).Elem()
}

func (i GetAwsConnectorManualArray) ToGetAwsConnectorManualArrayOutput() GetAwsConnectorManualArrayOutput {
	return i.ToGetAwsConnectorManualArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorManualArray) ToGetAwsConnectorManualArrayOutputWithContext(ctx context.Context) GetAwsConnectorManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorManualArrayOutput)
}

type GetAwsConnectorManualOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorManual)(nil)).Elem()
}

func (o GetAwsConnectorManualOutput) ToGetAwsConnectorManualOutput() GetAwsConnectorManualOutput {
	return o
}

func (o GetAwsConnectorManualOutput) ToGetAwsConnectorManualOutputWithContext(ctx context.Context) GetAwsConnectorManualOutput {
	return o
}

// AWS access key.
func (o GetAwsConnectorManualOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The plain text AWS access key.
func (o GetAwsConnectorManualOutput) AccessKeyPlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) *string { return v.AccessKeyPlainText }).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

// Connect only use delegates with these tags.
func (o GetAwsConnectorManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorManualOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the aws session token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorManualOutput) SessionTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) *string { return v.SessionTokenRef }).(pulumi.StringPtrOutput)
}

type GetAwsConnectorManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorManual)(nil)).Elem()
}

func (o GetAwsConnectorManualArrayOutput) ToGetAwsConnectorManualArrayOutput() GetAwsConnectorManualArrayOutput {
	return o
}

func (o GetAwsConnectorManualArrayOutput) ToGetAwsConnectorManualArrayOutputWithContext(ctx context.Context) GetAwsConnectorManualArrayOutput {
	return o
}

func (o GetAwsConnectorManualArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorManual {
		return vs[0].([]GetAwsConnectorManual)[vs[1].(int)]
	}).(GetAwsConnectorManualOutput)
}

type GetAwsConnectorOidcAuthentication struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// The IAM Role to assume the credentials from.
	IamRoleArn string `pulumi:"iamRoleArn"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region *string `pulumi:"region"`
}

// GetAwsConnectorOidcAuthenticationInput is an input type that accepts GetAwsConnectorOidcAuthenticationArgs and GetAwsConnectorOidcAuthenticationOutput values.
// You can construct a concrete instance of `GetAwsConnectorOidcAuthenticationInput` via:
//
//	GetAwsConnectorOidcAuthenticationArgs{...}
type GetAwsConnectorOidcAuthenticationInput interface {
	pulumi.Input

	ToGetAwsConnectorOidcAuthenticationOutput() GetAwsConnectorOidcAuthenticationOutput
	ToGetAwsConnectorOidcAuthenticationOutputWithContext(context.Context) GetAwsConnectorOidcAuthenticationOutput
}

type GetAwsConnectorOidcAuthenticationArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// The IAM Role to assume the credentials from.
	IamRoleArn pulumi.StringInput `pulumi:"iamRoleArn"`
	// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetAwsConnectorOidcAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorOidcAuthentication)(nil)).Elem()
}

func (i GetAwsConnectorOidcAuthenticationArgs) ToGetAwsConnectorOidcAuthenticationOutput() GetAwsConnectorOidcAuthenticationOutput {
	return i.ToGetAwsConnectorOidcAuthenticationOutputWithContext(context.Background())
}

func (i GetAwsConnectorOidcAuthenticationArgs) ToGetAwsConnectorOidcAuthenticationOutputWithContext(ctx context.Context) GetAwsConnectorOidcAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorOidcAuthenticationOutput)
}

// GetAwsConnectorOidcAuthenticationArrayInput is an input type that accepts GetAwsConnectorOidcAuthenticationArray and GetAwsConnectorOidcAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorOidcAuthenticationArrayInput` via:
//
//	GetAwsConnectorOidcAuthenticationArray{ GetAwsConnectorOidcAuthenticationArgs{...} }
type GetAwsConnectorOidcAuthenticationArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorOidcAuthenticationArrayOutput() GetAwsConnectorOidcAuthenticationArrayOutput
	ToGetAwsConnectorOidcAuthenticationArrayOutputWithContext(context.Context) GetAwsConnectorOidcAuthenticationArrayOutput
}

type GetAwsConnectorOidcAuthenticationArray []GetAwsConnectorOidcAuthenticationInput

func (GetAwsConnectorOidcAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorOidcAuthentication)(nil)).Elem()
}

func (i GetAwsConnectorOidcAuthenticationArray) ToGetAwsConnectorOidcAuthenticationArrayOutput() GetAwsConnectorOidcAuthenticationArrayOutput {
	return i.ToGetAwsConnectorOidcAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorOidcAuthenticationArray) ToGetAwsConnectorOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetAwsConnectorOidcAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorOidcAuthenticationArrayOutput)
}

type GetAwsConnectorOidcAuthenticationOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorOidcAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorOidcAuthentication)(nil)).Elem()
}

func (o GetAwsConnectorOidcAuthenticationOutput) ToGetAwsConnectorOidcAuthenticationOutput() GetAwsConnectorOidcAuthenticationOutput {
	return o
}

func (o GetAwsConnectorOidcAuthenticationOutput) ToGetAwsConnectorOidcAuthenticationOutputWithContext(ctx context.Context) GetAwsConnectorOidcAuthenticationOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GetAwsConnectorOidcAuthenticationOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorOidcAuthentication) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// The IAM Role to assume the credentials from.
func (o GetAwsConnectorOidcAuthenticationOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorOidcAuthentication) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

// Test Region to perform Connection test of AWS Connector To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsConnectorOidcAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAwsConnectorOidcAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type GetAwsConnectorOidcAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorOidcAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorOidcAuthentication)(nil)).Elem()
}

func (o GetAwsConnectorOidcAuthenticationArrayOutput) ToGetAwsConnectorOidcAuthenticationArrayOutput() GetAwsConnectorOidcAuthenticationArrayOutput {
	return o
}

func (o GetAwsConnectorOidcAuthenticationArrayOutput) ToGetAwsConnectorOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetAwsConnectorOidcAuthenticationArrayOutput {
	return o
}

func (o GetAwsConnectorOidcAuthenticationArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorOidcAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorOidcAuthentication {
		return vs[0].([]GetAwsConnectorOidcAuthentication)[vs[1].(int)]
	}).(GetAwsConnectorOidcAuthenticationOutput)
}

type GetAwsKmsConnectorCredential struct {
	// Connect using STS assume role.
	AssumeRoles []GetAwsKmsConnectorCredentialAssumeRole `pulumi:"assumeRoles"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate bool `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manuals []GetAwsKmsConnectorCredentialManual `pulumi:"manuals"`
	// Authentication using OIDC.
	OidcAuthentications []GetAwsKmsConnectorCredentialOidcAuthentication `pulumi:"oidcAuthentications"`
}

// GetAwsKmsConnectorCredentialInput is an input type that accepts GetAwsKmsConnectorCredentialArgs and GetAwsKmsConnectorCredentialOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialInput` via:
//
//	GetAwsKmsConnectorCredentialArgs{...}
type GetAwsKmsConnectorCredentialInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialOutput() GetAwsKmsConnectorCredentialOutput
	ToGetAwsKmsConnectorCredentialOutputWithContext(context.Context) GetAwsKmsConnectorCredentialOutput
}

type GetAwsKmsConnectorCredentialArgs struct {
	// Connect using STS assume role.
	AssumeRoles GetAwsKmsConnectorCredentialAssumeRoleArrayInput `pulumi:"assumeRoles"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate pulumi.BoolInput `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manuals GetAwsKmsConnectorCredentialManualArrayInput `pulumi:"manuals"`
	// Authentication using OIDC.
	OidcAuthentications GetAwsKmsConnectorCredentialOidcAuthenticationArrayInput `pulumi:"oidcAuthentications"`
}

func (GetAwsKmsConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialArgs) ToGetAwsKmsConnectorCredentialOutput() GetAwsKmsConnectorCredentialOutput {
	return i.ToGetAwsKmsConnectorCredentialOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialArgs) ToGetAwsKmsConnectorCredentialOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialOutput)
}

// GetAwsKmsConnectorCredentialArrayInput is an input type that accepts GetAwsKmsConnectorCredentialArray and GetAwsKmsConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialArrayInput` via:
//
//	GetAwsKmsConnectorCredentialArray{ GetAwsKmsConnectorCredentialArgs{...} }
type GetAwsKmsConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialArrayOutput() GetAwsKmsConnectorCredentialArrayOutput
	ToGetAwsKmsConnectorCredentialArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialArrayOutput
}

type GetAwsKmsConnectorCredentialArray []GetAwsKmsConnectorCredentialInput

func (GetAwsKmsConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialArray) ToGetAwsKmsConnectorCredentialArrayOutput() GetAwsKmsConnectorCredentialArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialArray) ToGetAwsKmsConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialArrayOutput)
}

type GetAwsKmsConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialOutput) ToGetAwsKmsConnectorCredentialOutput() GetAwsKmsConnectorCredentialOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialOutput) ToGetAwsKmsConnectorCredentialOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOutput {
	return o
}

// Connect using STS assume role.
func (o GetAwsKmsConnectorCredentialOutput) AssumeRoles() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) []GetAwsKmsConnectorCredentialAssumeRole { return v.AssumeRoles }).(GetAwsKmsConnectorCredentialAssumeRoleArrayOutput)
}

// Inherit the credentials from from the delegate.
func (o GetAwsKmsConnectorCredentialOutput) InheritFromDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) bool { return v.InheritFromDelegate }).(pulumi.BoolOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o GetAwsKmsConnectorCredentialOutput) Manuals() GetAwsKmsConnectorCredentialManualArrayOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) []GetAwsKmsConnectorCredentialManual { return v.Manuals }).(GetAwsKmsConnectorCredentialManualArrayOutput)
}

// Authentication using OIDC.
func (o GetAwsKmsConnectorCredentialOutput) OidcAuthentications() GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) []GetAwsKmsConnectorCredentialOidcAuthentication {
		return v.OidcAuthentications
	}).(GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput)
}

type GetAwsKmsConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialArrayOutput) ToGetAwsKmsConnectorCredentialArrayOutput() GetAwsKmsConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialArrayOutput) ToGetAwsKmsConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredential {
		return vs[0].([]GetAwsKmsConnectorCredential)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialOutput)
}

type GetAwsKmsConnectorCredentialAssumeRole struct {
	// The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
	Duration int `pulumi:"duration"`
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId string `pulumi:"externalId"`
	// The ARN of the role to assume.
	RoleArn string `pulumi:"roleArn"`
}

// GetAwsKmsConnectorCredentialAssumeRoleInput is an input type that accepts GetAwsKmsConnectorCredentialAssumeRoleArgs and GetAwsKmsConnectorCredentialAssumeRoleOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialAssumeRoleInput` via:
//
//	GetAwsKmsConnectorCredentialAssumeRoleArgs{...}
type GetAwsKmsConnectorCredentialAssumeRoleInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialAssumeRoleOutput() GetAwsKmsConnectorCredentialAssumeRoleOutput
	ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(context.Context) GetAwsKmsConnectorCredentialAssumeRoleOutput
}

type GetAwsKmsConnectorCredentialAssumeRoleArgs struct {
	// The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
	Duration pulumi.IntInput `pulumi:"duration"`
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of the role to assume.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsKmsConnectorCredentialAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArgs) ToGetAwsKmsConnectorCredentialAssumeRoleOutput() GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return i.ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArgs) ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialAssumeRoleOutput)
}

// GetAwsKmsConnectorCredentialAssumeRoleArrayInput is an input type that accepts GetAwsKmsConnectorCredentialAssumeRoleArray and GetAwsKmsConnectorCredentialAssumeRoleArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialAssumeRoleArrayInput` via:
//
//	GetAwsKmsConnectorCredentialAssumeRoleArray{ GetAwsKmsConnectorCredentialAssumeRoleArgs{...} }
type GetAwsKmsConnectorCredentialAssumeRoleArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutput() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput
	ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialAssumeRoleArrayOutput
}

type GetAwsKmsConnectorCredentialAssumeRoleArray []GetAwsKmsConnectorCredentialAssumeRoleInput

func (GetAwsKmsConnectorCredentialAssumeRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArray) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutput() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArray) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialAssumeRoleArrayOutput)
}

type GetAwsKmsConnectorCredentialAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) ToGetAwsKmsConnectorCredentialAssumeRoleOutput() GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return o
}

// The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the role to assume.
func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsKmsConnectorCredentialAssumeRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutput() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredentialAssumeRole {
		return vs[0].([]GetAwsKmsConnectorCredentialAssumeRole)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialAssumeRoleOutput)
}

type GetAwsKmsConnectorCredentialManual struct {
	// The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef string `pulumi:"accessKeyRef"`
	// The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetAwsKmsConnectorCredentialManualInput is an input type that accepts GetAwsKmsConnectorCredentialManualArgs and GetAwsKmsConnectorCredentialManualOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialManualInput` via:
//
//	GetAwsKmsConnectorCredentialManualArgs{...}
type GetAwsKmsConnectorCredentialManualInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialManualOutput() GetAwsKmsConnectorCredentialManualOutput
	ToGetAwsKmsConnectorCredentialManualOutputWithContext(context.Context) GetAwsKmsConnectorCredentialManualOutput
}

type GetAwsKmsConnectorCredentialManualArgs struct {
	// The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	// The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetAwsKmsConnectorCredentialManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialManualArgs) ToGetAwsKmsConnectorCredentialManualOutput() GetAwsKmsConnectorCredentialManualOutput {
	return i.ToGetAwsKmsConnectorCredentialManualOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialManualArgs) ToGetAwsKmsConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialManualOutput)
}

// GetAwsKmsConnectorCredentialManualArrayInput is an input type that accepts GetAwsKmsConnectorCredentialManualArray and GetAwsKmsConnectorCredentialManualArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialManualArrayInput` via:
//
//	GetAwsKmsConnectorCredentialManualArray{ GetAwsKmsConnectorCredentialManualArgs{...} }
type GetAwsKmsConnectorCredentialManualArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialManualArrayOutput() GetAwsKmsConnectorCredentialManualArrayOutput
	ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialManualArrayOutput
}

type GetAwsKmsConnectorCredentialManualArray []GetAwsKmsConnectorCredentialManualInput

func (GetAwsKmsConnectorCredentialManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialManualArray) ToGetAwsKmsConnectorCredentialManualArrayOutput() GetAwsKmsConnectorCredentialManualArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialManualArray) ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialManualArrayOutput)
}

type GetAwsKmsConnectorCredentialManualOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialManualOutput) ToGetAwsKmsConnectorCredentialManualOutput() GetAwsKmsConnectorCredentialManualOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualOutput) ToGetAwsKmsConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualOutput {
	return o
}

// The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsKmsConnectorCredentialManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

// The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsKmsConnectorCredentialManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsKmsConnectorCredentialManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialManualArrayOutput) ToGetAwsKmsConnectorCredentialManualArrayOutput() GetAwsKmsConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualArrayOutput) ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredentialManual {
		return vs[0].([]GetAwsKmsConnectorCredentialManual)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialManualOutput)
}

type GetAwsKmsConnectorCredentialOidcAuthentication struct {
	// The IAM role ARN to assume.
	IamRoleArn string `pulumi:"iamRoleArn"`
}

// GetAwsKmsConnectorCredentialOidcAuthenticationInput is an input type that accepts GetAwsKmsConnectorCredentialOidcAuthenticationArgs and GetAwsKmsConnectorCredentialOidcAuthenticationOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialOidcAuthenticationInput` via:
//
//	GetAwsKmsConnectorCredentialOidcAuthenticationArgs{...}
type GetAwsKmsConnectorCredentialOidcAuthenticationInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialOidcAuthenticationOutput() GetAwsKmsConnectorCredentialOidcAuthenticationOutput
	ToGetAwsKmsConnectorCredentialOidcAuthenticationOutputWithContext(context.Context) GetAwsKmsConnectorCredentialOidcAuthenticationOutput
}

type GetAwsKmsConnectorCredentialOidcAuthenticationArgs struct {
	// The IAM role ARN to assume.
	IamRoleArn pulumi.StringInput `pulumi:"iamRoleArn"`
}

func (GetAwsKmsConnectorCredentialOidcAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialOidcAuthenticationArgs) ToGetAwsKmsConnectorCredentialOidcAuthenticationOutput() GetAwsKmsConnectorCredentialOidcAuthenticationOutput {
	return i.ToGetAwsKmsConnectorCredentialOidcAuthenticationOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialOidcAuthenticationArgs) ToGetAwsKmsConnectorCredentialOidcAuthenticationOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOidcAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialOidcAuthenticationOutput)
}

// GetAwsKmsConnectorCredentialOidcAuthenticationArrayInput is an input type that accepts GetAwsKmsConnectorCredentialOidcAuthenticationArray and GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialOidcAuthenticationArrayInput` via:
//
//	GetAwsKmsConnectorCredentialOidcAuthenticationArray{ GetAwsKmsConnectorCredentialOidcAuthenticationArgs{...} }
type GetAwsKmsConnectorCredentialOidcAuthenticationArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput() GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput
	ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput
}

type GetAwsKmsConnectorCredentialOidcAuthenticationArray []GetAwsKmsConnectorCredentialOidcAuthenticationInput

func (GetAwsKmsConnectorCredentialOidcAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialOidcAuthenticationArray) ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput() GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialOidcAuthenticationArray) ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput)
}

type GetAwsKmsConnectorCredentialOidcAuthenticationOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialOidcAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialOidcAuthenticationOutput) ToGetAwsKmsConnectorCredentialOidcAuthenticationOutput() GetAwsKmsConnectorCredentialOidcAuthenticationOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialOidcAuthenticationOutput) ToGetAwsKmsConnectorCredentialOidcAuthenticationOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOidcAuthenticationOutput {
	return o
}

// The IAM role ARN to assume.
func (o GetAwsKmsConnectorCredentialOidcAuthenticationOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialOidcAuthentication) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

type GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput) ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput() GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput) ToGetAwsKmsConnectorCredentialOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialOidcAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredentialOidcAuthentication {
		return vs[0].([]GetAwsKmsConnectorCredentialOidcAuthentication)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialOidcAuthenticationOutput)
}

type GetAwsSecretManagerConnectorCredential struct {
	// Connect using STS assume role.
	AssumeRoles []GetAwsSecretManagerConnectorCredentialAssumeRole `pulumi:"assumeRoles"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate bool `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manuals []GetAwsSecretManagerConnectorCredentialManual `pulumi:"manuals"`
	// Authentication using OIDC.
	OidcAuthentications []GetAwsSecretManagerConnectorCredentialOidcAuthentication `pulumi:"oidcAuthentications"`
}

// GetAwsSecretManagerConnectorCredentialInput is an input type that accepts GetAwsSecretManagerConnectorCredentialArgs and GetAwsSecretManagerConnectorCredentialOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialInput` via:
//
//	GetAwsSecretManagerConnectorCredentialArgs{...}
type GetAwsSecretManagerConnectorCredentialInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialOutput() GetAwsSecretManagerConnectorCredentialOutput
	ToGetAwsSecretManagerConnectorCredentialOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialOutput
}

type GetAwsSecretManagerConnectorCredentialArgs struct {
	// Connect using STS assume role.
	AssumeRoles GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput `pulumi:"assumeRoles"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate pulumi.BoolInput `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manuals GetAwsSecretManagerConnectorCredentialManualArrayInput `pulumi:"manuals"`
	// Authentication using OIDC.
	OidcAuthentications GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayInput `pulumi:"oidcAuthentications"`
}

func (GetAwsSecretManagerConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialArgs) ToGetAwsSecretManagerConnectorCredentialOutput() GetAwsSecretManagerConnectorCredentialOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialArgs) ToGetAwsSecretManagerConnectorCredentialOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialOutput)
}

// GetAwsSecretManagerConnectorCredentialArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialArray and GetAwsSecretManagerConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialArray{ GetAwsSecretManagerConnectorCredentialArgs{...} }
type GetAwsSecretManagerConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialArrayOutput() GetAwsSecretManagerConnectorCredentialArrayOutput
	ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialArrayOutput
}

type GetAwsSecretManagerConnectorCredentialArray []GetAwsSecretManagerConnectorCredentialInput

func (GetAwsSecretManagerConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialArray) ToGetAwsSecretManagerConnectorCredentialArrayOutput() GetAwsSecretManagerConnectorCredentialArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialArray) ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialOutput) ToGetAwsSecretManagerConnectorCredentialOutput() GetAwsSecretManagerConnectorCredentialOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialOutput) ToGetAwsSecretManagerConnectorCredentialOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOutput {
	return o
}

// Connect using STS assume role.
func (o GetAwsSecretManagerConnectorCredentialOutput) AssumeRoles() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) []GetAwsSecretManagerConnectorCredentialAssumeRole {
		return v.AssumeRoles
	}).(GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput)
}

// Inherit the credentials from from the delegate.
func (o GetAwsSecretManagerConnectorCredentialOutput) InheritFromDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) bool { return v.InheritFromDelegate }).(pulumi.BoolOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o GetAwsSecretManagerConnectorCredentialOutput) Manuals() GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) []GetAwsSecretManagerConnectorCredentialManual {
		return v.Manuals
	}).(GetAwsSecretManagerConnectorCredentialManualArrayOutput)
}

// Authentication using OIDC.
func (o GetAwsSecretManagerConnectorCredentialOutput) OidcAuthentications() GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) []GetAwsSecretManagerConnectorCredentialOidcAuthentication {
		return v.OidcAuthentications
	}).(GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialArrayOutput) ToGetAwsSecretManagerConnectorCredentialArrayOutput() GetAwsSecretManagerConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialArrayOutput) ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredential {
		return vs[0].([]GetAwsSecretManagerConnectorCredential)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialOutput)
}

type GetAwsSecretManagerConnectorCredentialAssumeRole struct {
	// The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
	Duration int `pulumi:"duration"`
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId string `pulumi:"externalId"`
	// The ARN of the role to assume.
	RoleArn string `pulumi:"roleArn"`
}

// GetAwsSecretManagerConnectorCredentialAssumeRoleInput is an input type that accepts GetAwsSecretManagerConnectorCredentialAssumeRoleArgs and GetAwsSecretManagerConnectorCredentialAssumeRoleOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialAssumeRoleInput` via:
//
//	GetAwsSecretManagerConnectorCredentialAssumeRoleArgs{...}
type GetAwsSecretManagerConnectorCredentialAssumeRoleInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleOutput
	ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleArgs struct {
	// The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
	Duration pulumi.IntInput `pulumi:"duration"`
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of the role to assume.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsSecretManagerConnectorCredentialAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArgs) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArgs) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialAssumeRoleOutput)
}

// GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialAssumeRoleArray and GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialAssumeRoleArray{ GetAwsSecretManagerConnectorCredentialAssumeRoleArgs{...} }
type GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput
	ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleArray []GetAwsSecretManagerConnectorCredentialAssumeRoleInput

func (GetAwsSecretManagerConnectorCredentialAssumeRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArray) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArray) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return o
}

// The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the role to assume.
func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredentialAssumeRole {
		return vs[0].([]GetAwsSecretManagerConnectorCredentialAssumeRole)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialAssumeRoleOutput)
}

type GetAwsSecretManagerConnectorCredentialManual struct {
	// The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef string `pulumi:"accessKeyRef"`
	// The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetAwsSecretManagerConnectorCredentialManualInput is an input type that accepts GetAwsSecretManagerConnectorCredentialManualArgs and GetAwsSecretManagerConnectorCredentialManualOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialManualInput` via:
//
//	GetAwsSecretManagerConnectorCredentialManualArgs{...}
type GetAwsSecretManagerConnectorCredentialManualInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialManualOutput() GetAwsSecretManagerConnectorCredentialManualOutput
	ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialManualOutput
}

type GetAwsSecretManagerConnectorCredentialManualArgs struct {
	// The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	// The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetAwsSecretManagerConnectorCredentialManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialManualArgs) ToGetAwsSecretManagerConnectorCredentialManualOutput() GetAwsSecretManagerConnectorCredentialManualOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialManualArgs) ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialManualOutput)
}

// GetAwsSecretManagerConnectorCredentialManualArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialManualArray and GetAwsSecretManagerConnectorCredentialManualArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialManualArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialManualArray{ GetAwsSecretManagerConnectorCredentialManualArgs{...} }
type GetAwsSecretManagerConnectorCredentialManualArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialManualArrayOutput() GetAwsSecretManagerConnectorCredentialManualArrayOutput
	ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialManualArrayOutput
}

type GetAwsSecretManagerConnectorCredentialManualArray []GetAwsSecretManagerConnectorCredentialManualInput

func (GetAwsSecretManagerConnectorCredentialManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialManualArray) ToGetAwsSecretManagerConnectorCredentialManualArrayOutput() GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialManualArray) ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialManualArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialManualOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialManualOutput) ToGetAwsSecretManagerConnectorCredentialManualOutput() GetAwsSecretManagerConnectorCredentialManualOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualOutput) ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualOutput {
	return o
}

// The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsSecretManagerConnectorCredentialManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

// The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetAwsSecretManagerConnectorCredentialManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsSecretManagerConnectorCredentialManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialManualArrayOutput) ToGetAwsSecretManagerConnectorCredentialManualArrayOutput() GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualArrayOutput) ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredentialManual {
		return vs[0].([]GetAwsSecretManagerConnectorCredentialManual)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialManualOutput)
}

type GetAwsSecretManagerConnectorCredentialOidcAuthentication struct {
	// The IAM role ARN to assume.
	IamRoleArn string `pulumi:"iamRoleArn"`
}

// GetAwsSecretManagerConnectorCredentialOidcAuthenticationInput is an input type that accepts GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs and GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialOidcAuthenticationInput` via:
//
//	GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs{...}
type GetAwsSecretManagerConnectorCredentialOidcAuthenticationInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput() GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput
	ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput
}

type GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs struct {
	// The IAM role ARN to assume.
	IamRoleArn pulumi.StringInput `pulumi:"iamRoleArn"`
}

func (GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput() GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput)
}

// GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray and GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray{ GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs{...} }
type GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput() GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput
	ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput
}

type GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray []GetAwsSecretManagerConnectorCredentialOidcAuthenticationInput

func (GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput() GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput() GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput {
	return o
}

// The IAM role ARN to assume.
func (o GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialOidcAuthentication) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

type GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialOidcAuthentication)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput() GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput) ToGetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredentialOidcAuthentication {
		return vs[0].([]GetAwsSecretManagerConnectorCredentialOidcAuthentication)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput)
}

type GetAzureCloudCostConnectorBillingExportSpec2 struct {
	// Billing type.
	BillingType string `pulumi:"billingType"`
	// Name of the container.
	ContainerName string `pulumi:"containerName"`
	// Name of the directory.
	DirectoryName string `pulumi:"directoryName"`
	// Name of the report.
	ReportName string `pulumi:"reportName"`
	// Name of the storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Subsription Id.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// GetAzureCloudCostConnectorBillingExportSpec2Input is an input type that accepts GetAzureCloudCostConnectorBillingExportSpec2Args and GetAzureCloudCostConnectorBillingExportSpec2Output values.
// You can construct a concrete instance of `GetAzureCloudCostConnectorBillingExportSpec2Input` via:
//
//	GetAzureCloudCostConnectorBillingExportSpec2Args{...}
type GetAzureCloudCostConnectorBillingExportSpec2Input interface {
	pulumi.Input

	ToGetAzureCloudCostConnectorBillingExportSpec2Output() GetAzureCloudCostConnectorBillingExportSpec2Output
	ToGetAzureCloudCostConnectorBillingExportSpec2OutputWithContext(context.Context) GetAzureCloudCostConnectorBillingExportSpec2Output
}

type GetAzureCloudCostConnectorBillingExportSpec2Args struct {
	// Billing type.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// Name of the container.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Name of the directory.
	DirectoryName pulumi.StringInput `pulumi:"directoryName"`
	// Name of the report.
	ReportName pulumi.StringInput `pulumi:"reportName"`
	// Name of the storage account.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
	// Subsription Id.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (GetAzureCloudCostConnectorBillingExportSpec2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpec2)(nil)).Elem()
}

func (i GetAzureCloudCostConnectorBillingExportSpec2Args) ToGetAzureCloudCostConnectorBillingExportSpec2Output() GetAzureCloudCostConnectorBillingExportSpec2Output {
	return i.ToGetAzureCloudCostConnectorBillingExportSpec2OutputWithContext(context.Background())
}

func (i GetAzureCloudCostConnectorBillingExportSpec2Args) ToGetAzureCloudCostConnectorBillingExportSpec2OutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpec2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudCostConnectorBillingExportSpec2Output)
}

// GetAzureCloudCostConnectorBillingExportSpec2ArrayInput is an input type that accepts GetAzureCloudCostConnectorBillingExportSpec2Array and GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudCostConnectorBillingExportSpec2ArrayInput` via:
//
//	GetAzureCloudCostConnectorBillingExportSpec2Array{ GetAzureCloudCostConnectorBillingExportSpec2Args{...} }
type GetAzureCloudCostConnectorBillingExportSpec2ArrayInput interface {
	pulumi.Input

	ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutput() GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput
	ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutputWithContext(context.Context) GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput
}

type GetAzureCloudCostConnectorBillingExportSpec2Array []GetAzureCloudCostConnectorBillingExportSpec2Input

func (GetAzureCloudCostConnectorBillingExportSpec2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudCostConnectorBillingExportSpec2)(nil)).Elem()
}

func (i GetAzureCloudCostConnectorBillingExportSpec2Array) ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutput() GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput {
	return i.ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudCostConnectorBillingExportSpec2Array) ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput)
}

type GetAzureCloudCostConnectorBillingExportSpec2Output struct{ *pulumi.OutputState }

func (GetAzureCloudCostConnectorBillingExportSpec2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpec2)(nil)).Elem()
}

func (o GetAzureCloudCostConnectorBillingExportSpec2Output) ToGetAzureCloudCostConnectorBillingExportSpec2Output() GetAzureCloudCostConnectorBillingExportSpec2Output {
	return o
}

func (o GetAzureCloudCostConnectorBillingExportSpec2Output) ToGetAzureCloudCostConnectorBillingExportSpec2OutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpec2Output {
	return o
}

// Billing type.
func (o GetAzureCloudCostConnectorBillingExportSpec2Output) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec2) string { return v.BillingType }).(pulumi.StringOutput)
}

// Name of the container.
func (o GetAzureCloudCostConnectorBillingExportSpec2Output) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec2) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Name of the directory.
func (o GetAzureCloudCostConnectorBillingExportSpec2Output) DirectoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec2) string { return v.DirectoryName }).(pulumi.StringOutput)
}

// Name of the report.
func (o GetAzureCloudCostConnectorBillingExportSpec2Output) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec2) string { return v.ReportName }).(pulumi.StringOutput)
}

// Name of the storage account.
func (o GetAzureCloudCostConnectorBillingExportSpec2Output) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec2) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Subsription Id.
func (o GetAzureCloudCostConnectorBillingExportSpec2Output) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec2) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

type GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudCostConnectorBillingExportSpec2)(nil)).Elem()
}

func (o GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput) ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutput() GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput {
	return o
}

func (o GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput) ToGetAzureCloudCostConnectorBillingExportSpec2ArrayOutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput {
	return o
}

func (o GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput) Index(i pulumi.IntInput) GetAzureCloudCostConnectorBillingExportSpec2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudCostConnectorBillingExportSpec2 {
		return vs[0].([]GetAzureCloudCostConnectorBillingExportSpec2)[vs[1].(int)]
	}).(GetAzureCloudCostConnectorBillingExportSpec2Output)
}

type GetAzureCloudCostConnectorBillingExportSpec struct {
	// Billing type.
	BillingType string `pulumi:"billingType"`
	// Name of the container.
	ContainerName string `pulumi:"containerName"`
	// Name of the directory.
	DirectoryName string `pulumi:"directoryName"`
	// Name of the report.
	ReportName string `pulumi:"reportName"`
	// Name of the storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Subsription Id.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// GetAzureCloudCostConnectorBillingExportSpecInput is an input type that accepts GetAzureCloudCostConnectorBillingExportSpecArgs and GetAzureCloudCostConnectorBillingExportSpecOutput values.
// You can construct a concrete instance of `GetAzureCloudCostConnectorBillingExportSpecInput` via:
//
//	GetAzureCloudCostConnectorBillingExportSpecArgs{...}
type GetAzureCloudCostConnectorBillingExportSpecInput interface {
	pulumi.Input

	ToGetAzureCloudCostConnectorBillingExportSpecOutput() GetAzureCloudCostConnectorBillingExportSpecOutput
	ToGetAzureCloudCostConnectorBillingExportSpecOutputWithContext(context.Context) GetAzureCloudCostConnectorBillingExportSpecOutput
}

type GetAzureCloudCostConnectorBillingExportSpecArgs struct {
	// Billing type.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// Name of the container.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Name of the directory.
	DirectoryName pulumi.StringInput `pulumi:"directoryName"`
	// Name of the report.
	ReportName pulumi.StringInput `pulumi:"reportName"`
	// Name of the storage account.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
	// Subsription Id.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (GetAzureCloudCostConnectorBillingExportSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (i GetAzureCloudCostConnectorBillingExportSpecArgs) ToGetAzureCloudCostConnectorBillingExportSpecOutput() GetAzureCloudCostConnectorBillingExportSpecOutput {
	return i.ToGetAzureCloudCostConnectorBillingExportSpecOutputWithContext(context.Background())
}

func (i GetAzureCloudCostConnectorBillingExportSpecArgs) ToGetAzureCloudCostConnectorBillingExportSpecOutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudCostConnectorBillingExportSpecOutput)
}

// GetAzureCloudCostConnectorBillingExportSpecArrayInput is an input type that accepts GetAzureCloudCostConnectorBillingExportSpecArray and GetAzureCloudCostConnectorBillingExportSpecArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudCostConnectorBillingExportSpecArrayInput` via:
//
//	GetAzureCloudCostConnectorBillingExportSpecArray{ GetAzureCloudCostConnectorBillingExportSpecArgs{...} }
type GetAzureCloudCostConnectorBillingExportSpecArrayInput interface {
	pulumi.Input

	ToGetAzureCloudCostConnectorBillingExportSpecArrayOutput() GetAzureCloudCostConnectorBillingExportSpecArrayOutput
	ToGetAzureCloudCostConnectorBillingExportSpecArrayOutputWithContext(context.Context) GetAzureCloudCostConnectorBillingExportSpecArrayOutput
}

type GetAzureCloudCostConnectorBillingExportSpecArray []GetAzureCloudCostConnectorBillingExportSpecInput

func (GetAzureCloudCostConnectorBillingExportSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (i GetAzureCloudCostConnectorBillingExportSpecArray) ToGetAzureCloudCostConnectorBillingExportSpecArrayOutput() GetAzureCloudCostConnectorBillingExportSpecArrayOutput {
	return i.ToGetAzureCloudCostConnectorBillingExportSpecArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudCostConnectorBillingExportSpecArray) ToGetAzureCloudCostConnectorBillingExportSpecArrayOutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudCostConnectorBillingExportSpecArrayOutput)
}

type GetAzureCloudCostConnectorBillingExportSpecOutput struct{ *pulumi.OutputState }

func (GetAzureCloudCostConnectorBillingExportSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (o GetAzureCloudCostConnectorBillingExportSpecOutput) ToGetAzureCloudCostConnectorBillingExportSpecOutput() GetAzureCloudCostConnectorBillingExportSpecOutput {
	return o
}

func (o GetAzureCloudCostConnectorBillingExportSpecOutput) ToGetAzureCloudCostConnectorBillingExportSpecOutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpecOutput {
	return o
}

// Billing type.
func (o GetAzureCloudCostConnectorBillingExportSpecOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec) string { return v.BillingType }).(pulumi.StringOutput)
}

// Name of the container.
func (o GetAzureCloudCostConnectorBillingExportSpecOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Name of the directory.
func (o GetAzureCloudCostConnectorBillingExportSpecOutput) DirectoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec) string { return v.DirectoryName }).(pulumi.StringOutput)
}

// Name of the report.
func (o GetAzureCloudCostConnectorBillingExportSpecOutput) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec) string { return v.ReportName }).(pulumi.StringOutput)
}

// Name of the storage account.
func (o GetAzureCloudCostConnectorBillingExportSpecOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Subsription Id.
func (o GetAzureCloudCostConnectorBillingExportSpecOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudCostConnectorBillingExportSpec) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

type GetAzureCloudCostConnectorBillingExportSpecArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudCostConnectorBillingExportSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (o GetAzureCloudCostConnectorBillingExportSpecArrayOutput) ToGetAzureCloudCostConnectorBillingExportSpecArrayOutput() GetAzureCloudCostConnectorBillingExportSpecArrayOutput {
	return o
}

func (o GetAzureCloudCostConnectorBillingExportSpecArrayOutput) ToGetAzureCloudCostConnectorBillingExportSpecArrayOutputWithContext(ctx context.Context) GetAzureCloudCostConnectorBillingExportSpecArrayOutput {
	return o
}

func (o GetAzureCloudCostConnectorBillingExportSpecArrayOutput) Index(i pulumi.IntInput) GetAzureCloudCostConnectorBillingExportSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudCostConnectorBillingExportSpec {
		return vs[0].([]GetAzureCloudCostConnectorBillingExportSpec)[vs[1].(int)]
	}).(GetAzureCloudCostConnectorBillingExportSpecOutput)
}

type GetAzureCloudProviderConnectorCredential struct {
	// Authenticate to Azure Cloud Provider using details inheriting from delegate.
	AzureInheritFromDelegateDetails []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail `pulumi:"azureInheritFromDelegateDetails"`
	// Authenticate to Azure Cloud Provider using manual details.
	AzureManualDetails []GetAzureCloudProviderConnectorCredentialAzureManualDetail `pulumi:"azureManualDetails"`
	// Type can either be InheritFromDelegate or ManualConfig.
	Type string `pulumi:"type"`
}

// GetAzureCloudProviderConnectorCredentialInput is an input type that accepts GetAzureCloudProviderConnectorCredentialArgs and GetAzureCloudProviderConnectorCredentialOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialInput` via:
//
//	GetAzureCloudProviderConnectorCredentialArgs{...}
type GetAzureCloudProviderConnectorCredentialInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialOutput() GetAzureCloudProviderConnectorCredentialOutput
	ToGetAzureCloudProviderConnectorCredentialOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialOutput
}

type GetAzureCloudProviderConnectorCredentialArgs struct {
	// Authenticate to Azure Cloud Provider using details inheriting from delegate.
	AzureInheritFromDelegateDetails GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayInput `pulumi:"azureInheritFromDelegateDetails"`
	// Authenticate to Azure Cloud Provider using manual details.
	AzureManualDetails GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayInput `pulumi:"azureManualDetails"`
	// Type can either be InheritFromDelegate or ManualConfig.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAzureCloudProviderConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredential)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialArgs) ToGetAzureCloudProviderConnectorCredentialOutput() GetAzureCloudProviderConnectorCredentialOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialArgs) ToGetAzureCloudProviderConnectorCredentialOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialOutput)
}

// GetAzureCloudProviderConnectorCredentialArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialArray and GetAzureCloudProviderConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialArray{ GetAzureCloudProviderConnectorCredentialArgs{...} }
type GetAzureCloudProviderConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialArrayOutput() GetAzureCloudProviderConnectorCredentialArrayOutput
	ToGetAzureCloudProviderConnectorCredentialArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialArrayOutput
}

type GetAzureCloudProviderConnectorCredentialArray []GetAzureCloudProviderConnectorCredentialInput

func (GetAzureCloudProviderConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredential)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialArray) ToGetAzureCloudProviderConnectorCredentialArrayOutput() GetAzureCloudProviderConnectorCredentialArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialArray) ToGetAzureCloudProviderConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredential)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialOutput) ToGetAzureCloudProviderConnectorCredentialOutput() GetAzureCloudProviderConnectorCredentialOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialOutput) ToGetAzureCloudProviderConnectorCredentialOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialOutput {
	return o
}

// Authenticate to Azure Cloud Provider using details inheriting from delegate.
func (o GetAzureCloudProviderConnectorCredentialOutput) AzureInheritFromDelegateDetails() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredential) []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail {
		return v.AzureInheritFromDelegateDetails
	}).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput)
}

// Authenticate to Azure Cloud Provider using manual details.
func (o GetAzureCloudProviderConnectorCredentialOutput) AzureManualDetails() GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredential) []GetAzureCloudProviderConnectorCredentialAzureManualDetail {
		return v.AzureManualDetails
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput)
}

// Type can either be InheritFromDelegate or ManualConfig.
func (o GetAzureCloudProviderConnectorCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredential) string { return v.Type }).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredential)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialArrayOutput) ToGetAzureCloudProviderConnectorCredentialArrayOutput() GetAzureCloudProviderConnectorCredentialArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialArrayOutput) ToGetAzureCloudProviderConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredential {
		return vs[0].([]GetAzureCloudProviderConnectorCredential)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail struct {
	// Auth to authenticate to Azure Cloud Provider using details inheriting from delegate.
	Auths []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth `pulumi:"auths"`
}

// GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs and GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput
	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs struct {
	// Auth to authenticate to Azure Cloud Provider using details inheriting from delegate.
	Auths GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayInput `pulumi:"auths"`
}

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray and GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray{ GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailInput

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput {
	return o
}

// Auth to authenticate to Azure Cloud Provider using details inheriting from delegate.
func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput) Auths() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail) []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth {
		return v.Auths
	}).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetail)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth struct {
	// Azure UserAssigned MSI auth details.
	AzureMsiAuthUas []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa `pulumi:"azureMsiAuthUas"`
	// Type can either be SystemAssignedManagedIdentity or UserAssignedManagedIdentity.
	Type string `pulumi:"type"`
}

// GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs and GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput
	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs struct {
	// Azure UserAssigned MSI auth details.
	AzureMsiAuthUas GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput `pulumi:"azureMsiAuthUas"`
	// Type can either be SystemAssignedManagedIdentity or UserAssignedManagedIdentity.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray and GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray{ GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthInput

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput {
	return o
}

// Azure UserAssigned MSI auth details.
func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput) AzureMsiAuthUas() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth) []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa {
		return v.AzureMsiAuthUas
	}).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput)
}

// Type can either be SystemAssignedManagedIdentity or UserAssignedManagedIdentity.
func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuth)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa struct {
	// Client Id of the ManagedIdentity resource.
	ClientId string `pulumi:"clientId"`
}

// GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs and GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput
	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs struct {
	// Client Id of the ManagedIdentity resource.
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray and GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray{ GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray []GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return o
}

// Client Id of the ManagedIdentity resource.
func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput() GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetail struct {
	// Application ID of the Azure App.
	ApplicationId string `pulumi:"applicationId"`
	// Contains Azure auth details.
	Auths []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth `pulumi:"auths"`
	// The Azure Active Directory (AAD) directory ID where you created your application.
	TenantId string `pulumi:"tenantId"`
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs and GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureManualDetailInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs struct {
	// Application ID of the Azure App.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Contains Azure auth details.
	Auths GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayInput `pulumi:"auths"`
	// The Azure Active Directory (AAD) directory ID where you created your application.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetail)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailArray and GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailArray{ GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailArray []GetAzureCloudProviderConnectorCredentialAzureManualDetailInput

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetail)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetail)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput {
	return o
}

// Application ID of the Azure App.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetail) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Contains Azure auth details.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput) Auths() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetail) []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth {
		return v.Auths
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput)
}

// The Azure Active Directory (AAD) directory ID where you created your application.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetail) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetail)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureManualDetail {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureManualDetail)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth struct {
	// Azure client key certificate details.
	AzureClientKeyCerts []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert `pulumi:"azureClientKeyCerts"`
	// Azure Client Secret Key details.
	AzureClientSecretKeys []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey `pulumi:"azureClientSecretKeys"`
	// Type can either be Certificate or Secret.
	Type string `pulumi:"type"`
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs and GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs struct {
	// Azure client key certificate details.
	AzureClientKeyCerts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput `pulumi:"azureClientKeyCerts"`
	// Azure Client Secret Key details.
	AzureClientSecretKeys GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput `pulumi:"azureClientSecretKeys"`
	// Type can either be Certificate or Secret.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray and GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray{ GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthInput

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput {
	return o
}

// Azure client key certificate details.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput) AzureClientKeyCerts() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth) []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert {
		return v.AzureClientKeyCerts
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput)
}

// Azure Client Secret Key details.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput) AzureClientSecretKeys() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth) []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey {
		return v.AzureClientSecretKeys
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput)
}

// Type can either be Certificate or Secret.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth) string { return v.Type }).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuth)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert struct {
	// Reference of the secret for the certificate.
	CertificateRef string `pulumi:"certificateRef"`
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs and GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs struct {
	// Reference of the secret for the certificate.
	CertificateRef pulumi.StringInput `pulumi:"certificateRef"`
}

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray and GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray{ GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertInput

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return o
}

// Reference of the secret for the certificate.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput) CertificateRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert) string {
		return v.CertificateRef
	}).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCert)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey struct {
	// Reference of the secret for the secret key.
	SecretRef string `pulumi:"secretRef"`
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs and GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs{...}
type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs struct {
	// Reference of the secret for the secret key.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput)
}

// GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput is an input type that accepts GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray and GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput values.
// You can construct a concrete instance of `GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput` via:
//
//	GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray{ GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs{...} }
type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput interface {
	pulumi.Input

	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput
	ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray []GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyInput

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return i.ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(context.Background())
}

func (i GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return o
}

// Reference of the secret for the secret key.
func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey) string {
		return v.SecretRef
	}).(pulumi.StringOutput)
}

type GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput struct{ *pulumi.OutputState }

func (GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput() GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) ToGetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(ctx context.Context) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return o
}

func (o GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) Index(i pulumi.IntInput) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey {
		return vs[0].([]GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKey)[vs[1].(int)]
	}).(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput)
}

type GetBitbucketConnectorApiAuthentication struct {
	// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
	// The username used for connecting to the api.
	Username string `pulumi:"username"`
	// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetBitbucketConnectorApiAuthenticationInput is an input type that accepts GetBitbucketConnectorApiAuthenticationArgs and GetBitbucketConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorApiAuthenticationInput` via:
//
//	GetBitbucketConnectorApiAuthenticationArgs{...}
type GetBitbucketConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGetBitbucketConnectorApiAuthenticationOutput() GetBitbucketConnectorApiAuthenticationOutput
	ToGetBitbucketConnectorApiAuthenticationOutputWithContext(context.Context) GetBitbucketConnectorApiAuthenticationOutput
}

type GetBitbucketConnectorApiAuthenticationArgs struct {
	// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
	// The username used for connecting to the api.
	Username pulumi.StringInput `pulumi:"username"`
	// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetBitbucketConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (i GetBitbucketConnectorApiAuthenticationArgs) ToGetBitbucketConnectorApiAuthenticationOutput() GetBitbucketConnectorApiAuthenticationOutput {
	return i.ToGetBitbucketConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorApiAuthenticationArgs) ToGetBitbucketConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorApiAuthenticationOutput)
}

// GetBitbucketConnectorApiAuthenticationArrayInput is an input type that accepts GetBitbucketConnectorApiAuthenticationArray and GetBitbucketConnectorApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorApiAuthenticationArrayInput` via:
//
//	GetBitbucketConnectorApiAuthenticationArray{ GetBitbucketConnectorApiAuthenticationArgs{...} }
type GetBitbucketConnectorApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorApiAuthenticationArrayOutput() GetBitbucketConnectorApiAuthenticationArrayOutput
	ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(context.Context) GetBitbucketConnectorApiAuthenticationArrayOutput
}

type GetBitbucketConnectorApiAuthenticationArray []GetBitbucketConnectorApiAuthenticationInput

func (GetBitbucketConnectorApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (i GetBitbucketConnectorApiAuthenticationArray) ToGetBitbucketConnectorApiAuthenticationArrayOutput() GetBitbucketConnectorApiAuthenticationArrayOutput {
	return i.ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorApiAuthenticationArray) ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorApiAuthenticationArrayOutput)
}

type GetBitbucketConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (o GetBitbucketConnectorApiAuthenticationOutput) ToGetBitbucketConnectorApiAuthenticationOutput() GetBitbucketConnectorApiAuthenticationOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationOutput) ToGetBitbucketConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationOutput {
	return o
}

// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetBitbucketConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

// The username used for connecting to the api.
func (o GetBitbucketConnectorApiAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorApiAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetBitbucketConnectorApiAuthenticationOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorApiAuthentication) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetBitbucketConnectorApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (o GetBitbucketConnectorApiAuthenticationArrayOutput) ToGetBitbucketConnectorApiAuthenticationArrayOutput() GetBitbucketConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationArrayOutput) ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorApiAuthentication {
		return vs[0].([]GetBitbucketConnectorApiAuthentication)[vs[1].(int)]
	}).(GetBitbucketConnectorApiAuthenticationOutput)
}

type GetBitbucketConnectorCredential struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https []GetBitbucketConnectorCredentialHttp `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes []GetBitbucketConnectorCredentialSsh `pulumi:"sshes"`
}

// GetBitbucketConnectorCredentialInput is an input type that accepts GetBitbucketConnectorCredentialArgs and GetBitbucketConnectorCredentialOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialInput` via:
//
//	GetBitbucketConnectorCredentialArgs{...}
type GetBitbucketConnectorCredentialInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialOutput() GetBitbucketConnectorCredentialOutput
	ToGetBitbucketConnectorCredentialOutputWithContext(context.Context) GetBitbucketConnectorCredentialOutput
}

type GetBitbucketConnectorCredentialArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https GetBitbucketConnectorCredentialHttpArrayInput `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes GetBitbucketConnectorCredentialSshArrayInput `pulumi:"sshes"`
}

func (GetBitbucketConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredential)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialArgs) ToGetBitbucketConnectorCredentialOutput() GetBitbucketConnectorCredentialOutput {
	return i.ToGetBitbucketConnectorCredentialOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialArgs) ToGetBitbucketConnectorCredentialOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialOutput)
}

// GetBitbucketConnectorCredentialArrayInput is an input type that accepts GetBitbucketConnectorCredentialArray and GetBitbucketConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialArrayInput` via:
//
//	GetBitbucketConnectorCredentialArray{ GetBitbucketConnectorCredentialArgs{...} }
type GetBitbucketConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialArrayOutput() GetBitbucketConnectorCredentialArrayOutput
	ToGetBitbucketConnectorCredentialArrayOutputWithContext(context.Context) GetBitbucketConnectorCredentialArrayOutput
}

type GetBitbucketConnectorCredentialArray []GetBitbucketConnectorCredentialInput

func (GetBitbucketConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredential)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialArray) ToGetBitbucketConnectorCredentialArrayOutput() GetBitbucketConnectorCredentialArrayOutput {
	return i.ToGetBitbucketConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialArray) ToGetBitbucketConnectorCredentialArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialArrayOutput)
}

type GetBitbucketConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredential)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialOutput) ToGetBitbucketConnectorCredentialOutput() GetBitbucketConnectorCredentialOutput {
	return o
}

func (o GetBitbucketConnectorCredentialOutput) ToGetBitbucketConnectorCredentialOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialOutput {
	return o
}

// Authenticate using Username and password over http(s) for the connection.
func (o GetBitbucketConnectorCredentialOutput) Https() GetBitbucketConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredential) []GetBitbucketConnectorCredentialHttp { return v.Https }).(GetBitbucketConnectorCredentialHttpArrayOutput)
}

// Authenticate using SSH for the connection.
func (o GetBitbucketConnectorCredentialOutput) Sshes() GetBitbucketConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredential) []GetBitbucketConnectorCredentialSsh { return v.Sshes }).(GetBitbucketConnectorCredentialSshArrayOutput)
}

type GetBitbucketConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredential)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialArrayOutput) ToGetBitbucketConnectorCredentialArrayOutput() GetBitbucketConnectorCredentialArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialArrayOutput) ToGetBitbucketConnectorCredentialArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorCredential {
		return vs[0].([]GetBitbucketConnectorCredential)[vs[1].(int)]
	}).(GetBitbucketConnectorCredentialOutput)
}

type GetBitbucketConnectorCredentialHttp struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetBitbucketConnectorCredentialHttpInput is an input type that accepts GetBitbucketConnectorCredentialHttpArgs and GetBitbucketConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialHttpInput` via:
//
//	GetBitbucketConnectorCredentialHttpArgs{...}
type GetBitbucketConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialHttpOutput() GetBitbucketConnectorCredentialHttpOutput
	ToGetBitbucketConnectorCredentialHttpOutputWithContext(context.Context) GetBitbucketConnectorCredentialHttpOutput
}

type GetBitbucketConnectorCredentialHttpArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetBitbucketConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialHttpArgs) ToGetBitbucketConnectorCredentialHttpOutput() GetBitbucketConnectorCredentialHttpOutput {
	return i.ToGetBitbucketConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialHttpArgs) ToGetBitbucketConnectorCredentialHttpOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialHttpOutput)
}

// GetBitbucketConnectorCredentialHttpArrayInput is an input type that accepts GetBitbucketConnectorCredentialHttpArray and GetBitbucketConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialHttpArrayInput` via:
//
//	GetBitbucketConnectorCredentialHttpArray{ GetBitbucketConnectorCredentialHttpArgs{...} }
type GetBitbucketConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialHttpArrayOutput() GetBitbucketConnectorCredentialHttpArrayOutput
	ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(context.Context) GetBitbucketConnectorCredentialHttpArrayOutput
}

type GetBitbucketConnectorCredentialHttpArray []GetBitbucketConnectorCredentialHttpInput

func (GetBitbucketConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialHttpArray) ToGetBitbucketConnectorCredentialHttpArrayOutput() GetBitbucketConnectorCredentialHttpArrayOutput {
	return i.ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialHttpArray) ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialHttpArrayOutput)
}

type GetBitbucketConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialHttpOutput) ToGetBitbucketConnectorCredentialHttpOutput() GetBitbucketConnectorCredentialHttpOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpOutput) ToGetBitbucketConnectorCredentialHttpOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetBitbucketConnectorCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetBitbucketConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetBitbucketConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetBitbucketConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialHttpArrayOutput) ToGetBitbucketConnectorCredentialHttpArrayOutput() GetBitbucketConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpArrayOutput) ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorCredentialHttp {
		return vs[0].([]GetBitbucketConnectorCredentialHttp)[vs[1].(int)]
	}).(GetBitbucketConnectorCredentialHttpOutput)
}

type GetBitbucketConnectorCredentialSsh struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetBitbucketConnectorCredentialSshInput is an input type that accepts GetBitbucketConnectorCredentialSshArgs and GetBitbucketConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialSshInput` via:
//
//	GetBitbucketConnectorCredentialSshArgs{...}
type GetBitbucketConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialSshOutput() GetBitbucketConnectorCredentialSshOutput
	ToGetBitbucketConnectorCredentialSshOutputWithContext(context.Context) GetBitbucketConnectorCredentialSshOutput
}

type GetBitbucketConnectorCredentialSshArgs struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetBitbucketConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialSshArgs) ToGetBitbucketConnectorCredentialSshOutput() GetBitbucketConnectorCredentialSshOutput {
	return i.ToGetBitbucketConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialSshArgs) ToGetBitbucketConnectorCredentialSshOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialSshOutput)
}

// GetBitbucketConnectorCredentialSshArrayInput is an input type that accepts GetBitbucketConnectorCredentialSshArray and GetBitbucketConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialSshArrayInput` via:
//
//	GetBitbucketConnectorCredentialSshArray{ GetBitbucketConnectorCredentialSshArgs{...} }
type GetBitbucketConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialSshArrayOutput() GetBitbucketConnectorCredentialSshArrayOutput
	ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(context.Context) GetBitbucketConnectorCredentialSshArrayOutput
}

type GetBitbucketConnectorCredentialSshArray []GetBitbucketConnectorCredentialSshInput

func (GetBitbucketConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialSshArray) ToGetBitbucketConnectorCredentialSshArrayOutput() GetBitbucketConnectorCredentialSshArrayOutput {
	return i.ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialSshArray) ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialSshArrayOutput)
}

type GetBitbucketConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialSshOutput) ToGetBitbucketConnectorCredentialSshOutput() GetBitbucketConnectorCredentialSshOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshOutput) ToGetBitbucketConnectorCredentialSshOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshOutput {
	return o
}

// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetBitbucketConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetBitbucketConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialSshArrayOutput) ToGetBitbucketConnectorCredentialSshArrayOutput() GetBitbucketConnectorCredentialSshArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshArrayOutput) ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorCredentialSsh {
		return vs[0].([]GetBitbucketConnectorCredentialSsh)[vs[1].(int)]
	}).(GetBitbucketConnectorCredentialSshOutput)
}

type GetCcmFiltersFilterProperty struct {
	// Corresponding Entity of the filters.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// GetCcmFiltersFilterPropertyInput is an input type that accepts GetCcmFiltersFilterPropertyArgs and GetCcmFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetCcmFiltersFilterPropertyInput` via:
//
//	GetCcmFiltersFilterPropertyArgs{...}
type GetCcmFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetCcmFiltersFilterPropertyOutput() GetCcmFiltersFilterPropertyOutput
	ToGetCcmFiltersFilterPropertyOutputWithContext(context.Context) GetCcmFiltersFilterPropertyOutput
}

type GetCcmFiltersFilterPropertyArgs struct {
	// Corresponding Entity of the filters.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetCcmFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (i GetCcmFiltersFilterPropertyArgs) ToGetCcmFiltersFilterPropertyOutput() GetCcmFiltersFilterPropertyOutput {
	return i.ToGetCcmFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetCcmFiltersFilterPropertyArgs) ToGetCcmFiltersFilterPropertyOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCcmFiltersFilterPropertyOutput)
}

// GetCcmFiltersFilterPropertyArrayInput is an input type that accepts GetCcmFiltersFilterPropertyArray and GetCcmFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetCcmFiltersFilterPropertyArrayInput` via:
//
//	GetCcmFiltersFilterPropertyArray{ GetCcmFiltersFilterPropertyArgs{...} }
type GetCcmFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetCcmFiltersFilterPropertyArrayOutput() GetCcmFiltersFilterPropertyArrayOutput
	ToGetCcmFiltersFilterPropertyArrayOutputWithContext(context.Context) GetCcmFiltersFilterPropertyArrayOutput
}

type GetCcmFiltersFilterPropertyArray []GetCcmFiltersFilterPropertyInput

func (GetCcmFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (i GetCcmFiltersFilterPropertyArray) ToGetCcmFiltersFilterPropertyArrayOutput() GetCcmFiltersFilterPropertyArrayOutput {
	return i.ToGetCcmFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetCcmFiltersFilterPropertyArray) ToGetCcmFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCcmFiltersFilterPropertyArrayOutput)
}

type GetCcmFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetCcmFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (o GetCcmFiltersFilterPropertyOutput) ToGetCcmFiltersFilterPropertyOutput() GetCcmFiltersFilterPropertyOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyOutput) ToGetCcmFiltersFilterPropertyOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyOutput {
	return o
}

// Corresponding Entity of the filters.
func (o GetCcmFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCcmFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o GetCcmFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCcmFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetCcmFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetCcmFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (o GetCcmFiltersFilterPropertyArrayOutput) ToGetCcmFiltersFilterPropertyArrayOutput() GetCcmFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyArrayOutput) ToGetCcmFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetCcmFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCcmFiltersFilterProperty {
		return vs[0].([]GetCcmFiltersFilterProperty)[vs[1].(int)]
	}).(GetCcmFiltersFilterPropertyOutput)
}

type GetCentralNotificationChannelChannel struct {
	// API key for the webhook or integration.
	ApiKey *string `pulumi:"apiKey"`
	// List of Datadog webhook URLs.
	DatadogUrls []string `pulumi:"datadogUrls"`
	// List of delegate selectors to use for sending notifications.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// List of email addresses to notify.
	EmailIds []string `pulumi:"emailIds"`
	// Whether to execute the notification logic on delegate.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Custom HTTP headers to include in webhook requests.
	Headers []GetCentralNotificationChannelChannelHeader `pulumi:"headers"`
	// List of Microsoft Teams integration keys.
	MsTeamKeys []string `pulumi:"msTeamKeys"`
	// List of PagerDuty integration keys.
	PagerDutyIntegrationKeys []string `pulumi:"pagerDutyIntegrationKeys"`
	// List of Slack webhook URLs to send notifications to.
	SlackWebhookUrls []string `pulumi:"slackWebhookUrls"`
	// List of user groups to notify.
	UserGroups []GetCentralNotificationChannelChannelUserGroup `pulumi:"userGroups"`
	// List of generic webhook URLs.
	WebhookUrls []string `pulumi:"webhookUrls"`
}

// GetCentralNotificationChannelChannelInput is an input type that accepts GetCentralNotificationChannelChannelArgs and GetCentralNotificationChannelChannelOutput values.
// You can construct a concrete instance of `GetCentralNotificationChannelChannelInput` via:
//
//	GetCentralNotificationChannelChannelArgs{...}
type GetCentralNotificationChannelChannelInput interface {
	pulumi.Input

	ToGetCentralNotificationChannelChannelOutput() GetCentralNotificationChannelChannelOutput
	ToGetCentralNotificationChannelChannelOutputWithContext(context.Context) GetCentralNotificationChannelChannelOutput
}

type GetCentralNotificationChannelChannelArgs struct {
	// API key for the webhook or integration.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// List of Datadog webhook URLs.
	DatadogUrls pulumi.StringArrayInput `pulumi:"datadogUrls"`
	// List of delegate selectors to use for sending notifications.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// List of email addresses to notify.
	EmailIds pulumi.StringArrayInput `pulumi:"emailIds"`
	// Whether to execute the notification logic on delegate.
	ExecuteOnDelegate pulumi.BoolPtrInput `pulumi:"executeOnDelegate"`
	// Custom HTTP headers to include in webhook requests.
	Headers GetCentralNotificationChannelChannelHeaderArrayInput `pulumi:"headers"`
	// List of Microsoft Teams integration keys.
	MsTeamKeys pulumi.StringArrayInput `pulumi:"msTeamKeys"`
	// List of PagerDuty integration keys.
	PagerDutyIntegrationKeys pulumi.StringArrayInput `pulumi:"pagerDutyIntegrationKeys"`
	// List of Slack webhook URLs to send notifications to.
	SlackWebhookUrls pulumi.StringArrayInput `pulumi:"slackWebhookUrls"`
	// List of user groups to notify.
	UserGroups GetCentralNotificationChannelChannelUserGroupArrayInput `pulumi:"userGroups"`
	// List of generic webhook URLs.
	WebhookUrls pulumi.StringArrayInput `pulumi:"webhookUrls"`
}

func (GetCentralNotificationChannelChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationChannelChannel)(nil)).Elem()
}

func (i GetCentralNotificationChannelChannelArgs) ToGetCentralNotificationChannelChannelOutput() GetCentralNotificationChannelChannelOutput {
	return i.ToGetCentralNotificationChannelChannelOutputWithContext(context.Background())
}

func (i GetCentralNotificationChannelChannelArgs) ToGetCentralNotificationChannelChannelOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationChannelChannelOutput)
}

// GetCentralNotificationChannelChannelArrayInput is an input type that accepts GetCentralNotificationChannelChannelArray and GetCentralNotificationChannelChannelArrayOutput values.
// You can construct a concrete instance of `GetCentralNotificationChannelChannelArrayInput` via:
//
//	GetCentralNotificationChannelChannelArray{ GetCentralNotificationChannelChannelArgs{...} }
type GetCentralNotificationChannelChannelArrayInput interface {
	pulumi.Input

	ToGetCentralNotificationChannelChannelArrayOutput() GetCentralNotificationChannelChannelArrayOutput
	ToGetCentralNotificationChannelChannelArrayOutputWithContext(context.Context) GetCentralNotificationChannelChannelArrayOutput
}

type GetCentralNotificationChannelChannelArray []GetCentralNotificationChannelChannelInput

func (GetCentralNotificationChannelChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationChannelChannel)(nil)).Elem()
}

func (i GetCentralNotificationChannelChannelArray) ToGetCentralNotificationChannelChannelArrayOutput() GetCentralNotificationChannelChannelArrayOutput {
	return i.ToGetCentralNotificationChannelChannelArrayOutputWithContext(context.Background())
}

func (i GetCentralNotificationChannelChannelArray) ToGetCentralNotificationChannelChannelArrayOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationChannelChannelArrayOutput)
}

type GetCentralNotificationChannelChannelOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationChannelChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationChannelChannel)(nil)).Elem()
}

func (o GetCentralNotificationChannelChannelOutput) ToGetCentralNotificationChannelChannelOutput() GetCentralNotificationChannelChannelOutput {
	return o
}

func (o GetCentralNotificationChannelChannelOutput) ToGetCentralNotificationChannelChannelOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelOutput {
	return o
}

// API key for the webhook or integration.
func (o GetCentralNotificationChannelChannelOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// List of Datadog webhook URLs.
func (o GetCentralNotificationChannelChannelOutput) DatadogUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.DatadogUrls }).(pulumi.StringArrayOutput)
}

// List of delegate selectors to use for sending notifications.
func (o GetCentralNotificationChannelChannelOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// List of email addresses to notify.
func (o GetCentralNotificationChannelChannelOutput) EmailIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.EmailIds }).(pulumi.StringArrayOutput)
}

// Whether to execute the notification logic on delegate.
func (o GetCentralNotificationChannelChannelOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) *bool { return v.ExecuteOnDelegate }).(pulumi.BoolPtrOutput)
}

// Custom HTTP headers to include in webhook requests.
func (o GetCentralNotificationChannelChannelOutput) Headers() GetCentralNotificationChannelChannelHeaderArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []GetCentralNotificationChannelChannelHeader {
		return v.Headers
	}).(GetCentralNotificationChannelChannelHeaderArrayOutput)
}

// List of Microsoft Teams integration keys.
func (o GetCentralNotificationChannelChannelOutput) MsTeamKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.MsTeamKeys }).(pulumi.StringArrayOutput)
}

// List of PagerDuty integration keys.
func (o GetCentralNotificationChannelChannelOutput) PagerDutyIntegrationKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.PagerDutyIntegrationKeys }).(pulumi.StringArrayOutput)
}

// List of Slack webhook URLs to send notifications to.
func (o GetCentralNotificationChannelChannelOutput) SlackWebhookUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.SlackWebhookUrls }).(pulumi.StringArrayOutput)
}

// List of user groups to notify.
func (o GetCentralNotificationChannelChannelOutput) UserGroups() GetCentralNotificationChannelChannelUserGroupArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []GetCentralNotificationChannelChannelUserGroup {
		return v.UserGroups
	}).(GetCentralNotificationChannelChannelUserGroupArrayOutput)
}

// List of generic webhook URLs.
func (o GetCentralNotificationChannelChannelOutput) WebhookUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannel) []string { return v.WebhookUrls }).(pulumi.StringArrayOutput)
}

type GetCentralNotificationChannelChannelArrayOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationChannelChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationChannelChannel)(nil)).Elem()
}

func (o GetCentralNotificationChannelChannelArrayOutput) ToGetCentralNotificationChannelChannelArrayOutput() GetCentralNotificationChannelChannelArrayOutput {
	return o
}

func (o GetCentralNotificationChannelChannelArrayOutput) ToGetCentralNotificationChannelChannelArrayOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelArrayOutput {
	return o
}

func (o GetCentralNotificationChannelChannelArrayOutput) Index(i pulumi.IntInput) GetCentralNotificationChannelChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralNotificationChannelChannel {
		return vs[0].([]GetCentralNotificationChannelChannel)[vs[1].(int)]
	}).(GetCentralNotificationChannelChannelOutput)
}

type GetCentralNotificationChannelChannelHeader struct {
	// Header key name.
	Key string `pulumi:"key"`
	// Header value.
	Value string `pulumi:"value"`
}

// GetCentralNotificationChannelChannelHeaderInput is an input type that accepts GetCentralNotificationChannelChannelHeaderArgs and GetCentralNotificationChannelChannelHeaderOutput values.
// You can construct a concrete instance of `GetCentralNotificationChannelChannelHeaderInput` via:
//
//	GetCentralNotificationChannelChannelHeaderArgs{...}
type GetCentralNotificationChannelChannelHeaderInput interface {
	pulumi.Input

	ToGetCentralNotificationChannelChannelHeaderOutput() GetCentralNotificationChannelChannelHeaderOutput
	ToGetCentralNotificationChannelChannelHeaderOutputWithContext(context.Context) GetCentralNotificationChannelChannelHeaderOutput
}

type GetCentralNotificationChannelChannelHeaderArgs struct {
	// Header key name.
	Key pulumi.StringInput `pulumi:"key"`
	// Header value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCentralNotificationChannelChannelHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationChannelChannelHeader)(nil)).Elem()
}

func (i GetCentralNotificationChannelChannelHeaderArgs) ToGetCentralNotificationChannelChannelHeaderOutput() GetCentralNotificationChannelChannelHeaderOutput {
	return i.ToGetCentralNotificationChannelChannelHeaderOutputWithContext(context.Background())
}

func (i GetCentralNotificationChannelChannelHeaderArgs) ToGetCentralNotificationChannelChannelHeaderOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationChannelChannelHeaderOutput)
}

// GetCentralNotificationChannelChannelHeaderArrayInput is an input type that accepts GetCentralNotificationChannelChannelHeaderArray and GetCentralNotificationChannelChannelHeaderArrayOutput values.
// You can construct a concrete instance of `GetCentralNotificationChannelChannelHeaderArrayInput` via:
//
//	GetCentralNotificationChannelChannelHeaderArray{ GetCentralNotificationChannelChannelHeaderArgs{...} }
type GetCentralNotificationChannelChannelHeaderArrayInput interface {
	pulumi.Input

	ToGetCentralNotificationChannelChannelHeaderArrayOutput() GetCentralNotificationChannelChannelHeaderArrayOutput
	ToGetCentralNotificationChannelChannelHeaderArrayOutputWithContext(context.Context) GetCentralNotificationChannelChannelHeaderArrayOutput
}

type GetCentralNotificationChannelChannelHeaderArray []GetCentralNotificationChannelChannelHeaderInput

func (GetCentralNotificationChannelChannelHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationChannelChannelHeader)(nil)).Elem()
}

func (i GetCentralNotificationChannelChannelHeaderArray) ToGetCentralNotificationChannelChannelHeaderArrayOutput() GetCentralNotificationChannelChannelHeaderArrayOutput {
	return i.ToGetCentralNotificationChannelChannelHeaderArrayOutputWithContext(context.Background())
}

func (i GetCentralNotificationChannelChannelHeaderArray) ToGetCentralNotificationChannelChannelHeaderArrayOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationChannelChannelHeaderArrayOutput)
}

type GetCentralNotificationChannelChannelHeaderOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationChannelChannelHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationChannelChannelHeader)(nil)).Elem()
}

func (o GetCentralNotificationChannelChannelHeaderOutput) ToGetCentralNotificationChannelChannelHeaderOutput() GetCentralNotificationChannelChannelHeaderOutput {
	return o
}

func (o GetCentralNotificationChannelChannelHeaderOutput) ToGetCentralNotificationChannelChannelHeaderOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelHeaderOutput {
	return o
}

// Header key name.
func (o GetCentralNotificationChannelChannelHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannelHeader) string { return v.Key }).(pulumi.StringOutput)
}

// Header value.
func (o GetCentralNotificationChannelChannelHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannelHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetCentralNotificationChannelChannelHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationChannelChannelHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationChannelChannelHeader)(nil)).Elem()
}

func (o GetCentralNotificationChannelChannelHeaderArrayOutput) ToGetCentralNotificationChannelChannelHeaderArrayOutput() GetCentralNotificationChannelChannelHeaderArrayOutput {
	return o
}

func (o GetCentralNotificationChannelChannelHeaderArrayOutput) ToGetCentralNotificationChannelChannelHeaderArrayOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelHeaderArrayOutput {
	return o
}

func (o GetCentralNotificationChannelChannelHeaderArrayOutput) Index(i pulumi.IntInput) GetCentralNotificationChannelChannelHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralNotificationChannelChannelHeader {
		return vs[0].([]GetCentralNotificationChannelChannelHeader)[vs[1].(int)]
	}).(GetCentralNotificationChannelChannelHeaderOutput)
}

type GetCentralNotificationChannelChannelUserGroup struct {
	// Identifier of the user group.
	Identifier *string `pulumi:"identifier"`
}

// GetCentralNotificationChannelChannelUserGroupInput is an input type that accepts GetCentralNotificationChannelChannelUserGroupArgs and GetCentralNotificationChannelChannelUserGroupOutput values.
// You can construct a concrete instance of `GetCentralNotificationChannelChannelUserGroupInput` via:
//
//	GetCentralNotificationChannelChannelUserGroupArgs{...}
type GetCentralNotificationChannelChannelUserGroupInput interface {
	pulumi.Input

	ToGetCentralNotificationChannelChannelUserGroupOutput() GetCentralNotificationChannelChannelUserGroupOutput
	ToGetCentralNotificationChannelChannelUserGroupOutputWithContext(context.Context) GetCentralNotificationChannelChannelUserGroupOutput
}

type GetCentralNotificationChannelChannelUserGroupArgs struct {
	// Identifier of the user group.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
}

func (GetCentralNotificationChannelChannelUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationChannelChannelUserGroup)(nil)).Elem()
}

func (i GetCentralNotificationChannelChannelUserGroupArgs) ToGetCentralNotificationChannelChannelUserGroupOutput() GetCentralNotificationChannelChannelUserGroupOutput {
	return i.ToGetCentralNotificationChannelChannelUserGroupOutputWithContext(context.Background())
}

func (i GetCentralNotificationChannelChannelUserGroupArgs) ToGetCentralNotificationChannelChannelUserGroupOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationChannelChannelUserGroupOutput)
}

// GetCentralNotificationChannelChannelUserGroupArrayInput is an input type that accepts GetCentralNotificationChannelChannelUserGroupArray and GetCentralNotificationChannelChannelUserGroupArrayOutput values.
// You can construct a concrete instance of `GetCentralNotificationChannelChannelUserGroupArrayInput` via:
//
//	GetCentralNotificationChannelChannelUserGroupArray{ GetCentralNotificationChannelChannelUserGroupArgs{...} }
type GetCentralNotificationChannelChannelUserGroupArrayInput interface {
	pulumi.Input

	ToGetCentralNotificationChannelChannelUserGroupArrayOutput() GetCentralNotificationChannelChannelUserGroupArrayOutput
	ToGetCentralNotificationChannelChannelUserGroupArrayOutputWithContext(context.Context) GetCentralNotificationChannelChannelUserGroupArrayOutput
}

type GetCentralNotificationChannelChannelUserGroupArray []GetCentralNotificationChannelChannelUserGroupInput

func (GetCentralNotificationChannelChannelUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationChannelChannelUserGroup)(nil)).Elem()
}

func (i GetCentralNotificationChannelChannelUserGroupArray) ToGetCentralNotificationChannelChannelUserGroupArrayOutput() GetCentralNotificationChannelChannelUserGroupArrayOutput {
	return i.ToGetCentralNotificationChannelChannelUserGroupArrayOutputWithContext(context.Background())
}

func (i GetCentralNotificationChannelChannelUserGroupArray) ToGetCentralNotificationChannelChannelUserGroupArrayOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationChannelChannelUserGroupArrayOutput)
}

type GetCentralNotificationChannelChannelUserGroupOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationChannelChannelUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationChannelChannelUserGroup)(nil)).Elem()
}

func (o GetCentralNotificationChannelChannelUserGroupOutput) ToGetCentralNotificationChannelChannelUserGroupOutput() GetCentralNotificationChannelChannelUserGroupOutput {
	return o
}

func (o GetCentralNotificationChannelChannelUserGroupOutput) ToGetCentralNotificationChannelChannelUserGroupOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelUserGroupOutput {
	return o
}

// Identifier of the user group.
func (o GetCentralNotificationChannelChannelUserGroupOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCentralNotificationChannelChannelUserGroup) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

type GetCentralNotificationChannelChannelUserGroupArrayOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationChannelChannelUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationChannelChannelUserGroup)(nil)).Elem()
}

func (o GetCentralNotificationChannelChannelUserGroupArrayOutput) ToGetCentralNotificationChannelChannelUserGroupArrayOutput() GetCentralNotificationChannelChannelUserGroupArrayOutput {
	return o
}

func (o GetCentralNotificationChannelChannelUserGroupArrayOutput) ToGetCentralNotificationChannelChannelUserGroupArrayOutputWithContext(ctx context.Context) GetCentralNotificationChannelChannelUserGroupArrayOutput {
	return o
}

func (o GetCentralNotificationChannelChannelUserGroupArrayOutput) Index(i pulumi.IntInput) GetCentralNotificationChannelChannelUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralNotificationChannelChannelUserGroup {
		return vs[0].([]GetCentralNotificationChannelChannelUserGroup)[vs[1].(int)]
	}).(GetCentralNotificationChannelChannelUserGroupOutput)
}

type GetCentralNotificationRuleCustomNotificationTemplateRef struct {
	TemplateRef  string                                                            `pulumi:"templateRef"`
	Variables    []GetCentralNotificationRuleCustomNotificationTemplateRefVariable `pulumi:"variables"`
	VersionLabel string                                                            `pulumi:"versionLabel"`
}

// GetCentralNotificationRuleCustomNotificationTemplateRefInput is an input type that accepts GetCentralNotificationRuleCustomNotificationTemplateRefArgs and GetCentralNotificationRuleCustomNotificationTemplateRefOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleCustomNotificationTemplateRefInput` via:
//
//	GetCentralNotificationRuleCustomNotificationTemplateRefArgs{...}
type GetCentralNotificationRuleCustomNotificationTemplateRefInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleCustomNotificationTemplateRefOutput() GetCentralNotificationRuleCustomNotificationTemplateRefOutput
	ToGetCentralNotificationRuleCustomNotificationTemplateRefOutputWithContext(context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefOutput
}

type GetCentralNotificationRuleCustomNotificationTemplateRefArgs struct {
	TemplateRef  pulumi.StringInput                                                        `pulumi:"templateRef"`
	Variables    GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayInput `pulumi:"variables"`
	VersionLabel pulumi.StringInput                                                        `pulumi:"versionLabel"`
}

func (GetCentralNotificationRuleCustomNotificationTemplateRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRef)(nil)).Elem()
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefArgs) ToGetCentralNotificationRuleCustomNotificationTemplateRefOutput() GetCentralNotificationRuleCustomNotificationTemplateRefOutput {
	return i.ToGetCentralNotificationRuleCustomNotificationTemplateRefOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefArgs) ToGetCentralNotificationRuleCustomNotificationTemplateRefOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleCustomNotificationTemplateRefOutput)
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefArgs) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput() GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return i.ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefArgs) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleCustomNotificationTemplateRefOutput).ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(ctx)
}

// GetCentralNotificationRuleCustomNotificationTemplateRefPtrInput is an input type that accepts GetCentralNotificationRuleCustomNotificationTemplateRefArgs, GetCentralNotificationRuleCustomNotificationTemplateRefPtr and GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleCustomNotificationTemplateRefPtrInput` via:
//
//	        GetCentralNotificationRuleCustomNotificationTemplateRefArgs{...}
//
//	or:
//
//	        nil
type GetCentralNotificationRuleCustomNotificationTemplateRefPtrInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput() GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput
	ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput
}

type getCentralNotificationRuleCustomNotificationTemplateRefPtrType GetCentralNotificationRuleCustomNotificationTemplateRefArgs

func GetCentralNotificationRuleCustomNotificationTemplateRefPtr(v *GetCentralNotificationRuleCustomNotificationTemplateRefArgs) GetCentralNotificationRuleCustomNotificationTemplateRefPtrInput {
	return (*getCentralNotificationRuleCustomNotificationTemplateRefPtrType)(v)
}

func (*getCentralNotificationRuleCustomNotificationTemplateRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCentralNotificationRuleCustomNotificationTemplateRef)(nil)).Elem()
}

func (i *getCentralNotificationRuleCustomNotificationTemplateRefPtrType) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput() GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return i.ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(context.Background())
}

func (i *getCentralNotificationRuleCustomNotificationTemplateRefPtrType) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput)
}

type GetCentralNotificationRuleCustomNotificationTemplateRefOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleCustomNotificationTemplateRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRef)(nil)).Elem()
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefOutput() GetCentralNotificationRuleCustomNotificationTemplateRefOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput() GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return o.ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(context.Background())
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetCentralNotificationRuleCustomNotificationTemplateRef) *GetCentralNotificationRuleCustomNotificationTemplateRef {
		return &v
	}).(GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) TemplateRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleCustomNotificationTemplateRef) string { return v.TemplateRef }).(pulumi.StringOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) Variables() GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleCustomNotificationTemplateRef) []GetCentralNotificationRuleCustomNotificationTemplateRefVariable {
		return v.Variables
	}).(GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefOutput) VersionLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleCustomNotificationTemplateRef) string { return v.VersionLabel }).(pulumi.StringOutput)
}

type GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCentralNotificationRuleCustomNotificationTemplateRef)(nil)).Elem()
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput() GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefPtrOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) Elem() GetCentralNotificationRuleCustomNotificationTemplateRefOutput {
	return o.ApplyT(func(v *GetCentralNotificationRuleCustomNotificationTemplateRef) GetCentralNotificationRuleCustomNotificationTemplateRef {
		if v != nil {
			return *v
		}
		var ret GetCentralNotificationRuleCustomNotificationTemplateRef
		return ret
	}).(GetCentralNotificationRuleCustomNotificationTemplateRefOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) TemplateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCentralNotificationRuleCustomNotificationTemplateRef) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateRef
	}).(pulumi.StringPtrOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) Variables() GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput {
	return o.ApplyT(func(v *GetCentralNotificationRuleCustomNotificationTemplateRef) []GetCentralNotificationRuleCustomNotificationTemplateRefVariable {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput) VersionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCentralNotificationRuleCustomNotificationTemplateRef) *string {
		if v == nil {
			return nil
		}
		return &v.VersionLabel
	}).(pulumi.StringPtrOutput)
}

type GetCentralNotificationRuleCustomNotificationTemplateRefVariable struct {
	Name  string  `pulumi:"name"`
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// GetCentralNotificationRuleCustomNotificationTemplateRefVariableInput is an input type that accepts GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs and GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleCustomNotificationTemplateRefVariableInput` via:
//
//	GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs{...}
type GetCentralNotificationRuleCustomNotificationTemplateRefVariableInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput() GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput
	ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutputWithContext(context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput
}

type GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRefVariable)(nil)).Elem()
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput() GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput {
	return i.ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput)
}

// GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayInput is an input type that accepts GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray and GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayInput` via:
//
//	GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray{ GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs{...} }
type GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput() GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput
	ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutputWithContext(context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput
}

type GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray []GetCentralNotificationRuleCustomNotificationTemplateRefVariableInput

func (GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationRuleCustomNotificationTemplateRefVariable)(nil)).Elem()
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput() GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput {
	return i.ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput)
}

type GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRefVariable)(nil)).Elem()
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput() GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleCustomNotificationTemplateRefVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleCustomNotificationTemplateRefVariable) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleCustomNotificationTemplateRefVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationRuleCustomNotificationTemplateRefVariable)(nil)).Elem()
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput() GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput) ToGetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutputWithContext(ctx context.Context) GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput {
	return o
}

func (o GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput) Index(i pulumi.IntInput) GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralNotificationRuleCustomNotificationTemplateRefVariable {
		return vs[0].([]GetCentralNotificationRuleCustomNotificationTemplateRefVariable)[vs[1].(int)]
	}).(GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput)
}

type GetCentralNotificationRuleNotificationCondition struct {
	ConditionName            string                                                                   `pulumi:"conditionName"`
	NotificationEventConfigs []GetCentralNotificationRuleNotificationConditionNotificationEventConfig `pulumi:"notificationEventConfigs"`
}

// GetCentralNotificationRuleNotificationConditionInput is an input type that accepts GetCentralNotificationRuleNotificationConditionArgs and GetCentralNotificationRuleNotificationConditionOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleNotificationConditionInput` via:
//
//	GetCentralNotificationRuleNotificationConditionArgs{...}
type GetCentralNotificationRuleNotificationConditionInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleNotificationConditionOutput() GetCentralNotificationRuleNotificationConditionOutput
	ToGetCentralNotificationRuleNotificationConditionOutputWithContext(context.Context) GetCentralNotificationRuleNotificationConditionOutput
}

type GetCentralNotificationRuleNotificationConditionArgs struct {
	ConditionName            pulumi.StringInput                                                               `pulumi:"conditionName"`
	NotificationEventConfigs GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayInput `pulumi:"notificationEventConfigs"`
}

func (GetCentralNotificationRuleNotificationConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleNotificationCondition)(nil)).Elem()
}

func (i GetCentralNotificationRuleNotificationConditionArgs) ToGetCentralNotificationRuleNotificationConditionOutput() GetCentralNotificationRuleNotificationConditionOutput {
	return i.ToGetCentralNotificationRuleNotificationConditionOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleNotificationConditionArgs) ToGetCentralNotificationRuleNotificationConditionOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleNotificationConditionOutput)
}

// GetCentralNotificationRuleNotificationConditionArrayInput is an input type that accepts GetCentralNotificationRuleNotificationConditionArray and GetCentralNotificationRuleNotificationConditionArrayOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleNotificationConditionArrayInput` via:
//
//	GetCentralNotificationRuleNotificationConditionArray{ GetCentralNotificationRuleNotificationConditionArgs{...} }
type GetCentralNotificationRuleNotificationConditionArrayInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleNotificationConditionArrayOutput() GetCentralNotificationRuleNotificationConditionArrayOutput
	ToGetCentralNotificationRuleNotificationConditionArrayOutputWithContext(context.Context) GetCentralNotificationRuleNotificationConditionArrayOutput
}

type GetCentralNotificationRuleNotificationConditionArray []GetCentralNotificationRuleNotificationConditionInput

func (GetCentralNotificationRuleNotificationConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationRuleNotificationCondition)(nil)).Elem()
}

func (i GetCentralNotificationRuleNotificationConditionArray) ToGetCentralNotificationRuleNotificationConditionArrayOutput() GetCentralNotificationRuleNotificationConditionArrayOutput {
	return i.ToGetCentralNotificationRuleNotificationConditionArrayOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleNotificationConditionArray) ToGetCentralNotificationRuleNotificationConditionArrayOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleNotificationConditionArrayOutput)
}

type GetCentralNotificationRuleNotificationConditionOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleNotificationConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleNotificationCondition)(nil)).Elem()
}

func (o GetCentralNotificationRuleNotificationConditionOutput) ToGetCentralNotificationRuleNotificationConditionOutput() GetCentralNotificationRuleNotificationConditionOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionOutput) ToGetCentralNotificationRuleNotificationConditionOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionOutput) ConditionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleNotificationCondition) string { return v.ConditionName }).(pulumi.StringOutput)
}

func (o GetCentralNotificationRuleNotificationConditionOutput) NotificationEventConfigs() GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleNotificationCondition) []GetCentralNotificationRuleNotificationConditionNotificationEventConfig {
		return v.NotificationEventConfigs
	}).(GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput)
}

type GetCentralNotificationRuleNotificationConditionArrayOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleNotificationConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationRuleNotificationCondition)(nil)).Elem()
}

func (o GetCentralNotificationRuleNotificationConditionArrayOutput) ToGetCentralNotificationRuleNotificationConditionArrayOutput() GetCentralNotificationRuleNotificationConditionArrayOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionArrayOutput) ToGetCentralNotificationRuleNotificationConditionArrayOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionArrayOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionArrayOutput) Index(i pulumi.IntInput) GetCentralNotificationRuleNotificationConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralNotificationRuleNotificationCondition {
		return vs[0].([]GetCentralNotificationRuleNotificationCondition)[vs[1].(int)]
	}).(GetCentralNotificationRuleNotificationConditionOutput)
}

type GetCentralNotificationRuleNotificationConditionNotificationEventConfig struct {
	NotificationEntity    string            `pulumi:"notificationEntity"`
	NotificationEvent     string            `pulumi:"notificationEvent"`
	NotificationEventData map[string]string `pulumi:"notificationEventData"`
}

// GetCentralNotificationRuleNotificationConditionNotificationEventConfigInput is an input type that accepts GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs and GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleNotificationConditionNotificationEventConfigInput` via:
//
//	GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs{...}
type GetCentralNotificationRuleNotificationConditionNotificationEventConfigInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput() GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput
	ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutputWithContext(context.Context) GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput
}

type GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs struct {
	NotificationEntity    pulumi.StringInput    `pulumi:"notificationEntity"`
	NotificationEvent     pulumi.StringInput    `pulumi:"notificationEvent"`
	NotificationEventData pulumi.StringMapInput `pulumi:"notificationEventData"`
}

func (GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleNotificationConditionNotificationEventConfig)(nil)).Elem()
}

func (i GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput() GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput {
	return i.ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput)
}

// GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayInput is an input type that accepts GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray and GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput values.
// You can construct a concrete instance of `GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayInput` via:
//
//	GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray{ GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs{...} }
type GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayInput interface {
	pulumi.Input

	ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput() GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput
	ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutputWithContext(context.Context) GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput
}

type GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray []GetCentralNotificationRuleNotificationConditionNotificationEventConfigInput

func (GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationRuleNotificationConditionNotificationEventConfig)(nil)).Elem()
}

func (i GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput() GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput {
	return i.ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutputWithContext(context.Background())
}

func (i GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput)
}

type GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCentralNotificationRuleNotificationConditionNotificationEventConfig)(nil)).Elem()
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput() GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput) NotificationEntity() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleNotificationConditionNotificationEventConfig) string {
		return v.NotificationEntity
	}).(pulumi.StringOutput)
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput) NotificationEvent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleNotificationConditionNotificationEventConfig) string {
		return v.NotificationEvent
	}).(pulumi.StringOutput)
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput) NotificationEventData() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCentralNotificationRuleNotificationConditionNotificationEventConfig) map[string]string {
		return v.NotificationEventData
	}).(pulumi.StringMapOutput)
}

type GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCentralNotificationRuleNotificationConditionNotificationEventConfig)(nil)).Elem()
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput() GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput) ToGetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutputWithContext(ctx context.Context) GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput {
	return o
}

func (o GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput) Index(i pulumi.IntInput) GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCentralNotificationRuleNotificationConditionNotificationEventConfig {
		return vs[0].([]GetCentralNotificationRuleNotificationConditionNotificationEventConfig)[vs[1].(int)]
	}).(GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput)
}

type GetConnectorAzureRepoApiAuthentication struct {
	// Personal access token for interacting with the azure repo api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// GetConnectorAzureRepoApiAuthenticationInput is an input type that accepts GetConnectorAzureRepoApiAuthenticationArgs and GetConnectorAzureRepoApiAuthenticationOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoApiAuthenticationInput` via:
//
//	GetConnectorAzureRepoApiAuthenticationArgs{...}
type GetConnectorAzureRepoApiAuthenticationInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoApiAuthenticationOutput() GetConnectorAzureRepoApiAuthenticationOutput
	ToGetConnectorAzureRepoApiAuthenticationOutputWithContext(context.Context) GetConnectorAzureRepoApiAuthenticationOutput
}

type GetConnectorAzureRepoApiAuthenticationArgs struct {
	// Personal access token for interacting with the azure repo api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetConnectorAzureRepoApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoApiAuthentication)(nil)).Elem()
}

func (i GetConnectorAzureRepoApiAuthenticationArgs) ToGetConnectorAzureRepoApiAuthenticationOutput() GetConnectorAzureRepoApiAuthenticationOutput {
	return i.ToGetConnectorAzureRepoApiAuthenticationOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoApiAuthenticationArgs) ToGetConnectorAzureRepoApiAuthenticationOutputWithContext(ctx context.Context) GetConnectorAzureRepoApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoApiAuthenticationOutput)
}

// GetConnectorAzureRepoApiAuthenticationArrayInput is an input type that accepts GetConnectorAzureRepoApiAuthenticationArray and GetConnectorAzureRepoApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoApiAuthenticationArrayInput` via:
//
//	GetConnectorAzureRepoApiAuthenticationArray{ GetConnectorAzureRepoApiAuthenticationArgs{...} }
type GetConnectorAzureRepoApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoApiAuthenticationArrayOutput() GetConnectorAzureRepoApiAuthenticationArrayOutput
	ToGetConnectorAzureRepoApiAuthenticationArrayOutputWithContext(context.Context) GetConnectorAzureRepoApiAuthenticationArrayOutput
}

type GetConnectorAzureRepoApiAuthenticationArray []GetConnectorAzureRepoApiAuthenticationInput

func (GetConnectorAzureRepoApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoApiAuthentication)(nil)).Elem()
}

func (i GetConnectorAzureRepoApiAuthenticationArray) ToGetConnectorAzureRepoApiAuthenticationArrayOutput() GetConnectorAzureRepoApiAuthenticationArrayOutput {
	return i.ToGetConnectorAzureRepoApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoApiAuthenticationArray) ToGetConnectorAzureRepoApiAuthenticationArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoApiAuthenticationArrayOutput)
}

type GetConnectorAzureRepoApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoApiAuthentication)(nil)).Elem()
}

func (o GetConnectorAzureRepoApiAuthenticationOutput) ToGetConnectorAzureRepoApiAuthenticationOutput() GetConnectorAzureRepoApiAuthenticationOutput {
	return o
}

func (o GetConnectorAzureRepoApiAuthenticationOutput) ToGetConnectorAzureRepoApiAuthenticationOutputWithContext(ctx context.Context) GetConnectorAzureRepoApiAuthenticationOutput {
	return o
}

// Personal access token for interacting with the azure repo api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorAzureRepoApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetConnectorAzureRepoApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoApiAuthentication)(nil)).Elem()
}

func (o GetConnectorAzureRepoApiAuthenticationArrayOutput) ToGetConnectorAzureRepoApiAuthenticationArrayOutput() GetConnectorAzureRepoApiAuthenticationArrayOutput {
	return o
}

func (o GetConnectorAzureRepoApiAuthenticationArrayOutput) ToGetConnectorAzureRepoApiAuthenticationArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoApiAuthenticationArrayOutput {
	return o
}

func (o GetConnectorAzureRepoApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureRepoApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureRepoApiAuthentication {
		return vs[0].([]GetConnectorAzureRepoApiAuthentication)[vs[1].(int)]
	}).(GetConnectorAzureRepoApiAuthenticationOutput)
}

type GetConnectorAzureRepoCredential struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https []GetConnectorAzureRepoCredentialHttp `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes []GetConnectorAzureRepoCredentialSsh `pulumi:"sshes"`
}

// GetConnectorAzureRepoCredentialInput is an input type that accepts GetConnectorAzureRepoCredentialArgs and GetConnectorAzureRepoCredentialOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoCredentialInput` via:
//
//	GetConnectorAzureRepoCredentialArgs{...}
type GetConnectorAzureRepoCredentialInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoCredentialOutput() GetConnectorAzureRepoCredentialOutput
	ToGetConnectorAzureRepoCredentialOutputWithContext(context.Context) GetConnectorAzureRepoCredentialOutput
}

type GetConnectorAzureRepoCredentialArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https GetConnectorAzureRepoCredentialHttpArrayInput `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes GetConnectorAzureRepoCredentialSshArrayInput `pulumi:"sshes"`
}

func (GetConnectorAzureRepoCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoCredential)(nil)).Elem()
}

func (i GetConnectorAzureRepoCredentialArgs) ToGetConnectorAzureRepoCredentialOutput() GetConnectorAzureRepoCredentialOutput {
	return i.ToGetConnectorAzureRepoCredentialOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoCredentialArgs) ToGetConnectorAzureRepoCredentialOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoCredentialOutput)
}

// GetConnectorAzureRepoCredentialArrayInput is an input type that accepts GetConnectorAzureRepoCredentialArray and GetConnectorAzureRepoCredentialArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoCredentialArrayInput` via:
//
//	GetConnectorAzureRepoCredentialArray{ GetConnectorAzureRepoCredentialArgs{...} }
type GetConnectorAzureRepoCredentialArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoCredentialArrayOutput() GetConnectorAzureRepoCredentialArrayOutput
	ToGetConnectorAzureRepoCredentialArrayOutputWithContext(context.Context) GetConnectorAzureRepoCredentialArrayOutput
}

type GetConnectorAzureRepoCredentialArray []GetConnectorAzureRepoCredentialInput

func (GetConnectorAzureRepoCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoCredential)(nil)).Elem()
}

func (i GetConnectorAzureRepoCredentialArray) ToGetConnectorAzureRepoCredentialArrayOutput() GetConnectorAzureRepoCredentialArrayOutput {
	return i.ToGetConnectorAzureRepoCredentialArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoCredentialArray) ToGetConnectorAzureRepoCredentialArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoCredentialArrayOutput)
}

type GetConnectorAzureRepoCredentialOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoCredential)(nil)).Elem()
}

func (o GetConnectorAzureRepoCredentialOutput) ToGetConnectorAzureRepoCredentialOutput() GetConnectorAzureRepoCredentialOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialOutput) ToGetConnectorAzureRepoCredentialOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialOutput {
	return o
}

// Authenticate using Username and password over http(s) for the connection.
func (o GetConnectorAzureRepoCredentialOutput) Https() GetConnectorAzureRepoCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoCredential) []GetConnectorAzureRepoCredentialHttp { return v.Https }).(GetConnectorAzureRepoCredentialHttpArrayOutput)
}

// Authenticate using SSH for the connection.
func (o GetConnectorAzureRepoCredentialOutput) Sshes() GetConnectorAzureRepoCredentialSshArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoCredential) []GetConnectorAzureRepoCredentialSsh { return v.Sshes }).(GetConnectorAzureRepoCredentialSshArrayOutput)
}

type GetConnectorAzureRepoCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoCredential)(nil)).Elem()
}

func (o GetConnectorAzureRepoCredentialArrayOutput) ToGetConnectorAzureRepoCredentialArrayOutput() GetConnectorAzureRepoCredentialArrayOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialArrayOutput) ToGetConnectorAzureRepoCredentialArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialArrayOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureRepoCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureRepoCredential {
		return vs[0].([]GetConnectorAzureRepoCredential)[vs[1].(int)]
	}).(GetConnectorAzureRepoCredentialOutput)
}

type GetConnectorAzureRepoCredentialHttp struct {
	// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorAzureRepoCredentialHttpInput is an input type that accepts GetConnectorAzureRepoCredentialHttpArgs and GetConnectorAzureRepoCredentialHttpOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoCredentialHttpInput` via:
//
//	GetConnectorAzureRepoCredentialHttpArgs{...}
type GetConnectorAzureRepoCredentialHttpInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoCredentialHttpOutput() GetConnectorAzureRepoCredentialHttpOutput
	ToGetConnectorAzureRepoCredentialHttpOutputWithContext(context.Context) GetConnectorAzureRepoCredentialHttpOutput
}

type GetConnectorAzureRepoCredentialHttpArgs struct {
	// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorAzureRepoCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoCredentialHttp)(nil)).Elem()
}

func (i GetConnectorAzureRepoCredentialHttpArgs) ToGetConnectorAzureRepoCredentialHttpOutput() GetConnectorAzureRepoCredentialHttpOutput {
	return i.ToGetConnectorAzureRepoCredentialHttpOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoCredentialHttpArgs) ToGetConnectorAzureRepoCredentialHttpOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoCredentialHttpOutput)
}

// GetConnectorAzureRepoCredentialHttpArrayInput is an input type that accepts GetConnectorAzureRepoCredentialHttpArray and GetConnectorAzureRepoCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoCredentialHttpArrayInput` via:
//
//	GetConnectorAzureRepoCredentialHttpArray{ GetConnectorAzureRepoCredentialHttpArgs{...} }
type GetConnectorAzureRepoCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoCredentialHttpArrayOutput() GetConnectorAzureRepoCredentialHttpArrayOutput
	ToGetConnectorAzureRepoCredentialHttpArrayOutputWithContext(context.Context) GetConnectorAzureRepoCredentialHttpArrayOutput
}

type GetConnectorAzureRepoCredentialHttpArray []GetConnectorAzureRepoCredentialHttpInput

func (GetConnectorAzureRepoCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoCredentialHttp)(nil)).Elem()
}

func (i GetConnectorAzureRepoCredentialHttpArray) ToGetConnectorAzureRepoCredentialHttpArrayOutput() GetConnectorAzureRepoCredentialHttpArrayOutput {
	return i.ToGetConnectorAzureRepoCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoCredentialHttpArray) ToGetConnectorAzureRepoCredentialHttpArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoCredentialHttpArrayOutput)
}

type GetConnectorAzureRepoCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoCredentialHttp)(nil)).Elem()
}

func (o GetConnectorAzureRepoCredentialHttpOutput) ToGetConnectorAzureRepoCredentialHttpOutput() GetConnectorAzureRepoCredentialHttpOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialHttpOutput) ToGetConnectorAzureRepoCredentialHttpOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialHttpOutput {
	return o
}

// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorAzureRepoCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetConnectorAzureRepoCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorAzureRepoCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorAzureRepoCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoCredentialHttp)(nil)).Elem()
}

func (o GetConnectorAzureRepoCredentialHttpArrayOutput) ToGetConnectorAzureRepoCredentialHttpArrayOutput() GetConnectorAzureRepoCredentialHttpArrayOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialHttpArrayOutput) ToGetConnectorAzureRepoCredentialHttpArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialHttpArrayOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureRepoCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureRepoCredentialHttp {
		return vs[0].([]GetConnectorAzureRepoCredentialHttp)[vs[1].(int)]
	}).(GetConnectorAzureRepoCredentialHttpOutput)
}

type GetConnectorAzureRepoCredentialSsh struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetConnectorAzureRepoCredentialSshInput is an input type that accepts GetConnectorAzureRepoCredentialSshArgs and GetConnectorAzureRepoCredentialSshOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoCredentialSshInput` via:
//
//	GetConnectorAzureRepoCredentialSshArgs{...}
type GetConnectorAzureRepoCredentialSshInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoCredentialSshOutput() GetConnectorAzureRepoCredentialSshOutput
	ToGetConnectorAzureRepoCredentialSshOutputWithContext(context.Context) GetConnectorAzureRepoCredentialSshOutput
}

type GetConnectorAzureRepoCredentialSshArgs struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetConnectorAzureRepoCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoCredentialSsh)(nil)).Elem()
}

func (i GetConnectorAzureRepoCredentialSshArgs) ToGetConnectorAzureRepoCredentialSshOutput() GetConnectorAzureRepoCredentialSshOutput {
	return i.ToGetConnectorAzureRepoCredentialSshOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoCredentialSshArgs) ToGetConnectorAzureRepoCredentialSshOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoCredentialSshOutput)
}

// GetConnectorAzureRepoCredentialSshArrayInput is an input type that accepts GetConnectorAzureRepoCredentialSshArray and GetConnectorAzureRepoCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureRepoCredentialSshArrayInput` via:
//
//	GetConnectorAzureRepoCredentialSshArray{ GetConnectorAzureRepoCredentialSshArgs{...} }
type GetConnectorAzureRepoCredentialSshArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureRepoCredentialSshArrayOutput() GetConnectorAzureRepoCredentialSshArrayOutput
	ToGetConnectorAzureRepoCredentialSshArrayOutputWithContext(context.Context) GetConnectorAzureRepoCredentialSshArrayOutput
}

type GetConnectorAzureRepoCredentialSshArray []GetConnectorAzureRepoCredentialSshInput

func (GetConnectorAzureRepoCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoCredentialSsh)(nil)).Elem()
}

func (i GetConnectorAzureRepoCredentialSshArray) ToGetConnectorAzureRepoCredentialSshArrayOutput() GetConnectorAzureRepoCredentialSshArrayOutput {
	return i.ToGetConnectorAzureRepoCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureRepoCredentialSshArray) ToGetConnectorAzureRepoCredentialSshArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureRepoCredentialSshArrayOutput)
}

type GetConnectorAzureRepoCredentialSshOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureRepoCredentialSsh)(nil)).Elem()
}

func (o GetConnectorAzureRepoCredentialSshOutput) ToGetConnectorAzureRepoCredentialSshOutput() GetConnectorAzureRepoCredentialSshOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialSshOutput) ToGetConnectorAzureRepoCredentialSshOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialSshOutput {
	return o
}

// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorAzureRepoCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureRepoCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetConnectorAzureRepoCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureRepoCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureRepoCredentialSsh)(nil)).Elem()
}

func (o GetConnectorAzureRepoCredentialSshArrayOutput) ToGetConnectorAzureRepoCredentialSshArrayOutput() GetConnectorAzureRepoCredentialSshArrayOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialSshArrayOutput) ToGetConnectorAzureRepoCredentialSshArrayOutputWithContext(ctx context.Context) GetConnectorAzureRepoCredentialSshArrayOutput {
	return o
}

func (o GetConnectorAzureRepoCredentialSshArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureRepoCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureRepoCredentialSsh {
		return vs[0].([]GetConnectorAzureRepoCredentialSsh)[vs[1].(int)]
	}).(GetConnectorAzureRepoCredentialSshOutput)
}

type GetConnectorCustomSecretManagerTemplateInput struct {
	EnvironmentVariables []GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable `pulumi:"environmentVariables"`
}

// GetConnectorCustomSecretManagerTemplateInputInput is an input type that accepts GetConnectorCustomSecretManagerTemplateInputArgs and GetConnectorCustomSecretManagerTemplateInputOutput values.
// You can construct a concrete instance of `GetConnectorCustomSecretManagerTemplateInputInput` via:
//
//	GetConnectorCustomSecretManagerTemplateInputArgs{...}
type GetConnectorCustomSecretManagerTemplateInputInput interface {
	pulumi.Input

	ToGetConnectorCustomSecretManagerTemplateInputOutput() GetConnectorCustomSecretManagerTemplateInputOutput
	ToGetConnectorCustomSecretManagerTemplateInputOutputWithContext(context.Context) GetConnectorCustomSecretManagerTemplateInputOutput
}

type GetConnectorCustomSecretManagerTemplateInputArgs struct {
	EnvironmentVariables GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayInput `pulumi:"environmentVariables"`
}

func (GetConnectorCustomSecretManagerTemplateInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInput)(nil)).Elem()
}

func (i GetConnectorCustomSecretManagerTemplateInputArgs) ToGetConnectorCustomSecretManagerTemplateInputOutput() GetConnectorCustomSecretManagerTemplateInputOutput {
	return i.ToGetConnectorCustomSecretManagerTemplateInputOutputWithContext(context.Background())
}

func (i GetConnectorCustomSecretManagerTemplateInputArgs) ToGetConnectorCustomSecretManagerTemplateInputOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomSecretManagerTemplateInputOutput)
}

// GetConnectorCustomSecretManagerTemplateInputArrayInput is an input type that accepts GetConnectorCustomSecretManagerTemplateInputArray and GetConnectorCustomSecretManagerTemplateInputArrayOutput values.
// You can construct a concrete instance of `GetConnectorCustomSecretManagerTemplateInputArrayInput` via:
//
//	GetConnectorCustomSecretManagerTemplateInputArray{ GetConnectorCustomSecretManagerTemplateInputArgs{...} }
type GetConnectorCustomSecretManagerTemplateInputArrayInput interface {
	pulumi.Input

	ToGetConnectorCustomSecretManagerTemplateInputArrayOutput() GetConnectorCustomSecretManagerTemplateInputArrayOutput
	ToGetConnectorCustomSecretManagerTemplateInputArrayOutputWithContext(context.Context) GetConnectorCustomSecretManagerTemplateInputArrayOutput
}

type GetConnectorCustomSecretManagerTemplateInputArray []GetConnectorCustomSecretManagerTemplateInputInput

func (GetConnectorCustomSecretManagerTemplateInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomSecretManagerTemplateInput)(nil)).Elem()
}

func (i GetConnectorCustomSecretManagerTemplateInputArray) ToGetConnectorCustomSecretManagerTemplateInputArrayOutput() GetConnectorCustomSecretManagerTemplateInputArrayOutput {
	return i.ToGetConnectorCustomSecretManagerTemplateInputArrayOutputWithContext(context.Background())
}

func (i GetConnectorCustomSecretManagerTemplateInputArray) ToGetConnectorCustomSecretManagerTemplateInputArrayOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomSecretManagerTemplateInputArrayOutput)
}

type GetConnectorCustomSecretManagerTemplateInputOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomSecretManagerTemplateInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInput)(nil)).Elem()
}

func (o GetConnectorCustomSecretManagerTemplateInputOutput) ToGetConnectorCustomSecretManagerTemplateInputOutput() GetConnectorCustomSecretManagerTemplateInputOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputOutput) ToGetConnectorCustomSecretManagerTemplateInputOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputOutput) EnvironmentVariables() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v GetConnectorCustomSecretManagerTemplateInput) []GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable {
		return v.EnvironmentVariables
	}).(GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput)
}

type GetConnectorCustomSecretManagerTemplateInputArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomSecretManagerTemplateInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomSecretManagerTemplateInput)(nil)).Elem()
}

func (o GetConnectorCustomSecretManagerTemplateInputArrayOutput) ToGetConnectorCustomSecretManagerTemplateInputArrayOutput() GetConnectorCustomSecretManagerTemplateInputArrayOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputArrayOutput) ToGetConnectorCustomSecretManagerTemplateInputArrayOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputArrayOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputArrayOutput) Index(i pulumi.IntInput) GetConnectorCustomSecretManagerTemplateInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorCustomSecretManagerTemplateInput {
		return vs[0].([]GetConnectorCustomSecretManagerTemplateInput)[vs[1].(int)]
	}).(GetConnectorCustomSecretManagerTemplateInputOutput)
}

type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable struct {
	Default bool   `pulumi:"default"`
	Name    string `pulumi:"name"`
	Type    string `pulumi:"type"`
	Value   string `pulumi:"value"`
}

// GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableInput is an input type that accepts GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs and GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableInput` via:
//
//	GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs{...}
type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableInput interface {
	pulumi.Input

	ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput
	ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutputWithContext(context.Context) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput
}

type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs struct {
	Default pulumi.BoolInput   `pulumi:"default"`
	Name    pulumi.StringInput `pulumi:"name"`
	Type    pulumi.StringInput `pulumi:"type"`
	Value   pulumi.StringInput `pulumi:"value"`
}

func (GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable)(nil)).Elem()
}

func (i GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput {
	return i.ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput)
}

// GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayInput is an input type that accepts GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray and GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayInput` via:
//
//	GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray{ GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs{...} }
type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput
	ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutputWithContext(context.Context) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput
}

type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray []GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableInput

func (GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable)(nil)).Elem()
}

func (i GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput {
	return i.ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput)
}

type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable)(nil)).Elem()
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable) bool { return v.Default }).(pulumi.BoolOutput)
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable)(nil)).Elem()
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput() GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput) ToGetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput {
	return o
}

func (o GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable {
		return vs[0].([]GetConnectorCustomSecretManagerTemplateInputEnvironmentVariable)[vs[1].(int)]
	}).(GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput)
}

type GetConnectorCustomhealthsourceHeader struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef string `pulumi:"encryptedValueRef"`
	// Key.
	Key string `pulumi:"key"`
	// Value.
	Value string `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted bool `pulumi:"valueEncrypted"`
}

// GetConnectorCustomhealthsourceHeaderInput is an input type that accepts GetConnectorCustomhealthsourceHeaderArgs and GetConnectorCustomhealthsourceHeaderOutput values.
// You can construct a concrete instance of `GetConnectorCustomhealthsourceHeaderInput` via:
//
//	GetConnectorCustomhealthsourceHeaderArgs{...}
type GetConnectorCustomhealthsourceHeaderInput interface {
	pulumi.Input

	ToGetConnectorCustomhealthsourceHeaderOutput() GetConnectorCustomhealthsourceHeaderOutput
	ToGetConnectorCustomhealthsourceHeaderOutputWithContext(context.Context) GetConnectorCustomhealthsourceHeaderOutput
}

type GetConnectorCustomhealthsourceHeaderArgs struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef pulumi.StringInput `pulumi:"encryptedValueRef"`
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Value.
	Value pulumi.StringInput `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted pulumi.BoolInput `pulumi:"valueEncrypted"`
}

func (GetConnectorCustomhealthsourceHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomhealthsourceHeader)(nil)).Elem()
}

func (i GetConnectorCustomhealthsourceHeaderArgs) ToGetConnectorCustomhealthsourceHeaderOutput() GetConnectorCustomhealthsourceHeaderOutput {
	return i.ToGetConnectorCustomhealthsourceHeaderOutputWithContext(context.Background())
}

func (i GetConnectorCustomhealthsourceHeaderArgs) ToGetConnectorCustomhealthsourceHeaderOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomhealthsourceHeaderOutput)
}

// GetConnectorCustomhealthsourceHeaderArrayInput is an input type that accepts GetConnectorCustomhealthsourceHeaderArray and GetConnectorCustomhealthsourceHeaderArrayOutput values.
// You can construct a concrete instance of `GetConnectorCustomhealthsourceHeaderArrayInput` via:
//
//	GetConnectorCustomhealthsourceHeaderArray{ GetConnectorCustomhealthsourceHeaderArgs{...} }
type GetConnectorCustomhealthsourceHeaderArrayInput interface {
	pulumi.Input

	ToGetConnectorCustomhealthsourceHeaderArrayOutput() GetConnectorCustomhealthsourceHeaderArrayOutput
	ToGetConnectorCustomhealthsourceHeaderArrayOutputWithContext(context.Context) GetConnectorCustomhealthsourceHeaderArrayOutput
}

type GetConnectorCustomhealthsourceHeaderArray []GetConnectorCustomhealthsourceHeaderInput

func (GetConnectorCustomhealthsourceHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomhealthsourceHeader)(nil)).Elem()
}

func (i GetConnectorCustomhealthsourceHeaderArray) ToGetConnectorCustomhealthsourceHeaderArrayOutput() GetConnectorCustomhealthsourceHeaderArrayOutput {
	return i.ToGetConnectorCustomhealthsourceHeaderArrayOutputWithContext(context.Background())
}

func (i GetConnectorCustomhealthsourceHeaderArray) ToGetConnectorCustomhealthsourceHeaderArrayOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomhealthsourceHeaderArrayOutput)
}

type GetConnectorCustomhealthsourceHeaderOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomhealthsourceHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomhealthsourceHeader)(nil)).Elem()
}

func (o GetConnectorCustomhealthsourceHeaderOutput) ToGetConnectorCustomhealthsourceHeaderOutput() GetConnectorCustomhealthsourceHeaderOutput {
	return o
}

func (o GetConnectorCustomhealthsourceHeaderOutput) ToGetConnectorCustomhealthsourceHeaderOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceHeaderOutput {
	return o
}

// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorCustomhealthsourceHeaderOutput) EncryptedValueRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceHeader) string { return v.EncryptedValueRef }).(pulumi.StringOutput)
}

// Key.
func (o GetConnectorCustomhealthsourceHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceHeader) string { return v.Key }).(pulumi.StringOutput)
}

// Value.
func (o GetConnectorCustomhealthsourceHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceHeader) string { return v.Value }).(pulumi.StringOutput)
}

// Encrypted value.
func (o GetConnectorCustomhealthsourceHeaderOutput) ValueEncrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceHeader) bool { return v.ValueEncrypted }).(pulumi.BoolOutput)
}

type GetConnectorCustomhealthsourceHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomhealthsourceHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomhealthsourceHeader)(nil)).Elem()
}

func (o GetConnectorCustomhealthsourceHeaderArrayOutput) ToGetConnectorCustomhealthsourceHeaderArrayOutput() GetConnectorCustomhealthsourceHeaderArrayOutput {
	return o
}

func (o GetConnectorCustomhealthsourceHeaderArrayOutput) ToGetConnectorCustomhealthsourceHeaderArrayOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceHeaderArrayOutput {
	return o
}

func (o GetConnectorCustomhealthsourceHeaderArrayOutput) Index(i pulumi.IntInput) GetConnectorCustomhealthsourceHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorCustomhealthsourceHeader {
		return vs[0].([]GetConnectorCustomhealthsourceHeader)[vs[1].(int)]
	}).(GetConnectorCustomhealthsourceHeaderOutput)
}

type GetConnectorCustomhealthsourceParam struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef string `pulumi:"encryptedValueRef"`
	// Key.
	Key string `pulumi:"key"`
	// Value.
	Value string `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted bool `pulumi:"valueEncrypted"`
}

// GetConnectorCustomhealthsourceParamInput is an input type that accepts GetConnectorCustomhealthsourceParamArgs and GetConnectorCustomhealthsourceParamOutput values.
// You can construct a concrete instance of `GetConnectorCustomhealthsourceParamInput` via:
//
//	GetConnectorCustomhealthsourceParamArgs{...}
type GetConnectorCustomhealthsourceParamInput interface {
	pulumi.Input

	ToGetConnectorCustomhealthsourceParamOutput() GetConnectorCustomhealthsourceParamOutput
	ToGetConnectorCustomhealthsourceParamOutputWithContext(context.Context) GetConnectorCustomhealthsourceParamOutput
}

type GetConnectorCustomhealthsourceParamArgs struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef pulumi.StringInput `pulumi:"encryptedValueRef"`
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Value.
	Value pulumi.StringInput `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted pulumi.BoolInput `pulumi:"valueEncrypted"`
}

func (GetConnectorCustomhealthsourceParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomhealthsourceParam)(nil)).Elem()
}

func (i GetConnectorCustomhealthsourceParamArgs) ToGetConnectorCustomhealthsourceParamOutput() GetConnectorCustomhealthsourceParamOutput {
	return i.ToGetConnectorCustomhealthsourceParamOutputWithContext(context.Background())
}

func (i GetConnectorCustomhealthsourceParamArgs) ToGetConnectorCustomhealthsourceParamOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomhealthsourceParamOutput)
}

// GetConnectorCustomhealthsourceParamArrayInput is an input type that accepts GetConnectorCustomhealthsourceParamArray and GetConnectorCustomhealthsourceParamArrayOutput values.
// You can construct a concrete instance of `GetConnectorCustomhealthsourceParamArrayInput` via:
//
//	GetConnectorCustomhealthsourceParamArray{ GetConnectorCustomhealthsourceParamArgs{...} }
type GetConnectorCustomhealthsourceParamArrayInput interface {
	pulumi.Input

	ToGetConnectorCustomhealthsourceParamArrayOutput() GetConnectorCustomhealthsourceParamArrayOutput
	ToGetConnectorCustomhealthsourceParamArrayOutputWithContext(context.Context) GetConnectorCustomhealthsourceParamArrayOutput
}

type GetConnectorCustomhealthsourceParamArray []GetConnectorCustomhealthsourceParamInput

func (GetConnectorCustomhealthsourceParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomhealthsourceParam)(nil)).Elem()
}

func (i GetConnectorCustomhealthsourceParamArray) ToGetConnectorCustomhealthsourceParamArrayOutput() GetConnectorCustomhealthsourceParamArrayOutput {
	return i.ToGetConnectorCustomhealthsourceParamArrayOutputWithContext(context.Background())
}

func (i GetConnectorCustomhealthsourceParamArray) ToGetConnectorCustomhealthsourceParamArrayOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorCustomhealthsourceParamArrayOutput)
}

type GetConnectorCustomhealthsourceParamOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomhealthsourceParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorCustomhealthsourceParam)(nil)).Elem()
}

func (o GetConnectorCustomhealthsourceParamOutput) ToGetConnectorCustomhealthsourceParamOutput() GetConnectorCustomhealthsourceParamOutput {
	return o
}

func (o GetConnectorCustomhealthsourceParamOutput) ToGetConnectorCustomhealthsourceParamOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceParamOutput {
	return o
}

// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorCustomhealthsourceParamOutput) EncryptedValueRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceParam) string { return v.EncryptedValueRef }).(pulumi.StringOutput)
}

// Key.
func (o GetConnectorCustomhealthsourceParamOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceParam) string { return v.Key }).(pulumi.StringOutput)
}

// Value.
func (o GetConnectorCustomhealthsourceParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceParam) string { return v.Value }).(pulumi.StringOutput)
}

// Encrypted value.
func (o GetConnectorCustomhealthsourceParamOutput) ValueEncrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectorCustomhealthsourceParam) bool { return v.ValueEncrypted }).(pulumi.BoolOutput)
}

type GetConnectorCustomhealthsourceParamArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorCustomhealthsourceParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorCustomhealthsourceParam)(nil)).Elem()
}

func (o GetConnectorCustomhealthsourceParamArrayOutput) ToGetConnectorCustomhealthsourceParamArrayOutput() GetConnectorCustomhealthsourceParamArrayOutput {
	return o
}

func (o GetConnectorCustomhealthsourceParamArrayOutput) ToGetConnectorCustomhealthsourceParamArrayOutputWithContext(ctx context.Context) GetConnectorCustomhealthsourceParamArrayOutput {
	return o
}

func (o GetConnectorCustomhealthsourceParamArrayOutput) Index(i pulumi.IntInput) GetConnectorCustomhealthsourceParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorCustomhealthsourceParam {
		return vs[0].([]GetConnectorCustomhealthsourceParam)[vs[1].(int)]
	}).(GetConnectorCustomhealthsourceParamOutput)
}

type GetConnectorGcpKmsManual struct {
	// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Credentials string `pulumi:"credentials"`
	// The delegates to connect with.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetConnectorGcpKmsManualInput is an input type that accepts GetConnectorGcpKmsManualArgs and GetConnectorGcpKmsManualOutput values.
// You can construct a concrete instance of `GetConnectorGcpKmsManualInput` via:
//
//	GetConnectorGcpKmsManualArgs{...}
type GetConnectorGcpKmsManualInput interface {
	pulumi.Input

	ToGetConnectorGcpKmsManualOutput() GetConnectorGcpKmsManualOutput
	ToGetConnectorGcpKmsManualOutputWithContext(context.Context) GetConnectorGcpKmsManualOutput
}

type GetConnectorGcpKmsManualArgs struct {
	// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Credentials pulumi.StringInput `pulumi:"credentials"`
	// The delegates to connect with.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetConnectorGcpKmsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorGcpKmsManual)(nil)).Elem()
}

func (i GetConnectorGcpKmsManualArgs) ToGetConnectorGcpKmsManualOutput() GetConnectorGcpKmsManualOutput {
	return i.ToGetConnectorGcpKmsManualOutputWithContext(context.Background())
}

func (i GetConnectorGcpKmsManualArgs) ToGetConnectorGcpKmsManualOutputWithContext(ctx context.Context) GetConnectorGcpKmsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorGcpKmsManualOutput)
}

// GetConnectorGcpKmsManualArrayInput is an input type that accepts GetConnectorGcpKmsManualArray and GetConnectorGcpKmsManualArrayOutput values.
// You can construct a concrete instance of `GetConnectorGcpKmsManualArrayInput` via:
//
//	GetConnectorGcpKmsManualArray{ GetConnectorGcpKmsManualArgs{...} }
type GetConnectorGcpKmsManualArrayInput interface {
	pulumi.Input

	ToGetConnectorGcpKmsManualArrayOutput() GetConnectorGcpKmsManualArrayOutput
	ToGetConnectorGcpKmsManualArrayOutputWithContext(context.Context) GetConnectorGcpKmsManualArrayOutput
}

type GetConnectorGcpKmsManualArray []GetConnectorGcpKmsManualInput

func (GetConnectorGcpKmsManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorGcpKmsManual)(nil)).Elem()
}

func (i GetConnectorGcpKmsManualArray) ToGetConnectorGcpKmsManualArrayOutput() GetConnectorGcpKmsManualArrayOutput {
	return i.ToGetConnectorGcpKmsManualArrayOutputWithContext(context.Background())
}

func (i GetConnectorGcpKmsManualArray) ToGetConnectorGcpKmsManualArrayOutputWithContext(ctx context.Context) GetConnectorGcpKmsManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorGcpKmsManualArrayOutput)
}

type GetConnectorGcpKmsManualOutput struct{ *pulumi.OutputState }

func (GetConnectorGcpKmsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorGcpKmsManual)(nil)).Elem()
}

func (o GetConnectorGcpKmsManualOutput) ToGetConnectorGcpKmsManualOutput() GetConnectorGcpKmsManualOutput {
	return o
}

func (o GetConnectorGcpKmsManualOutput) ToGetConnectorGcpKmsManualOutputWithContext(ctx context.Context) GetConnectorGcpKmsManualOutput {
	return o
}

// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorGcpKmsManualOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsManual) string { return v.Credentials }).(pulumi.StringOutput)
}

// The delegates to connect with.
func (o GetConnectorGcpKmsManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetConnectorGcpKmsManualArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorGcpKmsManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorGcpKmsManual)(nil)).Elem()
}

func (o GetConnectorGcpKmsManualArrayOutput) ToGetConnectorGcpKmsManualArrayOutput() GetConnectorGcpKmsManualArrayOutput {
	return o
}

func (o GetConnectorGcpKmsManualArrayOutput) ToGetConnectorGcpKmsManualArrayOutputWithContext(ctx context.Context) GetConnectorGcpKmsManualArrayOutput {
	return o
}

func (o GetConnectorGcpKmsManualArrayOutput) Index(i pulumi.IntInput) GetConnectorGcpKmsManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorGcpKmsManual {
		return vs[0].([]GetConnectorGcpKmsManual)[vs[1].(int)]
	}).(GetConnectorGcpKmsManualOutput)
}

type GetConnectorGcpKmsOidcAuthentication struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// The project number of the GCP project that is used to create the workload identity..
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The OIDC provider ID value configured in GCP.
	ProviderId string `pulumi:"providerId"`
	// The service account linked to workload identity pool while setting GCP workload identity provider.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// The workload pool ID value created in GCP.
	WorkloadPoolId string `pulumi:"workloadPoolId"`
}

// GetConnectorGcpKmsOidcAuthenticationInput is an input type that accepts GetConnectorGcpKmsOidcAuthenticationArgs and GetConnectorGcpKmsOidcAuthenticationOutput values.
// You can construct a concrete instance of `GetConnectorGcpKmsOidcAuthenticationInput` via:
//
//	GetConnectorGcpKmsOidcAuthenticationArgs{...}
type GetConnectorGcpKmsOidcAuthenticationInput interface {
	pulumi.Input

	ToGetConnectorGcpKmsOidcAuthenticationOutput() GetConnectorGcpKmsOidcAuthenticationOutput
	ToGetConnectorGcpKmsOidcAuthenticationOutputWithContext(context.Context) GetConnectorGcpKmsOidcAuthenticationOutput
}

type GetConnectorGcpKmsOidcAuthenticationArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// The project number of the GCP project that is used to create the workload identity..
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The OIDC provider ID value configured in GCP.
	ProviderId pulumi.StringInput `pulumi:"providerId"`
	// The service account linked to workload identity pool while setting GCP workload identity provider.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
	// The workload pool ID value created in GCP.
	WorkloadPoolId pulumi.StringInput `pulumi:"workloadPoolId"`
}

func (GetConnectorGcpKmsOidcAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorGcpKmsOidcAuthentication)(nil)).Elem()
}

func (i GetConnectorGcpKmsOidcAuthenticationArgs) ToGetConnectorGcpKmsOidcAuthenticationOutput() GetConnectorGcpKmsOidcAuthenticationOutput {
	return i.ToGetConnectorGcpKmsOidcAuthenticationOutputWithContext(context.Background())
}

func (i GetConnectorGcpKmsOidcAuthenticationArgs) ToGetConnectorGcpKmsOidcAuthenticationOutputWithContext(ctx context.Context) GetConnectorGcpKmsOidcAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorGcpKmsOidcAuthenticationOutput)
}

// GetConnectorGcpKmsOidcAuthenticationArrayInput is an input type that accepts GetConnectorGcpKmsOidcAuthenticationArray and GetConnectorGcpKmsOidcAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetConnectorGcpKmsOidcAuthenticationArrayInput` via:
//
//	GetConnectorGcpKmsOidcAuthenticationArray{ GetConnectorGcpKmsOidcAuthenticationArgs{...} }
type GetConnectorGcpKmsOidcAuthenticationArrayInput interface {
	pulumi.Input

	ToGetConnectorGcpKmsOidcAuthenticationArrayOutput() GetConnectorGcpKmsOidcAuthenticationArrayOutput
	ToGetConnectorGcpKmsOidcAuthenticationArrayOutputWithContext(context.Context) GetConnectorGcpKmsOidcAuthenticationArrayOutput
}

type GetConnectorGcpKmsOidcAuthenticationArray []GetConnectorGcpKmsOidcAuthenticationInput

func (GetConnectorGcpKmsOidcAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorGcpKmsOidcAuthentication)(nil)).Elem()
}

func (i GetConnectorGcpKmsOidcAuthenticationArray) ToGetConnectorGcpKmsOidcAuthenticationArrayOutput() GetConnectorGcpKmsOidcAuthenticationArrayOutput {
	return i.ToGetConnectorGcpKmsOidcAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetConnectorGcpKmsOidcAuthenticationArray) ToGetConnectorGcpKmsOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetConnectorGcpKmsOidcAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorGcpKmsOidcAuthenticationArrayOutput)
}

type GetConnectorGcpKmsOidcAuthenticationOutput struct{ *pulumi.OutputState }

func (GetConnectorGcpKmsOidcAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorGcpKmsOidcAuthentication)(nil)).Elem()
}

func (o GetConnectorGcpKmsOidcAuthenticationOutput) ToGetConnectorGcpKmsOidcAuthenticationOutput() GetConnectorGcpKmsOidcAuthenticationOutput {
	return o
}

func (o GetConnectorGcpKmsOidcAuthenticationOutput) ToGetConnectorGcpKmsOidcAuthenticationOutputWithContext(ctx context.Context) GetConnectorGcpKmsOidcAuthenticationOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GetConnectorGcpKmsOidcAuthenticationOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsOidcAuthentication) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// The project number of the GCP project that is used to create the workload identity..
func (o GetConnectorGcpKmsOidcAuthenticationOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsOidcAuthentication) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The OIDC provider ID value configured in GCP.
func (o GetConnectorGcpKmsOidcAuthenticationOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsOidcAuthentication) string { return v.ProviderId }).(pulumi.StringOutput)
}

// The service account linked to workload identity pool while setting GCP workload identity provider.
func (o GetConnectorGcpKmsOidcAuthenticationOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsOidcAuthentication) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The workload pool ID value created in GCP.
func (o GetConnectorGcpKmsOidcAuthenticationOutput) WorkloadPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpKmsOidcAuthentication) string { return v.WorkloadPoolId }).(pulumi.StringOutput)
}

type GetConnectorGcpKmsOidcAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorGcpKmsOidcAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorGcpKmsOidcAuthentication)(nil)).Elem()
}

func (o GetConnectorGcpKmsOidcAuthenticationArrayOutput) ToGetConnectorGcpKmsOidcAuthenticationArrayOutput() GetConnectorGcpKmsOidcAuthenticationArrayOutput {
	return o
}

func (o GetConnectorGcpKmsOidcAuthenticationArrayOutput) ToGetConnectorGcpKmsOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetConnectorGcpKmsOidcAuthenticationArrayOutput {
	return o
}

func (o GetConnectorGcpKmsOidcAuthenticationArrayOutput) Index(i pulumi.IntInput) GetConnectorGcpKmsOidcAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorGcpKmsOidcAuthentication {
		return vs[0].([]GetConnectorGcpKmsOidcAuthentication)[vs[1].(int)]
	}).(GetConnectorGcpKmsOidcAuthenticationOutput)
}

type GetConnectorJdbcCredential struct {
	// Authentication types for JDBC connector
	AuthType string `pulumi:"authType"`
	// The reference to the Harness secret containing the password to use for the database server. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Authenticate using service account.
	ServiceAccounts []GetConnectorJdbcCredentialServiceAccount `pulumi:"serviceAccounts"`
	// The username to use for the database server.
	Username string `pulumi:"username"`
	// Authenticate using username password.
	UsernamePasswords []GetConnectorJdbcCredentialUsernamePassword `pulumi:"usernamePasswords"`
	// The reference to the Harness secret containing the username to use for the database server. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorJdbcCredentialInput is an input type that accepts GetConnectorJdbcCredentialArgs and GetConnectorJdbcCredentialOutput values.
// You can construct a concrete instance of `GetConnectorJdbcCredentialInput` via:
//
//	GetConnectorJdbcCredentialArgs{...}
type GetConnectorJdbcCredentialInput interface {
	pulumi.Input

	ToGetConnectorJdbcCredentialOutput() GetConnectorJdbcCredentialOutput
	ToGetConnectorJdbcCredentialOutputWithContext(context.Context) GetConnectorJdbcCredentialOutput
}

type GetConnectorJdbcCredentialArgs struct {
	// Authentication types for JDBC connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// The reference to the Harness secret containing the password to use for the database server. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Authenticate using service account.
	ServiceAccounts GetConnectorJdbcCredentialServiceAccountArrayInput `pulumi:"serviceAccounts"`
	// The username to use for the database server.
	Username pulumi.StringInput `pulumi:"username"`
	// Authenticate using username password.
	UsernamePasswords GetConnectorJdbcCredentialUsernamePasswordArrayInput `pulumi:"usernamePasswords"`
	// The reference to the Harness secret containing the username to use for the database server. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorJdbcCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJdbcCredential)(nil)).Elem()
}

func (i GetConnectorJdbcCredentialArgs) ToGetConnectorJdbcCredentialOutput() GetConnectorJdbcCredentialOutput {
	return i.ToGetConnectorJdbcCredentialOutputWithContext(context.Background())
}

func (i GetConnectorJdbcCredentialArgs) ToGetConnectorJdbcCredentialOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJdbcCredentialOutput)
}

// GetConnectorJdbcCredentialArrayInput is an input type that accepts GetConnectorJdbcCredentialArray and GetConnectorJdbcCredentialArrayOutput values.
// You can construct a concrete instance of `GetConnectorJdbcCredentialArrayInput` via:
//
//	GetConnectorJdbcCredentialArray{ GetConnectorJdbcCredentialArgs{...} }
type GetConnectorJdbcCredentialArrayInput interface {
	pulumi.Input

	ToGetConnectorJdbcCredentialArrayOutput() GetConnectorJdbcCredentialArrayOutput
	ToGetConnectorJdbcCredentialArrayOutputWithContext(context.Context) GetConnectorJdbcCredentialArrayOutput
}

type GetConnectorJdbcCredentialArray []GetConnectorJdbcCredentialInput

func (GetConnectorJdbcCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJdbcCredential)(nil)).Elem()
}

func (i GetConnectorJdbcCredentialArray) ToGetConnectorJdbcCredentialArrayOutput() GetConnectorJdbcCredentialArrayOutput {
	return i.ToGetConnectorJdbcCredentialArrayOutputWithContext(context.Background())
}

func (i GetConnectorJdbcCredentialArray) ToGetConnectorJdbcCredentialArrayOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJdbcCredentialArrayOutput)
}

type GetConnectorJdbcCredentialOutput struct{ *pulumi.OutputState }

func (GetConnectorJdbcCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJdbcCredential)(nil)).Elem()
}

func (o GetConnectorJdbcCredentialOutput) ToGetConnectorJdbcCredentialOutput() GetConnectorJdbcCredentialOutput {
	return o
}

func (o GetConnectorJdbcCredentialOutput) ToGetConnectorJdbcCredentialOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialOutput {
	return o
}

// Authentication types for JDBC connector
func (o GetConnectorJdbcCredentialOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredential) string { return v.AuthType }).(pulumi.StringOutput)
}

// The reference to the Harness secret containing the password to use for the database server. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorJdbcCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Authenticate using service account.
func (o GetConnectorJdbcCredentialOutput) ServiceAccounts() GetConnectorJdbcCredentialServiceAccountArrayOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredential) []GetConnectorJdbcCredentialServiceAccount {
		return v.ServiceAccounts
	}).(GetConnectorJdbcCredentialServiceAccountArrayOutput)
}

// The username to use for the database server.
func (o GetConnectorJdbcCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredential) string { return v.Username }).(pulumi.StringOutput)
}

// Authenticate using username password.
func (o GetConnectorJdbcCredentialOutput) UsernamePasswords() GetConnectorJdbcCredentialUsernamePasswordArrayOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredential) []GetConnectorJdbcCredentialUsernamePassword {
		return v.UsernamePasswords
	}).(GetConnectorJdbcCredentialUsernamePasswordArrayOutput)
}

// The reference to the Harness secret containing the username to use for the database server. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorJdbcCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorJdbcCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorJdbcCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJdbcCredential)(nil)).Elem()
}

func (o GetConnectorJdbcCredentialArrayOutput) ToGetConnectorJdbcCredentialArrayOutput() GetConnectorJdbcCredentialArrayOutput {
	return o
}

func (o GetConnectorJdbcCredentialArrayOutput) ToGetConnectorJdbcCredentialArrayOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialArrayOutput {
	return o
}

func (o GetConnectorJdbcCredentialArrayOutput) Index(i pulumi.IntInput) GetConnectorJdbcCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorJdbcCredential {
		return vs[0].([]GetConnectorJdbcCredential)[vs[1].(int)]
	}).(GetConnectorJdbcCredentialOutput)
}

type GetConnectorJdbcCredentialServiceAccount struct {
	// Reference to a secret containing the token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// GetConnectorJdbcCredentialServiceAccountInput is an input type that accepts GetConnectorJdbcCredentialServiceAccountArgs and GetConnectorJdbcCredentialServiceAccountOutput values.
// You can construct a concrete instance of `GetConnectorJdbcCredentialServiceAccountInput` via:
//
//	GetConnectorJdbcCredentialServiceAccountArgs{...}
type GetConnectorJdbcCredentialServiceAccountInput interface {
	pulumi.Input

	ToGetConnectorJdbcCredentialServiceAccountOutput() GetConnectorJdbcCredentialServiceAccountOutput
	ToGetConnectorJdbcCredentialServiceAccountOutputWithContext(context.Context) GetConnectorJdbcCredentialServiceAccountOutput
}

type GetConnectorJdbcCredentialServiceAccountArgs struct {
	// Reference to a secret containing the token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetConnectorJdbcCredentialServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJdbcCredentialServiceAccount)(nil)).Elem()
}

func (i GetConnectorJdbcCredentialServiceAccountArgs) ToGetConnectorJdbcCredentialServiceAccountOutput() GetConnectorJdbcCredentialServiceAccountOutput {
	return i.ToGetConnectorJdbcCredentialServiceAccountOutputWithContext(context.Background())
}

func (i GetConnectorJdbcCredentialServiceAccountArgs) ToGetConnectorJdbcCredentialServiceAccountOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJdbcCredentialServiceAccountOutput)
}

// GetConnectorJdbcCredentialServiceAccountArrayInput is an input type that accepts GetConnectorJdbcCredentialServiceAccountArray and GetConnectorJdbcCredentialServiceAccountArrayOutput values.
// You can construct a concrete instance of `GetConnectorJdbcCredentialServiceAccountArrayInput` via:
//
//	GetConnectorJdbcCredentialServiceAccountArray{ GetConnectorJdbcCredentialServiceAccountArgs{...} }
type GetConnectorJdbcCredentialServiceAccountArrayInput interface {
	pulumi.Input

	ToGetConnectorJdbcCredentialServiceAccountArrayOutput() GetConnectorJdbcCredentialServiceAccountArrayOutput
	ToGetConnectorJdbcCredentialServiceAccountArrayOutputWithContext(context.Context) GetConnectorJdbcCredentialServiceAccountArrayOutput
}

type GetConnectorJdbcCredentialServiceAccountArray []GetConnectorJdbcCredentialServiceAccountInput

func (GetConnectorJdbcCredentialServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJdbcCredentialServiceAccount)(nil)).Elem()
}

func (i GetConnectorJdbcCredentialServiceAccountArray) ToGetConnectorJdbcCredentialServiceAccountArrayOutput() GetConnectorJdbcCredentialServiceAccountArrayOutput {
	return i.ToGetConnectorJdbcCredentialServiceAccountArrayOutputWithContext(context.Background())
}

func (i GetConnectorJdbcCredentialServiceAccountArray) ToGetConnectorJdbcCredentialServiceAccountArrayOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJdbcCredentialServiceAccountArrayOutput)
}

type GetConnectorJdbcCredentialServiceAccountOutput struct{ *pulumi.OutputState }

func (GetConnectorJdbcCredentialServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJdbcCredentialServiceAccount)(nil)).Elem()
}

func (o GetConnectorJdbcCredentialServiceAccountOutput) ToGetConnectorJdbcCredentialServiceAccountOutput() GetConnectorJdbcCredentialServiceAccountOutput {
	return o
}

func (o GetConnectorJdbcCredentialServiceAccountOutput) ToGetConnectorJdbcCredentialServiceAccountOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialServiceAccountOutput {
	return o
}

// Reference to a secret containing the token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorJdbcCredentialServiceAccountOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredentialServiceAccount) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetConnectorJdbcCredentialServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorJdbcCredentialServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJdbcCredentialServiceAccount)(nil)).Elem()
}

func (o GetConnectorJdbcCredentialServiceAccountArrayOutput) ToGetConnectorJdbcCredentialServiceAccountArrayOutput() GetConnectorJdbcCredentialServiceAccountArrayOutput {
	return o
}

func (o GetConnectorJdbcCredentialServiceAccountArrayOutput) ToGetConnectorJdbcCredentialServiceAccountArrayOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialServiceAccountArrayOutput {
	return o
}

func (o GetConnectorJdbcCredentialServiceAccountArrayOutput) Index(i pulumi.IntInput) GetConnectorJdbcCredentialServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorJdbcCredentialServiceAccount {
		return vs[0].([]GetConnectorJdbcCredentialServiceAccount)[vs[1].(int)]
	}).(GetConnectorJdbcCredentialServiceAccountOutput)
}

type GetConnectorJdbcCredentialUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorJdbcCredentialUsernamePasswordInput is an input type that accepts GetConnectorJdbcCredentialUsernamePasswordArgs and GetConnectorJdbcCredentialUsernamePasswordOutput values.
// You can construct a concrete instance of `GetConnectorJdbcCredentialUsernamePasswordInput` via:
//
//	GetConnectorJdbcCredentialUsernamePasswordArgs{...}
type GetConnectorJdbcCredentialUsernamePasswordInput interface {
	pulumi.Input

	ToGetConnectorJdbcCredentialUsernamePasswordOutput() GetConnectorJdbcCredentialUsernamePasswordOutput
	ToGetConnectorJdbcCredentialUsernamePasswordOutputWithContext(context.Context) GetConnectorJdbcCredentialUsernamePasswordOutput
}

type GetConnectorJdbcCredentialUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorJdbcCredentialUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJdbcCredentialUsernamePassword)(nil)).Elem()
}

func (i GetConnectorJdbcCredentialUsernamePasswordArgs) ToGetConnectorJdbcCredentialUsernamePasswordOutput() GetConnectorJdbcCredentialUsernamePasswordOutput {
	return i.ToGetConnectorJdbcCredentialUsernamePasswordOutputWithContext(context.Background())
}

func (i GetConnectorJdbcCredentialUsernamePasswordArgs) ToGetConnectorJdbcCredentialUsernamePasswordOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJdbcCredentialUsernamePasswordOutput)
}

// GetConnectorJdbcCredentialUsernamePasswordArrayInput is an input type that accepts GetConnectorJdbcCredentialUsernamePasswordArray and GetConnectorJdbcCredentialUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetConnectorJdbcCredentialUsernamePasswordArrayInput` via:
//
//	GetConnectorJdbcCredentialUsernamePasswordArray{ GetConnectorJdbcCredentialUsernamePasswordArgs{...} }
type GetConnectorJdbcCredentialUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetConnectorJdbcCredentialUsernamePasswordArrayOutput() GetConnectorJdbcCredentialUsernamePasswordArrayOutput
	ToGetConnectorJdbcCredentialUsernamePasswordArrayOutputWithContext(context.Context) GetConnectorJdbcCredentialUsernamePasswordArrayOutput
}

type GetConnectorJdbcCredentialUsernamePasswordArray []GetConnectorJdbcCredentialUsernamePasswordInput

func (GetConnectorJdbcCredentialUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJdbcCredentialUsernamePassword)(nil)).Elem()
}

func (i GetConnectorJdbcCredentialUsernamePasswordArray) ToGetConnectorJdbcCredentialUsernamePasswordArrayOutput() GetConnectorJdbcCredentialUsernamePasswordArrayOutput {
	return i.ToGetConnectorJdbcCredentialUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetConnectorJdbcCredentialUsernamePasswordArray) ToGetConnectorJdbcCredentialUsernamePasswordArrayOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJdbcCredentialUsernamePasswordArrayOutput)
}

type GetConnectorJdbcCredentialUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetConnectorJdbcCredentialUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJdbcCredentialUsernamePassword)(nil)).Elem()
}

func (o GetConnectorJdbcCredentialUsernamePasswordOutput) ToGetConnectorJdbcCredentialUsernamePasswordOutput() GetConnectorJdbcCredentialUsernamePasswordOutput {
	return o
}

func (o GetConnectorJdbcCredentialUsernamePasswordOutput) ToGetConnectorJdbcCredentialUsernamePasswordOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorJdbcCredentialUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredentialUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetConnectorJdbcCredentialUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredentialUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorJdbcCredentialUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJdbcCredentialUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorJdbcCredentialUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorJdbcCredentialUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJdbcCredentialUsernamePassword)(nil)).Elem()
}

func (o GetConnectorJdbcCredentialUsernamePasswordArrayOutput) ToGetConnectorJdbcCredentialUsernamePasswordArrayOutput() GetConnectorJdbcCredentialUsernamePasswordArrayOutput {
	return o
}

func (o GetConnectorJdbcCredentialUsernamePasswordArrayOutput) ToGetConnectorJdbcCredentialUsernamePasswordArrayOutputWithContext(ctx context.Context) GetConnectorJdbcCredentialUsernamePasswordArrayOutput {
	return o
}

func (o GetConnectorJdbcCredentialUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetConnectorJdbcCredentialUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorJdbcCredentialUsernamePassword {
		return vs[0].([]GetConnectorJdbcCredentialUsernamePassword)[vs[1].(int)]
	}).(GetConnectorJdbcCredentialUsernamePasswordOutput)
}

type GetConnectorPdcHost struct {
	// attributes for current host
	Attributes map[string]string `pulumi:"attributes"`
	// hostname
	Hostname string `pulumi:"hostname"`
}

// GetConnectorPdcHostInput is an input type that accepts GetConnectorPdcHostArgs and GetConnectorPdcHostOutput values.
// You can construct a concrete instance of `GetConnectorPdcHostInput` via:
//
//	GetConnectorPdcHostArgs{...}
type GetConnectorPdcHostInput interface {
	pulumi.Input

	ToGetConnectorPdcHostOutput() GetConnectorPdcHostOutput
	ToGetConnectorPdcHostOutputWithContext(context.Context) GetConnectorPdcHostOutput
}

type GetConnectorPdcHostArgs struct {
	// attributes for current host
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// hostname
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetConnectorPdcHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorPdcHost)(nil)).Elem()
}

func (i GetConnectorPdcHostArgs) ToGetConnectorPdcHostOutput() GetConnectorPdcHostOutput {
	return i.ToGetConnectorPdcHostOutputWithContext(context.Background())
}

func (i GetConnectorPdcHostArgs) ToGetConnectorPdcHostOutputWithContext(ctx context.Context) GetConnectorPdcHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorPdcHostOutput)
}

// GetConnectorPdcHostArrayInput is an input type that accepts GetConnectorPdcHostArray and GetConnectorPdcHostArrayOutput values.
// You can construct a concrete instance of `GetConnectorPdcHostArrayInput` via:
//
//	GetConnectorPdcHostArray{ GetConnectorPdcHostArgs{...} }
type GetConnectorPdcHostArrayInput interface {
	pulumi.Input

	ToGetConnectorPdcHostArrayOutput() GetConnectorPdcHostArrayOutput
	ToGetConnectorPdcHostArrayOutputWithContext(context.Context) GetConnectorPdcHostArrayOutput
}

type GetConnectorPdcHostArray []GetConnectorPdcHostInput

func (GetConnectorPdcHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorPdcHost)(nil)).Elem()
}

func (i GetConnectorPdcHostArray) ToGetConnectorPdcHostArrayOutput() GetConnectorPdcHostArrayOutput {
	return i.ToGetConnectorPdcHostArrayOutputWithContext(context.Background())
}

func (i GetConnectorPdcHostArray) ToGetConnectorPdcHostArrayOutputWithContext(ctx context.Context) GetConnectorPdcHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorPdcHostArrayOutput)
}

type GetConnectorPdcHostOutput struct{ *pulumi.OutputState }

func (GetConnectorPdcHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorPdcHost)(nil)).Elem()
}

func (o GetConnectorPdcHostOutput) ToGetConnectorPdcHostOutput() GetConnectorPdcHostOutput {
	return o
}

func (o GetConnectorPdcHostOutput) ToGetConnectorPdcHostOutputWithContext(ctx context.Context) GetConnectorPdcHostOutput {
	return o
}

// attributes for current host
func (o GetConnectorPdcHostOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectorPdcHost) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// hostname
func (o GetConnectorPdcHostOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorPdcHost) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetConnectorPdcHostArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorPdcHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorPdcHost)(nil)).Elem()
}

func (o GetConnectorPdcHostArrayOutput) ToGetConnectorPdcHostArrayOutput() GetConnectorPdcHostArrayOutput {
	return o
}

func (o GetConnectorPdcHostArrayOutput) ToGetConnectorPdcHostArrayOutputWithContext(ctx context.Context) GetConnectorPdcHostArrayOutput {
	return o
}

func (o GetConnectorPdcHostArrayOutput) Index(i pulumi.IntInput) GetConnectorPdcHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorPdcHost {
		return vs[0].([]GetConnectorPdcHost)[vs[1].(int)]
	}).(GetConnectorPdcHostOutput)
}

type GetConnectorRancherBearerToken struct {
	// Reference to the secret containing the bearer token for the rancher cluster. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// The URL of the Rancher cluster.
	RancherUrl string `pulumi:"rancherUrl"`
}

// GetConnectorRancherBearerTokenInput is an input type that accepts GetConnectorRancherBearerTokenArgs and GetConnectorRancherBearerTokenOutput values.
// You can construct a concrete instance of `GetConnectorRancherBearerTokenInput` via:
//
//	GetConnectorRancherBearerTokenArgs{...}
type GetConnectorRancherBearerTokenInput interface {
	pulumi.Input

	ToGetConnectorRancherBearerTokenOutput() GetConnectorRancherBearerTokenOutput
	ToGetConnectorRancherBearerTokenOutputWithContext(context.Context) GetConnectorRancherBearerTokenOutput
}

type GetConnectorRancherBearerTokenArgs struct {
	// Reference to the secret containing the bearer token for the rancher cluster. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// The URL of the Rancher cluster.
	RancherUrl pulumi.StringInput `pulumi:"rancherUrl"`
}

func (GetConnectorRancherBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorRancherBearerToken)(nil)).Elem()
}

func (i GetConnectorRancherBearerTokenArgs) ToGetConnectorRancherBearerTokenOutput() GetConnectorRancherBearerTokenOutput {
	return i.ToGetConnectorRancherBearerTokenOutputWithContext(context.Background())
}

func (i GetConnectorRancherBearerTokenArgs) ToGetConnectorRancherBearerTokenOutputWithContext(ctx context.Context) GetConnectorRancherBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorRancherBearerTokenOutput)
}

func (i GetConnectorRancherBearerTokenArgs) ToGetConnectorRancherBearerTokenPtrOutput() GetConnectorRancherBearerTokenPtrOutput {
	return i.ToGetConnectorRancherBearerTokenPtrOutputWithContext(context.Background())
}

func (i GetConnectorRancherBearerTokenArgs) ToGetConnectorRancherBearerTokenPtrOutputWithContext(ctx context.Context) GetConnectorRancherBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorRancherBearerTokenOutput).ToGetConnectorRancherBearerTokenPtrOutputWithContext(ctx)
}

// GetConnectorRancherBearerTokenPtrInput is an input type that accepts GetConnectorRancherBearerTokenArgs, GetConnectorRancherBearerTokenPtr and GetConnectorRancherBearerTokenPtrOutput values.
// You can construct a concrete instance of `GetConnectorRancherBearerTokenPtrInput` via:
//
//	        GetConnectorRancherBearerTokenArgs{...}
//
//	or:
//
//	        nil
type GetConnectorRancherBearerTokenPtrInput interface {
	pulumi.Input

	ToGetConnectorRancherBearerTokenPtrOutput() GetConnectorRancherBearerTokenPtrOutput
	ToGetConnectorRancherBearerTokenPtrOutputWithContext(context.Context) GetConnectorRancherBearerTokenPtrOutput
}

type getConnectorRancherBearerTokenPtrType GetConnectorRancherBearerTokenArgs

func GetConnectorRancherBearerTokenPtr(v *GetConnectorRancherBearerTokenArgs) GetConnectorRancherBearerTokenPtrInput {
	return (*getConnectorRancherBearerTokenPtrType)(v)
}

func (*getConnectorRancherBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetConnectorRancherBearerToken)(nil)).Elem()
}

func (i *getConnectorRancherBearerTokenPtrType) ToGetConnectorRancherBearerTokenPtrOutput() GetConnectorRancherBearerTokenPtrOutput {
	return i.ToGetConnectorRancherBearerTokenPtrOutputWithContext(context.Background())
}

func (i *getConnectorRancherBearerTokenPtrType) ToGetConnectorRancherBearerTokenPtrOutputWithContext(ctx context.Context) GetConnectorRancherBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorRancherBearerTokenPtrOutput)
}

type GetConnectorRancherBearerTokenOutput struct{ *pulumi.OutputState }

func (GetConnectorRancherBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorRancherBearerToken)(nil)).Elem()
}

func (o GetConnectorRancherBearerTokenOutput) ToGetConnectorRancherBearerTokenOutput() GetConnectorRancherBearerTokenOutput {
	return o
}

func (o GetConnectorRancherBearerTokenOutput) ToGetConnectorRancherBearerTokenOutputWithContext(ctx context.Context) GetConnectorRancherBearerTokenOutput {
	return o
}

func (o GetConnectorRancherBearerTokenOutput) ToGetConnectorRancherBearerTokenPtrOutput() GetConnectorRancherBearerTokenPtrOutput {
	return o.ToGetConnectorRancherBearerTokenPtrOutputWithContext(context.Background())
}

func (o GetConnectorRancherBearerTokenOutput) ToGetConnectorRancherBearerTokenPtrOutputWithContext(ctx context.Context) GetConnectorRancherBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetConnectorRancherBearerToken) *GetConnectorRancherBearerToken {
		return &v
	}).(GetConnectorRancherBearerTokenPtrOutput)
}

// Reference to the secret containing the bearer token for the rancher cluster. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorRancherBearerTokenOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorRancherBearerToken) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// The URL of the Rancher cluster.
func (o GetConnectorRancherBearerTokenOutput) RancherUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorRancherBearerToken) string { return v.RancherUrl }).(pulumi.StringOutput)
}

type GetConnectorRancherBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (GetConnectorRancherBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetConnectorRancherBearerToken)(nil)).Elem()
}

func (o GetConnectorRancherBearerTokenPtrOutput) ToGetConnectorRancherBearerTokenPtrOutput() GetConnectorRancherBearerTokenPtrOutput {
	return o
}

func (o GetConnectorRancherBearerTokenPtrOutput) ToGetConnectorRancherBearerTokenPtrOutputWithContext(ctx context.Context) GetConnectorRancherBearerTokenPtrOutput {
	return o
}

func (o GetConnectorRancherBearerTokenPtrOutput) Elem() GetConnectorRancherBearerTokenOutput {
	return o.ApplyT(func(v *GetConnectorRancherBearerToken) GetConnectorRancherBearerToken {
		if v != nil {
			return *v
		}
		var ret GetConnectorRancherBearerToken
		return ret
	}).(GetConnectorRancherBearerTokenOutput)
}

// Reference to the secret containing the bearer token for the rancher cluster. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorRancherBearerTokenPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetConnectorRancherBearerToken) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the Rancher cluster.
func (o GetConnectorRancherBearerTokenPtrOutput) RancherUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetConnectorRancherBearerToken) *string {
		if v == nil {
			return nil
		}
		return &v.RancherUrl
	}).(pulumi.StringPtrOutput)
}

type GetDbSchemaChangelogScript struct {
	// Script to clone changeSets
	Command string `pulumi:"command"`
	// The fully-qualified name (FQN) of the image
	Image string `pulumi:"image"`
	// Path to changeLog file
	Location string `pulumi:"location"`
	// Type of the shell. For example Sh or Bash
	Shell string `pulumi:"shell"`
}

// GetDbSchemaChangelogScriptInput is an input type that accepts GetDbSchemaChangelogScriptArgs and GetDbSchemaChangelogScriptOutput values.
// You can construct a concrete instance of `GetDbSchemaChangelogScriptInput` via:
//
//	GetDbSchemaChangelogScriptArgs{...}
type GetDbSchemaChangelogScriptInput interface {
	pulumi.Input

	ToGetDbSchemaChangelogScriptOutput() GetDbSchemaChangelogScriptOutput
	ToGetDbSchemaChangelogScriptOutputWithContext(context.Context) GetDbSchemaChangelogScriptOutput
}

type GetDbSchemaChangelogScriptArgs struct {
	// Script to clone changeSets
	Command pulumi.StringInput `pulumi:"command"`
	// The fully-qualified name (FQN) of the image
	Image pulumi.StringInput `pulumi:"image"`
	// Path to changeLog file
	Location pulumi.StringInput `pulumi:"location"`
	// Type of the shell. For example Sh or Bash
	Shell pulumi.StringInput `pulumi:"shell"`
}

func (GetDbSchemaChangelogScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSchemaChangelogScript)(nil)).Elem()
}

func (i GetDbSchemaChangelogScriptArgs) ToGetDbSchemaChangelogScriptOutput() GetDbSchemaChangelogScriptOutput {
	return i.ToGetDbSchemaChangelogScriptOutputWithContext(context.Background())
}

func (i GetDbSchemaChangelogScriptArgs) ToGetDbSchemaChangelogScriptOutputWithContext(ctx context.Context) GetDbSchemaChangelogScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbSchemaChangelogScriptOutput)
}

type GetDbSchemaChangelogScriptOutput struct{ *pulumi.OutputState }

func (GetDbSchemaChangelogScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSchemaChangelogScript)(nil)).Elem()
}

func (o GetDbSchemaChangelogScriptOutput) ToGetDbSchemaChangelogScriptOutput() GetDbSchemaChangelogScriptOutput {
	return o
}

func (o GetDbSchemaChangelogScriptOutput) ToGetDbSchemaChangelogScriptOutputWithContext(ctx context.Context) GetDbSchemaChangelogScriptOutput {
	return o
}

// Script to clone changeSets
func (o GetDbSchemaChangelogScriptOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaChangelogScript) string { return v.Command }).(pulumi.StringOutput)
}

// The fully-qualified name (FQN) of the image
func (o GetDbSchemaChangelogScriptOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaChangelogScript) string { return v.Image }).(pulumi.StringOutput)
}

// Path to changeLog file
func (o GetDbSchemaChangelogScriptOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaChangelogScript) string { return v.Location }).(pulumi.StringOutput)
}

// Type of the shell. For example Sh or Bash
func (o GetDbSchemaChangelogScriptOutput) Shell() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaChangelogScript) string { return v.Shell }).(pulumi.StringOutput)
}

type GetDbSchemaSchemaSource struct {
	// If connector type is artifactory, path to the archive file which contains the changeLog
	ArchivePath string `pulumi:"archivePath"`
	// Connector to repository at which to find details about the database schema
	Connector string `pulumi:"connector"`
	// The path within the specified repository at which to find details about the database schema
	Location string `pulumi:"location"`
	// If connector url is of account, which repository to connect to using the connector
	Repo string `pulumi:"repo"`
}

// GetDbSchemaSchemaSourceInput is an input type that accepts GetDbSchemaSchemaSourceArgs and GetDbSchemaSchemaSourceOutput values.
// You can construct a concrete instance of `GetDbSchemaSchemaSourceInput` via:
//
//	GetDbSchemaSchemaSourceArgs{...}
type GetDbSchemaSchemaSourceInput interface {
	pulumi.Input

	ToGetDbSchemaSchemaSourceOutput() GetDbSchemaSchemaSourceOutput
	ToGetDbSchemaSchemaSourceOutputWithContext(context.Context) GetDbSchemaSchemaSourceOutput
}

type GetDbSchemaSchemaSourceArgs struct {
	// If connector type is artifactory, path to the archive file which contains the changeLog
	ArchivePath pulumi.StringInput `pulumi:"archivePath"`
	// Connector to repository at which to find details about the database schema
	Connector pulumi.StringInput `pulumi:"connector"`
	// The path within the specified repository at which to find details about the database schema
	Location pulumi.StringInput `pulumi:"location"`
	// If connector url is of account, which repository to connect to using the connector
	Repo pulumi.StringInput `pulumi:"repo"`
}

func (GetDbSchemaSchemaSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSchemaSchemaSource)(nil)).Elem()
}

func (i GetDbSchemaSchemaSourceArgs) ToGetDbSchemaSchemaSourceOutput() GetDbSchemaSchemaSourceOutput {
	return i.ToGetDbSchemaSchemaSourceOutputWithContext(context.Background())
}

func (i GetDbSchemaSchemaSourceArgs) ToGetDbSchemaSchemaSourceOutputWithContext(ctx context.Context) GetDbSchemaSchemaSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbSchemaSchemaSourceOutput)
}

// GetDbSchemaSchemaSourceArrayInput is an input type that accepts GetDbSchemaSchemaSourceArray and GetDbSchemaSchemaSourceArrayOutput values.
// You can construct a concrete instance of `GetDbSchemaSchemaSourceArrayInput` via:
//
//	GetDbSchemaSchemaSourceArray{ GetDbSchemaSchemaSourceArgs{...} }
type GetDbSchemaSchemaSourceArrayInput interface {
	pulumi.Input

	ToGetDbSchemaSchemaSourceArrayOutput() GetDbSchemaSchemaSourceArrayOutput
	ToGetDbSchemaSchemaSourceArrayOutputWithContext(context.Context) GetDbSchemaSchemaSourceArrayOutput
}

type GetDbSchemaSchemaSourceArray []GetDbSchemaSchemaSourceInput

func (GetDbSchemaSchemaSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbSchemaSchemaSource)(nil)).Elem()
}

func (i GetDbSchemaSchemaSourceArray) ToGetDbSchemaSchemaSourceArrayOutput() GetDbSchemaSchemaSourceArrayOutput {
	return i.ToGetDbSchemaSchemaSourceArrayOutputWithContext(context.Background())
}

func (i GetDbSchemaSchemaSourceArray) ToGetDbSchemaSchemaSourceArrayOutputWithContext(ctx context.Context) GetDbSchemaSchemaSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbSchemaSchemaSourceArrayOutput)
}

type GetDbSchemaSchemaSourceOutput struct{ *pulumi.OutputState }

func (GetDbSchemaSchemaSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSchemaSchemaSource)(nil)).Elem()
}

func (o GetDbSchemaSchemaSourceOutput) ToGetDbSchemaSchemaSourceOutput() GetDbSchemaSchemaSourceOutput {
	return o
}

func (o GetDbSchemaSchemaSourceOutput) ToGetDbSchemaSchemaSourceOutputWithContext(ctx context.Context) GetDbSchemaSchemaSourceOutput {
	return o
}

// If connector type is artifactory, path to the archive file which contains the changeLog
func (o GetDbSchemaSchemaSourceOutput) ArchivePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaSchemaSource) string { return v.ArchivePath }).(pulumi.StringOutput)
}

// Connector to repository at which to find details about the database schema
func (o GetDbSchemaSchemaSourceOutput) Connector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaSchemaSource) string { return v.Connector }).(pulumi.StringOutput)
}

// The path within the specified repository at which to find details about the database schema
func (o GetDbSchemaSchemaSourceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaSchemaSource) string { return v.Location }).(pulumi.StringOutput)
}

// If connector url is of account, which repository to connect to using the connector
func (o GetDbSchemaSchemaSourceOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSchemaSchemaSource) string { return v.Repo }).(pulumi.StringOutput)
}

type GetDbSchemaSchemaSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDbSchemaSchemaSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbSchemaSchemaSource)(nil)).Elem()
}

func (o GetDbSchemaSchemaSourceArrayOutput) ToGetDbSchemaSchemaSourceArrayOutput() GetDbSchemaSchemaSourceArrayOutput {
	return o
}

func (o GetDbSchemaSchemaSourceArrayOutput) ToGetDbSchemaSchemaSourceArrayOutputWithContext(ctx context.Context) GetDbSchemaSchemaSourceArrayOutput {
	return o
}

func (o GetDbSchemaSchemaSourceArrayOutput) Index(i pulumi.IntInput) GetDbSchemaSchemaSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbSchemaSchemaSource {
		return vs[0].([]GetDbSchemaSchemaSource)[vs[1].(int)]
	}).(GetDbSchemaSchemaSourceOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSet struct {
	// List of notification events like PIPELINE_START
	NotificationEvents []string `pulumi:"notificationEvents"`
	// Template reference configuration
	Template GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate `pulumi:"template"`
}

// GetDefaultNotificationTemplateSetEventTemplateConfigurationSetInput is an input type that accepts GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs and GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput values.
// You can construct a concrete instance of `GetDefaultNotificationTemplateSetEventTemplateConfigurationSetInput` via:
//
//	GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs{...}
type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetInput interface {
	pulumi.Input

	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput
	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutputWithContext(context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs struct {
	// List of notification events like PIPELINE_START
	NotificationEvents pulumi.StringArrayInput `pulumi:"notificationEvents"`
	// Template reference configuration
	Template GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateInput `pulumi:"template"`
}

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSet)(nil)).Elem()
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput {
	return i.ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutputWithContext(context.Background())
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput)
}

// GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput is an input type that accepts GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray and GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput values.
// You can construct a concrete instance of `GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput` via:
//
//	GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray{ GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs{...} }
type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput interface {
	pulumi.Input

	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput
	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutputWithContext(context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray []GetDefaultNotificationTemplateSetEventTemplateConfigurationSetInput

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDefaultNotificationTemplateSetEventTemplateConfigurationSet)(nil)).Elem()
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
	return i.ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutputWithContext(context.Background())
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput struct{ *pulumi.OutputState }

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSet)(nil)).Elem()
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput {
	return o
}

// List of notification events like PIPELINE_START
func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput) NotificationEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSet) []string {
		return v.NotificationEvents
	}).(pulumi.StringArrayOutput)
}

// Template reference configuration
func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput) Template() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSet) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate {
		return v.Template
	}).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput struct{ *pulumi.OutputState }

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDefaultNotificationTemplateSetEventTemplateConfigurationSet)(nil)).Elem()
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput) Index(i pulumi.IntInput) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDefaultNotificationTemplateSetEventTemplateConfigurationSet {
		return vs[0].([]GetDefaultNotificationTemplateSetEventTemplateConfigurationSet)[vs[1].(int)]
	}).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate struct {
	TemplateRef string `pulumi:"templateRef"`
	// List of variables passed to the template
	Variables    []GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable `pulumi:"variables"`
	VersionLabel string                                                                           `pulumi:"versionLabel"`
}

// GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateInput is an input type that accepts GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs and GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput values.
// You can construct a concrete instance of `GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateInput` via:
//
//	GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs{...}
type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateInput interface {
	pulumi.Input

	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput
	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutputWithContext(context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs struct {
	TemplateRef pulumi.StringInput `pulumi:"templateRef"`
	// List of variables passed to the template
	Variables    GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayInput `pulumi:"variables"`
	VersionLabel pulumi.StringInput                                                                       `pulumi:"versionLabel"`
}

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate)(nil)).Elem()
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput {
	return i.ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutputWithContext(context.Background())
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput struct{ *pulumi.OutputState }

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate)(nil)).Elem()
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput) TemplateRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate) string {
		return v.TemplateRef
	}).(pulumi.StringOutput)
}

// List of variables passed to the template
func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput) Variables() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate) []GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable {
		return v.Variables
	}).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput)
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput) VersionLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate) string {
		return v.VersionLabel
	}).(pulumi.StringOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable struct {
	Name  string `pulumi:"name"`
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableInput is an input type that accepts GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs and GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput values.
// You can construct a concrete instance of `GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableInput` via:
//
//	GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs{...}
type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableInput interface {
	pulumi.Input

	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput
	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutputWithContext(context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable)(nil)).Elem()
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput {
	return i.ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutputWithContext(context.Background())
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput)
}

// GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayInput is an input type that accepts GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray and GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput values.
// You can construct a concrete instance of `GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayInput` via:
//
//	GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray{ GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs{...} }
type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayInput interface {
	pulumi.Input

	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput
	ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutputWithContext(context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray []GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableInput

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable)(nil)).Elem()
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput {
	return i.ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutputWithContext(context.Background())
}

func (i GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput struct{ *pulumi.OutputState }

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable)(nil)).Elem()
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable) string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput struct{ *pulumi.OutputState }

func (GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable)(nil)).Elem()
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput) ToGetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutputWithContext(ctx context.Context) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput {
	return o
}

func (o GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput) Index(i pulumi.IntInput) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable {
		return vs[0].([]GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariable)[vs[1].(int)]
	}).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput)
}

type GetDockerConnectorCredential struct {
	// Execute on delegate or not.
	ExecuteOnDelegate bool `pulumi:"executeOnDelegate"`
	// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// The username to use for the docker registry.
	Username string `pulumi:"username"`
	// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetDockerConnectorCredentialInput is an input type that accepts GetDockerConnectorCredentialArgs and GetDockerConnectorCredentialOutput values.
// You can construct a concrete instance of `GetDockerConnectorCredentialInput` via:
//
//	GetDockerConnectorCredentialArgs{...}
type GetDockerConnectorCredentialInput interface {
	pulumi.Input

	ToGetDockerConnectorCredentialOutput() GetDockerConnectorCredentialOutput
	ToGetDockerConnectorCredentialOutputWithContext(context.Context) GetDockerConnectorCredentialOutput
}

type GetDockerConnectorCredentialArgs struct {
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolInput `pulumi:"executeOnDelegate"`
	// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// The username to use for the docker registry.
	Username pulumi.StringInput `pulumi:"username"`
	// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetDockerConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDockerConnectorCredential)(nil)).Elem()
}

func (i GetDockerConnectorCredentialArgs) ToGetDockerConnectorCredentialOutput() GetDockerConnectorCredentialOutput {
	return i.ToGetDockerConnectorCredentialOutputWithContext(context.Background())
}

func (i GetDockerConnectorCredentialArgs) ToGetDockerConnectorCredentialOutputWithContext(ctx context.Context) GetDockerConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDockerConnectorCredentialOutput)
}

// GetDockerConnectorCredentialArrayInput is an input type that accepts GetDockerConnectorCredentialArray and GetDockerConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetDockerConnectorCredentialArrayInput` via:
//
//	GetDockerConnectorCredentialArray{ GetDockerConnectorCredentialArgs{...} }
type GetDockerConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetDockerConnectorCredentialArrayOutput() GetDockerConnectorCredentialArrayOutput
	ToGetDockerConnectorCredentialArrayOutputWithContext(context.Context) GetDockerConnectorCredentialArrayOutput
}

type GetDockerConnectorCredentialArray []GetDockerConnectorCredentialInput

func (GetDockerConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDockerConnectorCredential)(nil)).Elem()
}

func (i GetDockerConnectorCredentialArray) ToGetDockerConnectorCredentialArrayOutput() GetDockerConnectorCredentialArrayOutput {
	return i.ToGetDockerConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetDockerConnectorCredentialArray) ToGetDockerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetDockerConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDockerConnectorCredentialArrayOutput)
}

type GetDockerConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetDockerConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDockerConnectorCredential)(nil)).Elem()
}

func (o GetDockerConnectorCredentialOutput) ToGetDockerConnectorCredentialOutput() GetDockerConnectorCredentialOutput {
	return o
}

func (o GetDockerConnectorCredentialOutput) ToGetDockerConnectorCredentialOutputWithContext(ctx context.Context) GetDockerConnectorCredentialOutput {
	return o
}

// Execute on delegate or not.
func (o GetDockerConnectorCredentialOutput) ExecuteOnDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) bool { return v.ExecuteOnDelegate }).(pulumi.BoolOutput)
}

// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetDockerConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// The username to use for the docker registry.
func (o GetDockerConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetDockerConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetDockerConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetDockerConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDockerConnectorCredential)(nil)).Elem()
}

func (o GetDockerConnectorCredentialArrayOutput) ToGetDockerConnectorCredentialArrayOutput() GetDockerConnectorCredentialArrayOutput {
	return o
}

func (o GetDockerConnectorCredentialArrayOutput) ToGetDockerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetDockerConnectorCredentialArrayOutput {
	return o
}

func (o GetDockerConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetDockerConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDockerConnectorCredential {
		return vs[0].([]GetDockerConnectorCredential)[vs[1].(int)]
	}).(GetDockerConnectorCredentialOutput)
}

type GetElasticsearchConnectorApiToken struct {
	// The client id used for connecting to ElasticSearch.
	ClientId string `pulumi:"clientId"`
	// Reference to the Harness secret containing the ElasticSearch client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef string `pulumi:"clientSecretRef"`
}

// GetElasticsearchConnectorApiTokenInput is an input type that accepts GetElasticsearchConnectorApiTokenArgs and GetElasticsearchConnectorApiTokenOutput values.
// You can construct a concrete instance of `GetElasticsearchConnectorApiTokenInput` via:
//
//	GetElasticsearchConnectorApiTokenArgs{...}
type GetElasticsearchConnectorApiTokenInput interface {
	pulumi.Input

	ToGetElasticsearchConnectorApiTokenOutput() GetElasticsearchConnectorApiTokenOutput
	ToGetElasticsearchConnectorApiTokenOutputWithContext(context.Context) GetElasticsearchConnectorApiTokenOutput
}

type GetElasticsearchConnectorApiTokenArgs struct {
	// The client id used for connecting to ElasticSearch.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Reference to the Harness secret containing the ElasticSearch client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
}

func (GetElasticsearchConnectorApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchConnectorApiToken)(nil)).Elem()
}

func (i GetElasticsearchConnectorApiTokenArgs) ToGetElasticsearchConnectorApiTokenOutput() GetElasticsearchConnectorApiTokenOutput {
	return i.ToGetElasticsearchConnectorApiTokenOutputWithContext(context.Background())
}

func (i GetElasticsearchConnectorApiTokenArgs) ToGetElasticsearchConnectorApiTokenOutputWithContext(ctx context.Context) GetElasticsearchConnectorApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchConnectorApiTokenOutput)
}

// GetElasticsearchConnectorApiTokenArrayInput is an input type that accepts GetElasticsearchConnectorApiTokenArray and GetElasticsearchConnectorApiTokenArrayOutput values.
// You can construct a concrete instance of `GetElasticsearchConnectorApiTokenArrayInput` via:
//
//	GetElasticsearchConnectorApiTokenArray{ GetElasticsearchConnectorApiTokenArgs{...} }
type GetElasticsearchConnectorApiTokenArrayInput interface {
	pulumi.Input

	ToGetElasticsearchConnectorApiTokenArrayOutput() GetElasticsearchConnectorApiTokenArrayOutput
	ToGetElasticsearchConnectorApiTokenArrayOutputWithContext(context.Context) GetElasticsearchConnectorApiTokenArrayOutput
}

type GetElasticsearchConnectorApiTokenArray []GetElasticsearchConnectorApiTokenInput

func (GetElasticsearchConnectorApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchConnectorApiToken)(nil)).Elem()
}

func (i GetElasticsearchConnectorApiTokenArray) ToGetElasticsearchConnectorApiTokenArrayOutput() GetElasticsearchConnectorApiTokenArrayOutput {
	return i.ToGetElasticsearchConnectorApiTokenArrayOutputWithContext(context.Background())
}

func (i GetElasticsearchConnectorApiTokenArray) ToGetElasticsearchConnectorApiTokenArrayOutputWithContext(ctx context.Context) GetElasticsearchConnectorApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchConnectorApiTokenArrayOutput)
}

type GetElasticsearchConnectorApiTokenOutput struct{ *pulumi.OutputState }

func (GetElasticsearchConnectorApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchConnectorApiToken)(nil)).Elem()
}

func (o GetElasticsearchConnectorApiTokenOutput) ToGetElasticsearchConnectorApiTokenOutput() GetElasticsearchConnectorApiTokenOutput {
	return o
}

func (o GetElasticsearchConnectorApiTokenOutput) ToGetElasticsearchConnectorApiTokenOutputWithContext(ctx context.Context) GetElasticsearchConnectorApiTokenOutput {
	return o
}

// The client id used for connecting to ElasticSearch.
func (o GetElasticsearchConnectorApiTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchConnectorApiToken) string { return v.ClientId }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the ElasticSearch client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetElasticsearchConnectorApiTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchConnectorApiToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

type GetElasticsearchConnectorApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetElasticsearchConnectorApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchConnectorApiToken)(nil)).Elem()
}

func (o GetElasticsearchConnectorApiTokenArrayOutput) ToGetElasticsearchConnectorApiTokenArrayOutput() GetElasticsearchConnectorApiTokenArrayOutput {
	return o
}

func (o GetElasticsearchConnectorApiTokenArrayOutput) ToGetElasticsearchConnectorApiTokenArrayOutputWithContext(ctx context.Context) GetElasticsearchConnectorApiTokenArrayOutput {
	return o
}

func (o GetElasticsearchConnectorApiTokenArrayOutput) Index(i pulumi.IntInput) GetElasticsearchConnectorApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticsearchConnectorApiToken {
		return vs[0].([]GetElasticsearchConnectorApiToken)[vs[1].(int)]
	}).(GetElasticsearchConnectorApiTokenOutput)
}

type GetElasticsearchConnectorUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
}

// GetElasticsearchConnectorUsernamePasswordInput is an input type that accepts GetElasticsearchConnectorUsernamePasswordArgs and GetElasticsearchConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `GetElasticsearchConnectorUsernamePasswordInput` via:
//
//	GetElasticsearchConnectorUsernamePasswordArgs{...}
type GetElasticsearchConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToGetElasticsearchConnectorUsernamePasswordOutput() GetElasticsearchConnectorUsernamePasswordOutput
	ToGetElasticsearchConnectorUsernamePasswordOutputWithContext(context.Context) GetElasticsearchConnectorUsernamePasswordOutput
}

type GetElasticsearchConnectorUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetElasticsearchConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchConnectorUsernamePassword)(nil)).Elem()
}

func (i GetElasticsearchConnectorUsernamePasswordArgs) ToGetElasticsearchConnectorUsernamePasswordOutput() GetElasticsearchConnectorUsernamePasswordOutput {
	return i.ToGetElasticsearchConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i GetElasticsearchConnectorUsernamePasswordArgs) ToGetElasticsearchConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetElasticsearchConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchConnectorUsernamePasswordOutput)
}

// GetElasticsearchConnectorUsernamePasswordArrayInput is an input type that accepts GetElasticsearchConnectorUsernamePasswordArray and GetElasticsearchConnectorUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetElasticsearchConnectorUsernamePasswordArrayInput` via:
//
//	GetElasticsearchConnectorUsernamePasswordArray{ GetElasticsearchConnectorUsernamePasswordArgs{...} }
type GetElasticsearchConnectorUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetElasticsearchConnectorUsernamePasswordArrayOutput() GetElasticsearchConnectorUsernamePasswordArrayOutput
	ToGetElasticsearchConnectorUsernamePasswordArrayOutputWithContext(context.Context) GetElasticsearchConnectorUsernamePasswordArrayOutput
}

type GetElasticsearchConnectorUsernamePasswordArray []GetElasticsearchConnectorUsernamePasswordInput

func (GetElasticsearchConnectorUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchConnectorUsernamePassword)(nil)).Elem()
}

func (i GetElasticsearchConnectorUsernamePasswordArray) ToGetElasticsearchConnectorUsernamePasswordArrayOutput() GetElasticsearchConnectorUsernamePasswordArrayOutput {
	return i.ToGetElasticsearchConnectorUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetElasticsearchConnectorUsernamePasswordArray) ToGetElasticsearchConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetElasticsearchConnectorUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchConnectorUsernamePasswordArrayOutput)
}

type GetElasticsearchConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetElasticsearchConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchConnectorUsernamePassword)(nil)).Elem()
}

func (o GetElasticsearchConnectorUsernamePasswordOutput) ToGetElasticsearchConnectorUsernamePasswordOutput() GetElasticsearchConnectorUsernamePasswordOutput {
	return o
}

func (o GetElasticsearchConnectorUsernamePasswordOutput) ToGetElasticsearchConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetElasticsearchConnectorUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetElasticsearchConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetElasticsearchConnectorUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchConnectorUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

type GetElasticsearchConnectorUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetElasticsearchConnectorUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchConnectorUsernamePassword)(nil)).Elem()
}

func (o GetElasticsearchConnectorUsernamePasswordArrayOutput) ToGetElasticsearchConnectorUsernamePasswordArrayOutput() GetElasticsearchConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetElasticsearchConnectorUsernamePasswordArrayOutput) ToGetElasticsearchConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetElasticsearchConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetElasticsearchConnectorUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetElasticsearchConnectorUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticsearchConnectorUsernamePassword {
		return vs[0].([]GetElasticsearchConnectorUsernamePassword)[vs[1].(int)]
	}).(GetElasticsearchConnectorUsernamePasswordOutput)
}

type GetEnvironmentClustersMappingCluster struct {
	// agent identifier of the cluster (include scope prefix)
	AgentIdentifier *string `pulumi:"agentIdentifier"`
	// identifier of the cluster
	Identifier *string `pulumi:"identifier"`
	// name of the cluster
	Name *string `pulumi:"name"`
	// scope at which the cluster exists in harness gitops, one of "ACCOUNT", "ORGANIZATION", "PROJECT". Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
	Scope *string `pulumi:"scope"`
}

// GetEnvironmentClustersMappingClusterInput is an input type that accepts GetEnvironmentClustersMappingClusterArgs and GetEnvironmentClustersMappingClusterOutput values.
// You can construct a concrete instance of `GetEnvironmentClustersMappingClusterInput` via:
//
//	GetEnvironmentClustersMappingClusterArgs{...}
type GetEnvironmentClustersMappingClusterInput interface {
	pulumi.Input

	ToGetEnvironmentClustersMappingClusterOutput() GetEnvironmentClustersMappingClusterOutput
	ToGetEnvironmentClustersMappingClusterOutputWithContext(context.Context) GetEnvironmentClustersMappingClusterOutput
}

type GetEnvironmentClustersMappingClusterArgs struct {
	// agent identifier of the cluster (include scope prefix)
	AgentIdentifier pulumi.StringPtrInput `pulumi:"agentIdentifier"`
	// identifier of the cluster
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// name of the cluster
	Name pulumi.StringPtrInput `pulumi:"name"`
	// scope at which the cluster exists in harness gitops, one of "ACCOUNT", "ORGANIZATION", "PROJECT". Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (GetEnvironmentClustersMappingClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentClustersMappingCluster)(nil)).Elem()
}

func (i GetEnvironmentClustersMappingClusterArgs) ToGetEnvironmentClustersMappingClusterOutput() GetEnvironmentClustersMappingClusterOutput {
	return i.ToGetEnvironmentClustersMappingClusterOutputWithContext(context.Background())
}

func (i GetEnvironmentClustersMappingClusterArgs) ToGetEnvironmentClustersMappingClusterOutputWithContext(ctx context.Context) GetEnvironmentClustersMappingClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentClustersMappingClusterOutput)
}

// GetEnvironmentClustersMappingClusterArrayInput is an input type that accepts GetEnvironmentClustersMappingClusterArray and GetEnvironmentClustersMappingClusterArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentClustersMappingClusterArrayInput` via:
//
//	GetEnvironmentClustersMappingClusterArray{ GetEnvironmentClustersMappingClusterArgs{...} }
type GetEnvironmentClustersMappingClusterArrayInput interface {
	pulumi.Input

	ToGetEnvironmentClustersMappingClusterArrayOutput() GetEnvironmentClustersMappingClusterArrayOutput
	ToGetEnvironmentClustersMappingClusterArrayOutputWithContext(context.Context) GetEnvironmentClustersMappingClusterArrayOutput
}

type GetEnvironmentClustersMappingClusterArray []GetEnvironmentClustersMappingClusterInput

func (GetEnvironmentClustersMappingClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentClustersMappingCluster)(nil)).Elem()
}

func (i GetEnvironmentClustersMappingClusterArray) ToGetEnvironmentClustersMappingClusterArrayOutput() GetEnvironmentClustersMappingClusterArrayOutput {
	return i.ToGetEnvironmentClustersMappingClusterArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentClustersMappingClusterArray) ToGetEnvironmentClustersMappingClusterArrayOutputWithContext(ctx context.Context) GetEnvironmentClustersMappingClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentClustersMappingClusterArrayOutput)
}

type GetEnvironmentClustersMappingClusterOutput struct{ *pulumi.OutputState }

func (GetEnvironmentClustersMappingClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentClustersMappingCluster)(nil)).Elem()
}

func (o GetEnvironmentClustersMappingClusterOutput) ToGetEnvironmentClustersMappingClusterOutput() GetEnvironmentClustersMappingClusterOutput {
	return o
}

func (o GetEnvironmentClustersMappingClusterOutput) ToGetEnvironmentClustersMappingClusterOutputWithContext(ctx context.Context) GetEnvironmentClustersMappingClusterOutput {
	return o
}

// agent identifier of the cluster (include scope prefix)
func (o GetEnvironmentClustersMappingClusterOutput) AgentIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentClustersMappingCluster) *string { return v.AgentIdentifier }).(pulumi.StringPtrOutput)
}

// identifier of the cluster
func (o GetEnvironmentClustersMappingClusterOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentClustersMappingCluster) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// name of the cluster
func (o GetEnvironmentClustersMappingClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentClustersMappingCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// scope at which the cluster exists in harness gitops, one of "ACCOUNT", "ORGANIZATION", "PROJECT". Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
func (o GetEnvironmentClustersMappingClusterOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentClustersMappingCluster) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type GetEnvironmentClustersMappingClusterArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentClustersMappingClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentClustersMappingCluster)(nil)).Elem()
}

func (o GetEnvironmentClustersMappingClusterArrayOutput) ToGetEnvironmentClustersMappingClusterArrayOutput() GetEnvironmentClustersMappingClusterArrayOutput {
	return o
}

func (o GetEnvironmentClustersMappingClusterArrayOutput) ToGetEnvironmentClustersMappingClusterArrayOutputWithContext(ctx context.Context) GetEnvironmentClustersMappingClusterArrayOutput {
	return o
}

func (o GetEnvironmentClustersMappingClusterArrayOutput) Index(i pulumi.IntInput) GetEnvironmentClustersMappingClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentClustersMappingCluster {
		return vs[0].([]GetEnvironmentClustersMappingCluster)[vs[1].(int)]
	}).(GetEnvironmentClustersMappingClusterOutput)
}

type GetEnvironmentGitDetails struct {
	// Name of the branch.
	Branch string `pulumi:"branch"`
	// Load environment yaml from fallback branch
	LoadFromFallbackBranch bool `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote environment
	RepoName string `pulumi:"repoName"`
}

// GetEnvironmentGitDetailsInput is an input type that accepts GetEnvironmentGitDetailsArgs and GetEnvironmentGitDetailsOutput values.
// You can construct a concrete instance of `GetEnvironmentGitDetailsInput` via:
//
//	GetEnvironmentGitDetailsArgs{...}
type GetEnvironmentGitDetailsInput interface {
	pulumi.Input

	ToGetEnvironmentGitDetailsOutput() GetEnvironmentGitDetailsOutput
	ToGetEnvironmentGitDetailsOutputWithContext(context.Context) GetEnvironmentGitDetailsOutput
}

type GetEnvironmentGitDetailsArgs struct {
	// Name of the branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Load environment yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolInput `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote environment
	RepoName pulumi.StringInput `pulumi:"repoName"`
}

func (GetEnvironmentGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentGitDetails)(nil)).Elem()
}

func (i GetEnvironmentGitDetailsArgs) ToGetEnvironmentGitDetailsOutput() GetEnvironmentGitDetailsOutput {
	return i.ToGetEnvironmentGitDetailsOutputWithContext(context.Background())
}

func (i GetEnvironmentGitDetailsArgs) ToGetEnvironmentGitDetailsOutputWithContext(ctx context.Context) GetEnvironmentGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentGitDetailsOutput)
}

func (i GetEnvironmentGitDetailsArgs) ToGetEnvironmentGitDetailsPtrOutput() GetEnvironmentGitDetailsPtrOutput {
	return i.ToGetEnvironmentGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetEnvironmentGitDetailsArgs) ToGetEnvironmentGitDetailsPtrOutputWithContext(ctx context.Context) GetEnvironmentGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentGitDetailsOutput).ToGetEnvironmentGitDetailsPtrOutputWithContext(ctx)
}

// GetEnvironmentGitDetailsPtrInput is an input type that accepts GetEnvironmentGitDetailsArgs, GetEnvironmentGitDetailsPtr and GetEnvironmentGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetEnvironmentGitDetailsPtrInput` via:
//
//	        GetEnvironmentGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetEnvironmentGitDetailsPtrInput interface {
	pulumi.Input

	ToGetEnvironmentGitDetailsPtrOutput() GetEnvironmentGitDetailsPtrOutput
	ToGetEnvironmentGitDetailsPtrOutputWithContext(context.Context) GetEnvironmentGitDetailsPtrOutput
}

type getEnvironmentGitDetailsPtrType GetEnvironmentGitDetailsArgs

func GetEnvironmentGitDetailsPtr(v *GetEnvironmentGitDetailsArgs) GetEnvironmentGitDetailsPtrInput {
	return (*getEnvironmentGitDetailsPtrType)(v)
}

func (*getEnvironmentGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetEnvironmentGitDetails)(nil)).Elem()
}

func (i *getEnvironmentGitDetailsPtrType) ToGetEnvironmentGitDetailsPtrOutput() GetEnvironmentGitDetailsPtrOutput {
	return i.ToGetEnvironmentGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getEnvironmentGitDetailsPtrType) ToGetEnvironmentGitDetailsPtrOutputWithContext(ctx context.Context) GetEnvironmentGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentGitDetailsPtrOutput)
}

type GetEnvironmentGitDetailsOutput struct{ *pulumi.OutputState }

func (GetEnvironmentGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentGitDetails)(nil)).Elem()
}

func (o GetEnvironmentGitDetailsOutput) ToGetEnvironmentGitDetailsOutput() GetEnvironmentGitDetailsOutput {
	return o
}

func (o GetEnvironmentGitDetailsOutput) ToGetEnvironmentGitDetailsOutputWithContext(ctx context.Context) GetEnvironmentGitDetailsOutput {
	return o
}

func (o GetEnvironmentGitDetailsOutput) ToGetEnvironmentGitDetailsPtrOutput() GetEnvironmentGitDetailsPtrOutput {
	return o.ToGetEnvironmentGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetEnvironmentGitDetailsOutput) ToGetEnvironmentGitDetailsPtrOutputWithContext(ctx context.Context) GetEnvironmentGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetEnvironmentGitDetails) *GetEnvironmentGitDetails {
		return &v
	}).(GetEnvironmentGitDetailsPtrOutput)
}

// Name of the branch.
func (o GetEnvironmentGitDetailsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentGitDetails) string { return v.Branch }).(pulumi.StringOutput)
}

// Load environment yaml from fallback branch
func (o GetEnvironmentGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentGitDetails) bool { return v.LoadFromFallbackBranch }).(pulumi.BoolOutput)
}

// Repo name of remote environment
func (o GetEnvironmentGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

type GetEnvironmentGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetEnvironmentGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetEnvironmentGitDetails)(nil)).Elem()
}

func (o GetEnvironmentGitDetailsPtrOutput) ToGetEnvironmentGitDetailsPtrOutput() GetEnvironmentGitDetailsPtrOutput {
	return o
}

func (o GetEnvironmentGitDetailsPtrOutput) ToGetEnvironmentGitDetailsPtrOutputWithContext(ctx context.Context) GetEnvironmentGitDetailsPtrOutput {
	return o
}

func (o GetEnvironmentGitDetailsPtrOutput) Elem() GetEnvironmentGitDetailsOutput {
	return o.ApplyT(func(v *GetEnvironmentGitDetails) GetEnvironmentGitDetails {
		if v != nil {
			return *v
		}
		var ret GetEnvironmentGitDetails
		return ret
	}).(GetEnvironmentGitDetailsOutput)
}

// Name of the branch.
func (o GetEnvironmentGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetEnvironmentGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// Load environment yaml from fallback branch
func (o GetEnvironmentGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetEnvironmentGitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Repo name of remote environment
func (o GetEnvironmentGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetEnvironmentGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

type GetEnvironmentListEnvironment struct {
	Identifier string `pulumi:"identifier"`
	Name       string `pulumi:"name"`
}

// GetEnvironmentListEnvironmentInput is an input type that accepts GetEnvironmentListEnvironmentArgs and GetEnvironmentListEnvironmentOutput values.
// You can construct a concrete instance of `GetEnvironmentListEnvironmentInput` via:
//
//	GetEnvironmentListEnvironmentArgs{...}
type GetEnvironmentListEnvironmentInput interface {
	pulumi.Input

	ToGetEnvironmentListEnvironmentOutput() GetEnvironmentListEnvironmentOutput
	ToGetEnvironmentListEnvironmentOutputWithContext(context.Context) GetEnvironmentListEnvironmentOutput
}

type GetEnvironmentListEnvironmentArgs struct {
	Identifier pulumi.StringInput `pulumi:"identifier"`
	Name       pulumi.StringInput `pulumi:"name"`
}

func (GetEnvironmentListEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentListEnvironment)(nil)).Elem()
}

func (i GetEnvironmentListEnvironmentArgs) ToGetEnvironmentListEnvironmentOutput() GetEnvironmentListEnvironmentOutput {
	return i.ToGetEnvironmentListEnvironmentOutputWithContext(context.Background())
}

func (i GetEnvironmentListEnvironmentArgs) ToGetEnvironmentListEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentListEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentListEnvironmentOutput)
}

// GetEnvironmentListEnvironmentArrayInput is an input type that accepts GetEnvironmentListEnvironmentArray and GetEnvironmentListEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentListEnvironmentArrayInput` via:
//
//	GetEnvironmentListEnvironmentArray{ GetEnvironmentListEnvironmentArgs{...} }
type GetEnvironmentListEnvironmentArrayInput interface {
	pulumi.Input

	ToGetEnvironmentListEnvironmentArrayOutput() GetEnvironmentListEnvironmentArrayOutput
	ToGetEnvironmentListEnvironmentArrayOutputWithContext(context.Context) GetEnvironmentListEnvironmentArrayOutput
}

type GetEnvironmentListEnvironmentArray []GetEnvironmentListEnvironmentInput

func (GetEnvironmentListEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentListEnvironment)(nil)).Elem()
}

func (i GetEnvironmentListEnvironmentArray) ToGetEnvironmentListEnvironmentArrayOutput() GetEnvironmentListEnvironmentArrayOutput {
	return i.ToGetEnvironmentListEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentListEnvironmentArray) ToGetEnvironmentListEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentListEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentListEnvironmentArrayOutput)
}

type GetEnvironmentListEnvironmentOutput struct{ *pulumi.OutputState }

func (GetEnvironmentListEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentListEnvironment)(nil)).Elem()
}

func (o GetEnvironmentListEnvironmentOutput) ToGetEnvironmentListEnvironmentOutput() GetEnvironmentListEnvironmentOutput {
	return o
}

func (o GetEnvironmentListEnvironmentOutput) ToGetEnvironmentListEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentListEnvironmentOutput {
	return o
}

func (o GetEnvironmentListEnvironmentOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentListEnvironment) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o GetEnvironmentListEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentListEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

type GetEnvironmentListEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentListEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentListEnvironment)(nil)).Elem()
}

func (o GetEnvironmentListEnvironmentArrayOutput) ToGetEnvironmentListEnvironmentArrayOutput() GetEnvironmentListEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentListEnvironmentArrayOutput) ToGetEnvironmentListEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentListEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentListEnvironmentArrayOutput) Index(i pulumi.IntInput) GetEnvironmentListEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentListEnvironment {
		return vs[0].([]GetEnvironmentListEnvironment)[vs[1].(int)]
	}).(GetEnvironmentListEnvironmentOutput)
}

type GetFileStoreFileCreatedBy struct {
	// User email
	Email string `pulumi:"email"`
	// User name
	Name string `pulumi:"name"`
}

// GetFileStoreFileCreatedByInput is an input type that accepts GetFileStoreFileCreatedByArgs and GetFileStoreFileCreatedByOutput values.
// You can construct a concrete instance of `GetFileStoreFileCreatedByInput` via:
//
//	GetFileStoreFileCreatedByArgs{...}
type GetFileStoreFileCreatedByInput interface {
	pulumi.Input

	ToGetFileStoreFileCreatedByOutput() GetFileStoreFileCreatedByOutput
	ToGetFileStoreFileCreatedByOutputWithContext(context.Context) GetFileStoreFileCreatedByOutput
}

type GetFileStoreFileCreatedByArgs struct {
	// User email
	Email pulumi.StringInput `pulumi:"email"`
	// User name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFileStoreFileCreatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFileCreatedBy)(nil)).Elem()
}

func (i GetFileStoreFileCreatedByArgs) ToGetFileStoreFileCreatedByOutput() GetFileStoreFileCreatedByOutput {
	return i.ToGetFileStoreFileCreatedByOutputWithContext(context.Background())
}

func (i GetFileStoreFileCreatedByArgs) ToGetFileStoreFileCreatedByOutputWithContext(ctx context.Context) GetFileStoreFileCreatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFileCreatedByOutput)
}

// GetFileStoreFileCreatedByArrayInput is an input type that accepts GetFileStoreFileCreatedByArray and GetFileStoreFileCreatedByArrayOutput values.
// You can construct a concrete instance of `GetFileStoreFileCreatedByArrayInput` via:
//
//	GetFileStoreFileCreatedByArray{ GetFileStoreFileCreatedByArgs{...} }
type GetFileStoreFileCreatedByArrayInput interface {
	pulumi.Input

	ToGetFileStoreFileCreatedByArrayOutput() GetFileStoreFileCreatedByArrayOutput
	ToGetFileStoreFileCreatedByArrayOutputWithContext(context.Context) GetFileStoreFileCreatedByArrayOutput
}

type GetFileStoreFileCreatedByArray []GetFileStoreFileCreatedByInput

func (GetFileStoreFileCreatedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFileCreatedBy)(nil)).Elem()
}

func (i GetFileStoreFileCreatedByArray) ToGetFileStoreFileCreatedByArrayOutput() GetFileStoreFileCreatedByArrayOutput {
	return i.ToGetFileStoreFileCreatedByArrayOutputWithContext(context.Background())
}

func (i GetFileStoreFileCreatedByArray) ToGetFileStoreFileCreatedByArrayOutputWithContext(ctx context.Context) GetFileStoreFileCreatedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFileCreatedByArrayOutput)
}

type GetFileStoreFileCreatedByOutput struct{ *pulumi.OutputState }

func (GetFileStoreFileCreatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFileCreatedBy)(nil)).Elem()
}

func (o GetFileStoreFileCreatedByOutput) ToGetFileStoreFileCreatedByOutput() GetFileStoreFileCreatedByOutput {
	return o
}

func (o GetFileStoreFileCreatedByOutput) ToGetFileStoreFileCreatedByOutputWithContext(ctx context.Context) GetFileStoreFileCreatedByOutput {
	return o
}

// User email
func (o GetFileStoreFileCreatedByOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFileCreatedBy) string { return v.Email }).(pulumi.StringOutput)
}

// User name
func (o GetFileStoreFileCreatedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFileCreatedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetFileStoreFileCreatedByArrayOutput struct{ *pulumi.OutputState }

func (GetFileStoreFileCreatedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFileCreatedBy)(nil)).Elem()
}

func (o GetFileStoreFileCreatedByArrayOutput) ToGetFileStoreFileCreatedByArrayOutput() GetFileStoreFileCreatedByArrayOutput {
	return o
}

func (o GetFileStoreFileCreatedByArrayOutput) ToGetFileStoreFileCreatedByArrayOutputWithContext(ctx context.Context) GetFileStoreFileCreatedByArrayOutput {
	return o
}

func (o GetFileStoreFileCreatedByArrayOutput) Index(i pulumi.IntInput) GetFileStoreFileCreatedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStoreFileCreatedBy {
		return vs[0].([]GetFileStoreFileCreatedBy)[vs[1].(int)]
	}).(GetFileStoreFileCreatedByOutput)
}

type GetFileStoreFileLastModifiedBy struct {
	// User email
	Email string `pulumi:"email"`
	// User name
	Name string `pulumi:"name"`
}

// GetFileStoreFileLastModifiedByInput is an input type that accepts GetFileStoreFileLastModifiedByArgs and GetFileStoreFileLastModifiedByOutput values.
// You can construct a concrete instance of `GetFileStoreFileLastModifiedByInput` via:
//
//	GetFileStoreFileLastModifiedByArgs{...}
type GetFileStoreFileLastModifiedByInput interface {
	pulumi.Input

	ToGetFileStoreFileLastModifiedByOutput() GetFileStoreFileLastModifiedByOutput
	ToGetFileStoreFileLastModifiedByOutputWithContext(context.Context) GetFileStoreFileLastModifiedByOutput
}

type GetFileStoreFileLastModifiedByArgs struct {
	// User email
	Email pulumi.StringInput `pulumi:"email"`
	// User name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFileStoreFileLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFileLastModifiedBy)(nil)).Elem()
}

func (i GetFileStoreFileLastModifiedByArgs) ToGetFileStoreFileLastModifiedByOutput() GetFileStoreFileLastModifiedByOutput {
	return i.ToGetFileStoreFileLastModifiedByOutputWithContext(context.Background())
}

func (i GetFileStoreFileLastModifiedByArgs) ToGetFileStoreFileLastModifiedByOutputWithContext(ctx context.Context) GetFileStoreFileLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFileLastModifiedByOutput)
}

// GetFileStoreFileLastModifiedByArrayInput is an input type that accepts GetFileStoreFileLastModifiedByArray and GetFileStoreFileLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetFileStoreFileLastModifiedByArrayInput` via:
//
//	GetFileStoreFileLastModifiedByArray{ GetFileStoreFileLastModifiedByArgs{...} }
type GetFileStoreFileLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetFileStoreFileLastModifiedByArrayOutput() GetFileStoreFileLastModifiedByArrayOutput
	ToGetFileStoreFileLastModifiedByArrayOutputWithContext(context.Context) GetFileStoreFileLastModifiedByArrayOutput
}

type GetFileStoreFileLastModifiedByArray []GetFileStoreFileLastModifiedByInput

func (GetFileStoreFileLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFileLastModifiedBy)(nil)).Elem()
}

func (i GetFileStoreFileLastModifiedByArray) ToGetFileStoreFileLastModifiedByArrayOutput() GetFileStoreFileLastModifiedByArrayOutput {
	return i.ToGetFileStoreFileLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetFileStoreFileLastModifiedByArray) ToGetFileStoreFileLastModifiedByArrayOutputWithContext(ctx context.Context) GetFileStoreFileLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFileLastModifiedByArrayOutput)
}

type GetFileStoreFileLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetFileStoreFileLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFileLastModifiedBy)(nil)).Elem()
}

func (o GetFileStoreFileLastModifiedByOutput) ToGetFileStoreFileLastModifiedByOutput() GetFileStoreFileLastModifiedByOutput {
	return o
}

func (o GetFileStoreFileLastModifiedByOutput) ToGetFileStoreFileLastModifiedByOutputWithContext(ctx context.Context) GetFileStoreFileLastModifiedByOutput {
	return o
}

// User email
func (o GetFileStoreFileLastModifiedByOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFileLastModifiedBy) string { return v.Email }).(pulumi.StringOutput)
}

// User name
func (o GetFileStoreFileLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFileLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetFileStoreFileLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetFileStoreFileLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFileLastModifiedBy)(nil)).Elem()
}

func (o GetFileStoreFileLastModifiedByArrayOutput) ToGetFileStoreFileLastModifiedByArrayOutput() GetFileStoreFileLastModifiedByArrayOutput {
	return o
}

func (o GetFileStoreFileLastModifiedByArrayOutput) ToGetFileStoreFileLastModifiedByArrayOutputWithContext(ctx context.Context) GetFileStoreFileLastModifiedByArrayOutput {
	return o
}

func (o GetFileStoreFileLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetFileStoreFileLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStoreFileLastModifiedBy {
		return vs[0].([]GetFileStoreFileLastModifiedBy)[vs[1].(int)]
	}).(GetFileStoreFileLastModifiedByOutput)
}

type GetFileStoreFolderCreatedBy struct {
	// User email
	Email string `pulumi:"email"`
	// User name
	Name string `pulumi:"name"`
}

// GetFileStoreFolderCreatedByInput is an input type that accepts GetFileStoreFolderCreatedByArgs and GetFileStoreFolderCreatedByOutput values.
// You can construct a concrete instance of `GetFileStoreFolderCreatedByInput` via:
//
//	GetFileStoreFolderCreatedByArgs{...}
type GetFileStoreFolderCreatedByInput interface {
	pulumi.Input

	ToGetFileStoreFolderCreatedByOutput() GetFileStoreFolderCreatedByOutput
	ToGetFileStoreFolderCreatedByOutputWithContext(context.Context) GetFileStoreFolderCreatedByOutput
}

type GetFileStoreFolderCreatedByArgs struct {
	// User email
	Email pulumi.StringInput `pulumi:"email"`
	// User name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFileStoreFolderCreatedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFolderCreatedBy)(nil)).Elem()
}

func (i GetFileStoreFolderCreatedByArgs) ToGetFileStoreFolderCreatedByOutput() GetFileStoreFolderCreatedByOutput {
	return i.ToGetFileStoreFolderCreatedByOutputWithContext(context.Background())
}

func (i GetFileStoreFolderCreatedByArgs) ToGetFileStoreFolderCreatedByOutputWithContext(ctx context.Context) GetFileStoreFolderCreatedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFolderCreatedByOutput)
}

// GetFileStoreFolderCreatedByArrayInput is an input type that accepts GetFileStoreFolderCreatedByArray and GetFileStoreFolderCreatedByArrayOutput values.
// You can construct a concrete instance of `GetFileStoreFolderCreatedByArrayInput` via:
//
//	GetFileStoreFolderCreatedByArray{ GetFileStoreFolderCreatedByArgs{...} }
type GetFileStoreFolderCreatedByArrayInput interface {
	pulumi.Input

	ToGetFileStoreFolderCreatedByArrayOutput() GetFileStoreFolderCreatedByArrayOutput
	ToGetFileStoreFolderCreatedByArrayOutputWithContext(context.Context) GetFileStoreFolderCreatedByArrayOutput
}

type GetFileStoreFolderCreatedByArray []GetFileStoreFolderCreatedByInput

func (GetFileStoreFolderCreatedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFolderCreatedBy)(nil)).Elem()
}

func (i GetFileStoreFolderCreatedByArray) ToGetFileStoreFolderCreatedByArrayOutput() GetFileStoreFolderCreatedByArrayOutput {
	return i.ToGetFileStoreFolderCreatedByArrayOutputWithContext(context.Background())
}

func (i GetFileStoreFolderCreatedByArray) ToGetFileStoreFolderCreatedByArrayOutputWithContext(ctx context.Context) GetFileStoreFolderCreatedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFolderCreatedByArrayOutput)
}

type GetFileStoreFolderCreatedByOutput struct{ *pulumi.OutputState }

func (GetFileStoreFolderCreatedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFolderCreatedBy)(nil)).Elem()
}

func (o GetFileStoreFolderCreatedByOutput) ToGetFileStoreFolderCreatedByOutput() GetFileStoreFolderCreatedByOutput {
	return o
}

func (o GetFileStoreFolderCreatedByOutput) ToGetFileStoreFolderCreatedByOutputWithContext(ctx context.Context) GetFileStoreFolderCreatedByOutput {
	return o
}

// User email
func (o GetFileStoreFolderCreatedByOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFolderCreatedBy) string { return v.Email }).(pulumi.StringOutput)
}

// User name
func (o GetFileStoreFolderCreatedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFolderCreatedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetFileStoreFolderCreatedByArrayOutput struct{ *pulumi.OutputState }

func (GetFileStoreFolderCreatedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFolderCreatedBy)(nil)).Elem()
}

func (o GetFileStoreFolderCreatedByArrayOutput) ToGetFileStoreFolderCreatedByArrayOutput() GetFileStoreFolderCreatedByArrayOutput {
	return o
}

func (o GetFileStoreFolderCreatedByArrayOutput) ToGetFileStoreFolderCreatedByArrayOutputWithContext(ctx context.Context) GetFileStoreFolderCreatedByArrayOutput {
	return o
}

func (o GetFileStoreFolderCreatedByArrayOutput) Index(i pulumi.IntInput) GetFileStoreFolderCreatedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStoreFolderCreatedBy {
		return vs[0].([]GetFileStoreFolderCreatedBy)[vs[1].(int)]
	}).(GetFileStoreFolderCreatedByOutput)
}

type GetFileStoreFolderLastModifiedBy struct {
	// User email
	Email string `pulumi:"email"`
	// User name
	Name string `pulumi:"name"`
}

// GetFileStoreFolderLastModifiedByInput is an input type that accepts GetFileStoreFolderLastModifiedByArgs and GetFileStoreFolderLastModifiedByOutput values.
// You can construct a concrete instance of `GetFileStoreFolderLastModifiedByInput` via:
//
//	GetFileStoreFolderLastModifiedByArgs{...}
type GetFileStoreFolderLastModifiedByInput interface {
	pulumi.Input

	ToGetFileStoreFolderLastModifiedByOutput() GetFileStoreFolderLastModifiedByOutput
	ToGetFileStoreFolderLastModifiedByOutputWithContext(context.Context) GetFileStoreFolderLastModifiedByOutput
}

type GetFileStoreFolderLastModifiedByArgs struct {
	// User email
	Email pulumi.StringInput `pulumi:"email"`
	// User name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetFileStoreFolderLastModifiedByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFolderLastModifiedBy)(nil)).Elem()
}

func (i GetFileStoreFolderLastModifiedByArgs) ToGetFileStoreFolderLastModifiedByOutput() GetFileStoreFolderLastModifiedByOutput {
	return i.ToGetFileStoreFolderLastModifiedByOutputWithContext(context.Background())
}

func (i GetFileStoreFolderLastModifiedByArgs) ToGetFileStoreFolderLastModifiedByOutputWithContext(ctx context.Context) GetFileStoreFolderLastModifiedByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFolderLastModifiedByOutput)
}

// GetFileStoreFolderLastModifiedByArrayInput is an input type that accepts GetFileStoreFolderLastModifiedByArray and GetFileStoreFolderLastModifiedByArrayOutput values.
// You can construct a concrete instance of `GetFileStoreFolderLastModifiedByArrayInput` via:
//
//	GetFileStoreFolderLastModifiedByArray{ GetFileStoreFolderLastModifiedByArgs{...} }
type GetFileStoreFolderLastModifiedByArrayInput interface {
	pulumi.Input

	ToGetFileStoreFolderLastModifiedByArrayOutput() GetFileStoreFolderLastModifiedByArrayOutput
	ToGetFileStoreFolderLastModifiedByArrayOutputWithContext(context.Context) GetFileStoreFolderLastModifiedByArrayOutput
}

type GetFileStoreFolderLastModifiedByArray []GetFileStoreFolderLastModifiedByInput

func (GetFileStoreFolderLastModifiedByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFolderLastModifiedBy)(nil)).Elem()
}

func (i GetFileStoreFolderLastModifiedByArray) ToGetFileStoreFolderLastModifiedByArrayOutput() GetFileStoreFolderLastModifiedByArrayOutput {
	return i.ToGetFileStoreFolderLastModifiedByArrayOutputWithContext(context.Background())
}

func (i GetFileStoreFolderLastModifiedByArray) ToGetFileStoreFolderLastModifiedByArrayOutputWithContext(ctx context.Context) GetFileStoreFolderLastModifiedByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileStoreFolderLastModifiedByArrayOutput)
}

type GetFileStoreFolderLastModifiedByOutput struct{ *pulumi.OutputState }

func (GetFileStoreFolderLastModifiedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileStoreFolderLastModifiedBy)(nil)).Elem()
}

func (o GetFileStoreFolderLastModifiedByOutput) ToGetFileStoreFolderLastModifiedByOutput() GetFileStoreFolderLastModifiedByOutput {
	return o
}

func (o GetFileStoreFolderLastModifiedByOutput) ToGetFileStoreFolderLastModifiedByOutputWithContext(ctx context.Context) GetFileStoreFolderLastModifiedByOutput {
	return o
}

// User email
func (o GetFileStoreFolderLastModifiedByOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFolderLastModifiedBy) string { return v.Email }).(pulumi.StringOutput)
}

// User name
func (o GetFileStoreFolderLastModifiedByOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileStoreFolderLastModifiedBy) string { return v.Name }).(pulumi.StringOutput)
}

type GetFileStoreFolderLastModifiedByArrayOutput struct{ *pulumi.OutputState }

func (GetFileStoreFolderLastModifiedByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileStoreFolderLastModifiedBy)(nil)).Elem()
}

func (o GetFileStoreFolderLastModifiedByArrayOutput) ToGetFileStoreFolderLastModifiedByArrayOutput() GetFileStoreFolderLastModifiedByArrayOutput {
	return o
}

func (o GetFileStoreFolderLastModifiedByArrayOutput) ToGetFileStoreFolderLastModifiedByArrayOutputWithContext(ctx context.Context) GetFileStoreFolderLastModifiedByArrayOutput {
	return o
}

func (o GetFileStoreFolderLastModifiedByArrayOutput) Index(i pulumi.IntInput) GetFileStoreFolderLastModifiedByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileStoreFolderLastModifiedBy {
		return vs[0].([]GetFileStoreFolderLastModifiedBy)[vs[1].(int)]
	}).(GetFileStoreFolderLastModifiedByOutput)
}

type GetFiltersFilterProperty struct {
	// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// GetFiltersFilterPropertyInput is an input type that accepts GetFiltersFilterPropertyArgs and GetFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetFiltersFilterPropertyInput` via:
//
//	GetFiltersFilterPropertyArgs{...}
type GetFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetFiltersFilterPropertyOutput() GetFiltersFilterPropertyOutput
	ToGetFiltersFilterPropertyOutputWithContext(context.Context) GetFiltersFilterPropertyOutput
}

type GetFiltersFilterPropertyArgs struct {
	// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFiltersFilterProperty)(nil)).Elem()
}

func (i GetFiltersFilterPropertyArgs) ToGetFiltersFilterPropertyOutput() GetFiltersFilterPropertyOutput {
	return i.ToGetFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetFiltersFilterPropertyArgs) ToGetFiltersFilterPropertyOutputWithContext(ctx context.Context) GetFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFiltersFilterPropertyOutput)
}

// GetFiltersFilterPropertyArrayInput is an input type that accepts GetFiltersFilterPropertyArray and GetFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetFiltersFilterPropertyArrayInput` via:
//
//	GetFiltersFilterPropertyArray{ GetFiltersFilterPropertyArgs{...} }
type GetFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetFiltersFilterPropertyArrayOutput() GetFiltersFilterPropertyArrayOutput
	ToGetFiltersFilterPropertyArrayOutputWithContext(context.Context) GetFiltersFilterPropertyArrayOutput
}

type GetFiltersFilterPropertyArray []GetFiltersFilterPropertyInput

func (GetFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFiltersFilterProperty)(nil)).Elem()
}

func (i GetFiltersFilterPropertyArray) ToGetFiltersFilterPropertyArrayOutput() GetFiltersFilterPropertyArrayOutput {
	return i.ToGetFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetFiltersFilterPropertyArray) ToGetFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFiltersFilterPropertyArrayOutput)
}

type GetFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFiltersFilterProperty)(nil)).Elem()
}

func (o GetFiltersFilterPropertyOutput) ToGetFiltersFilterPropertyOutput() GetFiltersFilterPropertyOutput {
	return o
}

func (o GetFiltersFilterPropertyOutput) ToGetFiltersFilterPropertyOutputWithContext(ctx context.Context) GetFiltersFilterPropertyOutput {
	return o
}

// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
func (o GetFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o GetFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFiltersFilterProperty)(nil)).Elem()
}

func (o GetFiltersFilterPropertyArrayOutput) ToGetFiltersFilterPropertyArrayOutput() GetFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetFiltersFilterPropertyArrayOutput) ToGetFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFiltersFilterProperty {
		return vs[0].([]GetFiltersFilterProperty)[vs[1].(int)]
	}).(GetFiltersFilterPropertyOutput)
}

type GetGcpCloudCostConnectorBillingExportSpec struct {
	// Data Set Id.
	DataSetId string `pulumi:"dataSetId"`
	// Table Id.
	TableId string `pulumi:"tableId"`
}

// GetGcpCloudCostConnectorBillingExportSpecInput is an input type that accepts GetGcpCloudCostConnectorBillingExportSpecArgs and GetGcpCloudCostConnectorBillingExportSpecOutput values.
// You can construct a concrete instance of `GetGcpCloudCostConnectorBillingExportSpecInput` via:
//
//	GetGcpCloudCostConnectorBillingExportSpecArgs{...}
type GetGcpCloudCostConnectorBillingExportSpecInput interface {
	pulumi.Input

	ToGetGcpCloudCostConnectorBillingExportSpecOutput() GetGcpCloudCostConnectorBillingExportSpecOutput
	ToGetGcpCloudCostConnectorBillingExportSpecOutputWithContext(context.Context) GetGcpCloudCostConnectorBillingExportSpecOutput
}

type GetGcpCloudCostConnectorBillingExportSpecArgs struct {
	// Data Set Id.
	DataSetId pulumi.StringInput `pulumi:"dataSetId"`
	// Table Id.
	TableId pulumi.StringInput `pulumi:"tableId"`
}

func (GetGcpCloudCostConnectorBillingExportSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (i GetGcpCloudCostConnectorBillingExportSpecArgs) ToGetGcpCloudCostConnectorBillingExportSpecOutput() GetGcpCloudCostConnectorBillingExportSpecOutput {
	return i.ToGetGcpCloudCostConnectorBillingExportSpecOutputWithContext(context.Background())
}

func (i GetGcpCloudCostConnectorBillingExportSpecArgs) ToGetGcpCloudCostConnectorBillingExportSpecOutputWithContext(ctx context.Context) GetGcpCloudCostConnectorBillingExportSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpCloudCostConnectorBillingExportSpecOutput)
}

// GetGcpCloudCostConnectorBillingExportSpecArrayInput is an input type that accepts GetGcpCloudCostConnectorBillingExportSpecArray and GetGcpCloudCostConnectorBillingExportSpecArrayOutput values.
// You can construct a concrete instance of `GetGcpCloudCostConnectorBillingExportSpecArrayInput` via:
//
//	GetGcpCloudCostConnectorBillingExportSpecArray{ GetGcpCloudCostConnectorBillingExportSpecArgs{...} }
type GetGcpCloudCostConnectorBillingExportSpecArrayInput interface {
	pulumi.Input

	ToGetGcpCloudCostConnectorBillingExportSpecArrayOutput() GetGcpCloudCostConnectorBillingExportSpecArrayOutput
	ToGetGcpCloudCostConnectorBillingExportSpecArrayOutputWithContext(context.Context) GetGcpCloudCostConnectorBillingExportSpecArrayOutput
}

type GetGcpCloudCostConnectorBillingExportSpecArray []GetGcpCloudCostConnectorBillingExportSpecInput

func (GetGcpCloudCostConnectorBillingExportSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (i GetGcpCloudCostConnectorBillingExportSpecArray) ToGetGcpCloudCostConnectorBillingExportSpecArrayOutput() GetGcpCloudCostConnectorBillingExportSpecArrayOutput {
	return i.ToGetGcpCloudCostConnectorBillingExportSpecArrayOutputWithContext(context.Background())
}

func (i GetGcpCloudCostConnectorBillingExportSpecArray) ToGetGcpCloudCostConnectorBillingExportSpecArrayOutputWithContext(ctx context.Context) GetGcpCloudCostConnectorBillingExportSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpCloudCostConnectorBillingExportSpecArrayOutput)
}

type GetGcpCloudCostConnectorBillingExportSpecOutput struct{ *pulumi.OutputState }

func (GetGcpCloudCostConnectorBillingExportSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (o GetGcpCloudCostConnectorBillingExportSpecOutput) ToGetGcpCloudCostConnectorBillingExportSpecOutput() GetGcpCloudCostConnectorBillingExportSpecOutput {
	return o
}

func (o GetGcpCloudCostConnectorBillingExportSpecOutput) ToGetGcpCloudCostConnectorBillingExportSpecOutputWithContext(ctx context.Context) GetGcpCloudCostConnectorBillingExportSpecOutput {
	return o
}

// Data Set Id.
func (o GetGcpCloudCostConnectorBillingExportSpecOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpCloudCostConnectorBillingExportSpec) string { return v.DataSetId }).(pulumi.StringOutput)
}

// Table Id.
func (o GetGcpCloudCostConnectorBillingExportSpecOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpCloudCostConnectorBillingExportSpec) string { return v.TableId }).(pulumi.StringOutput)
}

type GetGcpCloudCostConnectorBillingExportSpecArrayOutput struct{ *pulumi.OutputState }

func (GetGcpCloudCostConnectorBillingExportSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpCloudCostConnectorBillingExportSpec)(nil)).Elem()
}

func (o GetGcpCloudCostConnectorBillingExportSpecArrayOutput) ToGetGcpCloudCostConnectorBillingExportSpecArrayOutput() GetGcpCloudCostConnectorBillingExportSpecArrayOutput {
	return o
}

func (o GetGcpCloudCostConnectorBillingExportSpecArrayOutput) ToGetGcpCloudCostConnectorBillingExportSpecArrayOutputWithContext(ctx context.Context) GetGcpCloudCostConnectorBillingExportSpecArrayOutput {
	return o
}

func (o GetGcpCloudCostConnectorBillingExportSpecArrayOutput) Index(i pulumi.IntInput) GetGcpCloudCostConnectorBillingExportSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpCloudCostConnectorBillingExportSpec {
		return vs[0].([]GetGcpCloudCostConnectorBillingExportSpec)[vs[1].(int)]
	}).(GetGcpCloudCostConnectorBillingExportSpecOutput)
}

type GetGcpConnectorInheritFromDelegate struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetGcpConnectorInheritFromDelegateInput is an input type that accepts GetGcpConnectorInheritFromDelegateArgs and GetGcpConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetGcpConnectorInheritFromDelegateInput` via:
//
//	GetGcpConnectorInheritFromDelegateArgs{...}
type GetGcpConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGetGcpConnectorInheritFromDelegateOutput() GetGcpConnectorInheritFromDelegateOutput
	ToGetGcpConnectorInheritFromDelegateOutputWithContext(context.Context) GetGcpConnectorInheritFromDelegateOutput
}

type GetGcpConnectorInheritFromDelegateArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetGcpConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetGcpConnectorInheritFromDelegateArgs) ToGetGcpConnectorInheritFromDelegateOutput() GetGcpConnectorInheritFromDelegateOutput {
	return i.ToGetGcpConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetGcpConnectorInheritFromDelegateArgs) ToGetGcpConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorInheritFromDelegateOutput)
}

// GetGcpConnectorInheritFromDelegateArrayInput is an input type that accepts GetGcpConnectorInheritFromDelegateArray and GetGcpConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetGcpConnectorInheritFromDelegateArrayInput` via:
//
//	GetGcpConnectorInheritFromDelegateArray{ GetGcpConnectorInheritFromDelegateArgs{...} }
type GetGcpConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetGcpConnectorInheritFromDelegateArrayOutput() GetGcpConnectorInheritFromDelegateArrayOutput
	ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GetGcpConnectorInheritFromDelegateArrayOutput
}

type GetGcpConnectorInheritFromDelegateArray []GetGcpConnectorInheritFromDelegateInput

func (GetGcpConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetGcpConnectorInheritFromDelegateArray) ToGetGcpConnectorInheritFromDelegateArrayOutput() GetGcpConnectorInheritFromDelegateArrayOutput {
	return i.ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetGcpConnectorInheritFromDelegateArray) ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorInheritFromDelegateArrayOutput)
}

type GetGcpConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetGcpConnectorInheritFromDelegateOutput) ToGetGcpConnectorInheritFromDelegateOutput() GetGcpConnectorInheritFromDelegateOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateOutput) ToGetGcpConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GetGcpConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetGcpConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetGcpConnectorInheritFromDelegateArrayOutput) ToGetGcpConnectorInheritFromDelegateArrayOutput() GetGcpConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateArrayOutput) ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetGcpConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpConnectorInheritFromDelegate {
		return vs[0].([]GetGcpConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GetGcpConnectorInheritFromDelegateOutput)
}

type GetGcpConnectorManual struct {
	// The delegates to connect with.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetGcpConnectorManualInput is an input type that accepts GetGcpConnectorManualArgs and GetGcpConnectorManualOutput values.
// You can construct a concrete instance of `GetGcpConnectorManualInput` via:
//
//	GetGcpConnectorManualArgs{...}
type GetGcpConnectorManualInput interface {
	pulumi.Input

	ToGetGcpConnectorManualOutput() GetGcpConnectorManualOutput
	ToGetGcpConnectorManualOutputWithContext(context.Context) GetGcpConnectorManualOutput
}

type GetGcpConnectorManualArgs struct {
	// The delegates to connect with.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetGcpConnectorManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorManual)(nil)).Elem()
}

func (i GetGcpConnectorManualArgs) ToGetGcpConnectorManualOutput() GetGcpConnectorManualOutput {
	return i.ToGetGcpConnectorManualOutputWithContext(context.Background())
}

func (i GetGcpConnectorManualArgs) ToGetGcpConnectorManualOutputWithContext(ctx context.Context) GetGcpConnectorManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorManualOutput)
}

// GetGcpConnectorManualArrayInput is an input type that accepts GetGcpConnectorManualArray and GetGcpConnectorManualArrayOutput values.
// You can construct a concrete instance of `GetGcpConnectorManualArrayInput` via:
//
//	GetGcpConnectorManualArray{ GetGcpConnectorManualArgs{...} }
type GetGcpConnectorManualArrayInput interface {
	pulumi.Input

	ToGetGcpConnectorManualArrayOutput() GetGcpConnectorManualArrayOutput
	ToGetGcpConnectorManualArrayOutputWithContext(context.Context) GetGcpConnectorManualArrayOutput
}

type GetGcpConnectorManualArray []GetGcpConnectorManualInput

func (GetGcpConnectorManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorManual)(nil)).Elem()
}

func (i GetGcpConnectorManualArray) ToGetGcpConnectorManualArrayOutput() GetGcpConnectorManualArrayOutput {
	return i.ToGetGcpConnectorManualArrayOutputWithContext(context.Background())
}

func (i GetGcpConnectorManualArray) ToGetGcpConnectorManualArrayOutputWithContext(ctx context.Context) GetGcpConnectorManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorManualArrayOutput)
}

type GetGcpConnectorManualOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorManual)(nil)).Elem()
}

func (o GetGcpConnectorManualOutput) ToGetGcpConnectorManualOutput() GetGcpConnectorManualOutput {
	return o
}

func (o GetGcpConnectorManualOutput) ToGetGcpConnectorManualOutputWithContext(ctx context.Context) GetGcpConnectorManualOutput {
	return o
}

// The delegates to connect with.
func (o GetGcpConnectorManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpConnectorManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGcpConnectorManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpConnectorManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetGcpConnectorManualArrayOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorManual)(nil)).Elem()
}

func (o GetGcpConnectorManualArrayOutput) ToGetGcpConnectorManualArrayOutput() GetGcpConnectorManualArrayOutput {
	return o
}

func (o GetGcpConnectorManualArrayOutput) ToGetGcpConnectorManualArrayOutputWithContext(ctx context.Context) GetGcpConnectorManualArrayOutput {
	return o
}

func (o GetGcpConnectorManualArrayOutput) Index(i pulumi.IntInput) GetGcpConnectorManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpConnectorManual {
		return vs[0].([]GetGcpConnectorManual)[vs[1].(int)]
	}).(GetGcpConnectorManualOutput)
}

type GetGcpConnectorOidcAuthentication struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// The project number of the GCP project that is used to create the workload identity..
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The OIDC provider ID value configured in GCP.
	ProviderId string `pulumi:"providerId"`
	// The service account linked to workload identity pool while setting GCP workload identity provider.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// The workload pool ID value created in GCP.
	WorkloadPoolId string `pulumi:"workloadPoolId"`
}

// GetGcpConnectorOidcAuthenticationInput is an input type that accepts GetGcpConnectorOidcAuthenticationArgs and GetGcpConnectorOidcAuthenticationOutput values.
// You can construct a concrete instance of `GetGcpConnectorOidcAuthenticationInput` via:
//
//	GetGcpConnectorOidcAuthenticationArgs{...}
type GetGcpConnectorOidcAuthenticationInput interface {
	pulumi.Input

	ToGetGcpConnectorOidcAuthenticationOutput() GetGcpConnectorOidcAuthenticationOutput
	ToGetGcpConnectorOidcAuthenticationOutputWithContext(context.Context) GetGcpConnectorOidcAuthenticationOutput
}

type GetGcpConnectorOidcAuthenticationArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// The project number of the GCP project that is used to create the workload identity..
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The OIDC provider ID value configured in GCP.
	ProviderId pulumi.StringInput `pulumi:"providerId"`
	// The service account linked to workload identity pool while setting GCP workload identity provider.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
	// The workload pool ID value created in GCP.
	WorkloadPoolId pulumi.StringInput `pulumi:"workloadPoolId"`
}

func (GetGcpConnectorOidcAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorOidcAuthentication)(nil)).Elem()
}

func (i GetGcpConnectorOidcAuthenticationArgs) ToGetGcpConnectorOidcAuthenticationOutput() GetGcpConnectorOidcAuthenticationOutput {
	return i.ToGetGcpConnectorOidcAuthenticationOutputWithContext(context.Background())
}

func (i GetGcpConnectorOidcAuthenticationArgs) ToGetGcpConnectorOidcAuthenticationOutputWithContext(ctx context.Context) GetGcpConnectorOidcAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorOidcAuthenticationOutput)
}

// GetGcpConnectorOidcAuthenticationArrayInput is an input type that accepts GetGcpConnectorOidcAuthenticationArray and GetGcpConnectorOidcAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGcpConnectorOidcAuthenticationArrayInput` via:
//
//	GetGcpConnectorOidcAuthenticationArray{ GetGcpConnectorOidcAuthenticationArgs{...} }
type GetGcpConnectorOidcAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGcpConnectorOidcAuthenticationArrayOutput() GetGcpConnectorOidcAuthenticationArrayOutput
	ToGetGcpConnectorOidcAuthenticationArrayOutputWithContext(context.Context) GetGcpConnectorOidcAuthenticationArrayOutput
}

type GetGcpConnectorOidcAuthenticationArray []GetGcpConnectorOidcAuthenticationInput

func (GetGcpConnectorOidcAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorOidcAuthentication)(nil)).Elem()
}

func (i GetGcpConnectorOidcAuthenticationArray) ToGetGcpConnectorOidcAuthenticationArrayOutput() GetGcpConnectorOidcAuthenticationArrayOutput {
	return i.ToGetGcpConnectorOidcAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGcpConnectorOidcAuthenticationArray) ToGetGcpConnectorOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetGcpConnectorOidcAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorOidcAuthenticationArrayOutput)
}

type GetGcpConnectorOidcAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorOidcAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorOidcAuthentication)(nil)).Elem()
}

func (o GetGcpConnectorOidcAuthenticationOutput) ToGetGcpConnectorOidcAuthenticationOutput() GetGcpConnectorOidcAuthenticationOutput {
	return o
}

func (o GetGcpConnectorOidcAuthenticationOutput) ToGetGcpConnectorOidcAuthenticationOutputWithContext(ctx context.Context) GetGcpConnectorOidcAuthenticationOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GetGcpConnectorOidcAuthenticationOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpConnectorOidcAuthentication) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// The project number of the GCP project that is used to create the workload identity..
func (o GetGcpConnectorOidcAuthenticationOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpConnectorOidcAuthentication) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The OIDC provider ID value configured in GCP.
func (o GetGcpConnectorOidcAuthenticationOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpConnectorOidcAuthentication) string { return v.ProviderId }).(pulumi.StringOutput)
}

// The service account linked to workload identity pool while setting GCP workload identity provider.
func (o GetGcpConnectorOidcAuthenticationOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpConnectorOidcAuthentication) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The workload pool ID value created in GCP.
func (o GetGcpConnectorOidcAuthenticationOutput) WorkloadPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpConnectorOidcAuthentication) string { return v.WorkloadPoolId }).(pulumi.StringOutput)
}

type GetGcpConnectorOidcAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorOidcAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorOidcAuthentication)(nil)).Elem()
}

func (o GetGcpConnectorOidcAuthenticationArrayOutput) ToGetGcpConnectorOidcAuthenticationArrayOutput() GetGcpConnectorOidcAuthenticationArrayOutput {
	return o
}

func (o GetGcpConnectorOidcAuthenticationArrayOutput) ToGetGcpConnectorOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetGcpConnectorOidcAuthenticationArrayOutput {
	return o
}

func (o GetGcpConnectorOidcAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGcpConnectorOidcAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpConnectorOidcAuthentication {
		return vs[0].([]GetGcpConnectorOidcAuthentication)[vs[1].(int)]
	}).(GetGcpConnectorOidcAuthenticationOutput)
}

type GetGcpSecretManagerConnectorOidcAuthentication struct {
	// The project number of the GCP project that is used to create the workload identity..
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The OIDC provider ID value configured in GCP.
	ProviderId string `pulumi:"providerId"`
	// The service account linked to workload identity pool while setting GCP workload identity provider.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// The workload pool ID value created in GCP.
	WorkloadPoolId string `pulumi:"workloadPoolId"`
}

// GetGcpSecretManagerConnectorOidcAuthenticationInput is an input type that accepts GetGcpSecretManagerConnectorOidcAuthenticationArgs and GetGcpSecretManagerConnectorOidcAuthenticationOutput values.
// You can construct a concrete instance of `GetGcpSecretManagerConnectorOidcAuthenticationInput` via:
//
//	GetGcpSecretManagerConnectorOidcAuthenticationArgs{...}
type GetGcpSecretManagerConnectorOidcAuthenticationInput interface {
	pulumi.Input

	ToGetGcpSecretManagerConnectorOidcAuthenticationOutput() GetGcpSecretManagerConnectorOidcAuthenticationOutput
	ToGetGcpSecretManagerConnectorOidcAuthenticationOutputWithContext(context.Context) GetGcpSecretManagerConnectorOidcAuthenticationOutput
}

type GetGcpSecretManagerConnectorOidcAuthenticationArgs struct {
	// The project number of the GCP project that is used to create the workload identity..
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The OIDC provider ID value configured in GCP.
	ProviderId pulumi.StringInput `pulumi:"providerId"`
	// The service account linked to workload identity pool while setting GCP workload identity provider.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
	// The workload pool ID value created in GCP.
	WorkloadPoolId pulumi.StringInput `pulumi:"workloadPoolId"`
}

func (GetGcpSecretManagerConnectorOidcAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpSecretManagerConnectorOidcAuthentication)(nil)).Elem()
}

func (i GetGcpSecretManagerConnectorOidcAuthenticationArgs) ToGetGcpSecretManagerConnectorOidcAuthenticationOutput() GetGcpSecretManagerConnectorOidcAuthenticationOutput {
	return i.ToGetGcpSecretManagerConnectorOidcAuthenticationOutputWithContext(context.Background())
}

func (i GetGcpSecretManagerConnectorOidcAuthenticationArgs) ToGetGcpSecretManagerConnectorOidcAuthenticationOutputWithContext(ctx context.Context) GetGcpSecretManagerConnectorOidcAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpSecretManagerConnectorOidcAuthenticationOutput)
}

// GetGcpSecretManagerConnectorOidcAuthenticationArrayInput is an input type that accepts GetGcpSecretManagerConnectorOidcAuthenticationArray and GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGcpSecretManagerConnectorOidcAuthenticationArrayInput` via:
//
//	GetGcpSecretManagerConnectorOidcAuthenticationArray{ GetGcpSecretManagerConnectorOidcAuthenticationArgs{...} }
type GetGcpSecretManagerConnectorOidcAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutput() GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput
	ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutputWithContext(context.Context) GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput
}

type GetGcpSecretManagerConnectorOidcAuthenticationArray []GetGcpSecretManagerConnectorOidcAuthenticationInput

func (GetGcpSecretManagerConnectorOidcAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpSecretManagerConnectorOidcAuthentication)(nil)).Elem()
}

func (i GetGcpSecretManagerConnectorOidcAuthenticationArray) ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutput() GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput {
	return i.ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGcpSecretManagerConnectorOidcAuthenticationArray) ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput)
}

type GetGcpSecretManagerConnectorOidcAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGcpSecretManagerConnectorOidcAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpSecretManagerConnectorOidcAuthentication)(nil)).Elem()
}

func (o GetGcpSecretManagerConnectorOidcAuthenticationOutput) ToGetGcpSecretManagerConnectorOidcAuthenticationOutput() GetGcpSecretManagerConnectorOidcAuthenticationOutput {
	return o
}

func (o GetGcpSecretManagerConnectorOidcAuthenticationOutput) ToGetGcpSecretManagerConnectorOidcAuthenticationOutputWithContext(ctx context.Context) GetGcpSecretManagerConnectorOidcAuthenticationOutput {
	return o
}

// The project number of the GCP project that is used to create the workload identity..
func (o GetGcpSecretManagerConnectorOidcAuthenticationOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpSecretManagerConnectorOidcAuthentication) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The OIDC provider ID value configured in GCP.
func (o GetGcpSecretManagerConnectorOidcAuthenticationOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpSecretManagerConnectorOidcAuthentication) string { return v.ProviderId }).(pulumi.StringOutput)
}

// The service account linked to workload identity pool while setting GCP workload identity provider.
func (o GetGcpSecretManagerConnectorOidcAuthenticationOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpSecretManagerConnectorOidcAuthentication) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The workload pool ID value created in GCP.
func (o GetGcpSecretManagerConnectorOidcAuthenticationOutput) WorkloadPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpSecretManagerConnectorOidcAuthentication) string { return v.WorkloadPoolId }).(pulumi.StringOutput)
}

type GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpSecretManagerConnectorOidcAuthentication)(nil)).Elem()
}

func (o GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput) ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutput() GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput {
	return o
}

func (o GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput) ToGetGcpSecretManagerConnectorOidcAuthenticationArrayOutputWithContext(ctx context.Context) GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput {
	return o
}

func (o GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGcpSecretManagerConnectorOidcAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpSecretManagerConnectorOidcAuthentication {
		return vs[0].([]GetGcpSecretManagerConnectorOidcAuthentication)[vs[1].(int)]
	}).(GetGcpSecretManagerConnectorOidcAuthenticationOutput)
}

type GetGitConnectorCredential struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https []GetGitConnectorCredentialHttp `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes []GetGitConnectorCredentialSsh `pulumi:"sshes"`
}

// GetGitConnectorCredentialInput is an input type that accepts GetGitConnectorCredentialArgs and GetGitConnectorCredentialOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialInput` via:
//
//	GetGitConnectorCredentialArgs{...}
type GetGitConnectorCredentialInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialOutput() GetGitConnectorCredentialOutput
	ToGetGitConnectorCredentialOutputWithContext(context.Context) GetGitConnectorCredentialOutput
}

type GetGitConnectorCredentialArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https GetGitConnectorCredentialHttpArrayInput `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes GetGitConnectorCredentialSshArrayInput `pulumi:"sshes"`
}

func (GetGitConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredential)(nil)).Elem()
}

func (i GetGitConnectorCredentialArgs) ToGetGitConnectorCredentialOutput() GetGitConnectorCredentialOutput {
	return i.ToGetGitConnectorCredentialOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialArgs) ToGetGitConnectorCredentialOutputWithContext(ctx context.Context) GetGitConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialOutput)
}

// GetGitConnectorCredentialArrayInput is an input type that accepts GetGitConnectorCredentialArray and GetGitConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialArrayInput` via:
//
//	GetGitConnectorCredentialArray{ GetGitConnectorCredentialArgs{...} }
type GetGitConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialArrayOutput() GetGitConnectorCredentialArrayOutput
	ToGetGitConnectorCredentialArrayOutputWithContext(context.Context) GetGitConnectorCredentialArrayOutput
}

type GetGitConnectorCredentialArray []GetGitConnectorCredentialInput

func (GetGitConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredential)(nil)).Elem()
}

func (i GetGitConnectorCredentialArray) ToGetGitConnectorCredentialArrayOutput() GetGitConnectorCredentialArrayOutput {
	return i.ToGetGitConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialArray) ToGetGitConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialArrayOutput)
}

type GetGitConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredential)(nil)).Elem()
}

func (o GetGitConnectorCredentialOutput) ToGetGitConnectorCredentialOutput() GetGitConnectorCredentialOutput {
	return o
}

func (o GetGitConnectorCredentialOutput) ToGetGitConnectorCredentialOutputWithContext(ctx context.Context) GetGitConnectorCredentialOutput {
	return o
}

// Authenticate using Username and password over http(s) for the connection.
func (o GetGitConnectorCredentialOutput) Https() GetGitConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGitConnectorCredential) []GetGitConnectorCredentialHttp { return v.Https }).(GetGitConnectorCredentialHttpArrayOutput)
}

// Authenticate using SSH for the connection.
func (o GetGitConnectorCredentialOutput) Sshes() GetGitConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGitConnectorCredential) []GetGitConnectorCredentialSsh { return v.Sshes }).(GetGitConnectorCredentialSshArrayOutput)
}

type GetGitConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredential)(nil)).Elem()
}

func (o GetGitConnectorCredentialArrayOutput) ToGetGitConnectorCredentialArrayOutput() GetGitConnectorCredentialArrayOutput {
	return o
}

func (o GetGitConnectorCredentialArrayOutput) ToGetGitConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialArrayOutput {
	return o
}

func (o GetGitConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetGitConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitConnectorCredential {
		return vs[0].([]GetGitConnectorCredential)[vs[1].(int)]
	}).(GetGitConnectorCredentialOutput)
}

type GetGitConnectorCredentialHttp struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGitConnectorCredentialHttpInput is an input type that accepts GetGitConnectorCredentialHttpArgs and GetGitConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialHttpInput` via:
//
//	GetGitConnectorCredentialHttpArgs{...}
type GetGitConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialHttpOutput() GetGitConnectorCredentialHttpOutput
	ToGetGitConnectorCredentialHttpOutputWithContext(context.Context) GetGitConnectorCredentialHttpOutput
}

type GetGitConnectorCredentialHttpArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGitConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitConnectorCredentialHttpArgs) ToGetGitConnectorCredentialHttpOutput() GetGitConnectorCredentialHttpOutput {
	return i.ToGetGitConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialHttpArgs) ToGetGitConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialHttpOutput)
}

// GetGitConnectorCredentialHttpArrayInput is an input type that accepts GetGitConnectorCredentialHttpArray and GetGitConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialHttpArrayInput` via:
//
//	GetGitConnectorCredentialHttpArray{ GetGitConnectorCredentialHttpArgs{...} }
type GetGitConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialHttpArrayOutput() GetGitConnectorCredentialHttpArrayOutput
	ToGetGitConnectorCredentialHttpArrayOutputWithContext(context.Context) GetGitConnectorCredentialHttpArrayOutput
}

type GetGitConnectorCredentialHttpArray []GetGitConnectorCredentialHttpInput

func (GetGitConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitConnectorCredentialHttpArray) ToGetGitConnectorCredentialHttpArrayOutput() GetGitConnectorCredentialHttpArrayOutput {
	return i.ToGetGitConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialHttpArray) ToGetGitConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialHttpArrayOutput)
}

type GetGitConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitConnectorCredentialHttpOutput) ToGetGitConnectorCredentialHttpOutput() GetGitConnectorCredentialHttpOutput {
	return o
}

func (o GetGitConnectorCredentialHttpOutput) ToGetGitConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitConnectorCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetGitConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGitConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitConnectorCredentialHttpArrayOutput) ToGetGitConnectorCredentialHttpArrayOutput() GetGitConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitConnectorCredentialHttpArrayOutput) ToGetGitConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGitConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitConnectorCredentialHttp {
		return vs[0].([]GetGitConnectorCredentialHttp)[vs[1].(int)]
	}).(GetGitConnectorCredentialHttpOutput)
}

type GetGitConnectorCredentialSsh struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGitConnectorCredentialSshInput is an input type that accepts GetGitConnectorCredentialSshArgs and GetGitConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialSshInput` via:
//
//	GetGitConnectorCredentialSshArgs{...}
type GetGitConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialSshOutput() GetGitConnectorCredentialSshOutput
	ToGetGitConnectorCredentialSshOutputWithContext(context.Context) GetGitConnectorCredentialSshOutput
}

type GetGitConnectorCredentialSshArgs struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGitConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitConnectorCredentialSshArgs) ToGetGitConnectorCredentialSshOutput() GetGitConnectorCredentialSshOutput {
	return i.ToGetGitConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialSshArgs) ToGetGitConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialSshOutput)
}

// GetGitConnectorCredentialSshArrayInput is an input type that accepts GetGitConnectorCredentialSshArray and GetGitConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialSshArrayInput` via:
//
//	GetGitConnectorCredentialSshArray{ GetGitConnectorCredentialSshArgs{...} }
type GetGitConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialSshArrayOutput() GetGitConnectorCredentialSshArrayOutput
	ToGetGitConnectorCredentialSshArrayOutputWithContext(context.Context) GetGitConnectorCredentialSshArrayOutput
}

type GetGitConnectorCredentialSshArray []GetGitConnectorCredentialSshInput

func (GetGitConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitConnectorCredentialSshArray) ToGetGitConnectorCredentialSshArrayOutput() GetGitConnectorCredentialSshArrayOutput {
	return i.ToGetGitConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialSshArray) ToGetGitConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialSshArrayOutput)
}

type GetGitConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitConnectorCredentialSshOutput) ToGetGitConnectorCredentialSshOutput() GetGitConnectorCredentialSshOutput {
	return o
}

func (o GetGitConnectorCredentialSshOutput) ToGetGitConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshOutput {
	return o
}

// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGitConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitConnectorCredentialSshArrayOutput) ToGetGitConnectorCredentialSshArrayOutput() GetGitConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitConnectorCredentialSshArrayOutput) ToGetGitConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGitConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitConnectorCredentialSsh {
		return vs[0].([]GetGitConnectorCredentialSsh)[vs[1].(int)]
	}).(GetGitConnectorCredentialSshOutput)
}

type GetGithubConnectorApiAuthentication struct {
	// Configuration for using the github app for interacting with the github api.
	GithubApps []GetGithubConnectorApiAuthenticationGithubApp `pulumi:"githubApps"`
	// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// GetGithubConnectorApiAuthenticationInput is an input type that accepts GetGithubConnectorApiAuthenticationArgs and GetGithubConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationInput` via:
//
//	GetGithubConnectorApiAuthenticationArgs{...}
type GetGithubConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationOutput() GetGithubConnectorApiAuthenticationOutput
	ToGetGithubConnectorApiAuthenticationOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationOutput
}

type GetGithubConnectorApiAuthenticationArgs struct {
	// Configuration for using the github app for interacting with the github api.
	GithubApps GetGithubConnectorApiAuthenticationGithubAppArrayInput `pulumi:"githubApps"`
	// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetGithubConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationArgs) ToGetGithubConnectorApiAuthenticationOutput() GetGithubConnectorApiAuthenticationOutput {
	return i.ToGetGithubConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationArgs) ToGetGithubConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationOutput)
}

// GetGithubConnectorApiAuthenticationArrayInput is an input type that accepts GetGithubConnectorApiAuthenticationArray and GetGithubConnectorApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationArrayInput` via:
//
//	GetGithubConnectorApiAuthenticationArray{ GetGithubConnectorApiAuthenticationArgs{...} }
type GetGithubConnectorApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationArrayOutput() GetGithubConnectorApiAuthenticationArrayOutput
	ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationArrayOutput
}

type GetGithubConnectorApiAuthenticationArray []GetGithubConnectorApiAuthenticationInput

func (GetGithubConnectorApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationArray) ToGetGithubConnectorApiAuthenticationArrayOutput() GetGithubConnectorApiAuthenticationArrayOutput {
	return i.ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationArray) ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationArrayOutput)
}

type GetGithubConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationOutput) ToGetGithubConnectorApiAuthenticationOutput() GetGithubConnectorApiAuthenticationOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationOutput) ToGetGithubConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationOutput {
	return o
}

// Configuration for using the github app for interacting with the github api.
func (o GetGithubConnectorApiAuthenticationOutput) GithubApps() GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthentication) []GetGithubConnectorApiAuthenticationGithubApp {
		return v.GithubApps
	}).(GetGithubConnectorApiAuthenticationGithubAppArrayOutput)
}

// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetGithubConnectorApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationArrayOutput) ToGetGithubConnectorApiAuthenticationArrayOutput() GetGithubConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationArrayOutput) ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorApiAuthentication {
		return vs[0].([]GetGithubConnectorApiAuthentication)[vs[1].(int)]
	}).(GetGithubConnectorApiAuthenticationOutput)
}

type GetGithubConnectorApiAuthenticationGithubApp struct {
	// Enter the GitHub App ID from the GitHub App General tab.
	ApplicationId string `pulumi:"applicationId"`
	// Reference to the secret containing application id To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApplicationIdRef string `pulumi:"applicationIdRef"`
	// Enter the Installation ID located in the URL of the installed GitHub App.
	InstallationId string `pulumi:"installationId"`
	// Reference to the secret containing installation id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	InstallationIdRef string `pulumi:"installationIdRef"`
	// Reference to the secret containing the private key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef string `pulumi:"privateKeyRef"`
}

// GetGithubConnectorApiAuthenticationGithubAppInput is an input type that accepts GetGithubConnectorApiAuthenticationGithubAppArgs and GetGithubConnectorApiAuthenticationGithubAppOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationGithubAppInput` via:
//
//	GetGithubConnectorApiAuthenticationGithubAppArgs{...}
type GetGithubConnectorApiAuthenticationGithubAppInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationGithubAppOutput() GetGithubConnectorApiAuthenticationGithubAppOutput
	ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationGithubAppOutput
}

type GetGithubConnectorApiAuthenticationGithubAppArgs struct {
	// Enter the GitHub App ID from the GitHub App General tab.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Reference to the secret containing application id To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApplicationIdRef pulumi.StringInput `pulumi:"applicationIdRef"`
	// Enter the Installation ID located in the URL of the installed GitHub App.
	InstallationId pulumi.StringInput `pulumi:"installationId"`
	// Reference to the secret containing installation id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	InstallationIdRef pulumi.StringInput `pulumi:"installationIdRef"`
	// Reference to the secret containing the private key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef pulumi.StringInput `pulumi:"privateKeyRef"`
}

func (GetGithubConnectorApiAuthenticationGithubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationGithubAppArgs) ToGetGithubConnectorApiAuthenticationGithubAppOutput() GetGithubConnectorApiAuthenticationGithubAppOutput {
	return i.ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationGithubAppArgs) ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationGithubAppOutput)
}

// GetGithubConnectorApiAuthenticationGithubAppArrayInput is an input type that accepts GetGithubConnectorApiAuthenticationGithubAppArray and GetGithubConnectorApiAuthenticationGithubAppArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationGithubAppArrayInput` via:
//
//	GetGithubConnectorApiAuthenticationGithubAppArray{ GetGithubConnectorApiAuthenticationGithubAppArgs{...} }
type GetGithubConnectorApiAuthenticationGithubAppArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationGithubAppArrayOutput() GetGithubConnectorApiAuthenticationGithubAppArrayOutput
	ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationGithubAppArrayOutput
}

type GetGithubConnectorApiAuthenticationGithubAppArray []GetGithubConnectorApiAuthenticationGithubAppInput

func (GetGithubConnectorApiAuthenticationGithubAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationGithubAppArray) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutput() GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return i.ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationGithubAppArray) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationGithubAppArrayOutput)
}

type GetGithubConnectorApiAuthenticationGithubAppOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationGithubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ToGetGithubConnectorApiAuthenticationGithubAppOutput() GetGithubConnectorApiAuthenticationGithubAppOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppOutput {
	return o
}

// Enter the GitHub App ID from the GitHub App General tab.
func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Reference to the secret containing application id To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ApplicationIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.ApplicationIdRef }).(pulumi.StringOutput)
}

// Enter the Installation ID located in the URL of the installed GitHub App.
func (o GetGithubConnectorApiAuthenticationGithubAppOutput) InstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.InstallationId }).(pulumi.StringOutput)
}

// Reference to the secret containing installation id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorApiAuthenticationGithubAppOutput) InstallationIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.InstallationIdRef }).(pulumi.StringOutput)
}

// Reference to the secret containing the private key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorApiAuthenticationGithubAppOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

type GetGithubConnectorApiAuthenticationGithubAppArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationGithubAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationGithubAppArrayOutput) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutput() GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppArrayOutput) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorApiAuthenticationGithubAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorApiAuthenticationGithubApp {
		return vs[0].([]GetGithubConnectorApiAuthenticationGithubApp)[vs[1].(int)]
	}).(GetGithubConnectorApiAuthenticationGithubAppOutput)
}

type GetGithubConnectorCredential struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https []GetGithubConnectorCredentialHttp `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes []GetGithubConnectorCredentialSsh `pulumi:"sshes"`
}

// GetGithubConnectorCredentialInput is an input type that accepts GetGithubConnectorCredentialArgs and GetGithubConnectorCredentialOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialInput` via:
//
//	GetGithubConnectorCredentialArgs{...}
type GetGithubConnectorCredentialInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialOutput() GetGithubConnectorCredentialOutput
	ToGetGithubConnectorCredentialOutputWithContext(context.Context) GetGithubConnectorCredentialOutput
}

type GetGithubConnectorCredentialArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https GetGithubConnectorCredentialHttpArrayInput `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes GetGithubConnectorCredentialSshArrayInput `pulumi:"sshes"`
}

func (GetGithubConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredential)(nil)).Elem()
}

func (i GetGithubConnectorCredentialArgs) ToGetGithubConnectorCredentialOutput() GetGithubConnectorCredentialOutput {
	return i.ToGetGithubConnectorCredentialOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialArgs) ToGetGithubConnectorCredentialOutputWithContext(ctx context.Context) GetGithubConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialOutput)
}

// GetGithubConnectorCredentialArrayInput is an input type that accepts GetGithubConnectorCredentialArray and GetGithubConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialArrayInput` via:
//
//	GetGithubConnectorCredentialArray{ GetGithubConnectorCredentialArgs{...} }
type GetGithubConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialArrayOutput() GetGithubConnectorCredentialArrayOutput
	ToGetGithubConnectorCredentialArrayOutputWithContext(context.Context) GetGithubConnectorCredentialArrayOutput
}

type GetGithubConnectorCredentialArray []GetGithubConnectorCredentialInput

func (GetGithubConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredential)(nil)).Elem()
}

func (i GetGithubConnectorCredentialArray) ToGetGithubConnectorCredentialArrayOutput() GetGithubConnectorCredentialArrayOutput {
	return i.ToGetGithubConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialArray) ToGetGithubConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialArrayOutput)
}

type GetGithubConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredential)(nil)).Elem()
}

func (o GetGithubConnectorCredentialOutput) ToGetGithubConnectorCredentialOutput() GetGithubConnectorCredentialOutput {
	return o
}

func (o GetGithubConnectorCredentialOutput) ToGetGithubConnectorCredentialOutputWithContext(ctx context.Context) GetGithubConnectorCredentialOutput {
	return o
}

// Authenticate using Username and password over http(s) for the connection.
func (o GetGithubConnectorCredentialOutput) Https() GetGithubConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorCredential) []GetGithubConnectorCredentialHttp { return v.Https }).(GetGithubConnectorCredentialHttpArrayOutput)
}

// Authenticate using SSH for the connection.
func (o GetGithubConnectorCredentialOutput) Sshes() GetGithubConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorCredential) []GetGithubConnectorCredentialSsh { return v.Sshes }).(GetGithubConnectorCredentialSshArrayOutput)
}

type GetGithubConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredential)(nil)).Elem()
}

func (o GetGithubConnectorCredentialArrayOutput) ToGetGithubConnectorCredentialArrayOutput() GetGithubConnectorCredentialArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialArrayOutput) ToGetGithubConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredential {
		return vs[0].([]GetGithubConnectorCredential)[vs[1].(int)]
	}).(GetGithubConnectorCredentialOutput)
}

type GetGithubConnectorCredentialHttp struct {
	// Configuration for using the github http anonymous for interacting with the github api.
	Anonymouses []GetGithubConnectorCredentialHttpAnonymouse `pulumi:"anonymouses"`
	// Configuration for using the github app for interacting with the github api.
	GithubApps []GetGithubConnectorCredentialHttpGithubApp `pulumi:"githubApps"`
	// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGithubConnectorCredentialHttpInput is an input type that accepts GetGithubConnectorCredentialHttpArgs and GetGithubConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpInput` via:
//
//	GetGithubConnectorCredentialHttpArgs{...}
type GetGithubConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpOutput() GetGithubConnectorCredentialHttpOutput
	ToGetGithubConnectorCredentialHttpOutputWithContext(context.Context) GetGithubConnectorCredentialHttpOutput
}

type GetGithubConnectorCredentialHttpArgs struct {
	// Configuration for using the github http anonymous for interacting with the github api.
	Anonymouses GetGithubConnectorCredentialHttpAnonymouseArrayInput `pulumi:"anonymouses"`
	// Configuration for using the github app for interacting with the github api.
	GithubApps GetGithubConnectorCredentialHttpGithubAppArrayInput `pulumi:"githubApps"`
	// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGithubConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpArgs) ToGetGithubConnectorCredentialHttpOutput() GetGithubConnectorCredentialHttpOutput {
	return i.ToGetGithubConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpArgs) ToGetGithubConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpOutput)
}

// GetGithubConnectorCredentialHttpArrayInput is an input type that accepts GetGithubConnectorCredentialHttpArray and GetGithubConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpArrayInput` via:
//
//	GetGithubConnectorCredentialHttpArray{ GetGithubConnectorCredentialHttpArgs{...} }
type GetGithubConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpArrayOutput() GetGithubConnectorCredentialHttpArrayOutput
	ToGetGithubConnectorCredentialHttpArrayOutputWithContext(context.Context) GetGithubConnectorCredentialHttpArrayOutput
}

type GetGithubConnectorCredentialHttpArray []GetGithubConnectorCredentialHttpInput

func (GetGithubConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpArray) ToGetGithubConnectorCredentialHttpArrayOutput() GetGithubConnectorCredentialHttpArrayOutput {
	return i.ToGetGithubConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpArray) ToGetGithubConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpArrayOutput)
}

type GetGithubConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpOutput) ToGetGithubConnectorCredentialHttpOutput() GetGithubConnectorCredentialHttpOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpOutput) ToGetGithubConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpOutput {
	return o
}

// Configuration for using the github http anonymous for interacting with the github api.
func (o GetGithubConnectorCredentialHttpOutput) Anonymouses() GetGithubConnectorCredentialHttpAnonymouseArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) []GetGithubConnectorCredentialHttpAnonymouse {
		return v.Anonymouses
	}).(GetGithubConnectorCredentialHttpAnonymouseArrayOutput)
}

// Configuration for using the github app for interacting with the github api.
func (o GetGithubConnectorCredentialHttpOutput) GithubApps() GetGithubConnectorCredentialHttpGithubAppArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) []GetGithubConnectorCredentialHttpGithubApp {
		return v.GithubApps
	}).(GetGithubConnectorCredentialHttpGithubAppArrayOutput)
}

// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetGithubConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGithubConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpArrayOutput) ToGetGithubConnectorCredentialHttpArrayOutput() GetGithubConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpArrayOutput) ToGetGithubConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredentialHttp {
		return vs[0].([]GetGithubConnectorCredentialHttp)[vs[1].(int)]
	}).(GetGithubConnectorCredentialHttpOutput)
}

type GetGithubConnectorCredentialHttpAnonymouse struct {
}

// GetGithubConnectorCredentialHttpAnonymouseInput is an input type that accepts GetGithubConnectorCredentialHttpAnonymouseArgs and GetGithubConnectorCredentialHttpAnonymouseOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpAnonymouseInput` via:
//
//	GetGithubConnectorCredentialHttpAnonymouseArgs{...}
type GetGithubConnectorCredentialHttpAnonymouseInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpAnonymouseOutput() GetGithubConnectorCredentialHttpAnonymouseOutput
	ToGetGithubConnectorCredentialHttpAnonymouseOutputWithContext(context.Context) GetGithubConnectorCredentialHttpAnonymouseOutput
}

type GetGithubConnectorCredentialHttpAnonymouseArgs struct {
}

func (GetGithubConnectorCredentialHttpAnonymouseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttpAnonymouse)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpAnonymouseArgs) ToGetGithubConnectorCredentialHttpAnonymouseOutput() GetGithubConnectorCredentialHttpAnonymouseOutput {
	return i.ToGetGithubConnectorCredentialHttpAnonymouseOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpAnonymouseArgs) ToGetGithubConnectorCredentialHttpAnonymouseOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpAnonymouseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpAnonymouseOutput)
}

// GetGithubConnectorCredentialHttpAnonymouseArrayInput is an input type that accepts GetGithubConnectorCredentialHttpAnonymouseArray and GetGithubConnectorCredentialHttpAnonymouseArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpAnonymouseArrayInput` via:
//
//	GetGithubConnectorCredentialHttpAnonymouseArray{ GetGithubConnectorCredentialHttpAnonymouseArgs{...} }
type GetGithubConnectorCredentialHttpAnonymouseArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpAnonymouseArrayOutput() GetGithubConnectorCredentialHttpAnonymouseArrayOutput
	ToGetGithubConnectorCredentialHttpAnonymouseArrayOutputWithContext(context.Context) GetGithubConnectorCredentialHttpAnonymouseArrayOutput
}

type GetGithubConnectorCredentialHttpAnonymouseArray []GetGithubConnectorCredentialHttpAnonymouseInput

func (GetGithubConnectorCredentialHttpAnonymouseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttpAnonymouse)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpAnonymouseArray) ToGetGithubConnectorCredentialHttpAnonymouseArrayOutput() GetGithubConnectorCredentialHttpAnonymouseArrayOutput {
	return i.ToGetGithubConnectorCredentialHttpAnonymouseArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpAnonymouseArray) ToGetGithubConnectorCredentialHttpAnonymouseArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpAnonymouseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpAnonymouseArrayOutput)
}

type GetGithubConnectorCredentialHttpAnonymouseOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpAnonymouseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttpAnonymouse)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpAnonymouseOutput) ToGetGithubConnectorCredentialHttpAnonymouseOutput() GetGithubConnectorCredentialHttpAnonymouseOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpAnonymouseOutput) ToGetGithubConnectorCredentialHttpAnonymouseOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpAnonymouseOutput {
	return o
}

type GetGithubConnectorCredentialHttpAnonymouseArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpAnonymouseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttpAnonymouse)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpAnonymouseArrayOutput) ToGetGithubConnectorCredentialHttpAnonymouseArrayOutput() GetGithubConnectorCredentialHttpAnonymouseArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpAnonymouseArrayOutput) ToGetGithubConnectorCredentialHttpAnonymouseArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpAnonymouseArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpAnonymouseArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialHttpAnonymouseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredentialHttpAnonymouse {
		return vs[0].([]GetGithubConnectorCredentialHttpAnonymouse)[vs[1].(int)]
	}).(GetGithubConnectorCredentialHttpAnonymouseOutput)
}

type GetGithubConnectorCredentialHttpGithubApp struct {
	// Enter the GitHub App ID from the GitHub App General tab.
	ApplicationId string `pulumi:"applicationId"`
	// Reference to the secret containing application id To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApplicationIdRef string `pulumi:"applicationIdRef"`
	// Enter the Installation ID located in the URL of the installed GitHub App.
	InstallationId string `pulumi:"installationId"`
	// Reference to the secret containing installation id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	InstallationIdRef string `pulumi:"installationIdRef"`
	// Reference to the secret containing the private key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef string `pulumi:"privateKeyRef"`
}

// GetGithubConnectorCredentialHttpGithubAppInput is an input type that accepts GetGithubConnectorCredentialHttpGithubAppArgs and GetGithubConnectorCredentialHttpGithubAppOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpGithubAppInput` via:
//
//	GetGithubConnectorCredentialHttpGithubAppArgs{...}
type GetGithubConnectorCredentialHttpGithubAppInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpGithubAppOutput() GetGithubConnectorCredentialHttpGithubAppOutput
	ToGetGithubConnectorCredentialHttpGithubAppOutputWithContext(context.Context) GetGithubConnectorCredentialHttpGithubAppOutput
}

type GetGithubConnectorCredentialHttpGithubAppArgs struct {
	// Enter the GitHub App ID from the GitHub App General tab.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Reference to the secret containing application id To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApplicationIdRef pulumi.StringInput `pulumi:"applicationIdRef"`
	// Enter the Installation ID located in the URL of the installed GitHub App.
	InstallationId pulumi.StringInput `pulumi:"installationId"`
	// Reference to the secret containing installation id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	InstallationIdRef pulumi.StringInput `pulumi:"installationIdRef"`
	// Reference to the secret containing the private key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef pulumi.StringInput `pulumi:"privateKeyRef"`
}

func (GetGithubConnectorCredentialHttpGithubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttpGithubApp)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpGithubAppArgs) ToGetGithubConnectorCredentialHttpGithubAppOutput() GetGithubConnectorCredentialHttpGithubAppOutput {
	return i.ToGetGithubConnectorCredentialHttpGithubAppOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpGithubAppArgs) ToGetGithubConnectorCredentialHttpGithubAppOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpGithubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpGithubAppOutput)
}

// GetGithubConnectorCredentialHttpGithubAppArrayInput is an input type that accepts GetGithubConnectorCredentialHttpGithubAppArray and GetGithubConnectorCredentialHttpGithubAppArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpGithubAppArrayInput` via:
//
//	GetGithubConnectorCredentialHttpGithubAppArray{ GetGithubConnectorCredentialHttpGithubAppArgs{...} }
type GetGithubConnectorCredentialHttpGithubAppArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpGithubAppArrayOutput() GetGithubConnectorCredentialHttpGithubAppArrayOutput
	ToGetGithubConnectorCredentialHttpGithubAppArrayOutputWithContext(context.Context) GetGithubConnectorCredentialHttpGithubAppArrayOutput
}

type GetGithubConnectorCredentialHttpGithubAppArray []GetGithubConnectorCredentialHttpGithubAppInput

func (GetGithubConnectorCredentialHttpGithubAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttpGithubApp)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpGithubAppArray) ToGetGithubConnectorCredentialHttpGithubAppArrayOutput() GetGithubConnectorCredentialHttpGithubAppArrayOutput {
	return i.ToGetGithubConnectorCredentialHttpGithubAppArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpGithubAppArray) ToGetGithubConnectorCredentialHttpGithubAppArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpGithubAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpGithubAppArrayOutput)
}

type GetGithubConnectorCredentialHttpGithubAppOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpGithubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttpGithubApp)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpGithubAppOutput) ToGetGithubConnectorCredentialHttpGithubAppOutput() GetGithubConnectorCredentialHttpGithubAppOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpGithubAppOutput) ToGetGithubConnectorCredentialHttpGithubAppOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpGithubAppOutput {
	return o
}

// Enter the GitHub App ID from the GitHub App General tab.
func (o GetGithubConnectorCredentialHttpGithubAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttpGithubApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Reference to the secret containing application id To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorCredentialHttpGithubAppOutput) ApplicationIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttpGithubApp) string { return v.ApplicationIdRef }).(pulumi.StringOutput)
}

// Enter the Installation ID located in the URL of the installed GitHub App.
func (o GetGithubConnectorCredentialHttpGithubAppOutput) InstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttpGithubApp) string { return v.InstallationId }).(pulumi.StringOutput)
}

// Reference to the secret containing installation id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorCredentialHttpGithubAppOutput) InstallationIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttpGithubApp) string { return v.InstallationIdRef }).(pulumi.StringOutput)
}

// Reference to the secret containing the private key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorCredentialHttpGithubAppOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttpGithubApp) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

type GetGithubConnectorCredentialHttpGithubAppArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpGithubAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttpGithubApp)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpGithubAppArrayOutput) ToGetGithubConnectorCredentialHttpGithubAppArrayOutput() GetGithubConnectorCredentialHttpGithubAppArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpGithubAppArrayOutput) ToGetGithubConnectorCredentialHttpGithubAppArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpGithubAppArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpGithubAppArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialHttpGithubAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredentialHttpGithubApp {
		return vs[0].([]GetGithubConnectorCredentialHttpGithubApp)[vs[1].(int)]
	}).(GetGithubConnectorCredentialHttpGithubAppOutput)
}

type GetGithubConnectorCredentialSsh struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGithubConnectorCredentialSshInput is an input type that accepts GetGithubConnectorCredentialSshArgs and GetGithubConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialSshInput` via:
//
//	GetGithubConnectorCredentialSshArgs{...}
type GetGithubConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialSshOutput() GetGithubConnectorCredentialSshOutput
	ToGetGithubConnectorCredentialSshOutputWithContext(context.Context) GetGithubConnectorCredentialSshOutput
}

type GetGithubConnectorCredentialSshArgs struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGithubConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGithubConnectorCredentialSshArgs) ToGetGithubConnectorCredentialSshOutput() GetGithubConnectorCredentialSshOutput {
	return i.ToGetGithubConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialSshArgs) ToGetGithubConnectorCredentialSshOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialSshOutput)
}

// GetGithubConnectorCredentialSshArrayInput is an input type that accepts GetGithubConnectorCredentialSshArray and GetGithubConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialSshArrayInput` via:
//
//	GetGithubConnectorCredentialSshArray{ GetGithubConnectorCredentialSshArgs{...} }
type GetGithubConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialSshArrayOutput() GetGithubConnectorCredentialSshArrayOutput
	ToGetGithubConnectorCredentialSshArrayOutputWithContext(context.Context) GetGithubConnectorCredentialSshArrayOutput
}

type GetGithubConnectorCredentialSshArray []GetGithubConnectorCredentialSshInput

func (GetGithubConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGithubConnectorCredentialSshArray) ToGetGithubConnectorCredentialSshArrayOutput() GetGithubConnectorCredentialSshArrayOutput {
	return i.ToGetGithubConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialSshArray) ToGetGithubConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialSshArrayOutput)
}

type GetGithubConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGithubConnectorCredentialSshOutput) ToGetGithubConnectorCredentialSshOutput() GetGithubConnectorCredentialSshOutput {
	return o
}

func (o GetGithubConnectorCredentialSshOutput) ToGetGithubConnectorCredentialSshOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshOutput {
	return o
}

// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGithubConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGithubConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGithubConnectorCredentialSshArrayOutput) ToGetGithubConnectorCredentialSshArrayOutput() GetGithubConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialSshArrayOutput) ToGetGithubConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredentialSsh {
		return vs[0].([]GetGithubConnectorCredentialSsh)[vs[1].(int)]
	}).(GetGithubConnectorCredentialSshOutput)
}

type GetGitlabConnectorApiAuthentication struct {
	// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// GetGitlabConnectorApiAuthenticationInput is an input type that accepts GetGitlabConnectorApiAuthenticationArgs and GetGitlabConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GetGitlabConnectorApiAuthenticationInput` via:
//
//	GetGitlabConnectorApiAuthenticationArgs{...}
type GetGitlabConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGetGitlabConnectorApiAuthenticationOutput() GetGitlabConnectorApiAuthenticationOutput
	ToGetGitlabConnectorApiAuthenticationOutputWithContext(context.Context) GetGitlabConnectorApiAuthenticationOutput
}

type GetGitlabConnectorApiAuthenticationArgs struct {
	// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetGitlabConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGitlabConnectorApiAuthenticationArgs) ToGetGitlabConnectorApiAuthenticationOutput() GetGitlabConnectorApiAuthenticationOutput {
	return i.ToGetGitlabConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GetGitlabConnectorApiAuthenticationArgs) ToGetGitlabConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorApiAuthenticationOutput)
}

// GetGitlabConnectorApiAuthenticationArrayInput is an input type that accepts GetGitlabConnectorApiAuthenticationArray and GetGitlabConnectorApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorApiAuthenticationArrayInput` via:
//
//	GetGitlabConnectorApiAuthenticationArray{ GetGitlabConnectorApiAuthenticationArgs{...} }
type GetGitlabConnectorApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorApiAuthenticationArrayOutput() GetGitlabConnectorApiAuthenticationArrayOutput
	ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(context.Context) GetGitlabConnectorApiAuthenticationArrayOutput
}

type GetGitlabConnectorApiAuthenticationArray []GetGitlabConnectorApiAuthenticationInput

func (GetGitlabConnectorApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGitlabConnectorApiAuthenticationArray) ToGetGitlabConnectorApiAuthenticationArrayOutput() GetGitlabConnectorApiAuthenticationArrayOutput {
	return i.ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorApiAuthenticationArray) ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorApiAuthenticationArrayOutput)
}

type GetGitlabConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGitlabConnectorApiAuthenticationOutput) ToGetGitlabConnectorApiAuthenticationOutput() GetGitlabConnectorApiAuthenticationOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationOutput) ToGetGitlabConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationOutput {
	return o
}

// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitlabConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetGitlabConnectorApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGitlabConnectorApiAuthenticationArrayOutput) ToGetGitlabConnectorApiAuthenticationArrayOutput() GetGitlabConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationArrayOutput) ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorApiAuthentication {
		return vs[0].([]GetGitlabConnectorApiAuthentication)[vs[1].(int)]
	}).(GetGitlabConnectorApiAuthenticationOutput)
}

type GetGitlabConnectorCredential struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https []GetGitlabConnectorCredentialHttp `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes []GetGitlabConnectorCredentialSsh `pulumi:"sshes"`
}

// GetGitlabConnectorCredentialInput is an input type that accepts GetGitlabConnectorCredentialArgs and GetGitlabConnectorCredentialOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialInput` via:
//
//	GetGitlabConnectorCredentialArgs{...}
type GetGitlabConnectorCredentialInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialOutput() GetGitlabConnectorCredentialOutput
	ToGetGitlabConnectorCredentialOutputWithContext(context.Context) GetGitlabConnectorCredentialOutput
}

type GetGitlabConnectorCredentialArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Https GetGitlabConnectorCredentialHttpArrayInput `pulumi:"https"`
	// Authenticate using SSH for the connection.
	Sshes GetGitlabConnectorCredentialSshArrayInput `pulumi:"sshes"`
}

func (GetGitlabConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredential)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialArgs) ToGetGitlabConnectorCredentialOutput() GetGitlabConnectorCredentialOutput {
	return i.ToGetGitlabConnectorCredentialOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialArgs) ToGetGitlabConnectorCredentialOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialOutput)
}

// GetGitlabConnectorCredentialArrayInput is an input type that accepts GetGitlabConnectorCredentialArray and GetGitlabConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialArrayInput` via:
//
//	GetGitlabConnectorCredentialArray{ GetGitlabConnectorCredentialArgs{...} }
type GetGitlabConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialArrayOutput() GetGitlabConnectorCredentialArrayOutput
	ToGetGitlabConnectorCredentialArrayOutputWithContext(context.Context) GetGitlabConnectorCredentialArrayOutput
}

type GetGitlabConnectorCredentialArray []GetGitlabConnectorCredentialInput

func (GetGitlabConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredential)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialArray) ToGetGitlabConnectorCredentialArrayOutput() GetGitlabConnectorCredentialArrayOutput {
	return i.ToGetGitlabConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialArray) ToGetGitlabConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialArrayOutput)
}

type GetGitlabConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredential)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialOutput) ToGetGitlabConnectorCredentialOutput() GetGitlabConnectorCredentialOutput {
	return o
}

func (o GetGitlabConnectorCredentialOutput) ToGetGitlabConnectorCredentialOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialOutput {
	return o
}

// Authenticate using Username and password over http(s) for the connection.
func (o GetGitlabConnectorCredentialOutput) Https() GetGitlabConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredential) []GetGitlabConnectorCredentialHttp { return v.Https }).(GetGitlabConnectorCredentialHttpArrayOutput)
}

// Authenticate using SSH for the connection.
func (o GetGitlabConnectorCredentialOutput) Sshes() GetGitlabConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredential) []GetGitlabConnectorCredentialSsh { return v.Sshes }).(GetGitlabConnectorCredentialSshArrayOutput)
}

type GetGitlabConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredential)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialArrayOutput) ToGetGitlabConnectorCredentialArrayOutput() GetGitlabConnectorCredentialArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialArrayOutput) ToGetGitlabConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorCredential {
		return vs[0].([]GetGitlabConnectorCredential)[vs[1].(int)]
	}).(GetGitlabConnectorCredentialOutput)
}

type GetGitlabConnectorCredentialHttp struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGitlabConnectorCredentialHttpInput is an input type that accepts GetGitlabConnectorCredentialHttpArgs and GetGitlabConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialHttpInput` via:
//
//	GetGitlabConnectorCredentialHttpArgs{...}
type GetGitlabConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialHttpOutput() GetGitlabConnectorCredentialHttpOutput
	ToGetGitlabConnectorCredentialHttpOutputWithContext(context.Context) GetGitlabConnectorCredentialHttpOutput
}

type GetGitlabConnectorCredentialHttpArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGitlabConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialHttpArgs) ToGetGitlabConnectorCredentialHttpOutput() GetGitlabConnectorCredentialHttpOutput {
	return i.ToGetGitlabConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialHttpArgs) ToGetGitlabConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialHttpOutput)
}

// GetGitlabConnectorCredentialHttpArrayInput is an input type that accepts GetGitlabConnectorCredentialHttpArray and GetGitlabConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialHttpArrayInput` via:
//
//	GetGitlabConnectorCredentialHttpArray{ GetGitlabConnectorCredentialHttpArgs{...} }
type GetGitlabConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialHttpArrayOutput() GetGitlabConnectorCredentialHttpArrayOutput
	ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(context.Context) GetGitlabConnectorCredentialHttpArrayOutput
}

type GetGitlabConnectorCredentialHttpArray []GetGitlabConnectorCredentialHttpInput

func (GetGitlabConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialHttpArray) ToGetGitlabConnectorCredentialHttpArrayOutput() GetGitlabConnectorCredentialHttpArrayOutput {
	return i.ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialHttpArray) ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialHttpArrayOutput)
}

type GetGitlabConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialHttpOutput) ToGetGitlabConnectorCredentialHttpOutput() GetGitlabConnectorCredentialHttpOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpOutput) ToGetGitlabConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitlabConnectorCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the personal access to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitlabConnectorCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetGitlabConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitlabConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGitlabConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialHttpArrayOutput) ToGetGitlabConnectorCredentialHttpArrayOutput() GetGitlabConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpArrayOutput) ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorCredentialHttp {
		return vs[0].([]GetGitlabConnectorCredentialHttp)[vs[1].(int)]
	}).(GetGitlabConnectorCredentialHttpOutput)
}

type GetGitlabConnectorCredentialSsh struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGitlabConnectorCredentialSshInput is an input type that accepts GetGitlabConnectorCredentialSshArgs and GetGitlabConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialSshInput` via:
//
//	GetGitlabConnectorCredentialSshArgs{...}
type GetGitlabConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialSshOutput() GetGitlabConnectorCredentialSshOutput
	ToGetGitlabConnectorCredentialSshOutputWithContext(context.Context) GetGitlabConnectorCredentialSshOutput
}

type GetGitlabConnectorCredentialSshArgs struct {
	// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGitlabConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialSshArgs) ToGetGitlabConnectorCredentialSshOutput() GetGitlabConnectorCredentialSshOutput {
	return i.ToGetGitlabConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialSshArgs) ToGetGitlabConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialSshOutput)
}

// GetGitlabConnectorCredentialSshArrayInput is an input type that accepts GetGitlabConnectorCredentialSshArray and GetGitlabConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialSshArrayInput` via:
//
//	GetGitlabConnectorCredentialSshArray{ GetGitlabConnectorCredentialSshArgs{...} }
type GetGitlabConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialSshArrayOutput() GetGitlabConnectorCredentialSshArrayOutput
	ToGetGitlabConnectorCredentialSshArrayOutputWithContext(context.Context) GetGitlabConnectorCredentialSshArrayOutput
}

type GetGitlabConnectorCredentialSshArray []GetGitlabConnectorCredentialSshInput

func (GetGitlabConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialSshArray) ToGetGitlabConnectorCredentialSshArrayOutput() GetGitlabConnectorCredentialSshArrayOutput {
	return i.ToGetGitlabConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialSshArray) ToGetGitlabConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialSshArrayOutput)
}

type GetGitlabConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialSshOutput) ToGetGitlabConnectorCredentialSshOutput() GetGitlabConnectorCredentialSshOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshOutput) ToGetGitlabConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshOutput {
	return o
}

// Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetGitlabConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGitlabConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialSshArrayOutput) ToGetGitlabConnectorCredentialSshArrayOutput() GetGitlabConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshArrayOutput) ToGetGitlabConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorCredentialSsh {
		return vs[0].([]GetGitlabConnectorCredentialSsh)[vs[1].(int)]
	}).(GetGitlabConnectorCredentialSshOutput)
}

type GetGitopsAgentDeployYamlArgocdSettings struct {
	// Controls the Environment variable HELM*SECRETS*VALUES*ALLOW*PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.
	EnableHelmPathTraversal *bool `pulumi:"enableHelmPathTraversal"`
}

// GetGitopsAgentDeployYamlArgocdSettingsInput is an input type that accepts GetGitopsAgentDeployYamlArgocdSettingsArgs and GetGitopsAgentDeployYamlArgocdSettingsOutput values.
// You can construct a concrete instance of `GetGitopsAgentDeployYamlArgocdSettingsInput` via:
//
//	GetGitopsAgentDeployYamlArgocdSettingsArgs{...}
type GetGitopsAgentDeployYamlArgocdSettingsInput interface {
	pulumi.Input

	ToGetGitopsAgentDeployYamlArgocdSettingsOutput() GetGitopsAgentDeployYamlArgocdSettingsOutput
	ToGetGitopsAgentDeployYamlArgocdSettingsOutputWithContext(context.Context) GetGitopsAgentDeployYamlArgocdSettingsOutput
}

type GetGitopsAgentDeployYamlArgocdSettingsArgs struct {
	// Controls the Environment variable HELM*SECRETS*VALUES*ALLOW*PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.
	EnableHelmPathTraversal pulumi.BoolPtrInput `pulumi:"enableHelmPathTraversal"`
}

func (GetGitopsAgentDeployYamlArgocdSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentDeployYamlArgocdSettings)(nil)).Elem()
}

func (i GetGitopsAgentDeployYamlArgocdSettingsArgs) ToGetGitopsAgentDeployYamlArgocdSettingsOutput() GetGitopsAgentDeployYamlArgocdSettingsOutput {
	return i.ToGetGitopsAgentDeployYamlArgocdSettingsOutputWithContext(context.Background())
}

func (i GetGitopsAgentDeployYamlArgocdSettingsArgs) ToGetGitopsAgentDeployYamlArgocdSettingsOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlArgocdSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentDeployYamlArgocdSettingsOutput)
}

func (i GetGitopsAgentDeployYamlArgocdSettingsArgs) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutput() GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return i.ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(context.Background())
}

func (i GetGitopsAgentDeployYamlArgocdSettingsArgs) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentDeployYamlArgocdSettingsOutput).ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(ctx)
}

// GetGitopsAgentDeployYamlArgocdSettingsPtrInput is an input type that accepts GetGitopsAgentDeployYamlArgocdSettingsArgs, GetGitopsAgentDeployYamlArgocdSettingsPtr and GetGitopsAgentDeployYamlArgocdSettingsPtrOutput values.
// You can construct a concrete instance of `GetGitopsAgentDeployYamlArgocdSettingsPtrInput` via:
//
//	        GetGitopsAgentDeployYamlArgocdSettingsArgs{...}
//
//	or:
//
//	        nil
type GetGitopsAgentDeployYamlArgocdSettingsPtrInput interface {
	pulumi.Input

	ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutput() GetGitopsAgentDeployYamlArgocdSettingsPtrOutput
	ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(context.Context) GetGitopsAgentDeployYamlArgocdSettingsPtrOutput
}

type getGitopsAgentDeployYamlArgocdSettingsPtrType GetGitopsAgentDeployYamlArgocdSettingsArgs

func GetGitopsAgentDeployYamlArgocdSettingsPtr(v *GetGitopsAgentDeployYamlArgocdSettingsArgs) GetGitopsAgentDeployYamlArgocdSettingsPtrInput {
	return (*getGitopsAgentDeployYamlArgocdSettingsPtrType)(v)
}

func (*getGitopsAgentDeployYamlArgocdSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGitopsAgentDeployYamlArgocdSettings)(nil)).Elem()
}

func (i *getGitopsAgentDeployYamlArgocdSettingsPtrType) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutput() GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return i.ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(context.Background())
}

func (i *getGitopsAgentDeployYamlArgocdSettingsPtrType) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentDeployYamlArgocdSettingsPtrOutput)
}

type GetGitopsAgentDeployYamlArgocdSettingsOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentDeployYamlArgocdSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentDeployYamlArgocdSettings)(nil)).Elem()
}

func (o GetGitopsAgentDeployYamlArgocdSettingsOutput) ToGetGitopsAgentDeployYamlArgocdSettingsOutput() GetGitopsAgentDeployYamlArgocdSettingsOutput {
	return o
}

func (o GetGitopsAgentDeployYamlArgocdSettingsOutput) ToGetGitopsAgentDeployYamlArgocdSettingsOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlArgocdSettingsOutput {
	return o
}

func (o GetGitopsAgentDeployYamlArgocdSettingsOutput) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutput() GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return o.ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(context.Background())
}

func (o GetGitopsAgentDeployYamlArgocdSettingsOutput) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetGitopsAgentDeployYamlArgocdSettings) *GetGitopsAgentDeployYamlArgocdSettings {
		return &v
	}).(GetGitopsAgentDeployYamlArgocdSettingsPtrOutput)
}

// Controls the Environment variable HELM*SECRETS*VALUES*ALLOW*PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.
func (o GetGitopsAgentDeployYamlArgocdSettingsOutput) EnableHelmPathTraversal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlArgocdSettings) *bool { return v.EnableHelmPathTraversal }).(pulumi.BoolPtrOutput)
}

type GetGitopsAgentDeployYamlArgocdSettingsPtrOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentDeployYamlArgocdSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetGitopsAgentDeployYamlArgocdSettings)(nil)).Elem()
}

func (o GetGitopsAgentDeployYamlArgocdSettingsPtrOutput) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutput() GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return o
}

func (o GetGitopsAgentDeployYamlArgocdSettingsPtrOutput) ToGetGitopsAgentDeployYamlArgocdSettingsPtrOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlArgocdSettingsPtrOutput {
	return o
}

func (o GetGitopsAgentDeployYamlArgocdSettingsPtrOutput) Elem() GetGitopsAgentDeployYamlArgocdSettingsOutput {
	return o.ApplyT(func(v *GetGitopsAgentDeployYamlArgocdSettings) GetGitopsAgentDeployYamlArgocdSettings {
		if v != nil {
			return *v
		}
		var ret GetGitopsAgentDeployYamlArgocdSettings
		return ret
	}).(GetGitopsAgentDeployYamlArgocdSettingsOutput)
}

// Controls the Environment variable HELM*SECRETS*VALUES*ALLOW*PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.
func (o GetGitopsAgentDeployYamlArgocdSettingsPtrOutput) EnableHelmPathTraversal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetGitopsAgentDeployYamlArgocdSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHelmPathTraversal
	}).(pulumi.BoolPtrOutput)
}

type GetGitopsAgentDeployYamlProxy struct {
	// HTTP proxy settings for the GitOps agent.
	Http *string `pulumi:"http"`
	// HTTPS proxy settings for the GitOps agent.
	Https *string `pulumi:"https"`
	// Password for the proxy.
	Password *string `pulumi:"password"`
	// Username for the proxy.
	Username *string `pulumi:"username"`
}

// GetGitopsAgentDeployYamlProxyInput is an input type that accepts GetGitopsAgentDeployYamlProxyArgs and GetGitopsAgentDeployYamlProxyOutput values.
// You can construct a concrete instance of `GetGitopsAgentDeployYamlProxyInput` via:
//
//	GetGitopsAgentDeployYamlProxyArgs{...}
type GetGitopsAgentDeployYamlProxyInput interface {
	pulumi.Input

	ToGetGitopsAgentDeployYamlProxyOutput() GetGitopsAgentDeployYamlProxyOutput
	ToGetGitopsAgentDeployYamlProxyOutputWithContext(context.Context) GetGitopsAgentDeployYamlProxyOutput
}

type GetGitopsAgentDeployYamlProxyArgs struct {
	// HTTP proxy settings for the GitOps agent.
	Http pulumi.StringPtrInput `pulumi:"http"`
	// HTTPS proxy settings for the GitOps agent.
	Https pulumi.StringPtrInput `pulumi:"https"`
	// Password for the proxy.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username for the proxy.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetGitopsAgentDeployYamlProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentDeployYamlProxy)(nil)).Elem()
}

func (i GetGitopsAgentDeployYamlProxyArgs) ToGetGitopsAgentDeployYamlProxyOutput() GetGitopsAgentDeployYamlProxyOutput {
	return i.ToGetGitopsAgentDeployYamlProxyOutputWithContext(context.Background())
}

func (i GetGitopsAgentDeployYamlProxyArgs) ToGetGitopsAgentDeployYamlProxyOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentDeployYamlProxyOutput)
}

// GetGitopsAgentDeployYamlProxyArrayInput is an input type that accepts GetGitopsAgentDeployYamlProxyArray and GetGitopsAgentDeployYamlProxyArrayOutput values.
// You can construct a concrete instance of `GetGitopsAgentDeployYamlProxyArrayInput` via:
//
//	GetGitopsAgentDeployYamlProxyArray{ GetGitopsAgentDeployYamlProxyArgs{...} }
type GetGitopsAgentDeployYamlProxyArrayInput interface {
	pulumi.Input

	ToGetGitopsAgentDeployYamlProxyArrayOutput() GetGitopsAgentDeployYamlProxyArrayOutput
	ToGetGitopsAgentDeployYamlProxyArrayOutputWithContext(context.Context) GetGitopsAgentDeployYamlProxyArrayOutput
}

type GetGitopsAgentDeployYamlProxyArray []GetGitopsAgentDeployYamlProxyInput

func (GetGitopsAgentDeployYamlProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentDeployYamlProxy)(nil)).Elem()
}

func (i GetGitopsAgentDeployYamlProxyArray) ToGetGitopsAgentDeployYamlProxyArrayOutput() GetGitopsAgentDeployYamlProxyArrayOutput {
	return i.ToGetGitopsAgentDeployYamlProxyArrayOutputWithContext(context.Background())
}

func (i GetGitopsAgentDeployYamlProxyArray) ToGetGitopsAgentDeployYamlProxyArrayOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentDeployYamlProxyArrayOutput)
}

type GetGitopsAgentDeployYamlProxyOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentDeployYamlProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentDeployYamlProxy)(nil)).Elem()
}

func (o GetGitopsAgentDeployYamlProxyOutput) ToGetGitopsAgentDeployYamlProxyOutput() GetGitopsAgentDeployYamlProxyOutput {
	return o
}

func (o GetGitopsAgentDeployYamlProxyOutput) ToGetGitopsAgentDeployYamlProxyOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlProxyOutput {
	return o
}

// HTTP proxy settings for the GitOps agent.
func (o GetGitopsAgentDeployYamlProxyOutput) Http() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlProxy) *string { return v.Http }).(pulumi.StringPtrOutput)
}

// HTTPS proxy settings for the GitOps agent.
func (o GetGitopsAgentDeployYamlProxyOutput) Https() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlProxy) *string { return v.Https }).(pulumi.StringPtrOutput)
}

// Password for the proxy.
func (o GetGitopsAgentDeployYamlProxyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlProxy) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username for the proxy.
func (o GetGitopsAgentDeployYamlProxyOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlProxy) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGitopsAgentDeployYamlProxyArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentDeployYamlProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentDeployYamlProxy)(nil)).Elem()
}

func (o GetGitopsAgentDeployYamlProxyArrayOutput) ToGetGitopsAgentDeployYamlProxyArrayOutput() GetGitopsAgentDeployYamlProxyArrayOutput {
	return o
}

func (o GetGitopsAgentDeployYamlProxyArrayOutput) ToGetGitopsAgentDeployYamlProxyArrayOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlProxyArrayOutput {
	return o
}

func (o GetGitopsAgentDeployYamlProxyArrayOutput) Index(i pulumi.IntInput) GetGitopsAgentDeployYamlProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsAgentDeployYamlProxy {
		return vs[0].([]GetGitopsAgentDeployYamlProxy)[vs[1].(int)]
	}).(GetGitopsAgentDeployYamlProxyOutput)
}

type GetGitopsAgentMetadata struct {
	// Indicates if the agent is deployed in HA mode.
	HighAvailability bool `pulumi:"highAvailability"`
	// Indicates if the agent is namespaced.
	IsNamespaced *bool `pulumi:"isNamespaced"`
	// The kubernetes namespace where the agent should be installed.
	Namespace string `pulumi:"namespace"`
}

// GetGitopsAgentMetadataInput is an input type that accepts GetGitopsAgentMetadataArgs and GetGitopsAgentMetadataOutput values.
// You can construct a concrete instance of `GetGitopsAgentMetadataInput` via:
//
//	GetGitopsAgentMetadataArgs{...}
type GetGitopsAgentMetadataInput interface {
	pulumi.Input

	ToGetGitopsAgentMetadataOutput() GetGitopsAgentMetadataOutput
	ToGetGitopsAgentMetadataOutputWithContext(context.Context) GetGitopsAgentMetadataOutput
}

type GetGitopsAgentMetadataArgs struct {
	// Indicates if the agent is deployed in HA mode.
	HighAvailability pulumi.BoolInput `pulumi:"highAvailability"`
	// Indicates if the agent is namespaced.
	IsNamespaced pulumi.BoolPtrInput `pulumi:"isNamespaced"`
	// The kubernetes namespace where the agent should be installed.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (GetGitopsAgentMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentMetadata)(nil)).Elem()
}

func (i GetGitopsAgentMetadataArgs) ToGetGitopsAgentMetadataOutput() GetGitopsAgentMetadataOutput {
	return i.ToGetGitopsAgentMetadataOutputWithContext(context.Background())
}

func (i GetGitopsAgentMetadataArgs) ToGetGitopsAgentMetadataOutputWithContext(ctx context.Context) GetGitopsAgentMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentMetadataOutput)
}

// GetGitopsAgentMetadataArrayInput is an input type that accepts GetGitopsAgentMetadataArray and GetGitopsAgentMetadataArrayOutput values.
// You can construct a concrete instance of `GetGitopsAgentMetadataArrayInput` via:
//
//	GetGitopsAgentMetadataArray{ GetGitopsAgentMetadataArgs{...} }
type GetGitopsAgentMetadataArrayInput interface {
	pulumi.Input

	ToGetGitopsAgentMetadataArrayOutput() GetGitopsAgentMetadataArrayOutput
	ToGetGitopsAgentMetadataArrayOutputWithContext(context.Context) GetGitopsAgentMetadataArrayOutput
}

type GetGitopsAgentMetadataArray []GetGitopsAgentMetadataInput

func (GetGitopsAgentMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentMetadata)(nil)).Elem()
}

func (i GetGitopsAgentMetadataArray) ToGetGitopsAgentMetadataArrayOutput() GetGitopsAgentMetadataArrayOutput {
	return i.ToGetGitopsAgentMetadataArrayOutputWithContext(context.Background())
}

func (i GetGitopsAgentMetadataArray) ToGetGitopsAgentMetadataArrayOutputWithContext(ctx context.Context) GetGitopsAgentMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentMetadataArrayOutput)
}

type GetGitopsAgentMetadataOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentMetadata)(nil)).Elem()
}

func (o GetGitopsAgentMetadataOutput) ToGetGitopsAgentMetadataOutput() GetGitopsAgentMetadataOutput {
	return o
}

func (o GetGitopsAgentMetadataOutput) ToGetGitopsAgentMetadataOutputWithContext(ctx context.Context) GetGitopsAgentMetadataOutput {
	return o
}

// Indicates if the agent is deployed in HA mode.
func (o GetGitopsAgentMetadataOutput) HighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsAgentMetadata) bool { return v.HighAvailability }).(pulumi.BoolOutput)
}

// Indicates if the agent is namespaced.
func (o GetGitopsAgentMetadataOutput) IsNamespaced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentMetadata) *bool { return v.IsNamespaced }).(pulumi.BoolPtrOutput)
}

// The kubernetes namespace where the agent should be installed.
func (o GetGitopsAgentMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

type GetGitopsAgentMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentMetadata)(nil)).Elem()
}

func (o GetGitopsAgentMetadataArrayOutput) ToGetGitopsAgentMetadataArrayOutput() GetGitopsAgentMetadataArrayOutput {
	return o
}

func (o GetGitopsAgentMetadataArrayOutput) ToGetGitopsAgentMetadataArrayOutputWithContext(ctx context.Context) GetGitopsAgentMetadataArrayOutput {
	return o
}

func (o GetGitopsAgentMetadataArrayOutput) Index(i pulumi.IntInput) GetGitopsAgentMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsAgentMetadata {
		return vs[0].([]GetGitopsAgentMetadata)[vs[1].(int)]
	}).(GetGitopsAgentMetadataOutput)
}

type GetGitopsAgentOperatorYamlProxy struct {
	// HTTP proxy settings for the GitOps agent.
	Http *string `pulumi:"http"`
	// HTTPS proxy settings for the GitOps agent.
	Https *string `pulumi:"https"`
	// Password for the proxy.
	Password *string `pulumi:"password"`
	// Username for the proxy.
	Username *string `pulumi:"username"`
}

// GetGitopsAgentOperatorYamlProxyInput is an input type that accepts GetGitopsAgentOperatorYamlProxyArgs and GetGitopsAgentOperatorYamlProxyOutput values.
// You can construct a concrete instance of `GetGitopsAgentOperatorYamlProxyInput` via:
//
//	GetGitopsAgentOperatorYamlProxyArgs{...}
type GetGitopsAgentOperatorYamlProxyInput interface {
	pulumi.Input

	ToGetGitopsAgentOperatorYamlProxyOutput() GetGitopsAgentOperatorYamlProxyOutput
	ToGetGitopsAgentOperatorYamlProxyOutputWithContext(context.Context) GetGitopsAgentOperatorYamlProxyOutput
}

type GetGitopsAgentOperatorYamlProxyArgs struct {
	// HTTP proxy settings for the GitOps agent.
	Http pulumi.StringPtrInput `pulumi:"http"`
	// HTTPS proxy settings for the GitOps agent.
	Https pulumi.StringPtrInput `pulumi:"https"`
	// Password for the proxy.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username for the proxy.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetGitopsAgentOperatorYamlProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentOperatorYamlProxy)(nil)).Elem()
}

func (i GetGitopsAgentOperatorYamlProxyArgs) ToGetGitopsAgentOperatorYamlProxyOutput() GetGitopsAgentOperatorYamlProxyOutput {
	return i.ToGetGitopsAgentOperatorYamlProxyOutputWithContext(context.Background())
}

func (i GetGitopsAgentOperatorYamlProxyArgs) ToGetGitopsAgentOperatorYamlProxyOutputWithContext(ctx context.Context) GetGitopsAgentOperatorYamlProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentOperatorYamlProxyOutput)
}

// GetGitopsAgentOperatorYamlProxyArrayInput is an input type that accepts GetGitopsAgentOperatorYamlProxyArray and GetGitopsAgentOperatorYamlProxyArrayOutput values.
// You can construct a concrete instance of `GetGitopsAgentOperatorYamlProxyArrayInput` via:
//
//	GetGitopsAgentOperatorYamlProxyArray{ GetGitopsAgentOperatorYamlProxyArgs{...} }
type GetGitopsAgentOperatorYamlProxyArrayInput interface {
	pulumi.Input

	ToGetGitopsAgentOperatorYamlProxyArrayOutput() GetGitopsAgentOperatorYamlProxyArrayOutput
	ToGetGitopsAgentOperatorYamlProxyArrayOutputWithContext(context.Context) GetGitopsAgentOperatorYamlProxyArrayOutput
}

type GetGitopsAgentOperatorYamlProxyArray []GetGitopsAgentOperatorYamlProxyInput

func (GetGitopsAgentOperatorYamlProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentOperatorYamlProxy)(nil)).Elem()
}

func (i GetGitopsAgentOperatorYamlProxyArray) ToGetGitopsAgentOperatorYamlProxyArrayOutput() GetGitopsAgentOperatorYamlProxyArrayOutput {
	return i.ToGetGitopsAgentOperatorYamlProxyArrayOutputWithContext(context.Background())
}

func (i GetGitopsAgentOperatorYamlProxyArray) ToGetGitopsAgentOperatorYamlProxyArrayOutputWithContext(ctx context.Context) GetGitopsAgentOperatorYamlProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentOperatorYamlProxyArrayOutput)
}

type GetGitopsAgentOperatorYamlProxyOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentOperatorYamlProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentOperatorYamlProxy)(nil)).Elem()
}

func (o GetGitopsAgentOperatorYamlProxyOutput) ToGetGitopsAgentOperatorYamlProxyOutput() GetGitopsAgentOperatorYamlProxyOutput {
	return o
}

func (o GetGitopsAgentOperatorYamlProxyOutput) ToGetGitopsAgentOperatorYamlProxyOutputWithContext(ctx context.Context) GetGitopsAgentOperatorYamlProxyOutput {
	return o
}

// HTTP proxy settings for the GitOps agent.
func (o GetGitopsAgentOperatorYamlProxyOutput) Http() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentOperatorYamlProxy) *string { return v.Http }).(pulumi.StringPtrOutput)
}

// HTTPS proxy settings for the GitOps agent.
func (o GetGitopsAgentOperatorYamlProxyOutput) Https() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentOperatorYamlProxy) *string { return v.Https }).(pulumi.StringPtrOutput)
}

// Password for the proxy.
func (o GetGitopsAgentOperatorYamlProxyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentOperatorYamlProxy) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username for the proxy.
func (o GetGitopsAgentOperatorYamlProxyOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentOperatorYamlProxy) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGitopsAgentOperatorYamlProxyArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentOperatorYamlProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentOperatorYamlProxy)(nil)).Elem()
}

func (o GetGitopsAgentOperatorYamlProxyArrayOutput) ToGetGitopsAgentOperatorYamlProxyArrayOutput() GetGitopsAgentOperatorYamlProxyArrayOutput {
	return o
}

func (o GetGitopsAgentOperatorYamlProxyArrayOutput) ToGetGitopsAgentOperatorYamlProxyArrayOutputWithContext(ctx context.Context) GetGitopsAgentOperatorYamlProxyArrayOutput {
	return o
}

func (o GetGitopsAgentOperatorYamlProxyArrayOutput) Index(i pulumi.IntInput) GetGitopsAgentOperatorYamlProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsAgentOperatorYamlProxy {
		return vs[0].([]GetGitopsAgentOperatorYamlProxy)[vs[1].(int)]
	}).(GetGitopsAgentOperatorYamlProxyOutput)
}

type GetGitopsApplicationsApplication struct {
	// Metadata corresponding to the resources. This includes all the objects a user must create.
	Metadatas []GetGitopsApplicationsApplicationMetadata `pulumi:"metadatas"`
	// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
	Specs []GetGitopsApplicationsApplicationSpec `pulumi:"specs"`
}

// GetGitopsApplicationsApplicationInput is an input type that accepts GetGitopsApplicationsApplicationArgs and GetGitopsApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationInput` via:
//
//	GetGitopsApplicationsApplicationArgs{...}
type GetGitopsApplicationsApplicationInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationOutput() GetGitopsApplicationsApplicationOutput
	ToGetGitopsApplicationsApplicationOutputWithContext(context.Context) GetGitopsApplicationsApplicationOutput
}

type GetGitopsApplicationsApplicationArgs struct {
	// Metadata corresponding to the resources. This includes all the objects a user must create.
	Metadatas GetGitopsApplicationsApplicationMetadataArrayInput `pulumi:"metadatas"`
	// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
	Specs GetGitopsApplicationsApplicationSpecArrayInput `pulumi:"specs"`
}

func (GetGitopsApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplication)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationArgs) ToGetGitopsApplicationsApplicationOutput() GetGitopsApplicationsApplicationOutput {
	return i.ToGetGitopsApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationArgs) ToGetGitopsApplicationsApplicationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationOutput)
}

// GetGitopsApplicationsApplicationArrayInput is an input type that accepts GetGitopsApplicationsApplicationArray and GetGitopsApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationArrayInput` via:
//
//	GetGitopsApplicationsApplicationArray{ GetGitopsApplicationsApplicationArgs{...} }
type GetGitopsApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationArrayOutput() GetGitopsApplicationsApplicationArrayOutput
	ToGetGitopsApplicationsApplicationArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationArrayOutput
}

type GetGitopsApplicationsApplicationArray []GetGitopsApplicationsApplicationInput

func (GetGitopsApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplication)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationArray) ToGetGitopsApplicationsApplicationArrayOutput() GetGitopsApplicationsApplicationArrayOutput {
	return i.ToGetGitopsApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationArray) ToGetGitopsApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationArrayOutput)
}

type GetGitopsApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplication)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationOutput) ToGetGitopsApplicationsApplicationOutput() GetGitopsApplicationsApplicationOutput {
	return o
}

func (o GetGitopsApplicationsApplicationOutput) ToGetGitopsApplicationsApplicationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationOutput {
	return o
}

// Metadata corresponding to the resources. This includes all the objects a user must create.
func (o GetGitopsApplicationsApplicationOutput) Metadatas() GetGitopsApplicationsApplicationMetadataArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplication) []GetGitopsApplicationsApplicationMetadata {
		return v.Metadatas
	}).(GetGitopsApplicationsApplicationMetadataArrayOutput)
}

// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
func (o GetGitopsApplicationsApplicationOutput) Specs() GetGitopsApplicationsApplicationSpecArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplication) []GetGitopsApplicationsApplicationSpec { return v.Specs }).(GetGitopsApplicationsApplicationSpecArrayOutput)
}

type GetGitopsApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplication)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationArrayOutput) ToGetGitopsApplicationsApplicationArrayOutput() GetGitopsApplicationsApplicationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationArrayOutput) ToGetGitopsApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplication {
		return vs[0].([]GetGitopsApplicationsApplication)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationOutput)
}

type GetGitopsApplicationsApplicationMetadata struct {
	// Annotations are unstructured key value pairs corresponding to a resource. External tools set these to store and retrieve arbitrary metadata.
	Annotations map[string]string `pulumi:"annotations"`
	// Name of the cluster corresponding to the object. API server ignores this if set in any create or update request.
	ClusterName string `pulumi:"clusterName"`
	// Before the object is removed from the register, it must be empty. Each element serves as a unique identifier for the component that is accountable for removing that entry from the list. Entries in this list can only be removed if the object's deletionTimestamp is not null. The processing and removal of finalizers can happen in any sequence. No order is enforced as it may block the finalizers. Finalizers is a shared field that can be reordered by any actor with authority. If the finalizer list is processed in order, this could result in a scenario where the component in charge of the list's first finalizer is waiting for a signal (generated by a field value, an external system, or another) produced by a component in charge of the list's later finalizer.
	Finalizers []string `pulumi:"finalizers"`
	// An optional prefix that the server will only apply if the Name field is empty to create a unique name. The name returned to the client will differ from the name passed if this field is used. A unique suffix will be added to this value as well. The supplied value must adhere to the same validation guidelines as the Name field and may be reduced by the suffix length necessary to ensure that it is unique on the server. The server will NOT return a 409 if this field is supplied and the created name already exists; instead, it will either return 201 Created or 500 with Reason ServerTimeout, indicating that a unique name could not be found in the allotted time and the client should try again later.
	GenerateName string `pulumi:"generateName"`
	// A sequence number representing a specific generation of the desired state. This is a read-only value populated by the system.
	Generation string `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services.
	Labels map[string]string `pulumi:"labels"`
	// Name must be unique within a namespace. It is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Name cannot be updated.
	Name string `pulumi:"name"`
	// Namespace of the GitOps application. An empty namespace is equivalent to the namespace of the GitOps agent.
	Namespace string `pulumi:"namespace"`
	// List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
	OwnerReferences []GetGitopsApplicationsApplicationMetadataOwnerReference `pulumi:"ownerReferences"`
	// UID is the unique identifier in time and space value for this object. It is generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
	Uid string `pulumi:"uid"`
}

// GetGitopsApplicationsApplicationMetadataInput is an input type that accepts GetGitopsApplicationsApplicationMetadataArgs and GetGitopsApplicationsApplicationMetadataOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataInput` via:
//
//	GetGitopsApplicationsApplicationMetadataArgs{...}
type GetGitopsApplicationsApplicationMetadataInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataOutput() GetGitopsApplicationsApplicationMetadataOutput
	ToGetGitopsApplicationsApplicationMetadataOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataOutput
}

type GetGitopsApplicationsApplicationMetadataArgs struct {
	// Annotations are unstructured key value pairs corresponding to a resource. External tools set these to store and retrieve arbitrary metadata.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Name of the cluster corresponding to the object. API server ignores this if set in any create or update request.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Before the object is removed from the register, it must be empty. Each element serves as a unique identifier for the component that is accountable for removing that entry from the list. Entries in this list can only be removed if the object's deletionTimestamp is not null. The processing and removal of finalizers can happen in any sequence. No order is enforced as it may block the finalizers. Finalizers is a shared field that can be reordered by any actor with authority. If the finalizer list is processed in order, this could result in a scenario where the component in charge of the list's first finalizer is waiting for a signal (generated by a field value, an external system, or another) produced by a component in charge of the list's later finalizer.
	Finalizers pulumi.StringArrayInput `pulumi:"finalizers"`
	// An optional prefix that the server will only apply if the Name field is empty to create a unique name. The name returned to the client will differ from the name passed if this field is used. A unique suffix will be added to this value as well. The supplied value must adhere to the same validation guidelines as the Name field and may be reduced by the suffix length necessary to ensure that it is unique on the server. The server will NOT return a 409 if this field is supplied and the created name already exists; instead, it will either return 201 Created or 500 with Reason ServerTimeout, indicating that a unique name could not be found in the allotted time and the client should try again later.
	GenerateName pulumi.StringInput `pulumi:"generateName"`
	// A sequence number representing a specific generation of the desired state. This is a read-only value populated by the system.
	Generation pulumi.StringInput `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name must be unique within a namespace. It is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Name cannot be updated.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the GitOps application. An empty namespace is equivalent to the namespace of the GitOps agent.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
	OwnerReferences GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput `pulumi:"ownerReferences"`
	// UID is the unique identifier in time and space value for this object. It is generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetGitopsApplicationsApplicationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataArgs) ToGetGitopsApplicationsApplicationMetadataOutput() GetGitopsApplicationsApplicationMetadataOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataArgs) ToGetGitopsApplicationsApplicationMetadataOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataOutput)
}

// GetGitopsApplicationsApplicationMetadataArrayInput is an input type that accepts GetGitopsApplicationsApplicationMetadataArray and GetGitopsApplicationsApplicationMetadataArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataArrayInput` via:
//
//	GetGitopsApplicationsApplicationMetadataArray{ GetGitopsApplicationsApplicationMetadataArgs{...} }
type GetGitopsApplicationsApplicationMetadataArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataArrayOutput() GetGitopsApplicationsApplicationMetadataArrayOutput
	ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataArrayOutput
}

type GetGitopsApplicationsApplicationMetadataArray []GetGitopsApplicationsApplicationMetadataInput

func (GetGitopsApplicationsApplicationMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataArray) ToGetGitopsApplicationsApplicationMetadataArrayOutput() GetGitopsApplicationsApplicationMetadataArrayOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataArray) ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataArrayOutput)
}

type GetGitopsApplicationsApplicationMetadataOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataOutput) ToGetGitopsApplicationsApplicationMetadataOutput() GetGitopsApplicationsApplicationMetadataOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOutput) ToGetGitopsApplicationsApplicationMetadataOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOutput {
	return o
}

// Annotations are unstructured key value pairs corresponding to a resource. External tools set these to store and retrieve arbitrary metadata.
func (o GetGitopsApplicationsApplicationMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Name of the cluster corresponding to the object. API server ignores this if set in any create or update request.
func (o GetGitopsApplicationsApplicationMetadataOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Before the object is removed from the register, it must be empty. Each element serves as a unique identifier for the component that is accountable for removing that entry from the list. Entries in this list can only be removed if the object's deletionTimestamp is not null. The processing and removal of finalizers can happen in any sequence. No order is enforced as it may block the finalizers. Finalizers is a shared field that can be reordered by any actor with authority. If the finalizer list is processed in order, this could result in a scenario where the component in charge of the list's first finalizer is waiting for a signal (generated by a field value, an external system, or another) produced by a component in charge of the list's later finalizer.
func (o GetGitopsApplicationsApplicationMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

// An optional prefix that the server will only apply if the Name field is empty to create a unique name. The name returned to the client will differ from the name passed if this field is used. A unique suffix will be added to this value as well. The supplied value must adhere to the same validation guidelines as the Name field and may be reduced by the suffix length necessary to ensure that it is unique on the server. The server will NOT return a 409 if this field is supplied and the created name already exists; instead, it will either return 201 Created or 500 with Reason ServerTimeout, indicating that a unique name could not be found in the allotted time and the client should try again later.
func (o GetGitopsApplicationsApplicationMetadataOutput) GenerateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.GenerateName }).(pulumi.StringOutput)
}

// A sequence number representing a specific generation of the desired state. This is a read-only value populated by the system.
func (o GetGitopsApplicationsApplicationMetadataOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Generation }).(pulumi.StringOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services.
func (o GetGitopsApplicationsApplicationMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name must be unique within a namespace. It is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Name cannot be updated.
func (o GetGitopsApplicationsApplicationMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the GitOps application. An empty namespace is equivalent to the namespace of the GitOps agent.
func (o GetGitopsApplicationsApplicationMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

// List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
func (o GetGitopsApplicationsApplicationMetadataOutput) OwnerReferences() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) []GetGitopsApplicationsApplicationMetadataOwnerReference {
		return v.OwnerReferences
	}).(GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput)
}

// UID is the unique identifier in time and space value for this object. It is generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
func (o GetGitopsApplicationsApplicationMetadataOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Uid }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataArrayOutput) ToGetGitopsApplicationsApplicationMetadataArrayOutput() GetGitopsApplicationsApplicationMetadataArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataArrayOutput) ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationMetadata {
		return vs[0].([]GetGitopsApplicationsApplicationMetadata)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationMetadataOutput)
}

type GetGitopsApplicationsApplicationMetadataOwnerReference struct {
	// API version of the referent.
	ApiVersion string `pulumi:"apiVersion"`
	// If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
	BlockOwnerDeletion bool `pulumi:"blockOwnerDeletion"`
	// Indicates if the reference points to the managing controller.
	Controller bool `pulumi:"controller"`
	// Kind of the referent.
	Kind string `pulumi:"kind"`
	// Name of the referent.
	Name string `pulumi:"name"`
	// UID of the referent.
	Uid string `pulumi:"uid"`
}

// GetGitopsApplicationsApplicationMetadataOwnerReferenceInput is an input type that accepts GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs and GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataOwnerReferenceInput` via:
//
//	GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs{...}
type GetGitopsApplicationsApplicationMetadataOwnerReferenceInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput
	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
	BlockOwnerDeletion pulumi.BoolInput `pulumi:"blockOwnerDeletion"`
	// Indicates if the reference points to the managing controller.
	Controller pulumi.BoolInput `pulumi:"controller"`
	// Kind of the referent.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the referent.
	Name pulumi.StringInput `pulumi:"name"`
	// UID of the referent.
	Uid pulumi.StringInput `pulumi:"uid"`
}

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput)
}

// GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput is an input type that accepts GetGitopsApplicationsApplicationMetadataOwnerReferenceArray and GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput` via:
//
//	GetGitopsApplicationsApplicationMetadataOwnerReferenceArray{ GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs{...} }
type GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput
	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceArray []GetGitopsApplicationsApplicationMetadataOwnerReferenceInput

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArray) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArray) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput)
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return o
}

// API version of the referent.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) BlockOwnerDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) bool { return v.BlockOwnerDeletion }).(pulumi.BoolOutput)
}

// Indicates if the reference points to the managing controller.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Controller() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) bool { return v.Controller }).(pulumi.BoolOutput)
}

// Kind of the referent.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the referent.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) string { return v.Name }).(pulumi.StringOutput)
}

// UID of the referent.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) string { return v.Uid }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationMetadataOwnerReference {
		return vs[0].([]GetGitopsApplicationsApplicationMetadataOwnerReference)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput)
}

type GetGitopsApplicationsApplicationSpec struct {
	// Information about the GitOps application's destination.
	Destinations []GetGitopsApplicationsApplicationSpecDestination `pulumi:"destinations"`
	// The ArgoCD project name corresponding to this GitOps application. Value must match mappings of ArgoCD projects to harness project.
	Project *string `pulumi:"project"`
	// Contains all information about the source of a GitOps application.
	Source []GetGitopsApplicationsApplicationSpecSource `pulumi:"source"`
	// List of sources for the GitOps application. Multi Source support
	Sources []GetGitopsApplicationsApplicationSpecSource `pulumi:"sources"`
	// Controls when a sync will be performed in response to updates in git.
	SyncPolicies []GetGitopsApplicationsApplicationSpecSyncPolicy `pulumi:"syncPolicies"`
}

// GetGitopsApplicationsApplicationSpecInput is an input type that accepts GetGitopsApplicationsApplicationSpecArgs and GetGitopsApplicationsApplicationSpecOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecInput` via:
//
//	GetGitopsApplicationsApplicationSpecArgs{...}
type GetGitopsApplicationsApplicationSpecInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecOutput() GetGitopsApplicationsApplicationSpecOutput
	ToGetGitopsApplicationsApplicationSpecOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecOutput
}

type GetGitopsApplicationsApplicationSpecArgs struct {
	// Information about the GitOps application's destination.
	Destinations GetGitopsApplicationsApplicationSpecDestinationArrayInput `pulumi:"destinations"`
	// The ArgoCD project name corresponding to this GitOps application. Value must match mappings of ArgoCD projects to harness project.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Contains all information about the source of a GitOps application.
	Source GetGitopsApplicationsApplicationSpecSourceArrayInput `pulumi:"source"`
	// List of sources for the GitOps application. Multi Source support
	Sources GetGitopsApplicationsApplicationSpecSourceArrayInput `pulumi:"sources"`
	// Controls when a sync will be performed in response to updates in git.
	SyncPolicies GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput `pulumi:"syncPolicies"`
}

func (GetGitopsApplicationsApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecArgs) ToGetGitopsApplicationsApplicationSpecOutput() GetGitopsApplicationsApplicationSpecOutput {
	return i.ToGetGitopsApplicationsApplicationSpecOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecArgs) ToGetGitopsApplicationsApplicationSpecOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecOutput)
}

// GetGitopsApplicationsApplicationSpecArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecArray and GetGitopsApplicationsApplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecArray{ GetGitopsApplicationsApplicationSpecArgs{...} }
type GetGitopsApplicationsApplicationSpecArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecArrayOutput() GetGitopsApplicationsApplicationSpecArrayOutput
	ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecArrayOutput
}

type GetGitopsApplicationsApplicationSpecArray []GetGitopsApplicationsApplicationSpecInput

func (GetGitopsApplicationsApplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecArray) ToGetGitopsApplicationsApplicationSpecArrayOutput() GetGitopsApplicationsApplicationSpecArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecArray) ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecArrayOutput)
}

type GetGitopsApplicationsApplicationSpecOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecOutput) ToGetGitopsApplicationsApplicationSpecOutput() GetGitopsApplicationsApplicationSpecOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecOutput) ToGetGitopsApplicationsApplicationSpecOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecOutput {
	return o
}

// Information about the GitOps application's destination.
func (o GetGitopsApplicationsApplicationSpecOutput) Destinations() GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecDestination {
		return v.Destinations
	}).(GetGitopsApplicationsApplicationSpecDestinationArrayOutput)
}

// The ArgoCD project name corresponding to this GitOps application. Value must match mappings of ArgoCD projects to harness project.
func (o GetGitopsApplicationsApplicationSpecOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Contains all information about the source of a GitOps application.
func (o GetGitopsApplicationsApplicationSpecOutput) Source() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecSource {
		return v.Source
	}).(GetGitopsApplicationsApplicationSpecSourceArrayOutput)
}

// List of sources for the GitOps application. Multi Source support
func (o GetGitopsApplicationsApplicationSpecOutput) Sources() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecSource {
		return v.Sources
	}).(GetGitopsApplicationsApplicationSpecSourceArrayOutput)
}

// Controls when a sync will be performed in response to updates in git.
func (o GetGitopsApplicationsApplicationSpecOutput) SyncPolicies() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecSyncPolicy {
		return v.SyncPolicies
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput)
}

type GetGitopsApplicationsApplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecArrayOutput) ToGetGitopsApplicationsApplicationSpecArrayOutput() GetGitopsApplicationsApplicationSpecArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecArrayOutput) ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpec {
		return vs[0].([]GetGitopsApplicationsApplicationSpec)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecOutput)
}

type GetGitopsApplicationsApplicationSpecDestination struct {
	// URL of the target cluster and must be set to the kubernetes control plane API.
	Name string `pulumi:"name"`
	// Target namespace of the GitOps application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
	Namespace string `pulumi:"namespace"`
	// URL of the target cluster server for the GitOps application.
	Server string `pulumi:"server"`
}

// GetGitopsApplicationsApplicationSpecDestinationInput is an input type that accepts GetGitopsApplicationsApplicationSpecDestinationArgs and GetGitopsApplicationsApplicationSpecDestinationOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecDestinationInput` via:
//
//	GetGitopsApplicationsApplicationSpecDestinationArgs{...}
type GetGitopsApplicationsApplicationSpecDestinationInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecDestinationOutput() GetGitopsApplicationsApplicationSpecDestinationOutput
	ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecDestinationOutput
}

type GetGitopsApplicationsApplicationSpecDestinationArgs struct {
	// URL of the target cluster and must be set to the kubernetes control plane API.
	Name pulumi.StringInput `pulumi:"name"`
	// Target namespace of the GitOps application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// URL of the target cluster server for the GitOps application.
	Server pulumi.StringInput `pulumi:"server"`
}

func (GetGitopsApplicationsApplicationSpecDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecDestinationArgs) ToGetGitopsApplicationsApplicationSpecDestinationOutput() GetGitopsApplicationsApplicationSpecDestinationOutput {
	return i.ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecDestinationArgs) ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecDestinationOutput)
}

// GetGitopsApplicationsApplicationSpecDestinationArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecDestinationArray and GetGitopsApplicationsApplicationSpecDestinationArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecDestinationArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecDestinationArray{ GetGitopsApplicationsApplicationSpecDestinationArgs{...} }
type GetGitopsApplicationsApplicationSpecDestinationArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecDestinationArrayOutput() GetGitopsApplicationsApplicationSpecDestinationArrayOutput
	ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecDestinationArrayOutput
}

type GetGitopsApplicationsApplicationSpecDestinationArray []GetGitopsApplicationsApplicationSpecDestinationInput

func (GetGitopsApplicationsApplicationSpecDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecDestinationArray) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutput() GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecDestinationArray) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecDestinationArrayOutput)
}

type GetGitopsApplicationsApplicationSpecDestinationOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecDestinationOutput) ToGetGitopsApplicationsApplicationSpecDestinationOutput() GetGitopsApplicationsApplicationSpecDestinationOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecDestinationOutput) ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationOutput {
	return o
}

// URL of the target cluster and must be set to the kubernetes control plane API.
func (o GetGitopsApplicationsApplicationSpecDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Target namespace of the GitOps application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace.
func (o GetGitopsApplicationsApplicationSpecDestinationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecDestination) string { return v.Namespace }).(pulumi.StringOutput)
}

// URL of the target cluster server for the GitOps application.
func (o GetGitopsApplicationsApplicationSpecDestinationOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecDestination) string { return v.Server }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationSpecDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecDestinationArrayOutput) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutput() GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecDestinationArrayOutput) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecDestinationArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecDestination {
		return vs[0].([]GetGitopsApplicationsApplicationSpecDestination)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecDestinationOutput)
}

type GetGitopsApplicationsApplicationSpecSource struct {
	// Helm chart name, and must be specified for the GitOps applications sourced from a helm repo.
	Chart string `pulumi:"chart"`
	// Options for applications of type plain YAML or Jsonnet.
	Directories []GetGitopsApplicationsApplicationSpecSourceDirectory `pulumi:"directories"`
	// Holds helm specific options.
	Helms []GetGitopsApplicationsApplicationSpecSourceHelm `pulumi:"helms"`
	// Ksonnet specific options.
	Ksonnets []GetGitopsApplicationsApplicationSpecSourceKsonnet `pulumi:"ksonnets"`
	// Options specific to a GitOps application source specific to Kustomize.
	Kustomizes []GetGitopsApplicationsApplicationSpecSourceKustomize `pulumi:"kustomizes"`
	// Directory path within the git repository, and is only valid for the GitOps applications sourced from git.
	Path string `pulumi:"path"`
	// Options specific to config management plugins.
	Plugins []GetGitopsApplicationsApplicationSpecSourcePlugin `pulumi:"plugins"`
	// Reference name to be used in other source spec, used for multi-source applications.
	Ref string `pulumi:"ref"`
	// URL to the repository (git or helm) that contains the GitOps application manifests.
	RepoUrl string `pulumi:"repoUrl"`
	// Revision of the source to sync the GitOps application to. In case of git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag of the chart's version.
	TargetRevision string `pulumi:"targetRevision"`
}

// GetGitopsApplicationsApplicationSpecSourceInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceArgs and GetGitopsApplicationsApplicationSpecSourceOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceArgs{...}
type GetGitopsApplicationsApplicationSpecSourceInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceOutput() GetGitopsApplicationsApplicationSpecSourceOutput
	ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceOutput
}

type GetGitopsApplicationsApplicationSpecSourceArgs struct {
	// Helm chart name, and must be specified for the GitOps applications sourced from a helm repo.
	Chart pulumi.StringInput `pulumi:"chart"`
	// Options for applications of type plain YAML or Jsonnet.
	Directories GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput `pulumi:"directories"`
	// Holds helm specific options.
	Helms GetGitopsApplicationsApplicationSpecSourceHelmArrayInput `pulumi:"helms"`
	// Ksonnet specific options.
	Ksonnets GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput `pulumi:"ksonnets"`
	// Options specific to a GitOps application source specific to Kustomize.
	Kustomizes GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput `pulumi:"kustomizes"`
	// Directory path within the git repository, and is only valid for the GitOps applications sourced from git.
	Path pulumi.StringInput `pulumi:"path"`
	// Options specific to config management plugins.
	Plugins GetGitopsApplicationsApplicationSpecSourcePluginArrayInput `pulumi:"plugins"`
	// Reference name to be used in other source spec, used for multi-source applications.
	Ref pulumi.StringInput `pulumi:"ref"`
	// URL to the repository (git or helm) that contains the GitOps application manifests.
	RepoUrl pulumi.StringInput `pulumi:"repoUrl"`
	// Revision of the source to sync the GitOps application to. In case of git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag of the chart's version.
	TargetRevision pulumi.StringInput `pulumi:"targetRevision"`
}

func (GetGitopsApplicationsApplicationSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceArgs) ToGetGitopsApplicationsApplicationSpecSourceOutput() GetGitopsApplicationsApplicationSpecSourceOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceArgs) ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceOutput)
}

// GetGitopsApplicationsApplicationSpecSourceArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceArray and GetGitopsApplicationsApplicationSpecSourceArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceArray{ GetGitopsApplicationsApplicationSpecSourceArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceArrayOutput() GetGitopsApplicationsApplicationSpecSourceArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceArray []GetGitopsApplicationsApplicationSpecSourceInput

func (GetGitopsApplicationsApplicationSpecSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceArray) ToGetGitopsApplicationsApplicationSpecSourceArrayOutput() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceArray) ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) ToGetGitopsApplicationsApplicationSpecSourceOutput() GetGitopsApplicationsApplicationSpecSourceOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceOutput {
	return o
}

// Helm chart name, and must be specified for the GitOps applications sourced from a helm repo.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Chart() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) string { return v.Chart }).(pulumi.StringOutput)
}

// Options for applications of type plain YAML or Jsonnet.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Directories() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceDirectory {
		return v.Directories
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput)
}

// Holds helm specific options.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Helms() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceHelm {
		return v.Helms
	}).(GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput)
}

// Ksonnet specific options.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Ksonnets() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceKsonnet {
		return v.Ksonnets
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput)
}

// Options specific to a GitOps application source specific to Kustomize.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Kustomizes() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceKustomize {
		return v.Kustomizes
	}).(GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput)
}

// Directory path within the git repository, and is only valid for the GitOps applications sourced from git.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) string { return v.Path }).(pulumi.StringOutput)
}

// Options specific to config management plugins.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Plugins() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourcePlugin {
		return v.Plugins
	}).(GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput)
}

// Reference name to be used in other source spec, used for multi-source applications.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) string { return v.Ref }).(pulumi.StringOutput)
}

// URL to the repository (git or helm) that contains the GitOps application manifests.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) RepoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) string { return v.RepoUrl }).(pulumi.StringOutput)
}

// Revision of the source to sync the GitOps application to. In case of git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag of the chart's version.
func (o GetGitopsApplicationsApplicationSpecSourceOutput) TargetRevision() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) string { return v.TargetRevision }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationSpecSourceArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceArrayOutput() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSource {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSource)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectory struct {
	// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation.
	Exclude *string `pulumi:"exclude"`
	// Glob pattern to match paths against that should be explicitly included during manifest generation.
	Include *string `pulumi:"include"`
	// Options specific to applications of type Jsonnet.
	Jsonnets []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet `pulumi:"jsonnets"`
	// Indicates to scan a directory recursively for manifests.
	Recurse *bool `pulumi:"recurse"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryArgs struct {
	// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation.
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Glob pattern to match paths against that should be explicitly included during manifest generation.
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Options specific to applications of type Jsonnet.
	Jsonnets GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput `pulumi:"jsonnets"`
	// Indicates to scan a directory recursively for manifests.
	Recurse pulumi.BoolPtrInput `pulumi:"recurse"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryArray and GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryArray []GetGitopsApplicationsApplicationSpecSourceDirectoryInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return o
}

// Glob pattern to match paths against that should be explicitly excluded from being used during manifest generation.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Glob pattern to match paths against that should be explicitly included during manifest generation.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Options specific to applications of type Jsonnet.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Jsonnets() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet {
		return v.Jsonnets
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput)
}

// Indicates to scan a directory recursively for manifests.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectory {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectory)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet struct {
	// List of jsonnet external variables.
	ExtVars []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar `pulumi:"extVars"`
	// Additional library search dirs.
	Libs []string `pulumi:"libs"`
	// List of jsonnet top-level arguments(TLAS).
	Tlas []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla `pulumi:"tlas"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs struct {
	// List of jsonnet external variables.
	ExtVars GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput `pulumi:"extVars"`
	// Additional library search dirs.
	Libs pulumi.StringArrayInput `pulumi:"libs"`
	// List of jsonnet top-level arguments(TLAS).
	Tlas GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput `pulumi:"tlas"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

// List of jsonnet external variables.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ExtVars() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar {
		return v.ExtVars
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

// Additional library search dirs.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

// List of jsonnet top-level arguments(TLAS).
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) Tlas() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla {
		return v.Tlas
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar struct {
	// Code of the external variables of jsonnet application.
	Code *bool `pulumi:"code"`
	// Name of the external variables of jsonnet application.
	Name *string `pulumi:"name"`
	// Value of the external variables of jsonnet application.
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs struct {
	// Code of the external variables of jsonnet application.
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of the external variables of jsonnet application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the external variables of jsonnet application.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

// Code of the external variables of jsonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// Name of the external variables of jsonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the external variables of jsonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla struct {
	// Code of the TLAS of the jsonnet application.
	Code *bool `pulumi:"code"`
	// Name of the TLAS of the jsonnet application.
	Name *string `pulumi:"name"`
	// Value of the TLAS of the jsonnet application.
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs struct {
	// Code of the TLAS of the jsonnet application.
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of the TLAS of the jsonnet application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the TLAS of the jsonnet application.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

// Code of the TLAS of the jsonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// Name of the TLAS of the jsonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the TLAS of the jsonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelm struct {
	// File parameters to the helm template.
	FileParameters []GetGitopsApplicationsApplicationSpecSourceHelmFileParameter `pulumi:"fileParameters"`
	// Prevents 'helm template' from failing when valueFiles do not exist locally.
	IgnoreMissingValueFiles *bool `pulumi:"ignoreMissingValueFiles"`
	// List of helm parameters which are passed to the helm template command upon manifest generation.
	Parameters []GetGitopsApplicationsApplicationSpecSourceHelmParameter `pulumi:"parameters"`
	// Indicates if to pass credentials to all domains (helm's --pass-credentials)
	PassCredentials *bool `pulumi:"passCredentials"`
	// Helm release name to use. If omitted it will use the GitOps application name.
	ReleaseName *string `pulumi:"releaseName"`
	// Indicates if to skip CRDs during helm template. Corresponds to helm --skip-crds
	SkipCrds *bool `pulumi:"skipCrds"`
	// Indicates if to skip schema validation during helm template. Corresponds to helm --skip-schema-validation
	SkipSchemaValidation *bool `pulumi:"skipSchemaValidation"`
	// Indicates if to skip tests during helm template. Corresponds to helm --skip-tests
	SkipTests *bool `pulumi:"skipTests"`
	// List of helm value files to use when generating a template.
	ValueFiles []string `pulumi:"valueFiles"`
	// Helm values to be passed to helm template, typically defined as a block.
	Values *string `pulumi:"values"`
	// Helm version to use for templating (either "2" or "3")
	Version *string `pulumi:"version"`
}

// GetGitopsApplicationsApplicationSpecSourceHelmInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmArgs and GetGitopsApplicationsApplicationSpecSourceHelmOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmArgs{...}
type GetGitopsApplicationsApplicationSpecSourceHelmInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmOutput() GetGitopsApplicationsApplicationSpecSourceHelmOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmArgs struct {
	// File parameters to the helm template.
	FileParameters GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput `pulumi:"fileParameters"`
	// Prevents 'helm template' from failing when valueFiles do not exist locally.
	IgnoreMissingValueFiles pulumi.BoolPtrInput `pulumi:"ignoreMissingValueFiles"`
	// List of helm parameters which are passed to the helm template command upon manifest generation.
	Parameters GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput `pulumi:"parameters"`
	// Indicates if to pass credentials to all domains (helm's --pass-credentials)
	PassCredentials pulumi.BoolPtrInput `pulumi:"passCredentials"`
	// Helm release name to use. If omitted it will use the GitOps application name.
	ReleaseName pulumi.StringPtrInput `pulumi:"releaseName"`
	// Indicates if to skip CRDs during helm template. Corresponds to helm --skip-crds
	SkipCrds pulumi.BoolPtrInput `pulumi:"skipCrds"`
	// Indicates if to skip schema validation during helm template. Corresponds to helm --skip-schema-validation
	SkipSchemaValidation pulumi.BoolPtrInput `pulumi:"skipSchemaValidation"`
	// Indicates if to skip tests during helm template. Corresponds to helm --skip-tests
	SkipTests pulumi.BoolPtrInput `pulumi:"skipTests"`
	// List of helm value files to use when generating a template.
	ValueFiles pulumi.StringArrayInput `pulumi:"valueFiles"`
	// Helm values to be passed to helm template, typically defined as a block.
	Values pulumi.StringPtrInput `pulumi:"values"`
	// Helm version to use for templating (either "2" or "3")
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetGitopsApplicationsApplicationSpecSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmOutput() GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmOutput)
}

// GetGitopsApplicationsApplicationSpecSourceHelmArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmArray and GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmArray{ GetGitopsApplicationsApplicationSpecSourceHelmArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceHelmArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmArray []GetGitopsApplicationsApplicationSpecSourceHelmInput

func (GetGitopsApplicationsApplicationSpecSourceHelmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArray) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArray) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmOutput() GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return o
}

// File parameters to the helm template.
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) FileParameters() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) []GetGitopsApplicationsApplicationSpecSourceHelmFileParameter {
		return v.FileParameters
	}).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput)
}

// Prevents 'helm template' from failing when valueFiles do not exist locally.
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) IgnoreMissingValueFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *bool { return v.IgnoreMissingValueFiles }).(pulumi.BoolPtrOutput)
}

// List of helm parameters which are passed to the helm template command upon manifest generation.
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) Parameters() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) []GetGitopsApplicationsApplicationSpecSourceHelmParameter {
		return v.Parameters
	}).(GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput)
}

// Indicates if to pass credentials to all domains (helm's --pass-credentials)
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) PassCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *bool { return v.PassCredentials }).(pulumi.BoolPtrOutput)
}

// Helm release name to use. If omitted it will use the GitOps application name.
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

// Indicates if to skip CRDs during helm template. Corresponds to helm --skip-crds
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) SkipCrds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *bool { return v.SkipCrds }).(pulumi.BoolPtrOutput)
}

// Indicates if to skip schema validation during helm template. Corresponds to helm --skip-schema-validation
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) SkipSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *bool { return v.SkipSchemaValidation }).(pulumi.BoolPtrOutput)
}

// Indicates if to skip tests during helm template. Corresponds to helm --skip-tests
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) SkipTests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *bool { return v.SkipTests }).(pulumi.BoolPtrOutput)
}

// List of helm value files to use when generating a template.
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

// Helm values to be passed to helm template, typically defined as a block.
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

// Helm version to use for templating (either "2" or "3")
func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceHelm {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceHelm)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceHelmOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameter struct {
	// Name of the helm parameter.
	Name *string `pulumi:"name"`
	// Path to the file containing the values of the helm parameter.
	Path *string `pulumi:"path"`
}

// GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs and GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{...}
type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs struct {
	// Name of the helm parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path to the file containing the values of the helm parameter.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput)
}

// GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray and GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray{ GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray []GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return o
}

// Name of the helm parameter.
func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmFileParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path to the file containing the values of the helm parameter.
func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmFileParameter) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceHelmFileParameter {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameter struct {
	// Indicates if helm should interpret booleans and numbers as strings.
	ForceString *bool `pulumi:"forceString"`
	// Name of the helm parameter.
	Name *string `pulumi:"name"`
	// Value of the Helm parameter.
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceHelmParameterInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs and GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmParameterInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs{...}
type GetGitopsApplicationsApplicationSpecSourceHelmParameterInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs struct {
	// Indicates if helm should interpret booleans and numbers as strings.
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name of the helm parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the Helm parameter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput)
}

// GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmParameterArray and GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmParameterArray{ GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterArray []GetGitopsApplicationsApplicationSpecSourceHelmParameterInput

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return o
}

// Indicates if helm should interpret booleans and numbers as strings.
func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmParameter) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name of the helm parameter.
func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the Helm parameter.
func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceHelmParameter {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceHelmParameter)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnet struct {
	// Ksonnet application environment name.
	Environment *string `pulumi:"environment"`
	// List of ksonnet component parameter override values.
	Parameters []GetGitopsApplicationsApplicationSpecSourceKsonnetParameter `pulumi:"parameters"`
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetArgs and GetGitopsApplicationsApplicationSpecSourceKsonnetOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetArgs{...}
type GetGitopsApplicationsApplicationSpecSourceKsonnetInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetArgs struct {
	// Ksonnet application environment name.
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// List of ksonnet component parameter override values.
	Parameters GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput `pulumi:"parameters"`
}

func (GetGitopsApplicationsApplicationSpecSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetOutput)
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetArray and GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetArray{ GetGitopsApplicationsApplicationSpecSourceKsonnetArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetArray []GetGitopsApplicationsApplicationSpecSourceKsonnetInput

func (GetGitopsApplicationsApplicationSpecSourceKsonnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return o
}

// Ksonnet application environment name.
func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// List of ksonnet component parameter override values.
func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) Parameters() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnet) []GetGitopsApplicationsApplicationSpecSourceKsonnetParameter {
		return v.Parameters
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceKsonnet {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceKsonnet)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameter struct {
	// Component of the parameter of the ksonnet application.
	Component *string `pulumi:"component"`
	// Name of the parameter of the ksonnet application.
	Name *string `pulumi:"name"`
	// Value of the parameter of the ksonnet application.
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs and GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{...}
type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs struct {
	// Component of the parameter of the ksonnet application.
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Name of the parameter of the ksonnet application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the parameter of the ksonnet application.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput)
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray and GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray{ GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray []GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return o
}

// Component of the parameter of the ksonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Name of the parameter of the ksonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the parameter of the ksonnet application.
func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceKsonnetParameter {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKustomize struct {
	// List of additional annotations to add to rendered manifests.
	CommonAnnotations map[string]string `pulumi:"commonAnnotations"`
	// List of additional labels to add to rendered manifests.
	CommonLabels map[string]string `pulumi:"commonLabels"`
	// Indicates if to force applying common annotations to resources for kustomize apps.
	ForceCommonAnnotations *bool `pulumi:"forceCommonAnnotations"`
	// Indicates if to force apply common labels to resources for kustomize apps.
	ForceCommonLabels *bool `pulumi:"forceCommonLabels"`
	// List of kustomize image override specifications.
	Images []string `pulumi:"images"`
	// Prefix prepended to resources for kustomize apps.
	NamePrefix *string `pulumi:"namePrefix"`
	// Suffix appended to resources for kustomize apps.
	NameSuffix *string `pulumi:"nameSuffix"`
	// Version of kustomize to use for rendering manifests.
	Version *string `pulumi:"version"`
}

// GetGitopsApplicationsApplicationSpecSourceKustomizeInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKustomizeArgs and GetGitopsApplicationsApplicationSpecSourceKustomizeOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKustomizeInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKustomizeArgs{...}
type GetGitopsApplicationsApplicationSpecSourceKustomizeInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeOutput
	ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeArgs struct {
	// List of additional annotations to add to rendered manifests.
	CommonAnnotations pulumi.StringMapInput `pulumi:"commonAnnotations"`
	// List of additional labels to add to rendered manifests.
	CommonLabels pulumi.StringMapInput `pulumi:"commonLabels"`
	// Indicates if to force applying common annotations to resources for kustomize apps.
	ForceCommonAnnotations pulumi.BoolPtrInput `pulumi:"forceCommonAnnotations"`
	// Indicates if to force apply common labels to resources for kustomize apps.
	ForceCommonLabels pulumi.BoolPtrInput `pulumi:"forceCommonLabels"`
	// List of kustomize image override specifications.
	Images pulumi.StringArrayInput `pulumi:"images"`
	// Prefix prepended to resources for kustomize apps.
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Suffix appended to resources for kustomize apps.
	NameSuffix pulumi.StringPtrInput `pulumi:"nameSuffix"`
	// Version of kustomize to use for rendering manifests.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetGitopsApplicationsApplicationSpecSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArgs) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArgs) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKustomizeOutput)
}

// GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKustomizeArray and GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKustomizeArray{ GetGitopsApplicationsApplicationSpecSourceKustomizeArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeArray []GetGitopsApplicationsApplicationSpecSourceKustomizeInput

func (GetGitopsApplicationsApplicationSpecSourceKustomizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArray) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArray) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return o
}

// List of additional annotations to add to rendered manifests.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) map[string]string {
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

// List of additional labels to add to rendered manifests.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

// Indicates if to force applying common annotations to resources for kustomize apps.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ForceCommonAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *bool { return v.ForceCommonAnnotations }).(pulumi.BoolPtrOutput)
}

// Indicates if to force apply common labels to resources for kustomize apps.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ForceCommonLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *bool { return v.ForceCommonLabels }).(pulumi.BoolPtrOutput)
}

// List of kustomize image override specifications.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// Prefix prepended to resources for kustomize apps.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Suffix appended to resources for kustomize apps.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

// Version of kustomize to use for rendering manifests.
func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceKustomize {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceKustomize)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceKustomizeOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePlugin struct {
	// Entry in the GitOps application's environment.
	Envs []GetGitopsApplicationsApplicationSpecSourcePluginEnv `pulumi:"envs"`
	// Name of the plugin.
	Name *string `pulumi:"name"`
}

// GetGitopsApplicationsApplicationSpecSourcePluginInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginArgs and GetGitopsApplicationsApplicationSpecSourcePluginOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginArgs{...}
type GetGitopsApplicationsApplicationSpecSourcePluginInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginOutput() GetGitopsApplicationsApplicationSpecSourcePluginOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginArgs struct {
	// Entry in the GitOps application's environment.
	Envs GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput `pulumi:"envs"`
	// Name of the plugin.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetGitopsApplicationsApplicationSpecSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginOutput() GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginOutput)
}

// GetGitopsApplicationsApplicationSpecSourcePluginArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginArray and GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginArray{ GetGitopsApplicationsApplicationSpecSourcePluginArgs{...} }
type GetGitopsApplicationsApplicationSpecSourcePluginArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginArray []GetGitopsApplicationsApplicationSpecSourcePluginInput

func (GetGitopsApplicationsApplicationSpecSourcePluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArray) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArray) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginOutput() GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return o
}

// Entry in the GitOps application's environment.
func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) Envs() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePlugin) []GetGitopsApplicationsApplicationSpecSourcePluginEnv {
		return v.Envs
	}).(GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput)
}

// Name of the plugin.
func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourcePlugin {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourcePlugin)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourcePluginOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnv struct {
	// Name of the variable, usually expressed in uppercase.
	Name *string `pulumi:"name"`
	// Value of the variable.
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourcePluginEnvInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs and GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginEnvInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs{...}
type GetGitopsApplicationsApplicationSpecSourcePluginEnvInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs struct {
	// Name of the variable, usually expressed in uppercase.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput)
}

// GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginEnvArray and GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginEnvArray{ GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs{...} }
type GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvArray []GetGitopsApplicationsApplicationSpecSourcePluginEnvInput

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArray) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArray) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return o
}

// Name of the variable, usually expressed in uppercase.
func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePluginEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the variable.
func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePluginEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourcePluginEnv {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourcePluginEnv)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicy struct {
	// Controls the behavior of an automated sync.
	Automateds []GetGitopsApplicationsApplicationSpecSyncPolicyAutomated `pulumi:"automateds"`
	// Contains information about the strategy to apply when a sync failed.
	Retries []GetGitopsApplicationsApplicationSpecSyncPolicyRetry `pulumi:"retries"`
	// Options allow you to specify whole app sync-options.
	SyncOptions []string `pulumi:"syncOptions"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyArgs and GetGitopsApplicationsApplicationSpecSyncPolicyOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyOutput() GetGitopsApplicationsApplicationSpecSyncPolicyOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyArgs struct {
	// Controls the behavior of an automated sync.
	Automateds GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput `pulumi:"automateds"`
	// Contains information about the strategy to apply when a sync failed.
	Retries GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput `pulumi:"retries"`
	// Options allow you to specify whole app sync-options.
	SyncOptions pulumi.StringArrayInput `pulumi:"syncOptions"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutput() GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyArray and GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyArray{ GetGitopsApplicationsApplicationSpecSyncPolicyArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyArray []GetGitopsApplicationsApplicationSpecSyncPolicyInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutput() GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return o
}

// Controls the behavior of an automated sync.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) Automateds() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicy) []GetGitopsApplicationsApplicationSpecSyncPolicyAutomated {
		return v.Automateds
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput)
}

// Contains information about the strategy to apply when a sync failed.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) Retries() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicy) []GetGitopsApplicationsApplicationSpecSyncPolicyRetry {
		return v.Retries
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput)
}

// Options allow you to specify whole app sync-options.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicy) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicy {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicy)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomated struct {
	// Indicates to allows apps to have zero live resources (default: false).
	AllowEmpty bool `pulumi:"allowEmpty"`
	// Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
	Prune bool `pulumi:"prune"`
	// Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
	SelfHeal bool `pulumi:"selfHeal"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs and GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs struct {
	// Indicates to allows apps to have zero live resources (default: false).
	AllowEmpty pulumi.BoolInput `pulumi:"allowEmpty"`
	// Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
	Prune pulumi.BoolInput `pulumi:"prune"`
	// Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
	SelfHeal pulumi.BoolInput `pulumi:"selfHeal"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray and GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray{ GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray []GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

// Indicates to allows apps to have zero live resources (default: false).
func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) AllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyAutomated) bool { return v.AllowEmpty }).(pulumi.BoolOutput)
}

// Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) Prune() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyAutomated) bool { return v.Prune }).(pulumi.BoolOutput)
}

// Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) SelfHeal() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyAutomated) bool { return v.SelfHeal }).(pulumi.BoolOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicyAutomated {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetry struct {
	// Backoff strategy to use on subsequent retries for failing syncs.
	Backoffs []GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff `pulumi:"backoffs"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit string `pulumi:"limit"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs and GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs struct {
	// Backoff strategy to use on subsequent retries for failing syncs.
	Backoffs GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput `pulumi:"backoffs"`
	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit pulumi.StringInput `pulumi:"limit"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray and GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray{ GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray []GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return o
}

// Backoff strategy to use on subsequent retries for failing syncs.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) Backoffs() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetry) []GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff {
		return v.Backoffs
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput)
}

// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) Limit() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetry) string { return v.Limit }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicyRetry {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicyRetry)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff struct {
	// Amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h").
	Duration string `pulumi:"duration"`
	// Factor to multiply the base duration after each failed retry.
	Factor string `pulumi:"factor"`
	// Maximum amount of time allowed of the backoff strategy.
	MaxDuration string `pulumi:"maxDuration"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs and GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs struct {
	// Amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h").
	Duration pulumi.StringInput `pulumi:"duration"`
	// Factor to multiply the base duration after each failed retry.
	Factor pulumi.StringInput `pulumi:"factor"`
	// Maximum amount of time allowed of the backoff strategy.
	MaxDuration pulumi.StringInput `pulumi:"maxDuration"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray and GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray{ GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray []GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

// Amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h").
func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) string { return v.Duration }).(pulumi.StringOutput)
}

// Factor to multiply the base duration after each failed retry.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) Factor() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) string { return v.Factor }).(pulumi.StringOutput)
}

// Maximum amount of time allowed of the backoff strategy.
func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) MaxDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) string { return v.MaxDuration }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput)
}

type GetGitopsClusterRequest struct {
	// GitOps cluster details.
	Clusters []GetGitopsClusterRequestCluster `pulumi:"clusters"`
	// Tags for the GitOps cluster. These can be used to search or filter the GitOps agents.
	Tags []string `pulumi:"tags"`
	// Fields which are updated.
	UpdatedFields []string `pulumi:"updatedFields"`
	// Indicates if the GitOps cluster should be updated if existing and inserted if not.
	Upsert *bool `pulumi:"upsert"`
}

// GetGitopsClusterRequestInput is an input type that accepts GetGitopsClusterRequestArgs and GetGitopsClusterRequestOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestInput` via:
//
//	GetGitopsClusterRequestArgs{...}
type GetGitopsClusterRequestInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestOutput() GetGitopsClusterRequestOutput
	ToGetGitopsClusterRequestOutputWithContext(context.Context) GetGitopsClusterRequestOutput
}

type GetGitopsClusterRequestArgs struct {
	// GitOps cluster details.
	Clusters GetGitopsClusterRequestClusterArrayInput `pulumi:"clusters"`
	// Tags for the GitOps cluster. These can be used to search or filter the GitOps agents.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Fields which are updated.
	UpdatedFields pulumi.StringArrayInput `pulumi:"updatedFields"`
	// Indicates if the GitOps cluster should be updated if existing and inserted if not.
	Upsert pulumi.BoolPtrInput `pulumi:"upsert"`
}

func (GetGitopsClusterRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequest)(nil)).Elem()
}

func (i GetGitopsClusterRequestArgs) ToGetGitopsClusterRequestOutput() GetGitopsClusterRequestOutput {
	return i.ToGetGitopsClusterRequestOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestArgs) ToGetGitopsClusterRequestOutputWithContext(ctx context.Context) GetGitopsClusterRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestOutput)
}

// GetGitopsClusterRequestArrayInput is an input type that accepts GetGitopsClusterRequestArray and GetGitopsClusterRequestArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestArrayInput` via:
//
//	GetGitopsClusterRequestArray{ GetGitopsClusterRequestArgs{...} }
type GetGitopsClusterRequestArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestArrayOutput() GetGitopsClusterRequestArrayOutput
	ToGetGitopsClusterRequestArrayOutputWithContext(context.Context) GetGitopsClusterRequestArrayOutput
}

type GetGitopsClusterRequestArray []GetGitopsClusterRequestInput

func (GetGitopsClusterRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequest)(nil)).Elem()
}

func (i GetGitopsClusterRequestArray) ToGetGitopsClusterRequestArrayOutput() GetGitopsClusterRequestArrayOutput {
	return i.ToGetGitopsClusterRequestArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestArray) ToGetGitopsClusterRequestArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestArrayOutput)
}

type GetGitopsClusterRequestOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequest)(nil)).Elem()
}

func (o GetGitopsClusterRequestOutput) ToGetGitopsClusterRequestOutput() GetGitopsClusterRequestOutput {
	return o
}

func (o GetGitopsClusterRequestOutput) ToGetGitopsClusterRequestOutputWithContext(ctx context.Context) GetGitopsClusterRequestOutput {
	return o
}

// GitOps cluster details.
func (o GetGitopsClusterRequestOutput) Clusters() GetGitopsClusterRequestClusterArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []GetGitopsClusterRequestCluster { return v.Clusters }).(GetGitopsClusterRequestClusterArrayOutput)
}

// Tags for the GitOps cluster. These can be used to search or filter the GitOps agents.
func (o GetGitopsClusterRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Fields which are updated.
func (o GetGitopsClusterRequestOutput) UpdatedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []string { return v.UpdatedFields }).(pulumi.StringArrayOutput)
}

// Indicates if the GitOps cluster should be updated if existing and inserted if not.
func (o GetGitopsClusterRequestOutput) Upsert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) *bool { return v.Upsert }).(pulumi.BoolPtrOutput)
}

type GetGitopsClusterRequestArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequest)(nil)).Elem()
}

func (o GetGitopsClusterRequestArrayOutput) ToGetGitopsClusterRequestArrayOutput() GetGitopsClusterRequestArrayOutput {
	return o
}

func (o GetGitopsClusterRequestArrayOutput) ToGetGitopsClusterRequestArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestArrayOutput {
	return o
}

func (o GetGitopsClusterRequestArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequest {
		return vs[0].([]GetGitopsClusterRequest)[vs[1].(int)]
	}).(GetGitopsClusterRequestOutput)
}

type GetGitopsClusterRequestCluster struct {
	// Annotations for cluster secret metadata.
	Annotations map[string]string `pulumi:"annotations"`
	// Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
	ClusterResources *bool `pulumi:"clusterResources"`
	// GitOps cluster config.
	Configs []GetGitopsClusterRequestClusterConfig `pulumi:"configs"`
	// Information about cluster cache and state.
	Infos []GetGitopsClusterRequestClusterInfo `pulumi:"infos"`
	// Labels for cluster secret metadata.
	Labels map[string]string `pulumi:"labels"`
	// Name of the cluster. If omitted, the server address will be used.
	Name *string `pulumi:"name"`
	// List of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
	Namespaces []string `pulumi:"namespaces"`
	// The ArgoCD project name corresponding to this GitOps cluster. An empty string means that the GitOps cluster belongs to the default project created by Harness.
	Project *string `pulumi:"project"`
	// Time when cluster cache refresh has been requested.
	RefreshRequestedAts []GetGitopsClusterRequestClusterRefreshRequestedAt `pulumi:"refreshRequestedAts"`
	// API server URL of the kubernetes cluster.
	Server *string `pulumi:"server"`
	// Shard number to be managed by a specific application controller pod. Calculated on the fly by the application controller if not specified.
	Shard *string `pulumi:"shard"`
}

// GetGitopsClusterRequestClusterInput is an input type that accepts GetGitopsClusterRequestClusterArgs and GetGitopsClusterRequestClusterOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInput` via:
//
//	GetGitopsClusterRequestClusterArgs{...}
type GetGitopsClusterRequestClusterInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterOutput() GetGitopsClusterRequestClusterOutput
	ToGetGitopsClusterRequestClusterOutputWithContext(context.Context) GetGitopsClusterRequestClusterOutput
}

type GetGitopsClusterRequestClusterArgs struct {
	// Annotations for cluster secret metadata.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
	ClusterResources pulumi.BoolPtrInput `pulumi:"clusterResources"`
	// GitOps cluster config.
	Configs GetGitopsClusterRequestClusterConfigArrayInput `pulumi:"configs"`
	// Information about cluster cache and state.
	Infos GetGitopsClusterRequestClusterInfoArrayInput `pulumi:"infos"`
	// Labels for cluster secret metadata.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the cluster. If omitted, the server address will be used.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// The ArgoCD project name corresponding to this GitOps cluster. An empty string means that the GitOps cluster belongs to the default project created by Harness.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Time when cluster cache refresh has been requested.
	RefreshRequestedAts GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput `pulumi:"refreshRequestedAts"`
	// API server URL of the kubernetes cluster.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Shard number to be managed by a specific application controller pod. Calculated on the fly by the application controller if not specified.
	Shard pulumi.StringPtrInput `pulumi:"shard"`
}

func (GetGitopsClusterRequestClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterArgs) ToGetGitopsClusterRequestClusterOutput() GetGitopsClusterRequestClusterOutput {
	return i.ToGetGitopsClusterRequestClusterOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterArgs) ToGetGitopsClusterRequestClusterOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterOutput)
}

// GetGitopsClusterRequestClusterArrayInput is an input type that accepts GetGitopsClusterRequestClusterArray and GetGitopsClusterRequestClusterArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterArrayInput` via:
//
//	GetGitopsClusterRequestClusterArray{ GetGitopsClusterRequestClusterArgs{...} }
type GetGitopsClusterRequestClusterArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterArrayOutput() GetGitopsClusterRequestClusterArrayOutput
	ToGetGitopsClusterRequestClusterArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterArrayOutput
}

type GetGitopsClusterRequestClusterArray []GetGitopsClusterRequestClusterInput

func (GetGitopsClusterRequestClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterArray) ToGetGitopsClusterRequestClusterArrayOutput() GetGitopsClusterRequestClusterArrayOutput {
	return i.ToGetGitopsClusterRequestClusterArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterArray) ToGetGitopsClusterRequestClusterArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterArrayOutput)
}

type GetGitopsClusterRequestClusterOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterOutput) ToGetGitopsClusterRequestClusterOutput() GetGitopsClusterRequestClusterOutput {
	return o
}

func (o GetGitopsClusterRequestClusterOutput) ToGetGitopsClusterRequestClusterOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterOutput {
	return o
}

// Annotations for cluster secret metadata.
func (o GetGitopsClusterRequestClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
func (o GetGitopsClusterRequestClusterOutput) ClusterResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *bool { return v.ClusterResources }).(pulumi.BoolPtrOutput)
}

// GitOps cluster config.
func (o GetGitopsClusterRequestClusterOutput) Configs() GetGitopsClusterRequestClusterConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []GetGitopsClusterRequestClusterConfig { return v.Configs }).(GetGitopsClusterRequestClusterConfigArrayOutput)
}

// Information about cluster cache and state.
func (o GetGitopsClusterRequestClusterOutput) Infos() GetGitopsClusterRequestClusterInfoArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []GetGitopsClusterRequestClusterInfo { return v.Infos }).(GetGitopsClusterRequestClusterInfoArrayOutput)
}

// Labels for cluster secret metadata.
func (o GetGitopsClusterRequestClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the cluster. If omitted, the server address will be used.
func (o GetGitopsClusterRequestClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
func (o GetGitopsClusterRequestClusterOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// The ArgoCD project name corresponding to this GitOps cluster. An empty string means that the GitOps cluster belongs to the default project created by Harness.
func (o GetGitopsClusterRequestClusterOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Time when cluster cache refresh has been requested.
func (o GetGitopsClusterRequestClusterOutput) RefreshRequestedAts() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []GetGitopsClusterRequestClusterRefreshRequestedAt {
		return v.RefreshRequestedAts
	}).(GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput)
}

// API server URL of the kubernetes cluster.
func (o GetGitopsClusterRequestClusterOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Shard number to be managed by a specific application controller pod. Calculated on the fly by the application controller if not specified.
func (o GetGitopsClusterRequestClusterOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterArrayOutput) ToGetGitopsClusterRequestClusterArrayOutput() GetGitopsClusterRequestClusterArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterArrayOutput) ToGetGitopsClusterRequestClusterArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestCluster {
		return vs[0].([]GetGitopsClusterRequestCluster)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterOutput)
}

type GetGitopsClusterRequestClusterConfig struct {
	// AWS Cluster name. If set then AWS CLI EKS token command will be used to access cluster.
	AwsClusterName *string `pulumi:"awsClusterName"`
	// Bearer authentication token the cluster.
	BearerToken *string `pulumi:"bearerToken"`
	// Identifies the authentication method used to connect to the cluster.
	ClusterConnectionType *string `pulumi:"clusterConnectionType"`
	// DisableCompression bypasses automatic GZip compression requests to to the cluster's API server. Corresponds to running kubectl with --disable-compression
	DisableCompression *bool `pulumi:"disableCompression"`
	// Configuration for an exec provider.
	ExecProviderConfigs []GetGitopsClusterRequestClusterConfigExecProviderConfig `pulumi:"execProviderConfigs"`
	// Password of the server of the cluster.
	Password *string `pulumi:"password"`
	// The URL to the proxy to be used for all requests send to the cluster's API server
	ProxyUrl *string `pulumi:"proxyUrl"`
	// Optional role ARN. If set then used for AWS IAM Authenticator.
	RoleARN *string `pulumi:"roleARN"`
	// Settings to enable transport layer security.
	TlsClientConfigs []GetGitopsClusterRequestClusterConfigTlsClientConfig `pulumi:"tlsClientConfigs"`
	// Username of the server of the cluster.
	Username *string `pulumi:"username"`
}

// GetGitopsClusterRequestClusterConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigArgs and GetGitopsClusterRequestClusterConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigArgs{...}
type GetGitopsClusterRequestClusterConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigOutput() GetGitopsClusterRequestClusterConfigOutput
	ToGetGitopsClusterRequestClusterConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigOutput
}

type GetGitopsClusterRequestClusterConfigArgs struct {
	// AWS Cluster name. If set then AWS CLI EKS token command will be used to access cluster.
	AwsClusterName pulumi.StringPtrInput `pulumi:"awsClusterName"`
	// Bearer authentication token the cluster.
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// Identifies the authentication method used to connect to the cluster.
	ClusterConnectionType pulumi.StringPtrInput `pulumi:"clusterConnectionType"`
	// DisableCompression bypasses automatic GZip compression requests to to the cluster's API server. Corresponds to running kubectl with --disable-compression
	DisableCompression pulumi.BoolPtrInput `pulumi:"disableCompression"`
	// Configuration for an exec provider.
	ExecProviderConfigs GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput `pulumi:"execProviderConfigs"`
	// Password of the server of the cluster.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The URL to the proxy to be used for all requests send to the cluster's API server
	ProxyUrl pulumi.StringPtrInput `pulumi:"proxyUrl"`
	// Optional role ARN. If set then used for AWS IAM Authenticator.
	RoleARN pulumi.StringPtrInput `pulumi:"roleARN"`
	// Settings to enable transport layer security.
	TlsClientConfigs GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput `pulumi:"tlsClientConfigs"`
	// Username of the server of the cluster.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetGitopsClusterRequestClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigArgs) ToGetGitopsClusterRequestClusterConfigOutput() GetGitopsClusterRequestClusterConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigArgs) ToGetGitopsClusterRequestClusterConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigOutput)
}

// GetGitopsClusterRequestClusterConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigArray and GetGitopsClusterRequestClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigArray{ GetGitopsClusterRequestClusterConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigArrayOutput() GetGitopsClusterRequestClusterConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigArray []GetGitopsClusterRequestClusterConfigInput

func (GetGitopsClusterRequestClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigArray) ToGetGitopsClusterRequestClusterConfigArrayOutput() GetGitopsClusterRequestClusterConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigArray) ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigOutput) ToGetGitopsClusterRequestClusterConfigOutput() GetGitopsClusterRequestClusterConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigOutput) ToGetGitopsClusterRequestClusterConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigOutput {
	return o
}

// AWS Cluster name. If set then AWS CLI EKS token command will be used to access cluster.
func (o GetGitopsClusterRequestClusterConfigOutput) AwsClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.AwsClusterName }).(pulumi.StringPtrOutput)
}

// Bearer authentication token the cluster.
func (o GetGitopsClusterRequestClusterConfigOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// Identifies the authentication method used to connect to the cluster.
func (o GetGitopsClusterRequestClusterConfigOutput) ClusterConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.ClusterConnectionType }).(pulumi.StringPtrOutput)
}

// DisableCompression bypasses automatic GZip compression requests to to the cluster's API server. Corresponds to running kubectl with --disable-compression
func (o GetGitopsClusterRequestClusterConfigOutput) DisableCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *bool { return v.DisableCompression }).(pulumi.BoolPtrOutput)
}

// Configuration for an exec provider.
func (o GetGitopsClusterRequestClusterConfigOutput) ExecProviderConfigs() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) []GetGitopsClusterRequestClusterConfigExecProviderConfig {
		return v.ExecProviderConfigs
	}).(GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput)
}

// Password of the server of the cluster.
func (o GetGitopsClusterRequestClusterConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The URL to the proxy to be used for all requests send to the cluster's API server
func (o GetGitopsClusterRequestClusterConfigOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

// Optional role ARN. If set then used for AWS IAM Authenticator.
func (o GetGitopsClusterRequestClusterConfigOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.RoleARN }).(pulumi.StringPtrOutput)
}

// Settings to enable transport layer security.
func (o GetGitopsClusterRequestClusterConfigOutput) TlsClientConfigs() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) []GetGitopsClusterRequestClusterConfigTlsClientConfig {
		return v.TlsClientConfigs
	}).(GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput)
}

// Username of the server of the cluster.
func (o GetGitopsClusterRequestClusterConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigArrayOutput() GetGitopsClusterRequestClusterConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigOutput)
}

type GetGitopsClusterRequestClusterConfigExecProviderConfig struct {
	// Preferred input version of the ExecInfo.
	ApiVersion *string `pulumi:"apiVersion"`
	// Arguments to pass to the command when executing it.
	Args []string `pulumi:"args"`
	// Command to execute.
	Command *string `pulumi:"command"`
	// Additional environment variables to expose to the process.
	Env map[string]string `pulumi:"env"`
	// Message displayed when the executable is not found.
	InstallHint *string `pulumi:"installHint"`
}

// GetGitopsClusterRequestClusterConfigExecProviderConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigExecProviderConfigArgs and GetGitopsClusterRequestClusterConfigExecProviderConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigExecProviderConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigExecProviderConfigArgs{...}
type GetGitopsClusterRequestClusterConfigExecProviderConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigOutput
	ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigArgs struct {
	// Preferred input version of the ExecInfo.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Arguments to pass to the command when executing it.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Command to execute.
	Command pulumi.StringPtrInput `pulumi:"command"`
	// Additional environment variables to expose to the process.
	Env pulumi.StringMapInput `pulumi:"env"`
	// Message displayed when the executable is not found.
	InstallHint pulumi.StringPtrInput `pulumi:"installHint"`
}

func (GetGitopsClusterRequestClusterConfigExecProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArgs) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArgs) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigExecProviderConfigOutput)
}

// GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigExecProviderConfigArray and GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigExecProviderConfigArray{ GetGitopsClusterRequestClusterConfigExecProviderConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigArray []GetGitopsClusterRequestClusterConfigExecProviderConfigInput

func (GetGitopsClusterRequestClusterConfigExecProviderConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArray) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArray) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return o
}

// Preferred input version of the ExecInfo.
func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Arguments to pass to the command when executing it.
func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Command to execute.
func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) *string { return v.Command }).(pulumi.StringPtrOutput)
}

// Additional environment variables to expose to the process.
func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

// Message displayed when the executable is not found.
func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) InstallHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) *string { return v.InstallHint }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfigExecProviderConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfigExecProviderConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigExecProviderConfigOutput)
}

type GetGitopsClusterRequestClusterConfigTlsClientConfig struct {
	// CA data holds PEM-encoded bytes (typically read from a root certificates bundle). Use this if you are using self-signed certificates. CAData takes precedence over CAFile. The value should be base64 encoded.
	CaData *string `pulumi:"caData"`
	// Certificate data holds PEM-encoded bytes (typically read from a client certificate file). CertData takes precedence over CertFile. Use this if you are using mTLS. The value should be base64 encoded.
	CertData *string `pulumi:"certData"`
	// Indicates if the TLS connection to the cluster should be insecure.
	Insecure *bool `pulumi:"insecure"`
	// Key data holds PEM-encoded bytes (typically read from a client certificate key file). KeyData takes precedence over KeyFile. Use this if you are using mTLS. The value should be base64 encoded.
	KeyData *string `pulumi:"keyData"`
	// Server name for SNI in the client to check server certificates against. If ServerName is empty, the hostname used to contact the server is used.
	ServerName *string `pulumi:"serverName"`
}

// GetGitopsClusterRequestClusterConfigTlsClientConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigTlsClientConfigArgs and GetGitopsClusterRequestClusterConfigTlsClientConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigTlsClientConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigTlsClientConfigArgs{...}
type GetGitopsClusterRequestClusterConfigTlsClientConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigOutput
	ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigArgs struct {
	// CA data holds PEM-encoded bytes (typically read from a root certificates bundle). Use this if you are using self-signed certificates. CAData takes precedence over CAFile. The value should be base64 encoded.
	CaData pulumi.StringPtrInput `pulumi:"caData"`
	// Certificate data holds PEM-encoded bytes (typically read from a client certificate file). CertData takes precedence over CertFile. Use this if you are using mTLS. The value should be base64 encoded.
	CertData pulumi.StringPtrInput `pulumi:"certData"`
	// Indicates if the TLS connection to the cluster should be insecure.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// Key data holds PEM-encoded bytes (typically read from a client certificate key file). KeyData takes precedence over KeyFile. Use this if you are using mTLS. The value should be base64 encoded.
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// Server name for SNI in the client to check server certificates against. If ServerName is empty, the hostname used to contact the server is used.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (GetGitopsClusterRequestClusterConfigTlsClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArgs) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArgs) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigTlsClientConfigOutput)
}

// GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigTlsClientConfigArray and GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigTlsClientConfigArray{ GetGitopsClusterRequestClusterConfigTlsClientConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigArray []GetGitopsClusterRequestClusterConfigTlsClientConfigInput

func (GetGitopsClusterRequestClusterConfigTlsClientConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArray) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArray) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return o
}

// CA data holds PEM-encoded bytes (typically read from a root certificates bundle). Use this if you are using self-signed certificates. CAData takes precedence over CAFile. The value should be base64 encoded.
func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) CaData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.CaData }).(pulumi.StringPtrOutput)
}

// Certificate data holds PEM-encoded bytes (typically read from a client certificate file). CertData takes precedence over CertFile. Use this if you are using mTLS. The value should be base64 encoded.
func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) CertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.CertData }).(pulumi.StringPtrOutput)
}

// Indicates if the TLS connection to the cluster should be insecure.
func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// Key data holds PEM-encoded bytes (typically read from a client certificate key file). KeyData takes precedence over KeyFile. Use this if you are using mTLS. The value should be base64 encoded.
func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Server name for SNI in the client to check server certificates against. If ServerName is empty, the hostname used to contact the server is used.
func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfigTlsClientConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfigTlsClientConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigTlsClientConfigOutput)
}

type GetGitopsClusterRequestClusterInfo struct {
	// List of API versions supported by the cluster.
	ApiVersions []string `pulumi:"apiVersions"`
	// Number of applications managed by Argo CD on the cluster.
	ApplicationsCount *string `pulumi:"applicationsCount"`
	// Information about the cluster cache.
	CacheInfos []GetGitopsClusterRequestClusterInfoCacheInfo `pulumi:"cacheInfos"`
	// Information about the connection to the cluster.
	ConnectionStates []GetGitopsClusterRequestClusterInfoConnectionState `pulumi:"connectionStates"`
	// Kubernetes version of the cluster.
	ServerVersion string `pulumi:"serverVersion"`
}

// GetGitopsClusterRequestClusterInfoInput is an input type that accepts GetGitopsClusterRequestClusterInfoArgs and GetGitopsClusterRequestClusterInfoOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoInput` via:
//
//	GetGitopsClusterRequestClusterInfoArgs{...}
type GetGitopsClusterRequestClusterInfoInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoOutput() GetGitopsClusterRequestClusterInfoOutput
	ToGetGitopsClusterRequestClusterInfoOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoOutput
}

type GetGitopsClusterRequestClusterInfoArgs struct {
	// List of API versions supported by the cluster.
	ApiVersions pulumi.StringArrayInput `pulumi:"apiVersions"`
	// Number of applications managed by Argo CD on the cluster.
	ApplicationsCount pulumi.StringPtrInput `pulumi:"applicationsCount"`
	// Information about the cluster cache.
	CacheInfos GetGitopsClusterRequestClusterInfoCacheInfoArrayInput `pulumi:"cacheInfos"`
	// Information about the connection to the cluster.
	ConnectionStates GetGitopsClusterRequestClusterInfoConnectionStateArrayInput `pulumi:"connectionStates"`
	// Kubernetes version of the cluster.
	ServerVersion pulumi.StringInput `pulumi:"serverVersion"`
}

func (GetGitopsClusterRequestClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoArgs) ToGetGitopsClusterRequestClusterInfoOutput() GetGitopsClusterRequestClusterInfoOutput {
	return i.ToGetGitopsClusterRequestClusterInfoOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoArgs) ToGetGitopsClusterRequestClusterInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoOutput)
}

// GetGitopsClusterRequestClusterInfoArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoArray and GetGitopsClusterRequestClusterInfoArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoArray{ GetGitopsClusterRequestClusterInfoArgs{...} }
type GetGitopsClusterRequestClusterInfoArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoArrayOutput() GetGitopsClusterRequestClusterInfoArrayOutput
	ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoArrayOutput
}

type GetGitopsClusterRequestClusterInfoArray []GetGitopsClusterRequestClusterInfoInput

func (GetGitopsClusterRequestClusterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoArray) ToGetGitopsClusterRequestClusterInfoArrayOutput() GetGitopsClusterRequestClusterInfoArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoArray) ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoArrayOutput)
}

type GetGitopsClusterRequestClusterInfoOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoOutput) ToGetGitopsClusterRequestClusterInfoOutput() GetGitopsClusterRequestClusterInfoOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoOutput) ToGetGitopsClusterRequestClusterInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoOutput {
	return o
}

// List of API versions supported by the cluster.
func (o GetGitopsClusterRequestClusterInfoOutput) ApiVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) []string { return v.ApiVersions }).(pulumi.StringArrayOutput)
}

// Number of applications managed by Argo CD on the cluster.
func (o GetGitopsClusterRequestClusterInfoOutput) ApplicationsCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) *string { return v.ApplicationsCount }).(pulumi.StringPtrOutput)
}

// Information about the cluster cache.
func (o GetGitopsClusterRequestClusterInfoOutput) CacheInfos() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) []GetGitopsClusterRequestClusterInfoCacheInfo {
		return v.CacheInfos
	}).(GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput)
}

// Information about the connection to the cluster.
func (o GetGitopsClusterRequestClusterInfoOutput) ConnectionStates() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) []GetGitopsClusterRequestClusterInfoConnectionState {
		return v.ConnectionStates
	}).(GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput)
}

// Kubernetes version of the cluster.
func (o GetGitopsClusterRequestClusterInfoOutput) ServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) string { return v.ServerVersion }).(pulumi.StringOutput)
}

type GetGitopsClusterRequestClusterInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoArrayOutput() GetGitopsClusterRequestClusterInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfo {
		return vs[0].([]GetGitopsClusterRequestClusterInfo)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoOutput)
}

type GetGitopsClusterRequestClusterInfoCacheInfo struct {
	// Number of observed kubernetes API count.
	ApisCount *string `pulumi:"apisCount"`
	// Time of most recent cache synchronization.
	LastCacheSyncTime *string `pulumi:"lastCacheSyncTime"`
	// Number of observed kubernetes resources.
	ResourcesCount *string `pulumi:"resourcesCount"`
}

// GetGitopsClusterRequestClusterInfoCacheInfoInput is an input type that accepts GetGitopsClusterRequestClusterInfoCacheInfoArgs and GetGitopsClusterRequestClusterInfoCacheInfoOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoCacheInfoInput` via:
//
//	GetGitopsClusterRequestClusterInfoCacheInfoArgs{...}
type GetGitopsClusterRequestClusterInfoCacheInfoInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoCacheInfoOutput() GetGitopsClusterRequestClusterInfoCacheInfoOutput
	ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoCacheInfoOutput
}

type GetGitopsClusterRequestClusterInfoCacheInfoArgs struct {
	// Number of observed kubernetes API count.
	ApisCount pulumi.StringPtrInput `pulumi:"apisCount"`
	// Time of most recent cache synchronization.
	LastCacheSyncTime pulumi.StringPtrInput `pulumi:"lastCacheSyncTime"`
	// Number of observed kubernetes resources.
	ResourcesCount pulumi.StringPtrInput `pulumi:"resourcesCount"`
}

func (GetGitopsClusterRequestClusterInfoCacheInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArgs) ToGetGitopsClusterRequestClusterInfoCacheInfoOutput() GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return i.ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArgs) ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoCacheInfoOutput)
}

// GetGitopsClusterRequestClusterInfoCacheInfoArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoCacheInfoArray and GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoCacheInfoArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoCacheInfoArray{ GetGitopsClusterRequestClusterInfoCacheInfoArgs{...} }
type GetGitopsClusterRequestClusterInfoCacheInfoArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutput() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput
	ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput
}

type GetGitopsClusterRequestClusterInfoCacheInfoArray []GetGitopsClusterRequestClusterInfoCacheInfoInput

func (GetGitopsClusterRequestClusterInfoCacheInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArray) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutput() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArray) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput)
}

type GetGitopsClusterRequestClusterInfoCacheInfoOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoCacheInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoOutput() GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return o
}

// Number of observed kubernetes API count.
func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ApisCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoCacheInfo) *string { return v.ApisCount }).(pulumi.StringPtrOutput)
}

// Time of most recent cache synchronization.
func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) LastCacheSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoCacheInfo) *string { return v.LastCacheSyncTime }).(pulumi.StringPtrOutput)
}

// Number of observed kubernetes resources.
func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ResourcesCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoCacheInfo) *string { return v.ResourcesCount }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutput() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfoCacheInfo {
		return vs[0].([]GetGitopsClusterRequestClusterInfoCacheInfo)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoCacheInfoOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionState struct {
	// Time when cluster cache refresh has been requested.
	AttemptedAts []GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt `pulumi:"attemptedAts"`
	// Information about the connection status.
	Message string `pulumi:"message"`
	// Current status indicator of the connection.
	Status string `pulumi:"status"`
}

// GetGitopsClusterRequestClusterInfoConnectionStateInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateArgs and GetGitopsClusterRequestClusterInfoConnectionStateOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateArgs{...}
type GetGitopsClusterRequestClusterInfoConnectionStateInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateOutput() GetGitopsClusterRequestClusterInfoConnectionStateOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateArgs struct {
	// Time when cluster cache refresh has been requested.
	AttemptedAts GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput `pulumi:"attemptedAts"`
	// Information about the connection status.
	Message pulumi.StringInput `pulumi:"message"`
	// Current status indicator of the connection.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGitopsClusterRequestClusterInfoConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateOutput() GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateOutput)
}

// GetGitopsClusterRequestClusterInfoConnectionStateArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateArray and GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateArray{ GetGitopsClusterRequestClusterInfoConnectionStateArgs{...} }
type GetGitopsClusterRequestClusterInfoConnectionStateArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateArray []GetGitopsClusterRequestClusterInfoConnectionStateInput

func (GetGitopsClusterRequestClusterInfoConnectionStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArray) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArray) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateOutput() GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return o
}

// Time when cluster cache refresh has been requested.
func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) AttemptedAts() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionState) []GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt {
		return v.AttemptedAts
	}).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput)
}

// Information about the connection status.
func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionState) string { return v.Message }).(pulumi.StringOutput)
}

// Current status indicator of the connection.
func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionState) string { return v.Status }).(pulumi.StringOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfoConnectionState {
		return vs[0].([]GetGitopsClusterRequestClusterInfoConnectionState)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoConnectionStateOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt struct {
	// Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
	Nanos *int `pulumi:"nanos"`
	// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
	Seconds *string `pulumi:"seconds"`
}

// GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs and GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{...}
type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs struct {
	// Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
	Seconds pulumi.StringPtrInput `pulumi:"seconds"`
}

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput)
}

// GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray and GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray{ GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{...} }
type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray []GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return o
}

// Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) Seconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt) *string { return v.Seconds }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt {
		return vs[0].([]GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput)
}

type GetGitopsClusterRequestClusterRefreshRequestedAt struct {
	// Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
	Nanos *int `pulumi:"nanos"`
	// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
	Seconds *string `pulumi:"seconds"`
}

// GetGitopsClusterRequestClusterRefreshRequestedAtInput is an input type that accepts GetGitopsClusterRequestClusterRefreshRequestedAtArgs and GetGitopsClusterRequestClusterRefreshRequestedAtOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterRefreshRequestedAtInput` via:
//
//	GetGitopsClusterRequestClusterRefreshRequestedAtArgs{...}
type GetGitopsClusterRequestClusterRefreshRequestedAtInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterRefreshRequestedAtOutput() GetGitopsClusterRequestClusterRefreshRequestedAtOutput
	ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtOutput
}

type GetGitopsClusterRequestClusterRefreshRequestedAtArgs struct {
	// Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
	Seconds pulumi.StringPtrInput `pulumi:"seconds"`
}

func (GetGitopsClusterRequestClusterRefreshRequestedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArgs) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutput() GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return i.ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArgs) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterRefreshRequestedAtOutput)
}

// GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput is an input type that accepts GetGitopsClusterRequestClusterRefreshRequestedAtArray and GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput` via:
//
//	GetGitopsClusterRequestClusterRefreshRequestedAtArray{ GetGitopsClusterRequestClusterRefreshRequestedAtArgs{...} }
type GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput
	ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput
}

type GetGitopsClusterRequestClusterRefreshRequestedAtArray []GetGitopsClusterRequestClusterRefreshRequestedAtInput

func (GetGitopsClusterRequestClusterRefreshRequestedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArray) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return i.ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArray) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput)
}

type GetGitopsClusterRequestClusterRefreshRequestedAtOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterRefreshRequestedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutput() GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return o
}

// Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterRefreshRequestedAt) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) Seconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterRefreshRequestedAt) *string { return v.Seconds }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterRefreshRequestedAt {
		return vs[0].([]GetGitopsClusterRequestClusterRefreshRequestedAt)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterRefreshRequestedAtOutput)
}

type GetGitopsGnupgRequest struct {
	// Public key details.
	Publickeys []GetGitopsGnupgRequestPublickey `pulumi:"publickeys"`
	// Indicates if the GnuPG Key should be inserted if not present or updated if present.
	Upsert *bool `pulumi:"upsert"`
}

// GetGitopsGnupgRequestInput is an input type that accepts GetGitopsGnupgRequestArgs and GetGitopsGnupgRequestOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestInput` via:
//
//	GetGitopsGnupgRequestArgs{...}
type GetGitopsGnupgRequestInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestOutput() GetGitopsGnupgRequestOutput
	ToGetGitopsGnupgRequestOutputWithContext(context.Context) GetGitopsGnupgRequestOutput
}

type GetGitopsGnupgRequestArgs struct {
	// Public key details.
	Publickeys GetGitopsGnupgRequestPublickeyArrayInput `pulumi:"publickeys"`
	// Indicates if the GnuPG Key should be inserted if not present or updated if present.
	Upsert pulumi.BoolPtrInput `pulumi:"upsert"`
}

func (GetGitopsGnupgRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequest)(nil)).Elem()
}

func (i GetGitopsGnupgRequestArgs) ToGetGitopsGnupgRequestOutput() GetGitopsGnupgRequestOutput {
	return i.ToGetGitopsGnupgRequestOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestArgs) ToGetGitopsGnupgRequestOutputWithContext(ctx context.Context) GetGitopsGnupgRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestOutput)
}

// GetGitopsGnupgRequestArrayInput is an input type that accepts GetGitopsGnupgRequestArray and GetGitopsGnupgRequestArrayOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestArrayInput` via:
//
//	GetGitopsGnupgRequestArray{ GetGitopsGnupgRequestArgs{...} }
type GetGitopsGnupgRequestArrayInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestArrayOutput() GetGitopsGnupgRequestArrayOutput
	ToGetGitopsGnupgRequestArrayOutputWithContext(context.Context) GetGitopsGnupgRequestArrayOutput
}

type GetGitopsGnupgRequestArray []GetGitopsGnupgRequestInput

func (GetGitopsGnupgRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequest)(nil)).Elem()
}

func (i GetGitopsGnupgRequestArray) ToGetGitopsGnupgRequestArrayOutput() GetGitopsGnupgRequestArrayOutput {
	return i.ToGetGitopsGnupgRequestArrayOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestArray) ToGetGitopsGnupgRequestArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestArrayOutput)
}

type GetGitopsGnupgRequestOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequest)(nil)).Elem()
}

func (o GetGitopsGnupgRequestOutput) ToGetGitopsGnupgRequestOutput() GetGitopsGnupgRequestOutput {
	return o
}

func (o GetGitopsGnupgRequestOutput) ToGetGitopsGnupgRequestOutputWithContext(ctx context.Context) GetGitopsGnupgRequestOutput {
	return o
}

// Public key details.
func (o GetGitopsGnupgRequestOutput) Publickeys() GetGitopsGnupgRequestPublickeyArrayOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequest) []GetGitopsGnupgRequestPublickey { return v.Publickeys }).(GetGitopsGnupgRequestPublickeyArrayOutput)
}

// Indicates if the GnuPG Key should be inserted if not present or updated if present.
func (o GetGitopsGnupgRequestOutput) Upsert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequest) *bool { return v.Upsert }).(pulumi.BoolPtrOutput)
}

type GetGitopsGnupgRequestArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequest)(nil)).Elem()
}

func (o GetGitopsGnupgRequestArrayOutput) ToGetGitopsGnupgRequestArrayOutput() GetGitopsGnupgRequestArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestArrayOutput) ToGetGitopsGnupgRequestArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestArrayOutput) Index(i pulumi.IntInput) GetGitopsGnupgRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsGnupgRequest {
		return vs[0].([]GetGitopsGnupgRequest)[vs[1].(int)]
	}).(GetGitopsGnupgRequestOutput)
}

type GetGitopsGnupgRequestPublickey struct {
	// Fingerprint is the fingerprint of the key
	Fingerprint *string `pulumi:"fingerprint"`
	// KeyData holds the raw key data, in base64 encoded format.
	KeyData *string `pulumi:"keyData"`
	// KeyID specifies the key ID, in hexadecimal string format.
	KeyId *string `pulumi:"keyId"`
	// Owner holds the owner identification, e.g. a name and e-mail address
	Owner *string `pulumi:"owner"`
	// SubType holds the key's sub type
	SubType *string `pulumi:"subType"`
	// Trust holds the level of trust assigned to this key
	Trust *string `pulumi:"trust"`
}

// GetGitopsGnupgRequestPublickeyInput is an input type that accepts GetGitopsGnupgRequestPublickeyArgs and GetGitopsGnupgRequestPublickeyOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestPublickeyInput` via:
//
//	GetGitopsGnupgRequestPublickeyArgs{...}
type GetGitopsGnupgRequestPublickeyInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestPublickeyOutput() GetGitopsGnupgRequestPublickeyOutput
	ToGetGitopsGnupgRequestPublickeyOutputWithContext(context.Context) GetGitopsGnupgRequestPublickeyOutput
}

type GetGitopsGnupgRequestPublickeyArgs struct {
	// Fingerprint is the fingerprint of the key
	Fingerprint pulumi.StringPtrInput `pulumi:"fingerprint"`
	// KeyData holds the raw key data, in base64 encoded format.
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// KeyID specifies the key ID, in hexadecimal string format.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
	// Owner holds the owner identification, e.g. a name and e-mail address
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// SubType holds the key's sub type
	SubType pulumi.StringPtrInput `pulumi:"subType"`
	// Trust holds the level of trust assigned to this key
	Trust pulumi.StringPtrInput `pulumi:"trust"`
}

func (GetGitopsGnupgRequestPublickeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (i GetGitopsGnupgRequestPublickeyArgs) ToGetGitopsGnupgRequestPublickeyOutput() GetGitopsGnupgRequestPublickeyOutput {
	return i.ToGetGitopsGnupgRequestPublickeyOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestPublickeyArgs) ToGetGitopsGnupgRequestPublickeyOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestPublickeyOutput)
}

// GetGitopsGnupgRequestPublickeyArrayInput is an input type that accepts GetGitopsGnupgRequestPublickeyArray and GetGitopsGnupgRequestPublickeyArrayOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestPublickeyArrayInput` via:
//
//	GetGitopsGnupgRequestPublickeyArray{ GetGitopsGnupgRequestPublickeyArgs{...} }
type GetGitopsGnupgRequestPublickeyArrayInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestPublickeyArrayOutput() GetGitopsGnupgRequestPublickeyArrayOutput
	ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(context.Context) GetGitopsGnupgRequestPublickeyArrayOutput
}

type GetGitopsGnupgRequestPublickeyArray []GetGitopsGnupgRequestPublickeyInput

func (GetGitopsGnupgRequestPublickeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (i GetGitopsGnupgRequestPublickeyArray) ToGetGitopsGnupgRequestPublickeyArrayOutput() GetGitopsGnupgRequestPublickeyArrayOutput {
	return i.ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestPublickeyArray) ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestPublickeyArrayOutput)
}

type GetGitopsGnupgRequestPublickeyOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestPublickeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (o GetGitopsGnupgRequestPublickeyOutput) ToGetGitopsGnupgRequestPublickeyOutput() GetGitopsGnupgRequestPublickeyOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyOutput) ToGetGitopsGnupgRequestPublickeyOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyOutput {
	return o
}

// Fingerprint is the fingerprint of the key
func (o GetGitopsGnupgRequestPublickeyOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

// KeyData holds the raw key data, in base64 encoded format.
func (o GetGitopsGnupgRequestPublickeyOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// KeyID specifies the key ID, in hexadecimal string format.
func (o GetGitopsGnupgRequestPublickeyOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// Owner holds the owner identification, e.g. a name and e-mail address
func (o GetGitopsGnupgRequestPublickeyOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// SubType holds the key's sub type
func (o GetGitopsGnupgRequestPublickeyOutput) SubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.SubType }).(pulumi.StringPtrOutput)
}

// Trust holds the level of trust assigned to this key
func (o GetGitopsGnupgRequestPublickeyOutput) Trust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.Trust }).(pulumi.StringPtrOutput)
}

type GetGitopsGnupgRequestPublickeyArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestPublickeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (o GetGitopsGnupgRequestPublickeyArrayOutput) ToGetGitopsGnupgRequestPublickeyArrayOutput() GetGitopsGnupgRequestPublickeyArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyArrayOutput) ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyArrayOutput) Index(i pulumi.IntInput) GetGitopsGnupgRequestPublickeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsGnupgRequestPublickey {
		return vs[0].([]GetGitopsGnupgRequestPublickey)[vs[1].(int)]
	}).(GetGitopsGnupgRequestPublickeyOutput)
}

type GetGitopsRepoCredCred struct {
	// Specifies whether helm-oci support should be enabled for this repo.
	EnableOci bool `pulumi:"enableOci"`
	// Specifies the GitHub API URL for GitHub app authentication.
	GithubAppEnterpriseBaseUrl string `pulumi:"githubAppEnterpriseBaseUrl"`
	// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
	GithubAppId string `pulumi:"githubAppId"`
	// Specifies the ID of the installed GitHub App for GitHub app authentication.
	GithubAppInstallationId string `pulumi:"githubAppInstallationId"`
	// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
	GithubAppPrivateKey string `pulumi:"githubAppPrivateKey"`
	// Password or PAT to be used for authenticating the remote repository.
	Password string `pulumi:"password"`
	// SSH Key in PEM format for authenticating the repository. Used only for Git repository.
	SshPrivateKey string `pulumi:"sshPrivateKey"`
	// Certificate in PEM format for authenticating at the repo server. This is used for mTLS.
	TlsClientCertData string `pulumi:"tlsClientCertData"`
	// Private key in PEM format for authenticating at the repo server. This is used for mTLS.
	TlsClientCertKey string `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
	Type string `pulumi:"type"`
	// URL of the remote repository. Make sure you pass at least an org, this will not work if you just provide the host, for eg. "https://github.com"
	Url string `pulumi:"url"`
	// Username to be used for authenticating the remote repository.
	Username string `pulumi:"username"`
}

// GetGitopsRepoCredCredInput is an input type that accepts GetGitopsRepoCredCredArgs and GetGitopsRepoCredCredOutput values.
// You can construct a concrete instance of `GetGitopsRepoCredCredInput` via:
//
//	GetGitopsRepoCredCredArgs{...}
type GetGitopsRepoCredCredInput interface {
	pulumi.Input

	ToGetGitopsRepoCredCredOutput() GetGitopsRepoCredCredOutput
	ToGetGitopsRepoCredCredOutputWithContext(context.Context) GetGitopsRepoCredCredOutput
}

type GetGitopsRepoCredCredArgs struct {
	// Specifies whether helm-oci support should be enabled for this repo.
	EnableOci pulumi.BoolInput `pulumi:"enableOci"`
	// Specifies the GitHub API URL for GitHub app authentication.
	GithubAppEnterpriseBaseUrl pulumi.StringInput `pulumi:"githubAppEnterpriseBaseUrl"`
	// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
	GithubAppId pulumi.StringInput `pulumi:"githubAppId"`
	// Specifies the ID of the installed GitHub App for GitHub app authentication.
	GithubAppInstallationId pulumi.StringInput `pulumi:"githubAppInstallationId"`
	// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
	GithubAppPrivateKey pulumi.StringInput `pulumi:"githubAppPrivateKey"`
	// Password or PAT to be used for authenticating the remote repository.
	Password pulumi.StringInput `pulumi:"password"`
	// SSH Key in PEM format for authenticating the repository. Used only for Git repository.
	SshPrivateKey pulumi.StringInput `pulumi:"sshPrivateKey"`
	// Certificate in PEM format for authenticating at the repo server. This is used for mTLS.
	TlsClientCertData pulumi.StringInput `pulumi:"tlsClientCertData"`
	// Private key in PEM format for authenticating at the repo server. This is used for mTLS.
	TlsClientCertKey pulumi.StringInput `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
	Type pulumi.StringInput `pulumi:"type"`
	// URL of the remote repository. Make sure you pass at least an org, this will not work if you just provide the host, for eg. "https://github.com"
	Url pulumi.StringInput `pulumi:"url"`
	// Username to be used for authenticating the remote repository.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetGitopsRepoCredCredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepoCredCred)(nil)).Elem()
}

func (i GetGitopsRepoCredCredArgs) ToGetGitopsRepoCredCredOutput() GetGitopsRepoCredCredOutput {
	return i.ToGetGitopsRepoCredCredOutputWithContext(context.Background())
}

func (i GetGitopsRepoCredCredArgs) ToGetGitopsRepoCredCredOutputWithContext(ctx context.Context) GetGitopsRepoCredCredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepoCredCredOutput)
}

// GetGitopsRepoCredCredArrayInput is an input type that accepts GetGitopsRepoCredCredArray and GetGitopsRepoCredCredArrayOutput values.
// You can construct a concrete instance of `GetGitopsRepoCredCredArrayInput` via:
//
//	GetGitopsRepoCredCredArray{ GetGitopsRepoCredCredArgs{...} }
type GetGitopsRepoCredCredArrayInput interface {
	pulumi.Input

	ToGetGitopsRepoCredCredArrayOutput() GetGitopsRepoCredCredArrayOutput
	ToGetGitopsRepoCredCredArrayOutputWithContext(context.Context) GetGitopsRepoCredCredArrayOutput
}

type GetGitopsRepoCredCredArray []GetGitopsRepoCredCredInput

func (GetGitopsRepoCredCredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepoCredCred)(nil)).Elem()
}

func (i GetGitopsRepoCredCredArray) ToGetGitopsRepoCredCredArrayOutput() GetGitopsRepoCredCredArrayOutput {
	return i.ToGetGitopsRepoCredCredArrayOutputWithContext(context.Background())
}

func (i GetGitopsRepoCredCredArray) ToGetGitopsRepoCredCredArrayOutputWithContext(ctx context.Context) GetGitopsRepoCredCredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepoCredCredArrayOutput)
}

type GetGitopsRepoCredCredOutput struct{ *pulumi.OutputState }

func (GetGitopsRepoCredCredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepoCredCred)(nil)).Elem()
}

func (o GetGitopsRepoCredCredOutput) ToGetGitopsRepoCredCredOutput() GetGitopsRepoCredCredOutput {
	return o
}

func (o GetGitopsRepoCredCredOutput) ToGetGitopsRepoCredCredOutputWithContext(ctx context.Context) GetGitopsRepoCredCredOutput {
	return o
}

// Specifies whether helm-oci support should be enabled for this repo.
func (o GetGitopsRepoCredCredOutput) EnableOci() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) bool { return v.EnableOci }).(pulumi.BoolOutput)
}

// Specifies the GitHub API URL for GitHub app authentication.
func (o GetGitopsRepoCredCredOutput) GithubAppEnterpriseBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.GithubAppEnterpriseBaseUrl }).(pulumi.StringOutput)
}

// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
func (o GetGitopsRepoCredCredOutput) GithubAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.GithubAppId }).(pulumi.StringOutput)
}

// Specifies the ID of the installed GitHub App for GitHub app authentication.
func (o GetGitopsRepoCredCredOutput) GithubAppInstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.GithubAppInstallationId }).(pulumi.StringOutput)
}

// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
func (o GetGitopsRepoCredCredOutput) GithubAppPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.GithubAppPrivateKey }).(pulumi.StringOutput)
}

// Password or PAT to be used for authenticating the remote repository.
func (o GetGitopsRepoCredCredOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.Password }).(pulumi.StringOutput)
}

// SSH Key in PEM format for authenticating the repository. Used only for Git repository.
func (o GetGitopsRepoCredCredOutput) SshPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.SshPrivateKey }).(pulumi.StringOutput)
}

// Certificate in PEM format for authenticating at the repo server. This is used for mTLS.
func (o GetGitopsRepoCredCredOutput) TlsClientCertData() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.TlsClientCertData }).(pulumi.StringOutput)
}

// Private key in PEM format for authenticating at the repo server. This is used for mTLS.
func (o GetGitopsRepoCredCredOutput) TlsClientCertKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.TlsClientCertKey }).(pulumi.StringOutput)
}

// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
func (o GetGitopsRepoCredCredOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.Type }).(pulumi.StringOutput)
}

// URL of the remote repository. Make sure you pass at least an org, this will not work if you just provide the host, for eg. "https://github.com"
func (o GetGitopsRepoCredCredOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.Url }).(pulumi.StringOutput)
}

// Username to be used for authenticating the remote repository.
func (o GetGitopsRepoCredCredOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) string { return v.Username }).(pulumi.StringOutput)
}

type GetGitopsRepoCredCredArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsRepoCredCredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepoCredCred)(nil)).Elem()
}

func (o GetGitopsRepoCredCredArrayOutput) ToGetGitopsRepoCredCredArrayOutput() GetGitopsRepoCredCredArrayOutput {
	return o
}

func (o GetGitopsRepoCredCredArrayOutput) ToGetGitopsRepoCredCredArrayOutputWithContext(ctx context.Context) GetGitopsRepoCredCredArrayOutput {
	return o
}

func (o GetGitopsRepoCredCredArrayOutput) Index(i pulumi.IntInput) GetGitopsRepoCredCredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsRepoCredCred {
		return vs[0].([]GetGitopsRepoCredCred)[vs[1].(int)]
	}).(GetGitopsRepoCredCredOutput)
}

type GetGitopsRepositoryRepo struct {
	// Identifies the authentication method used to connect to the repository. Possible values: "HTTPS" "SSH" "GITHUB" "HTTPS_ANONYMOUS_CONNECTION_TYPE"
	ConnectionType string `pulumi:"connectionType"`
	// Indicates if git-lfs support must be enabled for this repo. This is valid only for Git repositories.
	EnableLfs bool `pulumi:"enableLfs"`
	// Indicates if helm-oci support must be enabled for this repo.
	EnableOci bool `pulumi:"enableOci"`
	// Base URL of GitHub Enterprise installation. If left empty, this defaults to https://api.github.com.
	GithubAppEnterpriseBaseUrl string `pulumi:"githubAppEnterpriseBaseUrl"`
	// Id of the GitHub app used to access the repo.
	GithubAppId string `pulumi:"githubAppId"`
	// Installation id of the GitHub app used to access the repo.
	GithubAppInstallationId string `pulumi:"githubAppInstallationId"`
	// GitHub app private key PEM data.
	GithubAppPrivateKey string `pulumi:"githubAppPrivateKey"`
	// Indicates if the credentials were inherited from a repository credential.
	InheritedCreds bool `pulumi:"inheritedCreds"`
	// Indicates if the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys.
	Insecure bool `pulumi:"insecure"`
	// Indicates if InsecureIgnoreHostKey should be used. Insecure is favored used only for git repos. Deprecated.
	InsecureIgnoreHostKey bool `pulumi:"insecureIgnoreHostKey"`
	// Name to be used for this repo. Only used with Helm repos.
	Name string `pulumi:"name"`
	// Password or PAT to be used for authenticating the remote repository.
	Password string `pulumi:"password"`
	// The ArgoCD project name corresponding to this GitOps repository. An empty string means that the GitOps repository belongs to the default project created by Harness.
	Project string `pulumi:"project"`
	// The HTTP/HTTPS proxy used to access the repo.
	Proxy string `pulumi:"proxy"`
	// URL to the remote repository.
	Repo string `pulumi:"repo"`
	// SSH Key in PEM format for authenticating the repository. Used only for Git repository.
	SshPrivateKey string `pulumi:"sshPrivateKey"`
	// Certificate in PEM format for authenticating at the repo server. This is used for mTLS. The value should be base64 encoded.
	TlsClientCertData string `pulumi:"tlsClientCertData"`
	// Private key in PEM format for authenticating at the repo server. This is used for mTLS. The value should be base64 encoded.
	TlsClientCertKey string `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
	Type_ string `pulumi:"type_"`
	// Username to be used for authenticating the remote repository.
	Username string `pulumi:"username"`
}

// GetGitopsRepositoryRepoInput is an input type that accepts GetGitopsRepositoryRepoArgs and GetGitopsRepositoryRepoOutput values.
// You can construct a concrete instance of `GetGitopsRepositoryRepoInput` via:
//
//	GetGitopsRepositoryRepoArgs{...}
type GetGitopsRepositoryRepoInput interface {
	pulumi.Input

	ToGetGitopsRepositoryRepoOutput() GetGitopsRepositoryRepoOutput
	ToGetGitopsRepositoryRepoOutputWithContext(context.Context) GetGitopsRepositoryRepoOutput
}

type GetGitopsRepositoryRepoArgs struct {
	// Identifies the authentication method used to connect to the repository. Possible values: "HTTPS" "SSH" "GITHUB" "HTTPS_ANONYMOUS_CONNECTION_TYPE"
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Indicates if git-lfs support must be enabled for this repo. This is valid only for Git repositories.
	EnableLfs pulumi.BoolInput `pulumi:"enableLfs"`
	// Indicates if helm-oci support must be enabled for this repo.
	EnableOci pulumi.BoolInput `pulumi:"enableOci"`
	// Base URL of GitHub Enterprise installation. If left empty, this defaults to https://api.github.com.
	GithubAppEnterpriseBaseUrl pulumi.StringInput `pulumi:"githubAppEnterpriseBaseUrl"`
	// Id of the GitHub app used to access the repo.
	GithubAppId pulumi.StringInput `pulumi:"githubAppId"`
	// Installation id of the GitHub app used to access the repo.
	GithubAppInstallationId pulumi.StringInput `pulumi:"githubAppInstallationId"`
	// GitHub app private key PEM data.
	GithubAppPrivateKey pulumi.StringInput `pulumi:"githubAppPrivateKey"`
	// Indicates if the credentials were inherited from a repository credential.
	InheritedCreds pulumi.BoolInput `pulumi:"inheritedCreds"`
	// Indicates if the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys.
	Insecure pulumi.BoolInput `pulumi:"insecure"`
	// Indicates if InsecureIgnoreHostKey should be used. Insecure is favored used only for git repos. Deprecated.
	InsecureIgnoreHostKey pulumi.BoolInput `pulumi:"insecureIgnoreHostKey"`
	// Name to be used for this repo. Only used with Helm repos.
	Name pulumi.StringInput `pulumi:"name"`
	// Password or PAT to be used for authenticating the remote repository.
	Password pulumi.StringInput `pulumi:"password"`
	// The ArgoCD project name corresponding to this GitOps repository. An empty string means that the GitOps repository belongs to the default project created by Harness.
	Project pulumi.StringInput `pulumi:"project"`
	// The HTTP/HTTPS proxy used to access the repo.
	Proxy pulumi.StringInput `pulumi:"proxy"`
	// URL to the remote repository.
	Repo pulumi.StringInput `pulumi:"repo"`
	// SSH Key in PEM format for authenticating the repository. Used only for Git repository.
	SshPrivateKey pulumi.StringInput `pulumi:"sshPrivateKey"`
	// Certificate in PEM format for authenticating at the repo server. This is used for mTLS. The value should be base64 encoded.
	TlsClientCertData pulumi.StringInput `pulumi:"tlsClientCertData"`
	// Private key in PEM format for authenticating at the repo server. This is used for mTLS. The value should be base64 encoded.
	TlsClientCertKey pulumi.StringInput `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
	Type_ pulumi.StringInput `pulumi:"type_"`
	// Username to be used for authenticating the remote repository.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetGitopsRepositoryRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepositoryRepo)(nil)).Elem()
}

func (i GetGitopsRepositoryRepoArgs) ToGetGitopsRepositoryRepoOutput() GetGitopsRepositoryRepoOutput {
	return i.ToGetGitopsRepositoryRepoOutputWithContext(context.Background())
}

func (i GetGitopsRepositoryRepoArgs) ToGetGitopsRepositoryRepoOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepositoryRepoOutput)
}

// GetGitopsRepositoryRepoArrayInput is an input type that accepts GetGitopsRepositoryRepoArray and GetGitopsRepositoryRepoArrayOutput values.
// You can construct a concrete instance of `GetGitopsRepositoryRepoArrayInput` via:
//
//	GetGitopsRepositoryRepoArray{ GetGitopsRepositoryRepoArgs{...} }
type GetGitopsRepositoryRepoArrayInput interface {
	pulumi.Input

	ToGetGitopsRepositoryRepoArrayOutput() GetGitopsRepositoryRepoArrayOutput
	ToGetGitopsRepositoryRepoArrayOutputWithContext(context.Context) GetGitopsRepositoryRepoArrayOutput
}

type GetGitopsRepositoryRepoArray []GetGitopsRepositoryRepoInput

func (GetGitopsRepositoryRepoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepositoryRepo)(nil)).Elem()
}

func (i GetGitopsRepositoryRepoArray) ToGetGitopsRepositoryRepoArrayOutput() GetGitopsRepositoryRepoArrayOutput {
	return i.ToGetGitopsRepositoryRepoArrayOutputWithContext(context.Background())
}

func (i GetGitopsRepositoryRepoArray) ToGetGitopsRepositoryRepoArrayOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepositoryRepoArrayOutput)
}

type GetGitopsRepositoryRepoOutput struct{ *pulumi.OutputState }

func (GetGitopsRepositoryRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepositoryRepo)(nil)).Elem()
}

func (o GetGitopsRepositoryRepoOutput) ToGetGitopsRepositoryRepoOutput() GetGitopsRepositoryRepoOutput {
	return o
}

func (o GetGitopsRepositoryRepoOutput) ToGetGitopsRepositoryRepoOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoOutput {
	return o
}

// Identifies the authentication method used to connect to the repository. Possible values: "HTTPS" "SSH" "GITHUB" "HTTPS_ANONYMOUS_CONNECTION_TYPE"
func (o GetGitopsRepositoryRepoOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// Indicates if git-lfs support must be enabled for this repo. This is valid only for Git repositories.
func (o GetGitopsRepositoryRepoOutput) EnableLfs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) bool { return v.EnableLfs }).(pulumi.BoolOutput)
}

// Indicates if helm-oci support must be enabled for this repo.
func (o GetGitopsRepositoryRepoOutput) EnableOci() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) bool { return v.EnableOci }).(pulumi.BoolOutput)
}

// Base URL of GitHub Enterprise installation. If left empty, this defaults to https://api.github.com.
func (o GetGitopsRepositoryRepoOutput) GithubAppEnterpriseBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.GithubAppEnterpriseBaseUrl }).(pulumi.StringOutput)
}

// Id of the GitHub app used to access the repo.
func (o GetGitopsRepositoryRepoOutput) GithubAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.GithubAppId }).(pulumi.StringOutput)
}

// Installation id of the GitHub app used to access the repo.
func (o GetGitopsRepositoryRepoOutput) GithubAppInstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.GithubAppInstallationId }).(pulumi.StringOutput)
}

// GitHub app private key PEM data.
func (o GetGitopsRepositoryRepoOutput) GithubAppPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.GithubAppPrivateKey }).(pulumi.StringOutput)
}

// Indicates if the credentials were inherited from a repository credential.
func (o GetGitopsRepositoryRepoOutput) InheritedCreds() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) bool { return v.InheritedCreds }).(pulumi.BoolOutput)
}

// Indicates if the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys.
func (o GetGitopsRepositoryRepoOutput) Insecure() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) bool { return v.Insecure }).(pulumi.BoolOutput)
}

// Indicates if InsecureIgnoreHostKey should be used. Insecure is favored used only for git repos. Deprecated.
func (o GetGitopsRepositoryRepoOutput) InsecureIgnoreHostKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) bool { return v.InsecureIgnoreHostKey }).(pulumi.BoolOutput)
}

// Name to be used for this repo. Only used with Helm repos.
func (o GetGitopsRepositoryRepoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Name }).(pulumi.StringOutput)
}

// Password or PAT to be used for authenticating the remote repository.
func (o GetGitopsRepositoryRepoOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Password }).(pulumi.StringOutput)
}

// The ArgoCD project name corresponding to this GitOps repository. An empty string means that the GitOps repository belongs to the default project created by Harness.
func (o GetGitopsRepositoryRepoOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Project }).(pulumi.StringOutput)
}

// The HTTP/HTTPS proxy used to access the repo.
func (o GetGitopsRepositoryRepoOutput) Proxy() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Proxy }).(pulumi.StringOutput)
}

// URL to the remote repository.
func (o GetGitopsRepositoryRepoOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Repo }).(pulumi.StringOutput)
}

// SSH Key in PEM format for authenticating the repository. Used only for Git repository.
func (o GetGitopsRepositoryRepoOutput) SshPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.SshPrivateKey }).(pulumi.StringOutput)
}

// Certificate in PEM format for authenticating at the repo server. This is used for mTLS. The value should be base64 encoded.
func (o GetGitopsRepositoryRepoOutput) TlsClientCertData() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.TlsClientCertData }).(pulumi.StringOutput)
}

// Private key in PEM format for authenticating at the repo server. This is used for mTLS. The value should be base64 encoded.
func (o GetGitopsRepositoryRepoOutput) TlsClientCertKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.TlsClientCertKey }).(pulumi.StringOutput)
}

// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
func (o GetGitopsRepositoryRepoOutput) Type_() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Type_ }).(pulumi.StringOutput)
}

// Username to be used for authenticating the remote repository.
func (o GetGitopsRepositoryRepoOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Username }).(pulumi.StringOutput)
}

type GetGitopsRepositoryRepoArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsRepositoryRepoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepositoryRepo)(nil)).Elem()
}

func (o GetGitopsRepositoryRepoArrayOutput) ToGetGitopsRepositoryRepoArrayOutput() GetGitopsRepositoryRepoArrayOutput {
	return o
}

func (o GetGitopsRepositoryRepoArrayOutput) ToGetGitopsRepositoryRepoArrayOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoArrayOutput {
	return o
}

func (o GetGitopsRepositoryRepoArrayOutput) Index(i pulumi.IntInput) GetGitopsRepositoryRepoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsRepositoryRepo {
		return vs[0].([]GetGitopsRepositoryRepo)[vs[1].(int)]
	}).(GetGitopsRepositoryRepoOutput)
}

type GetHarRegistryConfig struct {
	// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
	AuthType *string `pulumi:"authType"`
	// Authentication configuration for UPSTREAM registry type
	Auths []GetHarRegistryConfigAuth `pulumi:"auths"`
	// Upstream source
	Source *string `pulumi:"source"`
	// Type of registry (VIRTUAL or UPSTREAM)
	Type string `pulumi:"type"`
	// List of upstream proxies for VIRTUAL registry type
	UpstreamProxies []string `pulumi:"upstreamProxies"`
	// URL of the upstream (required if type=UPSTREAM & package_type=HELM)
	Url *string `pulumi:"url"`
}

// GetHarRegistryConfigInput is an input type that accepts GetHarRegistryConfigArgs and GetHarRegistryConfigOutput values.
// You can construct a concrete instance of `GetHarRegistryConfigInput` via:
//
//	GetHarRegistryConfigArgs{...}
type GetHarRegistryConfigInput interface {
	pulumi.Input

	ToGetHarRegistryConfigOutput() GetHarRegistryConfigOutput
	ToGetHarRegistryConfigOutputWithContext(context.Context) GetHarRegistryConfigOutput
}

type GetHarRegistryConfigArgs struct {
	// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// Authentication configuration for UPSTREAM registry type
	Auths GetHarRegistryConfigAuthArrayInput `pulumi:"auths"`
	// Upstream source
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Type of registry (VIRTUAL or UPSTREAM)
	Type pulumi.StringInput `pulumi:"type"`
	// List of upstream proxies for VIRTUAL registry type
	UpstreamProxies pulumi.StringArrayInput `pulumi:"upstreamProxies"`
	// URL of the upstream (required if type=UPSTREAM & package_type=HELM)
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GetHarRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHarRegistryConfig)(nil)).Elem()
}

func (i GetHarRegistryConfigArgs) ToGetHarRegistryConfigOutput() GetHarRegistryConfigOutput {
	return i.ToGetHarRegistryConfigOutputWithContext(context.Background())
}

func (i GetHarRegistryConfigArgs) ToGetHarRegistryConfigOutputWithContext(ctx context.Context) GetHarRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHarRegistryConfigOutput)
}

// GetHarRegistryConfigArrayInput is an input type that accepts GetHarRegistryConfigArray and GetHarRegistryConfigArrayOutput values.
// You can construct a concrete instance of `GetHarRegistryConfigArrayInput` via:
//
//	GetHarRegistryConfigArray{ GetHarRegistryConfigArgs{...} }
type GetHarRegistryConfigArrayInput interface {
	pulumi.Input

	ToGetHarRegistryConfigArrayOutput() GetHarRegistryConfigArrayOutput
	ToGetHarRegistryConfigArrayOutputWithContext(context.Context) GetHarRegistryConfigArrayOutput
}

type GetHarRegistryConfigArray []GetHarRegistryConfigInput

func (GetHarRegistryConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHarRegistryConfig)(nil)).Elem()
}

func (i GetHarRegistryConfigArray) ToGetHarRegistryConfigArrayOutput() GetHarRegistryConfigArrayOutput {
	return i.ToGetHarRegistryConfigArrayOutputWithContext(context.Background())
}

func (i GetHarRegistryConfigArray) ToGetHarRegistryConfigArrayOutputWithContext(ctx context.Context) GetHarRegistryConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHarRegistryConfigArrayOutput)
}

type GetHarRegistryConfigOutput struct{ *pulumi.OutputState }

func (GetHarRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHarRegistryConfig)(nil)).Elem()
}

func (o GetHarRegistryConfigOutput) ToGetHarRegistryConfigOutput() GetHarRegistryConfigOutput {
	return o
}

func (o GetHarRegistryConfigOutput) ToGetHarRegistryConfigOutputWithContext(ctx context.Context) GetHarRegistryConfigOutput {
	return o
}

// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
func (o GetHarRegistryConfigOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfig) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Authentication configuration for UPSTREAM registry type
func (o GetHarRegistryConfigOutput) Auths() GetHarRegistryConfigAuthArrayOutput {
	return o.ApplyT(func(v GetHarRegistryConfig) []GetHarRegistryConfigAuth { return v.Auths }).(GetHarRegistryConfigAuthArrayOutput)
}

// Upstream source
func (o GetHarRegistryConfigOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfig) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Type of registry (VIRTUAL or UPSTREAM)
func (o GetHarRegistryConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHarRegistryConfig) string { return v.Type }).(pulumi.StringOutput)
}

// List of upstream proxies for VIRTUAL registry type
func (o GetHarRegistryConfigOutput) UpstreamProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHarRegistryConfig) []string { return v.UpstreamProxies }).(pulumi.StringArrayOutput)
}

// URL of the upstream (required if type=UPSTREAM & package_type=HELM)
func (o GetHarRegistryConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GetHarRegistryConfigArrayOutput struct{ *pulumi.OutputState }

func (GetHarRegistryConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHarRegistryConfig)(nil)).Elem()
}

func (o GetHarRegistryConfigArrayOutput) ToGetHarRegistryConfigArrayOutput() GetHarRegistryConfigArrayOutput {
	return o
}

func (o GetHarRegistryConfigArrayOutput) ToGetHarRegistryConfigArrayOutputWithContext(ctx context.Context) GetHarRegistryConfigArrayOutput {
	return o
}

func (o GetHarRegistryConfigArrayOutput) Index(i pulumi.IntInput) GetHarRegistryConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHarRegistryConfig {
		return vs[0].([]GetHarRegistryConfig)[vs[1].(int)]
	}).(GetHarRegistryConfigOutput)
}

type GetHarRegistryConfigAuth struct {
	AccessKey           *string `pulumi:"accessKey"`
	AccessKeyIdentifier *string `pulumi:"accessKeyIdentifier"`
	AccessKeySecretPath *string `pulumi:"accessKeySecretPath"`
	// Type of authentication (UserPassword, Anonymous)
	AuthType string `pulumi:"authType"`
	// Secret identifier for UserPassword auth type
	SecretIdentifier    *string `pulumi:"secretIdentifier"`
	SecretKeyIdentifier *string `pulumi:"secretKeyIdentifier"`
	SecretKeySecretPath *string `pulumi:"secretKeySecretPath"`
	// Secret space path for UserPassword auth type
	SecretSpacePath *string `pulumi:"secretSpacePath"`
	// User name for UserPassword auth type
	UserName *string `pulumi:"userName"`
}

// GetHarRegistryConfigAuthInput is an input type that accepts GetHarRegistryConfigAuthArgs and GetHarRegistryConfigAuthOutput values.
// You can construct a concrete instance of `GetHarRegistryConfigAuthInput` via:
//
//	GetHarRegistryConfigAuthArgs{...}
type GetHarRegistryConfigAuthInput interface {
	pulumi.Input

	ToGetHarRegistryConfigAuthOutput() GetHarRegistryConfigAuthOutput
	ToGetHarRegistryConfigAuthOutputWithContext(context.Context) GetHarRegistryConfigAuthOutput
}

type GetHarRegistryConfigAuthArgs struct {
	AccessKey           pulumi.StringPtrInput `pulumi:"accessKey"`
	AccessKeyIdentifier pulumi.StringPtrInput `pulumi:"accessKeyIdentifier"`
	AccessKeySecretPath pulumi.StringPtrInput `pulumi:"accessKeySecretPath"`
	// Type of authentication (UserPassword, Anonymous)
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Secret identifier for UserPassword auth type
	SecretIdentifier    pulumi.StringPtrInput `pulumi:"secretIdentifier"`
	SecretKeyIdentifier pulumi.StringPtrInput `pulumi:"secretKeyIdentifier"`
	SecretKeySecretPath pulumi.StringPtrInput `pulumi:"secretKeySecretPath"`
	// Secret space path for UserPassword auth type
	SecretSpacePath pulumi.StringPtrInput `pulumi:"secretSpacePath"`
	// User name for UserPassword auth type
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetHarRegistryConfigAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHarRegistryConfigAuth)(nil)).Elem()
}

func (i GetHarRegistryConfigAuthArgs) ToGetHarRegistryConfigAuthOutput() GetHarRegistryConfigAuthOutput {
	return i.ToGetHarRegistryConfigAuthOutputWithContext(context.Background())
}

func (i GetHarRegistryConfigAuthArgs) ToGetHarRegistryConfigAuthOutputWithContext(ctx context.Context) GetHarRegistryConfigAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHarRegistryConfigAuthOutput)
}

// GetHarRegistryConfigAuthArrayInput is an input type that accepts GetHarRegistryConfigAuthArray and GetHarRegistryConfigAuthArrayOutput values.
// You can construct a concrete instance of `GetHarRegistryConfigAuthArrayInput` via:
//
//	GetHarRegistryConfigAuthArray{ GetHarRegistryConfigAuthArgs{...} }
type GetHarRegistryConfigAuthArrayInput interface {
	pulumi.Input

	ToGetHarRegistryConfigAuthArrayOutput() GetHarRegistryConfigAuthArrayOutput
	ToGetHarRegistryConfigAuthArrayOutputWithContext(context.Context) GetHarRegistryConfigAuthArrayOutput
}

type GetHarRegistryConfigAuthArray []GetHarRegistryConfigAuthInput

func (GetHarRegistryConfigAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHarRegistryConfigAuth)(nil)).Elem()
}

func (i GetHarRegistryConfigAuthArray) ToGetHarRegistryConfigAuthArrayOutput() GetHarRegistryConfigAuthArrayOutput {
	return i.ToGetHarRegistryConfigAuthArrayOutputWithContext(context.Background())
}

func (i GetHarRegistryConfigAuthArray) ToGetHarRegistryConfigAuthArrayOutputWithContext(ctx context.Context) GetHarRegistryConfigAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHarRegistryConfigAuthArrayOutput)
}

type GetHarRegistryConfigAuthOutput struct{ *pulumi.OutputState }

func (GetHarRegistryConfigAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHarRegistryConfigAuth)(nil)).Elem()
}

func (o GetHarRegistryConfigAuthOutput) ToGetHarRegistryConfigAuthOutput() GetHarRegistryConfigAuthOutput {
	return o
}

func (o GetHarRegistryConfigAuthOutput) ToGetHarRegistryConfigAuthOutputWithContext(ctx context.Context) GetHarRegistryConfigAuthOutput {
	return o
}

func (o GetHarRegistryConfigAuthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o GetHarRegistryConfigAuthOutput) AccessKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.AccessKeyIdentifier }).(pulumi.StringPtrOutput)
}

func (o GetHarRegistryConfigAuthOutput) AccessKeySecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.AccessKeySecretPath }).(pulumi.StringPtrOutput)
}

// Type of authentication (UserPassword, Anonymous)
func (o GetHarRegistryConfigAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Secret identifier for UserPassword auth type
func (o GetHarRegistryConfigAuthOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

func (o GetHarRegistryConfigAuthOutput) SecretKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.SecretKeyIdentifier }).(pulumi.StringPtrOutput)
}

func (o GetHarRegistryConfigAuthOutput) SecretKeySecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.SecretKeySecretPath }).(pulumi.StringPtrOutput)
}

// Secret space path for UserPassword auth type
func (o GetHarRegistryConfigAuthOutput) SecretSpacePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.SecretSpacePath }).(pulumi.StringPtrOutput)
}

// User name for UserPassword auth type
func (o GetHarRegistryConfigAuthOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHarRegistryConfigAuth) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type GetHarRegistryConfigAuthArrayOutput struct{ *pulumi.OutputState }

func (GetHarRegistryConfigAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHarRegistryConfigAuth)(nil)).Elem()
}

func (o GetHarRegistryConfigAuthArrayOutput) ToGetHarRegistryConfigAuthArrayOutput() GetHarRegistryConfigAuthArrayOutput {
	return o
}

func (o GetHarRegistryConfigAuthArrayOutput) ToGetHarRegistryConfigAuthArrayOutputWithContext(ctx context.Context) GetHarRegistryConfigAuthArrayOutput {
	return o
}

func (o GetHarRegistryConfigAuthArrayOutput) Index(i pulumi.IntInput) GetHarRegistryConfigAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHarRegistryConfigAuth {
		return vs[0].([]GetHarRegistryConfigAuth)[vs[1].(int)]
	}).(GetHarRegistryConfigAuthOutput)
}

type GetHelmConnectorCredential struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetHelmConnectorCredentialInput is an input type that accepts GetHelmConnectorCredentialArgs and GetHelmConnectorCredentialOutput values.
// You can construct a concrete instance of `GetHelmConnectorCredentialInput` via:
//
//	GetHelmConnectorCredentialArgs{...}
type GetHelmConnectorCredentialInput interface {
	pulumi.Input

	ToGetHelmConnectorCredentialOutput() GetHelmConnectorCredentialOutput
	ToGetHelmConnectorCredentialOutputWithContext(context.Context) GetHelmConnectorCredentialOutput
}

type GetHelmConnectorCredentialArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetHelmConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmConnectorCredential)(nil)).Elem()
}

func (i GetHelmConnectorCredentialArgs) ToGetHelmConnectorCredentialOutput() GetHelmConnectorCredentialOutput {
	return i.ToGetHelmConnectorCredentialOutputWithContext(context.Background())
}

func (i GetHelmConnectorCredentialArgs) ToGetHelmConnectorCredentialOutputWithContext(ctx context.Context) GetHelmConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmConnectorCredentialOutput)
}

// GetHelmConnectorCredentialArrayInput is an input type that accepts GetHelmConnectorCredentialArray and GetHelmConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetHelmConnectorCredentialArrayInput` via:
//
//	GetHelmConnectorCredentialArray{ GetHelmConnectorCredentialArgs{...} }
type GetHelmConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetHelmConnectorCredentialArrayOutput() GetHelmConnectorCredentialArrayOutput
	ToGetHelmConnectorCredentialArrayOutputWithContext(context.Context) GetHelmConnectorCredentialArrayOutput
}

type GetHelmConnectorCredentialArray []GetHelmConnectorCredentialInput

func (GetHelmConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmConnectorCredential)(nil)).Elem()
}

func (i GetHelmConnectorCredentialArray) ToGetHelmConnectorCredentialArrayOutput() GetHelmConnectorCredentialArrayOutput {
	return i.ToGetHelmConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetHelmConnectorCredentialArray) ToGetHelmConnectorCredentialArrayOutputWithContext(ctx context.Context) GetHelmConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmConnectorCredentialArrayOutput)
}

type GetHelmConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetHelmConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmConnectorCredential)(nil)).Elem()
}

func (o GetHelmConnectorCredentialOutput) ToGetHelmConnectorCredentialOutput() GetHelmConnectorCredentialOutput {
	return o
}

func (o GetHelmConnectorCredentialOutput) ToGetHelmConnectorCredentialOutputWithContext(ctx context.Context) GetHelmConnectorCredentialOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetHelmConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetHelmConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetHelmConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetHelmConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetHelmConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmConnectorCredential)(nil)).Elem()
}

func (o GetHelmConnectorCredentialArrayOutput) ToGetHelmConnectorCredentialArrayOutput() GetHelmConnectorCredentialArrayOutput {
	return o
}

func (o GetHelmConnectorCredentialArrayOutput) ToGetHelmConnectorCredentialArrayOutputWithContext(ctx context.Context) GetHelmConnectorCredentialArrayOutput {
	return o
}

func (o GetHelmConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetHelmConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmConnectorCredential {
		return vs[0].([]GetHelmConnectorCredential)[vs[1].(int)]
	}).(GetHelmConnectorCredentialOutput)
}

type GetInfraVariableSetConnector struct {
	// Connector Ref is the reference to the connector
	ConnectorRef string `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type string `pulumi:"type"`
}

// GetInfraVariableSetConnectorInput is an input type that accepts GetInfraVariableSetConnectorArgs and GetInfraVariableSetConnectorOutput values.
// You can construct a concrete instance of `GetInfraVariableSetConnectorInput` via:
//
//	GetInfraVariableSetConnectorArgs{...}
type GetInfraVariableSetConnectorInput interface {
	pulumi.Input

	ToGetInfraVariableSetConnectorOutput() GetInfraVariableSetConnectorOutput
	ToGetInfraVariableSetConnectorOutputWithContext(context.Context) GetInfraVariableSetConnectorOutput
}

type GetInfraVariableSetConnectorArgs struct {
	// Connector Ref is the reference to the connector
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInfraVariableSetConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetConnector)(nil)).Elem()
}

func (i GetInfraVariableSetConnectorArgs) ToGetInfraVariableSetConnectorOutput() GetInfraVariableSetConnectorOutput {
	return i.ToGetInfraVariableSetConnectorOutputWithContext(context.Background())
}

func (i GetInfraVariableSetConnectorArgs) ToGetInfraVariableSetConnectorOutputWithContext(ctx context.Context) GetInfraVariableSetConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetConnectorOutput)
}

// GetInfraVariableSetConnectorArrayInput is an input type that accepts GetInfraVariableSetConnectorArray and GetInfraVariableSetConnectorArrayOutput values.
// You can construct a concrete instance of `GetInfraVariableSetConnectorArrayInput` via:
//
//	GetInfraVariableSetConnectorArray{ GetInfraVariableSetConnectorArgs{...} }
type GetInfraVariableSetConnectorArrayInput interface {
	pulumi.Input

	ToGetInfraVariableSetConnectorArrayOutput() GetInfraVariableSetConnectorArrayOutput
	ToGetInfraVariableSetConnectorArrayOutputWithContext(context.Context) GetInfraVariableSetConnectorArrayOutput
}

type GetInfraVariableSetConnectorArray []GetInfraVariableSetConnectorInput

func (GetInfraVariableSetConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetConnector)(nil)).Elem()
}

func (i GetInfraVariableSetConnectorArray) ToGetInfraVariableSetConnectorArrayOutput() GetInfraVariableSetConnectorArrayOutput {
	return i.ToGetInfraVariableSetConnectorArrayOutputWithContext(context.Background())
}

func (i GetInfraVariableSetConnectorArray) ToGetInfraVariableSetConnectorArrayOutputWithContext(ctx context.Context) GetInfraVariableSetConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetConnectorArrayOutput)
}

type GetInfraVariableSetConnectorOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetConnector)(nil)).Elem()
}

func (o GetInfraVariableSetConnectorOutput) ToGetInfraVariableSetConnectorOutput() GetInfraVariableSetConnectorOutput {
	return o
}

func (o GetInfraVariableSetConnectorOutput) ToGetInfraVariableSetConnectorOutputWithContext(ctx context.Context) GetInfraVariableSetConnectorOutput {
	return o
}

// Connector Ref is the reference to the connector
func (o GetInfraVariableSetConnectorOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetConnector) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// Type is the connector type of the connector. Supported types: aws, azure, gcp
func (o GetInfraVariableSetConnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetConnector) string { return v.Type }).(pulumi.StringOutput)
}

type GetInfraVariableSetConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetConnector)(nil)).Elem()
}

func (o GetInfraVariableSetConnectorArrayOutput) ToGetInfraVariableSetConnectorArrayOutput() GetInfraVariableSetConnectorArrayOutput {
	return o
}

func (o GetInfraVariableSetConnectorArrayOutput) ToGetInfraVariableSetConnectorArrayOutputWithContext(ctx context.Context) GetInfraVariableSetConnectorArrayOutput {
	return o
}

func (o GetInfraVariableSetConnectorArrayOutput) Index(i pulumi.IntInput) GetInfraVariableSetConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfraVariableSetConnector {
		return vs[0].([]GetInfraVariableSetConnector)[vs[1].(int)]
	}).(GetInfraVariableSetConnectorOutput)
}

type GetInfraVariableSetEnvironmentVariable struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key string `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType string `pulumi:"valueType"`
}

// GetInfraVariableSetEnvironmentVariableInput is an input type that accepts GetInfraVariableSetEnvironmentVariableArgs and GetInfraVariableSetEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetInfraVariableSetEnvironmentVariableInput` via:
//
//	GetInfraVariableSetEnvironmentVariableArgs{...}
type GetInfraVariableSetEnvironmentVariableInput interface {
	pulumi.Input

	ToGetInfraVariableSetEnvironmentVariableOutput() GetInfraVariableSetEnvironmentVariableOutput
	ToGetInfraVariableSetEnvironmentVariableOutputWithContext(context.Context) GetInfraVariableSetEnvironmentVariableOutput
}

type GetInfraVariableSetEnvironmentVariableArgs struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key pulumi.StringInput `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetInfraVariableSetEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (i GetInfraVariableSetEnvironmentVariableArgs) ToGetInfraVariableSetEnvironmentVariableOutput() GetInfraVariableSetEnvironmentVariableOutput {
	return i.ToGetInfraVariableSetEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetInfraVariableSetEnvironmentVariableArgs) ToGetInfraVariableSetEnvironmentVariableOutputWithContext(ctx context.Context) GetInfraVariableSetEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetEnvironmentVariableOutput)
}

// GetInfraVariableSetEnvironmentVariableArrayInput is an input type that accepts GetInfraVariableSetEnvironmentVariableArray and GetInfraVariableSetEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetInfraVariableSetEnvironmentVariableArrayInput` via:
//
//	GetInfraVariableSetEnvironmentVariableArray{ GetInfraVariableSetEnvironmentVariableArgs{...} }
type GetInfraVariableSetEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetInfraVariableSetEnvironmentVariableArrayOutput() GetInfraVariableSetEnvironmentVariableArrayOutput
	ToGetInfraVariableSetEnvironmentVariableArrayOutputWithContext(context.Context) GetInfraVariableSetEnvironmentVariableArrayOutput
}

type GetInfraVariableSetEnvironmentVariableArray []GetInfraVariableSetEnvironmentVariableInput

func (GetInfraVariableSetEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (i GetInfraVariableSetEnvironmentVariableArray) ToGetInfraVariableSetEnvironmentVariableArrayOutput() GetInfraVariableSetEnvironmentVariableArrayOutput {
	return i.ToGetInfraVariableSetEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetInfraVariableSetEnvironmentVariableArray) ToGetInfraVariableSetEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetInfraVariableSetEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetEnvironmentVariableArrayOutput)
}

type GetInfraVariableSetEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (o GetInfraVariableSetEnvironmentVariableOutput) ToGetInfraVariableSetEnvironmentVariableOutput() GetInfraVariableSetEnvironmentVariableOutput {
	return o
}

func (o GetInfraVariableSetEnvironmentVariableOutput) ToGetInfraVariableSetEnvironmentVariableOutputWithContext(ctx context.Context) GetInfraVariableSetEnvironmentVariableOutput {
	return o
}

// Key is the identifier for the variable. Must be unique within the Variable Set.
func (o GetInfraVariableSetEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
func (o GetInfraVariableSetEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable. Currently we support string and secret.
func (o GetInfraVariableSetEnvironmentVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetEnvironmentVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetInfraVariableSetEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetEnvironmentVariable)(nil)).Elem()
}

func (o GetInfraVariableSetEnvironmentVariableArrayOutput) ToGetInfraVariableSetEnvironmentVariableArrayOutput() GetInfraVariableSetEnvironmentVariableArrayOutput {
	return o
}

func (o GetInfraVariableSetEnvironmentVariableArrayOutput) ToGetInfraVariableSetEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetInfraVariableSetEnvironmentVariableArrayOutput {
	return o
}

func (o GetInfraVariableSetEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetInfraVariableSetEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfraVariableSetEnvironmentVariable {
		return vs[0].([]GetInfraVariableSetEnvironmentVariable)[vs[1].(int)]
	}).(GetInfraVariableSetEnvironmentVariableOutput)
}

type GetInfraVariableSetTerraformVariable struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key string `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType string `pulumi:"valueType"`
}

// GetInfraVariableSetTerraformVariableInput is an input type that accepts GetInfraVariableSetTerraformVariableArgs and GetInfraVariableSetTerraformVariableOutput values.
// You can construct a concrete instance of `GetInfraVariableSetTerraformVariableInput` via:
//
//	GetInfraVariableSetTerraformVariableArgs{...}
type GetInfraVariableSetTerraformVariableInput interface {
	pulumi.Input

	ToGetInfraVariableSetTerraformVariableOutput() GetInfraVariableSetTerraformVariableOutput
	ToGetInfraVariableSetTerraformVariableOutputWithContext(context.Context) GetInfraVariableSetTerraformVariableOutput
}

type GetInfraVariableSetTerraformVariableArgs struct {
	// Key is the identifier for the variable. Must be unique within the Variable Set.
	Key pulumi.StringInput `pulumi:"key"`
	// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable. Currently we support string and secret.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetInfraVariableSetTerraformVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetTerraformVariable)(nil)).Elem()
}

func (i GetInfraVariableSetTerraformVariableArgs) ToGetInfraVariableSetTerraformVariableOutput() GetInfraVariableSetTerraformVariableOutput {
	return i.ToGetInfraVariableSetTerraformVariableOutputWithContext(context.Background())
}

func (i GetInfraVariableSetTerraformVariableArgs) ToGetInfraVariableSetTerraformVariableOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetTerraformVariableOutput)
}

// GetInfraVariableSetTerraformVariableArrayInput is an input type that accepts GetInfraVariableSetTerraformVariableArray and GetInfraVariableSetTerraformVariableArrayOutput values.
// You can construct a concrete instance of `GetInfraVariableSetTerraformVariableArrayInput` via:
//
//	GetInfraVariableSetTerraformVariableArray{ GetInfraVariableSetTerraformVariableArgs{...} }
type GetInfraVariableSetTerraformVariableArrayInput interface {
	pulumi.Input

	ToGetInfraVariableSetTerraformVariableArrayOutput() GetInfraVariableSetTerraformVariableArrayOutput
	ToGetInfraVariableSetTerraformVariableArrayOutputWithContext(context.Context) GetInfraVariableSetTerraformVariableArrayOutput
}

type GetInfraVariableSetTerraformVariableArray []GetInfraVariableSetTerraformVariableInput

func (GetInfraVariableSetTerraformVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetTerraformVariable)(nil)).Elem()
}

func (i GetInfraVariableSetTerraformVariableArray) ToGetInfraVariableSetTerraformVariableArrayOutput() GetInfraVariableSetTerraformVariableArrayOutput {
	return i.ToGetInfraVariableSetTerraformVariableArrayOutputWithContext(context.Background())
}

func (i GetInfraVariableSetTerraformVariableArray) ToGetInfraVariableSetTerraformVariableArrayOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetTerraformVariableArrayOutput)
}

type GetInfraVariableSetTerraformVariableOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetTerraformVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetTerraformVariable)(nil)).Elem()
}

func (o GetInfraVariableSetTerraformVariableOutput) ToGetInfraVariableSetTerraformVariableOutput() GetInfraVariableSetTerraformVariableOutput {
	return o
}

func (o GetInfraVariableSetTerraformVariableOutput) ToGetInfraVariableSetTerraformVariableOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableOutput {
	return o
}

// Key is the identifier for the variable. Must be unique within the Variable Set.
func (o GetInfraVariableSetTerraformVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value is the value of the variable. For string value types this field should contain the value of the variable. For secret value types this should contain a reference to a valid harness secret.
func (o GetInfraVariableSetTerraformVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable. Currently we support string and secret.
func (o GetInfraVariableSetTerraformVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetInfraVariableSetTerraformVariableArrayOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetTerraformVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetTerraformVariable)(nil)).Elem()
}

func (o GetInfraVariableSetTerraformVariableArrayOutput) ToGetInfraVariableSetTerraformVariableArrayOutput() GetInfraVariableSetTerraformVariableArrayOutput {
	return o
}

func (o GetInfraVariableSetTerraformVariableArrayOutput) ToGetInfraVariableSetTerraformVariableArrayOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableArrayOutput {
	return o
}

func (o GetInfraVariableSetTerraformVariableArrayOutput) Index(i pulumi.IntInput) GetInfraVariableSetTerraformVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfraVariableSetTerraformVariable {
		return vs[0].([]GetInfraVariableSetTerraformVariable)[vs[1].(int)]
	}).(GetInfraVariableSetTerraformVariableOutput)
}

type GetInfraVariableSetTerraformVariableFile struct {
	// Repository is the name of the repository to fetch the code from.
	Repository string `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch *string `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit *string `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector string `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath *string `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha *string `pulumi:"repositorySha"`
}

// GetInfraVariableSetTerraformVariableFileInput is an input type that accepts GetInfraVariableSetTerraformVariableFileArgs and GetInfraVariableSetTerraformVariableFileOutput values.
// You can construct a concrete instance of `GetInfraVariableSetTerraformVariableFileInput` via:
//
//	GetInfraVariableSetTerraformVariableFileArgs{...}
type GetInfraVariableSetTerraformVariableFileInput interface {
	pulumi.Input

	ToGetInfraVariableSetTerraformVariableFileOutput() GetInfraVariableSetTerraformVariableFileOutput
	ToGetInfraVariableSetTerraformVariableFileOutputWithContext(context.Context) GetInfraVariableSetTerraformVariableFileOutput
}

type GetInfraVariableSetTerraformVariableFileArgs struct {
	// Repository is the name of the repository to fetch the code from.
	Repository pulumi.StringInput `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch pulumi.StringPtrInput `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit pulumi.StringPtrInput `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector pulumi.StringInput `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath pulumi.StringPtrInput `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha pulumi.StringPtrInput `pulumi:"repositorySha"`
}

func (GetInfraVariableSetTerraformVariableFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (i GetInfraVariableSetTerraformVariableFileArgs) ToGetInfraVariableSetTerraformVariableFileOutput() GetInfraVariableSetTerraformVariableFileOutput {
	return i.ToGetInfraVariableSetTerraformVariableFileOutputWithContext(context.Background())
}

func (i GetInfraVariableSetTerraformVariableFileArgs) ToGetInfraVariableSetTerraformVariableFileOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetTerraformVariableFileOutput)
}

// GetInfraVariableSetTerraformVariableFileArrayInput is an input type that accepts GetInfraVariableSetTerraformVariableFileArray and GetInfraVariableSetTerraformVariableFileArrayOutput values.
// You can construct a concrete instance of `GetInfraVariableSetTerraformVariableFileArrayInput` via:
//
//	GetInfraVariableSetTerraformVariableFileArray{ GetInfraVariableSetTerraformVariableFileArgs{...} }
type GetInfraVariableSetTerraformVariableFileArrayInput interface {
	pulumi.Input

	ToGetInfraVariableSetTerraformVariableFileArrayOutput() GetInfraVariableSetTerraformVariableFileArrayOutput
	ToGetInfraVariableSetTerraformVariableFileArrayOutputWithContext(context.Context) GetInfraVariableSetTerraformVariableFileArrayOutput
}

type GetInfraVariableSetTerraformVariableFileArray []GetInfraVariableSetTerraformVariableFileInput

func (GetInfraVariableSetTerraformVariableFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (i GetInfraVariableSetTerraformVariableFileArray) ToGetInfraVariableSetTerraformVariableFileArrayOutput() GetInfraVariableSetTerraformVariableFileArrayOutput {
	return i.ToGetInfraVariableSetTerraformVariableFileArrayOutputWithContext(context.Background())
}

func (i GetInfraVariableSetTerraformVariableFileArray) ToGetInfraVariableSetTerraformVariableFileArrayOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfraVariableSetTerraformVariableFileArrayOutput)
}

type GetInfraVariableSetTerraformVariableFileOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetTerraformVariableFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (o GetInfraVariableSetTerraformVariableFileOutput) ToGetInfraVariableSetTerraformVariableFileOutput() GetInfraVariableSetTerraformVariableFileOutput {
	return o
}

func (o GetInfraVariableSetTerraformVariableFileOutput) ToGetInfraVariableSetTerraformVariableFileOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableFileOutput {
	return o
}

// Repository is the name of the repository to fetch the code from.
func (o GetInfraVariableSetTerraformVariableFileOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariableFile) string { return v.Repository }).(pulumi.StringOutput)
}

// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
func (o GetInfraVariableSetTerraformVariableFileOutput) RepositoryBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariableFile) *string { return v.RepositoryBranch }).(pulumi.StringPtrOutput)
}

// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
func (o GetInfraVariableSetTerraformVariableFileOutput) RepositoryCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariableFile) *string { return v.RepositoryCommit }).(pulumi.StringPtrOutput)
}

// Repository connector is the reference to the connector used to fetch the variables.
func (o GetInfraVariableSetTerraformVariableFileOutput) RepositoryConnector() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariableFile) string { return v.RepositoryConnector }).(pulumi.StringOutput)
}

// Repository path is the path in which the variables reside.
func (o GetInfraVariableSetTerraformVariableFileOutput) RepositoryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariableFile) *string { return v.RepositoryPath }).(pulumi.StringPtrOutput)
}

// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
func (o GetInfraVariableSetTerraformVariableFileOutput) RepositorySha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfraVariableSetTerraformVariableFile) *string { return v.RepositorySha }).(pulumi.StringPtrOutput)
}

type GetInfraVariableSetTerraformVariableFileArrayOutput struct{ *pulumi.OutputState }

func (GetInfraVariableSetTerraformVariableFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfraVariableSetTerraformVariableFile)(nil)).Elem()
}

func (o GetInfraVariableSetTerraformVariableFileArrayOutput) ToGetInfraVariableSetTerraformVariableFileArrayOutput() GetInfraVariableSetTerraformVariableFileArrayOutput {
	return o
}

func (o GetInfraVariableSetTerraformVariableFileArrayOutput) ToGetInfraVariableSetTerraformVariableFileArrayOutputWithContext(ctx context.Context) GetInfraVariableSetTerraformVariableFileArrayOutput {
	return o
}

func (o GetInfraVariableSetTerraformVariableFileArrayOutput) Index(i pulumi.IntInput) GetInfraVariableSetTerraformVariableFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfraVariableSetTerraformVariableFile {
		return vs[0].([]GetInfraVariableSetTerraformVariableFile)[vs[1].(int)]
	}).(GetInfraVariableSetTerraformVariableFileOutput)
}

type GetInfrastructureGitDetails struct {
	// Name of the branch.
	Branch string `pulumi:"branch"`
	// If the Entity is to be fetched from cache
	LoadFromCache string `pulumi:"loadFromCache"`
	// Load Infrastructure yaml from fallback branch
	LoadFromFallbackBranch bool `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote Infrastructure
	RepoName string `pulumi:"repoName"`
}

// GetInfrastructureGitDetailsInput is an input type that accepts GetInfrastructureGitDetailsArgs and GetInfrastructureGitDetailsOutput values.
// You can construct a concrete instance of `GetInfrastructureGitDetailsInput` via:
//
//	GetInfrastructureGitDetailsArgs{...}
type GetInfrastructureGitDetailsInput interface {
	pulumi.Input

	ToGetInfrastructureGitDetailsOutput() GetInfrastructureGitDetailsOutput
	ToGetInfrastructureGitDetailsOutputWithContext(context.Context) GetInfrastructureGitDetailsOutput
}

type GetInfrastructureGitDetailsArgs struct {
	// Name of the branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// If the Entity is to be fetched from cache
	LoadFromCache pulumi.StringInput `pulumi:"loadFromCache"`
	// Load Infrastructure yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolInput `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote Infrastructure
	RepoName pulumi.StringInput `pulumi:"repoName"`
}

func (GetInfrastructureGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureGitDetails)(nil)).Elem()
}

func (i GetInfrastructureGitDetailsArgs) ToGetInfrastructureGitDetailsOutput() GetInfrastructureGitDetailsOutput {
	return i.ToGetInfrastructureGitDetailsOutputWithContext(context.Background())
}

func (i GetInfrastructureGitDetailsArgs) ToGetInfrastructureGitDetailsOutputWithContext(ctx context.Context) GetInfrastructureGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureGitDetailsOutput)
}

func (i GetInfrastructureGitDetailsArgs) ToGetInfrastructureGitDetailsPtrOutput() GetInfrastructureGitDetailsPtrOutput {
	return i.ToGetInfrastructureGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetInfrastructureGitDetailsArgs) ToGetInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) GetInfrastructureGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureGitDetailsOutput).ToGetInfrastructureGitDetailsPtrOutputWithContext(ctx)
}

// GetInfrastructureGitDetailsPtrInput is an input type that accepts GetInfrastructureGitDetailsArgs, GetInfrastructureGitDetailsPtr and GetInfrastructureGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetInfrastructureGitDetailsPtrInput` via:
//
//	        GetInfrastructureGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetInfrastructureGitDetailsPtrInput interface {
	pulumi.Input

	ToGetInfrastructureGitDetailsPtrOutput() GetInfrastructureGitDetailsPtrOutput
	ToGetInfrastructureGitDetailsPtrOutputWithContext(context.Context) GetInfrastructureGitDetailsPtrOutput
}

type getInfrastructureGitDetailsPtrType GetInfrastructureGitDetailsArgs

func GetInfrastructureGitDetailsPtr(v *GetInfrastructureGitDetailsArgs) GetInfrastructureGitDetailsPtrInput {
	return (*getInfrastructureGitDetailsPtrType)(v)
}

func (*getInfrastructureGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfrastructureGitDetails)(nil)).Elem()
}

func (i *getInfrastructureGitDetailsPtrType) ToGetInfrastructureGitDetailsPtrOutput() GetInfrastructureGitDetailsPtrOutput {
	return i.ToGetInfrastructureGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getInfrastructureGitDetailsPtrType) ToGetInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) GetInfrastructureGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureGitDetailsPtrOutput)
}

type GetInfrastructureGitDetailsOutput struct{ *pulumi.OutputState }

func (GetInfrastructureGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureGitDetails)(nil)).Elem()
}

func (o GetInfrastructureGitDetailsOutput) ToGetInfrastructureGitDetailsOutput() GetInfrastructureGitDetailsOutput {
	return o
}

func (o GetInfrastructureGitDetailsOutput) ToGetInfrastructureGitDetailsOutputWithContext(ctx context.Context) GetInfrastructureGitDetailsOutput {
	return o
}

func (o GetInfrastructureGitDetailsOutput) ToGetInfrastructureGitDetailsPtrOutput() GetInfrastructureGitDetailsPtrOutput {
	return o.ToGetInfrastructureGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetInfrastructureGitDetailsOutput) ToGetInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) GetInfrastructureGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInfrastructureGitDetails) *GetInfrastructureGitDetails {
		return &v
	}).(GetInfrastructureGitDetailsPtrOutput)
}

// Name of the branch.
func (o GetInfrastructureGitDetailsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureGitDetails) string { return v.Branch }).(pulumi.StringOutput)
}

// If the Entity is to be fetched from cache
func (o GetInfrastructureGitDetailsOutput) LoadFromCache() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureGitDetails) string { return v.LoadFromCache }).(pulumi.StringOutput)
}

// Load Infrastructure yaml from fallback branch
func (o GetInfrastructureGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInfrastructureGitDetails) bool { return v.LoadFromFallbackBranch }).(pulumi.BoolOutput)
}

// Repo name of remote Infrastructure
func (o GetInfrastructureGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

type GetInfrastructureGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetInfrastructureGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfrastructureGitDetails)(nil)).Elem()
}

func (o GetInfrastructureGitDetailsPtrOutput) ToGetInfrastructureGitDetailsPtrOutput() GetInfrastructureGitDetailsPtrOutput {
	return o
}

func (o GetInfrastructureGitDetailsPtrOutput) ToGetInfrastructureGitDetailsPtrOutputWithContext(ctx context.Context) GetInfrastructureGitDetailsPtrOutput {
	return o
}

func (o GetInfrastructureGitDetailsPtrOutput) Elem() GetInfrastructureGitDetailsOutput {
	return o.ApplyT(func(v *GetInfrastructureGitDetails) GetInfrastructureGitDetails {
		if v != nil {
			return *v
		}
		var ret GetInfrastructureGitDetails
		return ret
	}).(GetInfrastructureGitDetailsOutput)
}

// Name of the branch.
func (o GetInfrastructureGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// If the Entity is to be fetched from cache
func (o GetInfrastructureGitDetailsPtrOutput) LoadFromCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LoadFromCache
	}).(pulumi.StringPtrOutput)
}

// Load Infrastructure yaml from fallback branch
func (o GetInfrastructureGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureGitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Repo name of remote Infrastructure
func (o GetInfrastructureGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

type GetInputSetGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId string `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline).
	ParentEntityConnectorRef string `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName string `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType string `pulumi:"storeType"`
}

// GetInputSetGitDetailsInput is an input type that accepts GetInputSetGitDetailsArgs and GetInputSetGitDetailsOutput values.
// You can construct a concrete instance of `GetInputSetGitDetailsInput` via:
//
//	GetInputSetGitDetailsArgs{...}
type GetInputSetGitDetailsInput interface {
	pulumi.Input

	ToGetInputSetGitDetailsOutput() GetInputSetGitDetailsOutput
	ToGetInputSetGitDetailsOutputWithContext(context.Context) GetInputSetGitDetailsOutput
}

type GetInputSetGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringInput `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline).
	ParentEntityConnectorRef pulumi.StringInput `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName pulumi.StringInput `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringInput `pulumi:"storeType"`
}

func (GetInputSetGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInputSetGitDetails)(nil)).Elem()
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsOutput() GetInputSetGitDetailsOutput {
	return i.ToGetInputSetGitDetailsOutputWithContext(context.Background())
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsOutputWithContext(ctx context.Context) GetInputSetGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInputSetGitDetailsOutput)
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return i.ToGetInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInputSetGitDetailsOutput).ToGetInputSetGitDetailsPtrOutputWithContext(ctx)
}

// GetInputSetGitDetailsPtrInput is an input type that accepts GetInputSetGitDetailsArgs, GetInputSetGitDetailsPtr and GetInputSetGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetInputSetGitDetailsPtrInput` via:
//
//	        GetInputSetGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetInputSetGitDetailsPtrInput interface {
	pulumi.Input

	ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput
	ToGetInputSetGitDetailsPtrOutputWithContext(context.Context) GetInputSetGitDetailsPtrOutput
}

type getInputSetGitDetailsPtrType GetInputSetGitDetailsArgs

func GetInputSetGitDetailsPtr(v *GetInputSetGitDetailsArgs) GetInputSetGitDetailsPtrInput {
	return (*getInputSetGitDetailsPtrType)(v)
}

func (*getInputSetGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInputSetGitDetails)(nil)).Elem()
}

func (i *getInputSetGitDetailsPtrType) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return i.ToGetInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getInputSetGitDetailsPtrType) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInputSetGitDetailsPtrOutput)
}

type GetInputSetGitDetailsOutput struct{ *pulumi.OutputState }

func (GetInputSetGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInputSetGitDetails)(nil)).Elem()
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsOutput() GetInputSetGitDetailsOutput {
	return o
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsOutputWithContext(ctx context.Context) GetInputSetGitDetailsOutput {
	return o
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return o.ToGetInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInputSetGitDetails) *GetInputSetGitDetails {
		return &v
	}).(GetInputSetGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetInputSetGitDetailsOutput) BaseBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.BaseBranch }).(pulumi.StringOutput)
}

// Name of the branch.
func (o GetInputSetGitDetailsOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.BranchName }).(pulumi.StringOutput)
}

// Commit message used for the merge commit.
func (o GetInputSetGitDetailsOutput) CommitMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.CommitMessage }).(pulumi.StringOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetInputSetGitDetailsOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// File path of the Entity in the repository.
func (o GetInputSetGitDetailsOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.FilePath }).(pulumi.StringOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsOutput) LastCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.LastCommitId }).(pulumi.StringOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsOutput) LastObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.LastObjectId }).(pulumi.StringOutput)
}

// Connector reference for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsOutput) ParentEntityConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.ParentEntityConnectorRef }).(pulumi.StringOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsOutput) ParentEntityRepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.ParentEntityRepoName }).(pulumi.StringOutput)
}

// Name of the repository.
func (o GetInputSetGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetInputSetGitDetailsOutput) StoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.StoreType }).(pulumi.StringOutput)
}

type GetInputSetGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetInputSetGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInputSetGitDetails)(nil)).Elem()
}

func (o GetInputSetGitDetailsPtrOutput) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return o
}

func (o GetInputSetGitDetailsPtrOutput) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return o
}

func (o GetInputSetGitDetailsPtrOutput) Elem() GetInputSetGitDetailsOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) GetInputSetGitDetails {
		if v != nil {
			return *v
		}
		var ret GetInputSetGitDetails
		return ret
	}).(GetInputSetGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetInputSetGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o GetInputSetGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o GetInputSetGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetInputSetGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetInputSetGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Connector reference for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsPtrOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ParentEntityConnectorRef
	}).(pulumi.StringPtrOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsPtrOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ParentEntityRepoName
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o GetInputSetGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetInputSetGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StoreType
	}).(pulumi.StringPtrOutput)
}

type GetJenkinsConnectorAuth struct {
	// Authenticate to App Dynamics using bearer token.
	JenkinsBearerTokens []GetJenkinsConnectorAuthJenkinsBearerToken `pulumi:"jenkinsBearerTokens"`
	// Authenticate to App Dynamics using user name and password.
	JenkinsUserNamePasswords []GetJenkinsConnectorAuthJenkinsUserNamePassword `pulumi:"jenkinsUserNamePasswords"`
	// Can be one of UsernamePassword, Anonymous, BearerToken
	Type string `pulumi:"type"`
}

// GetJenkinsConnectorAuthInput is an input type that accepts GetJenkinsConnectorAuthArgs and GetJenkinsConnectorAuthOutput values.
// You can construct a concrete instance of `GetJenkinsConnectorAuthInput` via:
//
//	GetJenkinsConnectorAuthArgs{...}
type GetJenkinsConnectorAuthInput interface {
	pulumi.Input

	ToGetJenkinsConnectorAuthOutput() GetJenkinsConnectorAuthOutput
	ToGetJenkinsConnectorAuthOutputWithContext(context.Context) GetJenkinsConnectorAuthOutput
}

type GetJenkinsConnectorAuthArgs struct {
	// Authenticate to App Dynamics using bearer token.
	JenkinsBearerTokens GetJenkinsConnectorAuthJenkinsBearerTokenArrayInput `pulumi:"jenkinsBearerTokens"`
	// Authenticate to App Dynamics using user name and password.
	JenkinsUserNamePasswords GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayInput `pulumi:"jenkinsUserNamePasswords"`
	// Can be one of UsernamePassword, Anonymous, BearerToken
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetJenkinsConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJenkinsConnectorAuth)(nil)).Elem()
}

func (i GetJenkinsConnectorAuthArgs) ToGetJenkinsConnectorAuthOutput() GetJenkinsConnectorAuthOutput {
	return i.ToGetJenkinsConnectorAuthOutputWithContext(context.Background())
}

func (i GetJenkinsConnectorAuthArgs) ToGetJenkinsConnectorAuthOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJenkinsConnectorAuthOutput)
}

// GetJenkinsConnectorAuthArrayInput is an input type that accepts GetJenkinsConnectorAuthArray and GetJenkinsConnectorAuthArrayOutput values.
// You can construct a concrete instance of `GetJenkinsConnectorAuthArrayInput` via:
//
//	GetJenkinsConnectorAuthArray{ GetJenkinsConnectorAuthArgs{...} }
type GetJenkinsConnectorAuthArrayInput interface {
	pulumi.Input

	ToGetJenkinsConnectorAuthArrayOutput() GetJenkinsConnectorAuthArrayOutput
	ToGetJenkinsConnectorAuthArrayOutputWithContext(context.Context) GetJenkinsConnectorAuthArrayOutput
}

type GetJenkinsConnectorAuthArray []GetJenkinsConnectorAuthInput

func (GetJenkinsConnectorAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJenkinsConnectorAuth)(nil)).Elem()
}

func (i GetJenkinsConnectorAuthArray) ToGetJenkinsConnectorAuthArrayOutput() GetJenkinsConnectorAuthArrayOutput {
	return i.ToGetJenkinsConnectorAuthArrayOutputWithContext(context.Background())
}

func (i GetJenkinsConnectorAuthArray) ToGetJenkinsConnectorAuthArrayOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJenkinsConnectorAuthArrayOutput)
}

type GetJenkinsConnectorAuthOutput struct{ *pulumi.OutputState }

func (GetJenkinsConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJenkinsConnectorAuth)(nil)).Elem()
}

func (o GetJenkinsConnectorAuthOutput) ToGetJenkinsConnectorAuthOutput() GetJenkinsConnectorAuthOutput {
	return o
}

func (o GetJenkinsConnectorAuthOutput) ToGetJenkinsConnectorAuthOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthOutput {
	return o
}

// Authenticate to App Dynamics using bearer token.
func (o GetJenkinsConnectorAuthOutput) JenkinsBearerTokens() GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuth) []GetJenkinsConnectorAuthJenkinsBearerToken {
		return v.JenkinsBearerTokens
	}).(GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput)
}

// Authenticate to App Dynamics using user name and password.
func (o GetJenkinsConnectorAuthOutput) JenkinsUserNamePasswords() GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuth) []GetJenkinsConnectorAuthJenkinsUserNamePassword {
		return v.JenkinsUserNamePasswords
	}).(GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput)
}

// Can be one of UsernamePassword, Anonymous, BearerToken
func (o GetJenkinsConnectorAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuth) string { return v.Type }).(pulumi.StringOutput)
}

type GetJenkinsConnectorAuthArrayOutput struct{ *pulumi.OutputState }

func (GetJenkinsConnectorAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJenkinsConnectorAuth)(nil)).Elem()
}

func (o GetJenkinsConnectorAuthArrayOutput) ToGetJenkinsConnectorAuthArrayOutput() GetJenkinsConnectorAuthArrayOutput {
	return o
}

func (o GetJenkinsConnectorAuthArrayOutput) ToGetJenkinsConnectorAuthArrayOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthArrayOutput {
	return o
}

func (o GetJenkinsConnectorAuthArrayOutput) Index(i pulumi.IntInput) GetJenkinsConnectorAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJenkinsConnectorAuth {
		return vs[0].([]GetJenkinsConnectorAuth)[vs[1].(int)]
	}).(GetJenkinsConnectorAuthOutput)
}

type GetJenkinsConnectorAuthJenkinsBearerToken struct {
	// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// GetJenkinsConnectorAuthJenkinsBearerTokenInput is an input type that accepts GetJenkinsConnectorAuthJenkinsBearerTokenArgs and GetJenkinsConnectorAuthJenkinsBearerTokenOutput values.
// You can construct a concrete instance of `GetJenkinsConnectorAuthJenkinsBearerTokenInput` via:
//
//	GetJenkinsConnectorAuthJenkinsBearerTokenArgs{...}
type GetJenkinsConnectorAuthJenkinsBearerTokenInput interface {
	pulumi.Input

	ToGetJenkinsConnectorAuthJenkinsBearerTokenOutput() GetJenkinsConnectorAuthJenkinsBearerTokenOutput
	ToGetJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(context.Context) GetJenkinsConnectorAuthJenkinsBearerTokenOutput
}

type GetJenkinsConnectorAuthJenkinsBearerTokenArgs struct {
	// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetJenkinsConnectorAuthJenkinsBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (i GetJenkinsConnectorAuthJenkinsBearerTokenArgs) ToGetJenkinsConnectorAuthJenkinsBearerTokenOutput() GetJenkinsConnectorAuthJenkinsBearerTokenOutput {
	return i.ToGetJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(context.Background())
}

func (i GetJenkinsConnectorAuthJenkinsBearerTokenArgs) ToGetJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJenkinsConnectorAuthJenkinsBearerTokenOutput)
}

// GetJenkinsConnectorAuthJenkinsBearerTokenArrayInput is an input type that accepts GetJenkinsConnectorAuthJenkinsBearerTokenArray and GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput values.
// You can construct a concrete instance of `GetJenkinsConnectorAuthJenkinsBearerTokenArrayInput` via:
//
//	GetJenkinsConnectorAuthJenkinsBearerTokenArray{ GetJenkinsConnectorAuthJenkinsBearerTokenArgs{...} }
type GetJenkinsConnectorAuthJenkinsBearerTokenArrayInput interface {
	pulumi.Input

	ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput() GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput
	ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutputWithContext(context.Context) GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput
}

type GetJenkinsConnectorAuthJenkinsBearerTokenArray []GetJenkinsConnectorAuthJenkinsBearerTokenInput

func (GetJenkinsConnectorAuthJenkinsBearerTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (i GetJenkinsConnectorAuthJenkinsBearerTokenArray) ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput() GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput {
	return i.ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutputWithContext(context.Background())
}

func (i GetJenkinsConnectorAuthJenkinsBearerTokenArray) ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput)
}

type GetJenkinsConnectorAuthJenkinsBearerTokenOutput struct{ *pulumi.OutputState }

func (GetJenkinsConnectorAuthJenkinsBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (o GetJenkinsConnectorAuthJenkinsBearerTokenOutput) ToGetJenkinsConnectorAuthJenkinsBearerTokenOutput() GetJenkinsConnectorAuthJenkinsBearerTokenOutput {
	return o
}

func (o GetJenkinsConnectorAuthJenkinsBearerTokenOutput) ToGetJenkinsConnectorAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsBearerTokenOutput {
	return o
}

// Reference of the token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJenkinsConnectorAuthJenkinsBearerTokenOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuthJenkinsBearerToken) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput struct{ *pulumi.OutputState }

func (GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJenkinsConnectorAuthJenkinsBearerToken)(nil)).Elem()
}

func (o GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput) ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput() GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput {
	return o
}

func (o GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput) ToGetJenkinsConnectorAuthJenkinsBearerTokenArrayOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput {
	return o
}

func (o GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput) Index(i pulumi.IntInput) GetJenkinsConnectorAuthJenkinsBearerTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJenkinsConnectorAuthJenkinsBearerToken {
		return vs[0].([]GetJenkinsConnectorAuthJenkinsBearerToken)[vs[1].(int)]
	}).(GetJenkinsConnectorAuthJenkinsBearerTokenOutput)
}

type GetJenkinsConnectorAuthJenkinsUserNamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Username reference to use for authentication.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetJenkinsConnectorAuthJenkinsUserNamePasswordInput is an input type that accepts GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs and GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput values.
// You can construct a concrete instance of `GetJenkinsConnectorAuthJenkinsUserNamePasswordInput` via:
//
//	GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs{...}
type GetJenkinsConnectorAuthJenkinsUserNamePasswordInput interface {
	pulumi.Input

	ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutput() GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput
	ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(context.Context) GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput
}

type GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Username reference to use for authentication.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutput() GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return i.ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(context.Background())
}

func (i GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput)
}

// GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayInput is an input type that accepts GetJenkinsConnectorAuthJenkinsUserNamePasswordArray and GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput values.
// You can construct a concrete instance of `GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayInput` via:
//
//	GetJenkinsConnectorAuthJenkinsUserNamePasswordArray{ GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs{...} }
type GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayInput interface {
	pulumi.Input

	ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput() GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput
	ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutputWithContext(context.Context) GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput
}

type GetJenkinsConnectorAuthJenkinsUserNamePasswordArray []GetJenkinsConnectorAuthJenkinsUserNamePasswordInput

func (GetJenkinsConnectorAuthJenkinsUserNamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i GetJenkinsConnectorAuthJenkinsUserNamePasswordArray) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput() GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput {
	return i.ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutputWithContext(context.Background())
}

func (i GetJenkinsConnectorAuthJenkinsUserNamePasswordArray) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput)
}

type GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput struct{ *pulumi.OutputState }

func (GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutput() GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuthJenkinsUserNamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuthJenkinsUserNamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Username reference to use for authentication.
func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJenkinsConnectorAuthJenkinsUserNamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJenkinsConnectorAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput() GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput {
	return o
}

func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput) ToGetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutputWithContext(ctx context.Context) GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput {
	return o
}

func (o GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput) Index(i pulumi.IntInput) GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJenkinsConnectorAuthJenkinsUserNamePassword {
		return vs[0].([]GetJenkinsConnectorAuthJenkinsUserNamePassword)[vs[1].(int)]
	}).(GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput)
}

type GetJiraConnectorAuth struct {
	// Authentication types for Jira connector
	AuthType string `pulumi:"authType"`
	// Authenticate using personal access token.
	PersonalAccessTokens []GetJiraConnectorAuthPersonalAccessToken `pulumi:"personalAccessTokens"`
	// Authenticate using username password.
	UsernamePasswords []GetJiraConnectorAuthUsernamePassword `pulumi:"usernamePasswords"`
}

// GetJiraConnectorAuthInput is an input type that accepts GetJiraConnectorAuthArgs and GetJiraConnectorAuthOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthInput` via:
//
//	GetJiraConnectorAuthArgs{...}
type GetJiraConnectorAuthInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthOutput() GetJiraConnectorAuthOutput
	ToGetJiraConnectorAuthOutputWithContext(context.Context) GetJiraConnectorAuthOutput
}

type GetJiraConnectorAuthArgs struct {
	// Authentication types for Jira connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Authenticate using personal access token.
	PersonalAccessTokens GetJiraConnectorAuthPersonalAccessTokenArrayInput `pulumi:"personalAccessTokens"`
	// Authenticate using username password.
	UsernamePasswords GetJiraConnectorAuthUsernamePasswordArrayInput `pulumi:"usernamePasswords"`
}

func (GetJiraConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuth)(nil)).Elem()
}

func (i GetJiraConnectorAuthArgs) ToGetJiraConnectorAuthOutput() GetJiraConnectorAuthOutput {
	return i.ToGetJiraConnectorAuthOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthArgs) ToGetJiraConnectorAuthOutputWithContext(ctx context.Context) GetJiraConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthOutput)
}

// GetJiraConnectorAuthArrayInput is an input type that accepts GetJiraConnectorAuthArray and GetJiraConnectorAuthArrayOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthArrayInput` via:
//
//	GetJiraConnectorAuthArray{ GetJiraConnectorAuthArgs{...} }
type GetJiraConnectorAuthArrayInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthArrayOutput() GetJiraConnectorAuthArrayOutput
	ToGetJiraConnectorAuthArrayOutputWithContext(context.Context) GetJiraConnectorAuthArrayOutput
}

type GetJiraConnectorAuthArray []GetJiraConnectorAuthInput

func (GetJiraConnectorAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuth)(nil)).Elem()
}

func (i GetJiraConnectorAuthArray) ToGetJiraConnectorAuthArrayOutput() GetJiraConnectorAuthArrayOutput {
	return i.ToGetJiraConnectorAuthArrayOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthArray) ToGetJiraConnectorAuthArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthArrayOutput)
}

type GetJiraConnectorAuthOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuth)(nil)).Elem()
}

func (o GetJiraConnectorAuthOutput) ToGetJiraConnectorAuthOutput() GetJiraConnectorAuthOutput {
	return o
}

func (o GetJiraConnectorAuthOutput) ToGetJiraConnectorAuthOutputWithContext(ctx context.Context) GetJiraConnectorAuthOutput {
	return o
}

// Authentication types for Jira connector
func (o GetJiraConnectorAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Authenticate using personal access token.
func (o GetJiraConnectorAuthOutput) PersonalAccessTokens() GetJiraConnectorAuthPersonalAccessTokenArrayOutput {
	return o.ApplyT(func(v GetJiraConnectorAuth) []GetJiraConnectorAuthPersonalAccessToken { return v.PersonalAccessTokens }).(GetJiraConnectorAuthPersonalAccessTokenArrayOutput)
}

// Authenticate using username password.
func (o GetJiraConnectorAuthOutput) UsernamePasswords() GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return o.ApplyT(func(v GetJiraConnectorAuth) []GetJiraConnectorAuthUsernamePassword { return v.UsernamePasswords }).(GetJiraConnectorAuthUsernamePasswordArrayOutput)
}

type GetJiraConnectorAuthArrayOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuth)(nil)).Elem()
}

func (o GetJiraConnectorAuthArrayOutput) ToGetJiraConnectorAuthArrayOutput() GetJiraConnectorAuthArrayOutput {
	return o
}

func (o GetJiraConnectorAuthArrayOutput) ToGetJiraConnectorAuthArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthArrayOutput {
	return o
}

func (o GetJiraConnectorAuthArrayOutput) Index(i pulumi.IntInput) GetJiraConnectorAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJiraConnectorAuth {
		return vs[0].([]GetJiraConnectorAuth)[vs[1].(int)]
	}).(GetJiraConnectorAuthOutput)
}

type GetJiraConnectorAuthPersonalAccessToken struct {
	// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PatRef string `pulumi:"patRef"`
}

// GetJiraConnectorAuthPersonalAccessTokenInput is an input type that accepts GetJiraConnectorAuthPersonalAccessTokenArgs and GetJiraConnectorAuthPersonalAccessTokenOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthPersonalAccessTokenInput` via:
//
//	GetJiraConnectorAuthPersonalAccessTokenArgs{...}
type GetJiraConnectorAuthPersonalAccessTokenInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthPersonalAccessTokenOutput() GetJiraConnectorAuthPersonalAccessTokenOutput
	ToGetJiraConnectorAuthPersonalAccessTokenOutputWithContext(context.Context) GetJiraConnectorAuthPersonalAccessTokenOutput
}

type GetJiraConnectorAuthPersonalAccessTokenArgs struct {
	// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PatRef pulumi.StringInput `pulumi:"patRef"`
}

func (GetJiraConnectorAuthPersonalAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (i GetJiraConnectorAuthPersonalAccessTokenArgs) ToGetJiraConnectorAuthPersonalAccessTokenOutput() GetJiraConnectorAuthPersonalAccessTokenOutput {
	return i.ToGetJiraConnectorAuthPersonalAccessTokenOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthPersonalAccessTokenArgs) ToGetJiraConnectorAuthPersonalAccessTokenOutputWithContext(ctx context.Context) GetJiraConnectorAuthPersonalAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthPersonalAccessTokenOutput)
}

// GetJiraConnectorAuthPersonalAccessTokenArrayInput is an input type that accepts GetJiraConnectorAuthPersonalAccessTokenArray and GetJiraConnectorAuthPersonalAccessTokenArrayOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthPersonalAccessTokenArrayInput` via:
//
//	GetJiraConnectorAuthPersonalAccessTokenArray{ GetJiraConnectorAuthPersonalAccessTokenArgs{...} }
type GetJiraConnectorAuthPersonalAccessTokenArrayInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthPersonalAccessTokenArrayOutput() GetJiraConnectorAuthPersonalAccessTokenArrayOutput
	ToGetJiraConnectorAuthPersonalAccessTokenArrayOutputWithContext(context.Context) GetJiraConnectorAuthPersonalAccessTokenArrayOutput
}

type GetJiraConnectorAuthPersonalAccessTokenArray []GetJiraConnectorAuthPersonalAccessTokenInput

func (GetJiraConnectorAuthPersonalAccessTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (i GetJiraConnectorAuthPersonalAccessTokenArray) ToGetJiraConnectorAuthPersonalAccessTokenArrayOutput() GetJiraConnectorAuthPersonalAccessTokenArrayOutput {
	return i.ToGetJiraConnectorAuthPersonalAccessTokenArrayOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthPersonalAccessTokenArray) ToGetJiraConnectorAuthPersonalAccessTokenArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthPersonalAccessTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthPersonalAccessTokenArrayOutput)
}

type GetJiraConnectorAuthPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (o GetJiraConnectorAuthPersonalAccessTokenOutput) ToGetJiraConnectorAuthPersonalAccessTokenOutput() GetJiraConnectorAuthPersonalAccessTokenOutput {
	return o
}

func (o GetJiraConnectorAuthPersonalAccessTokenOutput) ToGetJiraConnectorAuthPersonalAccessTokenOutputWithContext(ctx context.Context) GetJiraConnectorAuthPersonalAccessTokenOutput {
	return o
}

// Reference to a secret containing the personal access token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJiraConnectorAuthPersonalAccessTokenOutput) PatRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthPersonalAccessToken) string { return v.PatRef }).(pulumi.StringOutput)
}

type GetJiraConnectorAuthPersonalAccessTokenArrayOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthPersonalAccessTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuthPersonalAccessToken)(nil)).Elem()
}

func (o GetJiraConnectorAuthPersonalAccessTokenArrayOutput) ToGetJiraConnectorAuthPersonalAccessTokenArrayOutput() GetJiraConnectorAuthPersonalAccessTokenArrayOutput {
	return o
}

func (o GetJiraConnectorAuthPersonalAccessTokenArrayOutput) ToGetJiraConnectorAuthPersonalAccessTokenArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthPersonalAccessTokenArrayOutput {
	return o
}

func (o GetJiraConnectorAuthPersonalAccessTokenArrayOutput) Index(i pulumi.IntInput) GetJiraConnectorAuthPersonalAccessTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJiraConnectorAuthPersonalAccessToken {
		return vs[0].([]GetJiraConnectorAuthPersonalAccessToken)[vs[1].(int)]
	}).(GetJiraConnectorAuthPersonalAccessTokenOutput)
}

type GetJiraConnectorAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetJiraConnectorAuthUsernamePasswordInput is an input type that accepts GetJiraConnectorAuthUsernamePasswordArgs and GetJiraConnectorAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthUsernamePasswordInput` via:
//
//	GetJiraConnectorAuthUsernamePasswordArgs{...}
type GetJiraConnectorAuthUsernamePasswordInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthUsernamePasswordOutput() GetJiraConnectorAuthUsernamePasswordOutput
	ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(context.Context) GetJiraConnectorAuthUsernamePasswordOutput
}

type GetJiraConnectorAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetJiraConnectorAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i GetJiraConnectorAuthUsernamePasswordArgs) ToGetJiraConnectorAuthUsernamePasswordOutput() GetJiraConnectorAuthUsernamePasswordOutput {
	return i.ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthUsernamePasswordArgs) ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthUsernamePasswordOutput)
}

// GetJiraConnectorAuthUsernamePasswordArrayInput is an input type that accepts GetJiraConnectorAuthUsernamePasswordArray and GetJiraConnectorAuthUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthUsernamePasswordArrayInput` via:
//
//	GetJiraConnectorAuthUsernamePasswordArray{ GetJiraConnectorAuthUsernamePasswordArgs{...} }
type GetJiraConnectorAuthUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthUsernamePasswordArrayOutput() GetJiraConnectorAuthUsernamePasswordArrayOutput
	ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(context.Context) GetJiraConnectorAuthUsernamePasswordArrayOutput
}

type GetJiraConnectorAuthUsernamePasswordArray []GetJiraConnectorAuthUsernamePasswordInput

func (GetJiraConnectorAuthUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i GetJiraConnectorAuthUsernamePasswordArray) ToGetJiraConnectorAuthUsernamePasswordArrayOutput() GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return i.ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthUsernamePasswordArray) ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthUsernamePasswordArrayOutput)
}

type GetJiraConnectorAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o GetJiraConnectorAuthUsernamePasswordOutput) ToGetJiraConnectorAuthUsernamePasswordOutput() GetJiraConnectorAuthUsernamePasswordOutput {
	return o
}

func (o GetJiraConnectorAuthUsernamePasswordOutput) ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJiraConnectorAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetJiraConnectorAuthUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJiraConnectorAuthUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetJiraConnectorAuthUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o GetJiraConnectorAuthUsernamePasswordArrayOutput) ToGetJiraConnectorAuthUsernamePasswordArrayOutput() GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetJiraConnectorAuthUsernamePasswordArrayOutput) ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetJiraConnectorAuthUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetJiraConnectorAuthUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJiraConnectorAuthUsernamePassword {
		return vs[0].([]GetJiraConnectorAuthUsernamePassword)[vs[1].(int)]
	}).(GetJiraConnectorAuthUsernamePasswordOutput)
}

type GetKubernetesConnectorClientKeyCert struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef string `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientCertRef string `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm string `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyPassphraseRef string `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyRef string `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
}

// GetKubernetesConnectorClientKeyCertInput is an input type that accepts GetKubernetesConnectorClientKeyCertArgs and GetKubernetesConnectorClientKeyCertOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorClientKeyCertInput` via:
//
//	GetKubernetesConnectorClientKeyCertArgs{...}
type GetKubernetesConnectorClientKeyCertInput interface {
	pulumi.Input

	ToGetKubernetesConnectorClientKeyCertOutput() GetKubernetesConnectorClientKeyCertOutput
	ToGetKubernetesConnectorClientKeyCertOutputWithContext(context.Context) GetKubernetesConnectorClientKeyCertOutput
}

type GetKubernetesConnectorClientKeyCertArgs struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef pulumi.StringInput `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientCertRef pulumi.StringInput `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm pulumi.StringInput `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyPassphraseRef pulumi.StringInput `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyRef pulumi.StringInput `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
}

func (GetKubernetesConnectorClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i GetKubernetesConnectorClientKeyCertArgs) ToGetKubernetesConnectorClientKeyCertOutput() GetKubernetesConnectorClientKeyCertOutput {
	return i.ToGetKubernetesConnectorClientKeyCertOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorClientKeyCertArgs) ToGetKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorClientKeyCertOutput)
}

// GetKubernetesConnectorClientKeyCertArrayInput is an input type that accepts GetKubernetesConnectorClientKeyCertArray and GetKubernetesConnectorClientKeyCertArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorClientKeyCertArrayInput` via:
//
//	GetKubernetesConnectorClientKeyCertArray{ GetKubernetesConnectorClientKeyCertArgs{...} }
type GetKubernetesConnectorClientKeyCertArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorClientKeyCertArrayOutput() GetKubernetesConnectorClientKeyCertArrayOutput
	ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(context.Context) GetKubernetesConnectorClientKeyCertArrayOutput
}

type GetKubernetesConnectorClientKeyCertArray []GetKubernetesConnectorClientKeyCertInput

func (GetKubernetesConnectorClientKeyCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i GetKubernetesConnectorClientKeyCertArray) ToGetKubernetesConnectorClientKeyCertArrayOutput() GetKubernetesConnectorClientKeyCertArrayOutput {
	return i.ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorClientKeyCertArray) ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorClientKeyCertArrayOutput)
}

type GetKubernetesConnectorClientKeyCertOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o GetKubernetesConnectorClientKeyCertOutput) ToGetKubernetesConnectorClientKeyCertOutput() GetKubernetesConnectorClientKeyCertOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertOutput) ToGetKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertOutput {
	return o
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorClientKeyCertOutput) CaCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.CaCertRef }).(pulumi.StringOutput)
}

// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorClientKeyCertOutput) ClientCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientCertRef }).(pulumi.StringOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o GetKubernetesConnectorClientKeyCertOutput) ClientKeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientKeyAlgorithm }).(pulumi.StringOutput)
}

// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorClientKeyCertOutput) ClientKeyPassphraseRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientKeyPassphraseRef }).(pulumi.StringOutput)
}

// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorClientKeyCertOutput) ClientKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientKeyRef }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o GetKubernetesConnectorClientKeyCertOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.MasterUrl }).(pulumi.StringOutput)
}

type GetKubernetesConnectorClientKeyCertArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorClientKeyCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o GetKubernetesConnectorClientKeyCertArrayOutput) ToGetKubernetesConnectorClientKeyCertArrayOutput() GetKubernetesConnectorClientKeyCertArrayOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertArrayOutput) ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertArrayOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorClientKeyCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorClientKeyCert {
		return vs[0].([]GetKubernetesConnectorClientKeyCert)[vs[1].(int)]
	}).(GetKubernetesConnectorClientKeyCertOutput)
}

type GetKubernetesConnectorInheritFromDelegate struct {
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetKubernetesConnectorInheritFromDelegateInput is an input type that accepts GetKubernetesConnectorInheritFromDelegateArgs and GetKubernetesConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorInheritFromDelegateInput` via:
//
//	GetKubernetesConnectorInheritFromDelegateArgs{...}
type GetKubernetesConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGetKubernetesConnectorInheritFromDelegateOutput() GetKubernetesConnectorInheritFromDelegateOutput
	ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(context.Context) GetKubernetesConnectorInheritFromDelegateOutput
}

type GetKubernetesConnectorInheritFromDelegateArgs struct {
	// Selectors to use for the delegate.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetKubernetesConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetKubernetesConnectorInheritFromDelegateArgs) ToGetKubernetesConnectorInheritFromDelegateOutput() GetKubernetesConnectorInheritFromDelegateOutput {
	return i.ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorInheritFromDelegateArgs) ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorInheritFromDelegateOutput)
}

// GetKubernetesConnectorInheritFromDelegateArrayInput is an input type that accepts GetKubernetesConnectorInheritFromDelegateArray and GetKubernetesConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorInheritFromDelegateArrayInput` via:
//
//	GetKubernetesConnectorInheritFromDelegateArray{ GetKubernetesConnectorInheritFromDelegateArgs{...} }
type GetKubernetesConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorInheritFromDelegateArrayOutput() GetKubernetesConnectorInheritFromDelegateArrayOutput
	ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GetKubernetesConnectorInheritFromDelegateArrayOutput
}

type GetKubernetesConnectorInheritFromDelegateArray []GetKubernetesConnectorInheritFromDelegateInput

func (GetKubernetesConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetKubernetesConnectorInheritFromDelegateArray) ToGetKubernetesConnectorInheritFromDelegateArrayOutput() GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return i.ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorInheritFromDelegateArray) ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorInheritFromDelegateArrayOutput)
}

type GetKubernetesConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetKubernetesConnectorInheritFromDelegateOutput) ToGetKubernetesConnectorInheritFromDelegateOutput() GetKubernetesConnectorInheritFromDelegateOutput {
	return o
}

func (o GetKubernetesConnectorInheritFromDelegateOutput) ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateOutput {
	return o
}

// Selectors to use for the delegate.
func (o GetKubernetesConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetKubernetesConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetKubernetesConnectorInheritFromDelegateArrayOutput) ToGetKubernetesConnectorInheritFromDelegateArrayOutput() GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetKubernetesConnectorInheritFromDelegateArrayOutput) ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetKubernetesConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorInheritFromDelegate {
		return vs[0].([]GetKubernetesConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GetKubernetesConnectorInheritFromDelegateOutput)
}

type GetKubernetesConnectorOpenidConnect struct {
	// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes []string `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretRef string `pulumi:"secretRef"`
	// Username for the connector.
	Username string `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetKubernetesConnectorOpenidConnectInput is an input type that accepts GetKubernetesConnectorOpenidConnectArgs and GetKubernetesConnectorOpenidConnectOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorOpenidConnectInput` via:
//
//	GetKubernetesConnectorOpenidConnectArgs{...}
type GetKubernetesConnectorOpenidConnectInput interface {
	pulumi.Input

	ToGetKubernetesConnectorOpenidConnectOutput() GetKubernetesConnectorOpenidConnectOutput
	ToGetKubernetesConnectorOpenidConnectOutputWithContext(context.Context) GetKubernetesConnectorOpenidConnectOutput
}

type GetKubernetesConnectorOpenidConnectArgs struct {
	// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
	// Username for the connector.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetKubernetesConnectorOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i GetKubernetesConnectorOpenidConnectArgs) ToGetKubernetesConnectorOpenidConnectOutput() GetKubernetesConnectorOpenidConnectOutput {
	return i.ToGetKubernetesConnectorOpenidConnectOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorOpenidConnectArgs) ToGetKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorOpenidConnectOutput)
}

// GetKubernetesConnectorOpenidConnectArrayInput is an input type that accepts GetKubernetesConnectorOpenidConnectArray and GetKubernetesConnectorOpenidConnectArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorOpenidConnectArrayInput` via:
//
//	GetKubernetesConnectorOpenidConnectArray{ GetKubernetesConnectorOpenidConnectArgs{...} }
type GetKubernetesConnectorOpenidConnectArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorOpenidConnectArrayOutput() GetKubernetesConnectorOpenidConnectArrayOutput
	ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(context.Context) GetKubernetesConnectorOpenidConnectArrayOutput
}

type GetKubernetesConnectorOpenidConnectArray []GetKubernetesConnectorOpenidConnectInput

func (GetKubernetesConnectorOpenidConnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i GetKubernetesConnectorOpenidConnectArray) ToGetKubernetesConnectorOpenidConnectArrayOutput() GetKubernetesConnectorOpenidConnectArrayOutput {
	return i.ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorOpenidConnectArray) ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorOpenidConnectArrayOutput)
}

type GetKubernetesConnectorOpenidConnectOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o GetKubernetesConnectorOpenidConnectOutput) ToGetKubernetesConnectorOpenidConnectOutput() GetKubernetesConnectorOpenidConnectOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectOutput) ToGetKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectOutput {
	return o
}

// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorOpenidConnectOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// The URL of the OpenID Connect issuer.
func (o GetKubernetesConnectorOpenidConnectOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o GetKubernetesConnectorOpenidConnectOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorOpenidConnectOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Scopes to request for the connector.
func (o GetKubernetesConnectorOpenidConnectOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorOpenidConnectOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.SecretRef }).(pulumi.StringOutput)
}

// Username for the connector.
func (o GetKubernetesConnectorOpenidConnectOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorOpenidConnectOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetKubernetesConnectorOpenidConnectArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorOpenidConnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o GetKubernetesConnectorOpenidConnectArrayOutput) ToGetKubernetesConnectorOpenidConnectArrayOutput() GetKubernetesConnectorOpenidConnectArrayOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectArrayOutput) ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectArrayOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorOpenidConnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorOpenidConnect {
		return vs[0].([]GetKubernetesConnectorOpenidConnect)[vs[1].(int)]
	}).(GetKubernetesConnectorOpenidConnectOutput)
}

type GetKubernetesConnectorServiceAccount struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ServiceAccountTokenRef string `pulumi:"serviceAccountTokenRef"`
}

// GetKubernetesConnectorServiceAccountInput is an input type that accepts GetKubernetesConnectorServiceAccountArgs and GetKubernetesConnectorServiceAccountOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorServiceAccountInput` via:
//
//	GetKubernetesConnectorServiceAccountArgs{...}
type GetKubernetesConnectorServiceAccountInput interface {
	pulumi.Input

	ToGetKubernetesConnectorServiceAccountOutput() GetKubernetesConnectorServiceAccountOutput
	ToGetKubernetesConnectorServiceAccountOutputWithContext(context.Context) GetKubernetesConnectorServiceAccountOutput
}

type GetKubernetesConnectorServiceAccountArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ServiceAccountTokenRef pulumi.StringInput `pulumi:"serviceAccountTokenRef"`
}

func (GetKubernetesConnectorServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i GetKubernetesConnectorServiceAccountArgs) ToGetKubernetesConnectorServiceAccountOutput() GetKubernetesConnectorServiceAccountOutput {
	return i.ToGetKubernetesConnectorServiceAccountOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorServiceAccountArgs) ToGetKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorServiceAccountOutput)
}

// GetKubernetesConnectorServiceAccountArrayInput is an input type that accepts GetKubernetesConnectorServiceAccountArray and GetKubernetesConnectorServiceAccountArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorServiceAccountArrayInput` via:
//
//	GetKubernetesConnectorServiceAccountArray{ GetKubernetesConnectorServiceAccountArgs{...} }
type GetKubernetesConnectorServiceAccountArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorServiceAccountArrayOutput() GetKubernetesConnectorServiceAccountArrayOutput
	ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(context.Context) GetKubernetesConnectorServiceAccountArrayOutput
}

type GetKubernetesConnectorServiceAccountArray []GetKubernetesConnectorServiceAccountInput

func (GetKubernetesConnectorServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i GetKubernetesConnectorServiceAccountArray) ToGetKubernetesConnectorServiceAccountArrayOutput() GetKubernetesConnectorServiceAccountArrayOutput {
	return i.ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorServiceAccountArray) ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorServiceAccountArrayOutput)
}

type GetKubernetesConnectorServiceAccountOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o GetKubernetesConnectorServiceAccountOutput) ToGetKubernetesConnectorServiceAccountOutput() GetKubernetesConnectorServiceAccountOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountOutput) ToGetKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountOutput {
	return o
}

// The URL of the Kubernetes cluster.
func (o GetKubernetesConnectorServiceAccountOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorServiceAccount) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorServiceAccountOutput) ServiceAccountTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorServiceAccount) string { return v.ServiceAccountTokenRef }).(pulumi.StringOutput)
}

type GetKubernetesConnectorServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o GetKubernetesConnectorServiceAccountArrayOutput) ToGetKubernetesConnectorServiceAccountArrayOutput() GetKubernetesConnectorServiceAccountArrayOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountArrayOutput) ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountArrayOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorServiceAccount {
		return vs[0].([]GetKubernetesConnectorServiceAccount)[vs[1].(int)]
	}).(GetKubernetesConnectorServiceAccountOutput)
}

type GetKubernetesConnectorUsernamePassword struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username for the connector.
	Username string `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetKubernetesConnectorUsernamePasswordInput is an input type that accepts GetKubernetesConnectorUsernamePasswordArgs and GetKubernetesConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorUsernamePasswordInput` via:
//
//	GetKubernetesConnectorUsernamePasswordArgs{...}
type GetKubernetesConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToGetKubernetesConnectorUsernamePasswordOutput() GetKubernetesConnectorUsernamePasswordOutput
	ToGetKubernetesConnectorUsernamePasswordOutputWithContext(context.Context) GetKubernetesConnectorUsernamePasswordOutput
}

type GetKubernetesConnectorUsernamePasswordArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username for the connector.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetKubernetesConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i GetKubernetesConnectorUsernamePasswordArgs) ToGetKubernetesConnectorUsernamePasswordOutput() GetKubernetesConnectorUsernamePasswordOutput {
	return i.ToGetKubernetesConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorUsernamePasswordArgs) ToGetKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorUsernamePasswordOutput)
}

// GetKubernetesConnectorUsernamePasswordArrayInput is an input type that accepts GetKubernetesConnectorUsernamePasswordArray and GetKubernetesConnectorUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorUsernamePasswordArrayInput` via:
//
//	GetKubernetesConnectorUsernamePasswordArray{ GetKubernetesConnectorUsernamePasswordArgs{...} }
type GetKubernetesConnectorUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorUsernamePasswordArrayOutput() GetKubernetesConnectorUsernamePasswordArrayOutput
	ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(context.Context) GetKubernetesConnectorUsernamePasswordArrayOutput
}

type GetKubernetesConnectorUsernamePasswordArray []GetKubernetesConnectorUsernamePasswordInput

func (GetKubernetesConnectorUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i GetKubernetesConnectorUsernamePasswordArray) ToGetKubernetesConnectorUsernamePasswordArrayOutput() GetKubernetesConnectorUsernamePasswordArrayOutput {
	return i.ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorUsernamePasswordArray) ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorUsernamePasswordArrayOutput)
}

type GetKubernetesConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o GetKubernetesConnectorUsernamePasswordOutput) ToGetKubernetesConnectorUsernamePasswordOutput() GetKubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordOutput) ToGetKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordOutput {
	return o
}

// The URL of the Kubernetes cluster.
func (o GetKubernetesConnectorUsernamePasswordOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username for the connector.
func (o GetKubernetesConnectorUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetKubernetesConnectorUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetKubernetesConnectorUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o GetKubernetesConnectorUsernamePasswordArrayOutput) ToGetKubernetesConnectorUsernamePasswordArrayOutput() GetKubernetesConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordArrayOutput) ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorUsernamePassword {
		return vs[0].([]GetKubernetesConnectorUsernamePassword)[vs[1].(int)]
	}).(GetKubernetesConnectorUsernamePasswordOutput)
}

type GetManualFreezeCurrentOrUpcomingWindow struct {
	// End time of the freeze window
	EndTime int `pulumi:"endTime"`
	// Start time of the freeze window
	StartTime int `pulumi:"startTime"`
}

// GetManualFreezeCurrentOrUpcomingWindowInput is an input type that accepts GetManualFreezeCurrentOrUpcomingWindowArgs and GetManualFreezeCurrentOrUpcomingWindowOutput values.
// You can construct a concrete instance of `GetManualFreezeCurrentOrUpcomingWindowInput` via:
//
//	GetManualFreezeCurrentOrUpcomingWindowArgs{...}
type GetManualFreezeCurrentOrUpcomingWindowInput interface {
	pulumi.Input

	ToGetManualFreezeCurrentOrUpcomingWindowOutput() GetManualFreezeCurrentOrUpcomingWindowOutput
	ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Context) GetManualFreezeCurrentOrUpcomingWindowOutput
}

type GetManualFreezeCurrentOrUpcomingWindowArgs struct {
	// End time of the freeze window
	EndTime pulumi.IntInput `pulumi:"endTime"`
	// Start time of the freeze window
	StartTime pulumi.IntInput `pulumi:"startTime"`
}

func (GetManualFreezeCurrentOrUpcomingWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i GetManualFreezeCurrentOrUpcomingWindowArgs) ToGetManualFreezeCurrentOrUpcomingWindowOutput() GetManualFreezeCurrentOrUpcomingWindowOutput {
	return i.ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Background())
}

func (i GetManualFreezeCurrentOrUpcomingWindowArgs) ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeCurrentOrUpcomingWindowOutput)
}

// GetManualFreezeCurrentOrUpcomingWindowArrayInput is an input type that accepts GetManualFreezeCurrentOrUpcomingWindowArray and GetManualFreezeCurrentOrUpcomingWindowArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeCurrentOrUpcomingWindowArrayInput` via:
//
//	GetManualFreezeCurrentOrUpcomingWindowArray{ GetManualFreezeCurrentOrUpcomingWindowArgs{...} }
type GetManualFreezeCurrentOrUpcomingWindowArrayInput interface {
	pulumi.Input

	ToGetManualFreezeCurrentOrUpcomingWindowArrayOutput() GetManualFreezeCurrentOrUpcomingWindowArrayOutput
	ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Context) GetManualFreezeCurrentOrUpcomingWindowArrayOutput
}

type GetManualFreezeCurrentOrUpcomingWindowArray []GetManualFreezeCurrentOrUpcomingWindowInput

func (GetManualFreezeCurrentOrUpcomingWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i GetManualFreezeCurrentOrUpcomingWindowArray) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutput() GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return i.ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeCurrentOrUpcomingWindowArray) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeCurrentOrUpcomingWindowArrayOutput)
}

type GetManualFreezeCurrentOrUpcomingWindowOutput struct{ *pulumi.OutputState }

func (GetManualFreezeCurrentOrUpcomingWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o GetManualFreezeCurrentOrUpcomingWindowOutput) ToGetManualFreezeCurrentOrUpcomingWindowOutput() GetManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

func (o GetManualFreezeCurrentOrUpcomingWindowOutput) ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

// End time of the freeze window
func (o GetManualFreezeCurrentOrUpcomingWindowOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetManualFreezeCurrentOrUpcomingWindow) int { return v.EndTime }).(pulumi.IntOutput)
}

// Start time of the freeze window
func (o GetManualFreezeCurrentOrUpcomingWindowOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetManualFreezeCurrentOrUpcomingWindow) int { return v.StartTime }).(pulumi.IntOutput)
}

type GetManualFreezeCurrentOrUpcomingWindowArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeCurrentOrUpcomingWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o GetManualFreezeCurrentOrUpcomingWindowArrayOutput) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutput() GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o GetManualFreezeCurrentOrUpcomingWindowArrayOutput) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o GetManualFreezeCurrentOrUpcomingWindowArrayOutput) Index(i pulumi.IntInput) GetManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeCurrentOrUpcomingWindow {
		return vs[0].([]GetManualFreezeCurrentOrUpcomingWindow)[vs[1].(int)]
	}).(GetManualFreezeCurrentOrUpcomingWindowOutput)
}

type GetManualFreezeFreezeWindow struct {
	// Duration of the freeze window
	Duration string `pulumi:"duration"`
	// End Time of the freeze window
	EndTime string `pulumi:"endTime"`
	// Recurrence of the freeze window
	Recurrences []GetManualFreezeFreezeWindowRecurrence `pulumi:"recurrences"`
	// Start Time of the freeze window
	StartTime string `pulumi:"startTime"`
	// Time zone of the freeze window
	TimeZone string `pulumi:"timeZone"`
}

// GetManualFreezeFreezeWindowInput is an input type that accepts GetManualFreezeFreezeWindowArgs and GetManualFreezeFreezeWindowOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowInput` via:
//
//	GetManualFreezeFreezeWindowArgs{...}
type GetManualFreezeFreezeWindowInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowOutput() GetManualFreezeFreezeWindowOutput
	ToGetManualFreezeFreezeWindowOutputWithContext(context.Context) GetManualFreezeFreezeWindowOutput
}

type GetManualFreezeFreezeWindowArgs struct {
	// Duration of the freeze window
	Duration pulumi.StringInput `pulumi:"duration"`
	// End Time of the freeze window
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Recurrence of the freeze window
	Recurrences GetManualFreezeFreezeWindowRecurrenceArrayInput `pulumi:"recurrences"`
	// Start Time of the freeze window
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Time zone of the freeze window
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetManualFreezeFreezeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowArgs) ToGetManualFreezeFreezeWindowOutput() GetManualFreezeFreezeWindowOutput {
	return i.ToGetManualFreezeFreezeWindowOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowArgs) ToGetManualFreezeFreezeWindowOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowOutput)
}

// GetManualFreezeFreezeWindowArrayInput is an input type that accepts GetManualFreezeFreezeWindowArray and GetManualFreezeFreezeWindowArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowArrayInput` via:
//
//	GetManualFreezeFreezeWindowArray{ GetManualFreezeFreezeWindowArgs{...} }
type GetManualFreezeFreezeWindowArrayInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowArrayOutput() GetManualFreezeFreezeWindowArrayOutput
	ToGetManualFreezeFreezeWindowArrayOutputWithContext(context.Context) GetManualFreezeFreezeWindowArrayOutput
}

type GetManualFreezeFreezeWindowArray []GetManualFreezeFreezeWindowInput

func (GetManualFreezeFreezeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowArray) ToGetManualFreezeFreezeWindowArrayOutput() GetManualFreezeFreezeWindowArrayOutput {
	return i.ToGetManualFreezeFreezeWindowArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowArray) ToGetManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowArrayOutput)
}

type GetManualFreezeFreezeWindowOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowOutput) ToGetManualFreezeFreezeWindowOutput() GetManualFreezeFreezeWindowOutput {
	return o
}

func (o GetManualFreezeFreezeWindowOutput) ToGetManualFreezeFreezeWindowOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowOutput {
	return o
}

// Duration of the freeze window
func (o GetManualFreezeFreezeWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// End Time of the freeze window
func (o GetManualFreezeFreezeWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

// Recurrence of the freeze window
func (o GetManualFreezeFreezeWindowOutput) Recurrences() GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) []GetManualFreezeFreezeWindowRecurrence { return v.Recurrences }).(GetManualFreezeFreezeWindowRecurrenceArrayOutput)
}

// Start Time of the freeze window
func (o GetManualFreezeFreezeWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

// Time zone of the freeze window
func (o GetManualFreezeFreezeWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetManualFreezeFreezeWindowArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowArrayOutput) ToGetManualFreezeFreezeWindowArrayOutput() GetManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowArrayOutput) ToGetManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowArrayOutput) Index(i pulumi.IntInput) GetManualFreezeFreezeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeFreezeWindow {
		return vs[0].([]GetManualFreezeFreezeWindow)[vs[1].(int)]
	}).(GetManualFreezeFreezeWindowOutput)
}

type GetManualFreezeFreezeWindowRecurrence struct {
	// Used to filter resources on their attributes
	RecurrenceSpecs []GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec `pulumi:"recurrenceSpecs"`
	// Type of the recurrence
	Type string `pulumi:"type"`
}

// GetManualFreezeFreezeWindowRecurrenceInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceArgs and GetManualFreezeFreezeWindowRecurrenceOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceArgs{...}
type GetManualFreezeFreezeWindowRecurrenceInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceOutput() GetManualFreezeFreezeWindowRecurrenceOutput
	ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceOutput
}

type GetManualFreezeFreezeWindowRecurrenceArgs struct {
	// Used to filter resources on their attributes
	RecurrenceSpecs GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput `pulumi:"recurrenceSpecs"`
	// Type of the recurrence
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetManualFreezeFreezeWindowRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceArgs) ToGetManualFreezeFreezeWindowRecurrenceOutput() GetManualFreezeFreezeWindowRecurrenceOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceArgs) ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceOutput)
}

// GetManualFreezeFreezeWindowRecurrenceArrayInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceArray and GetManualFreezeFreezeWindowRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceArrayInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceArray{ GetManualFreezeFreezeWindowRecurrenceArgs{...} }
type GetManualFreezeFreezeWindowRecurrenceArrayInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceArrayOutput() GetManualFreezeFreezeWindowRecurrenceArrayOutput
	ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceArrayOutput
}

type GetManualFreezeFreezeWindowRecurrenceArray []GetManualFreezeFreezeWindowRecurrenceInput

func (GetManualFreezeFreezeWindowRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceArray) ToGetManualFreezeFreezeWindowRecurrenceArrayOutput() GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceArray) ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceArrayOutput)
}

type GetManualFreezeFreezeWindowRecurrenceOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceOutput) ToGetManualFreezeFreezeWindowRecurrenceOutput() GetManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceOutput) ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

// Used to filter resources on their attributes
func (o GetManualFreezeFreezeWindowRecurrenceOutput) RecurrenceSpecs() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrence) []GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return v.RecurrenceSpecs
	}).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

// Type of the recurrence
func (o GetManualFreezeFreezeWindowRecurrenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrence) string { return v.Type }).(pulumi.StringOutput)
}

type GetManualFreezeFreezeWindowRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceArrayOutput() GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceArrayOutput) Index(i pulumi.IntInput) GetManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeFreezeWindowRecurrence {
		return vs[0].([]GetManualFreezeFreezeWindowRecurrence)[vs[1].(int)]
	}).(GetManualFreezeFreezeWindowRecurrenceOutput)
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec struct {
	// Time till which freeze window recurrs
	Until string `pulumi:"until"`
	// Every n months recurrence
	Value int `pulumi:"value"`
}

// GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs and GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...}
type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs struct {
	// Time till which freeze window recurrs
	Until pulumi.StringInput `pulumi:"until"`
	// Every n months recurrence
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

// GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray and GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{ GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...} }
type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray []GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

// Time till which freeze window recurrs
func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Until() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec) string { return v.Until }).(pulumi.StringOutput)
}

// Every n months recurrence
func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec) int { return v.Value }).(pulumi.IntOutput)
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) Index(i pulumi.IntInput) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return vs[0].([]GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)[vs[1].(int)]
	}).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

type GetNexusConnectorCredential struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetNexusConnectorCredentialInput is an input type that accepts GetNexusConnectorCredentialArgs and GetNexusConnectorCredentialOutput values.
// You can construct a concrete instance of `GetNexusConnectorCredentialInput` via:
//
//	GetNexusConnectorCredentialArgs{...}
type GetNexusConnectorCredentialInput interface {
	pulumi.Input

	ToGetNexusConnectorCredentialOutput() GetNexusConnectorCredentialOutput
	ToGetNexusConnectorCredentialOutputWithContext(context.Context) GetNexusConnectorCredentialOutput
}

type GetNexusConnectorCredentialArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetNexusConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNexusConnectorCredential)(nil)).Elem()
}

func (i GetNexusConnectorCredentialArgs) ToGetNexusConnectorCredentialOutput() GetNexusConnectorCredentialOutput {
	return i.ToGetNexusConnectorCredentialOutputWithContext(context.Background())
}

func (i GetNexusConnectorCredentialArgs) ToGetNexusConnectorCredentialOutputWithContext(ctx context.Context) GetNexusConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNexusConnectorCredentialOutput)
}

// GetNexusConnectorCredentialArrayInput is an input type that accepts GetNexusConnectorCredentialArray and GetNexusConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetNexusConnectorCredentialArrayInput` via:
//
//	GetNexusConnectorCredentialArray{ GetNexusConnectorCredentialArgs{...} }
type GetNexusConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetNexusConnectorCredentialArrayOutput() GetNexusConnectorCredentialArrayOutput
	ToGetNexusConnectorCredentialArrayOutputWithContext(context.Context) GetNexusConnectorCredentialArrayOutput
}

type GetNexusConnectorCredentialArray []GetNexusConnectorCredentialInput

func (GetNexusConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNexusConnectorCredential)(nil)).Elem()
}

func (i GetNexusConnectorCredentialArray) ToGetNexusConnectorCredentialArrayOutput() GetNexusConnectorCredentialArrayOutput {
	return i.ToGetNexusConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetNexusConnectorCredentialArray) ToGetNexusConnectorCredentialArrayOutputWithContext(ctx context.Context) GetNexusConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNexusConnectorCredentialArrayOutput)
}

type GetNexusConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetNexusConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNexusConnectorCredential)(nil)).Elem()
}

func (o GetNexusConnectorCredentialOutput) ToGetNexusConnectorCredentialOutput() GetNexusConnectorCredentialOutput {
	return o
}

func (o GetNexusConnectorCredentialOutput) ToGetNexusConnectorCredentialOutputWithContext(ctx context.Context) GetNexusConnectorCredentialOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetNexusConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetNexusConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetNexusConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetNexusConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetNexusConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNexusConnectorCredential)(nil)).Elem()
}

func (o GetNexusConnectorCredentialArrayOutput) ToGetNexusConnectorCredentialArrayOutput() GetNexusConnectorCredentialArrayOutput {
	return o
}

func (o GetNexusConnectorCredentialArrayOutput) ToGetNexusConnectorCredentialArrayOutputWithContext(ctx context.Context) GetNexusConnectorCredentialArrayOutput {
	return o
}

func (o GetNexusConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetNexusConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNexusConnectorCredential {
		return vs[0].([]GetNexusConnectorCredential)[vs[1].(int)]
	}).(GetNexusConnectorCredentialOutput)
}

type GetOciHelmConnectorCredential struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetOciHelmConnectorCredentialInput is an input type that accepts GetOciHelmConnectorCredentialArgs and GetOciHelmConnectorCredentialOutput values.
// You can construct a concrete instance of `GetOciHelmConnectorCredentialInput` via:
//
//	GetOciHelmConnectorCredentialArgs{...}
type GetOciHelmConnectorCredentialInput interface {
	pulumi.Input

	ToGetOciHelmConnectorCredentialOutput() GetOciHelmConnectorCredentialOutput
	ToGetOciHelmConnectorCredentialOutputWithContext(context.Context) GetOciHelmConnectorCredentialOutput
}

type GetOciHelmConnectorCredentialArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetOciHelmConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOciHelmConnectorCredential)(nil)).Elem()
}

func (i GetOciHelmConnectorCredentialArgs) ToGetOciHelmConnectorCredentialOutput() GetOciHelmConnectorCredentialOutput {
	return i.ToGetOciHelmConnectorCredentialOutputWithContext(context.Background())
}

func (i GetOciHelmConnectorCredentialArgs) ToGetOciHelmConnectorCredentialOutputWithContext(ctx context.Context) GetOciHelmConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOciHelmConnectorCredentialOutput)
}

// GetOciHelmConnectorCredentialArrayInput is an input type that accepts GetOciHelmConnectorCredentialArray and GetOciHelmConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetOciHelmConnectorCredentialArrayInput` via:
//
//	GetOciHelmConnectorCredentialArray{ GetOciHelmConnectorCredentialArgs{...} }
type GetOciHelmConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetOciHelmConnectorCredentialArrayOutput() GetOciHelmConnectorCredentialArrayOutput
	ToGetOciHelmConnectorCredentialArrayOutputWithContext(context.Context) GetOciHelmConnectorCredentialArrayOutput
}

type GetOciHelmConnectorCredentialArray []GetOciHelmConnectorCredentialInput

func (GetOciHelmConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOciHelmConnectorCredential)(nil)).Elem()
}

func (i GetOciHelmConnectorCredentialArray) ToGetOciHelmConnectorCredentialArrayOutput() GetOciHelmConnectorCredentialArrayOutput {
	return i.ToGetOciHelmConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetOciHelmConnectorCredentialArray) ToGetOciHelmConnectorCredentialArrayOutputWithContext(ctx context.Context) GetOciHelmConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOciHelmConnectorCredentialArrayOutput)
}

type GetOciHelmConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetOciHelmConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOciHelmConnectorCredential)(nil)).Elem()
}

func (o GetOciHelmConnectorCredentialOutput) ToGetOciHelmConnectorCredentialOutput() GetOciHelmConnectorCredentialOutput {
	return o
}

func (o GetOciHelmConnectorCredentialOutput) ToGetOciHelmConnectorCredentialOutputWithContext(ctx context.Context) GetOciHelmConnectorCredentialOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetOciHelmConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetOciHelmConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetOciHelmConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetOciHelmConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetOciHelmConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetOciHelmConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetOciHelmConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetOciHelmConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOciHelmConnectorCredential)(nil)).Elem()
}

func (o GetOciHelmConnectorCredentialArrayOutput) ToGetOciHelmConnectorCredentialArrayOutput() GetOciHelmConnectorCredentialArrayOutput {
	return o
}

func (o GetOciHelmConnectorCredentialArrayOutput) ToGetOciHelmConnectorCredentialArrayOutputWithContext(ctx context.Context) GetOciHelmConnectorCredentialArrayOutput {
	return o
}

func (o GetOciHelmConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetOciHelmConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOciHelmConnectorCredential {
		return vs[0].([]GetOciHelmConnectorCredential)[vs[1].(int)]
	}).(GetOciHelmConnectorCredentialOutput)
}

type GetOverridesGitDetails struct {
	// Name of the branch.
	Branch string `pulumi:"branch"`
	// Load service yaml from fallback branch
	LoadFromCache bool `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch bool `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote service override
	RepoName string `pulumi:"repoName"`
}

// GetOverridesGitDetailsInput is an input type that accepts GetOverridesGitDetailsArgs and GetOverridesGitDetailsOutput values.
// You can construct a concrete instance of `GetOverridesGitDetailsInput` via:
//
//	GetOverridesGitDetailsArgs{...}
type GetOverridesGitDetailsInput interface {
	pulumi.Input

	ToGetOverridesGitDetailsOutput() GetOverridesGitDetailsOutput
	ToGetOverridesGitDetailsOutputWithContext(context.Context) GetOverridesGitDetailsOutput
}

type GetOverridesGitDetailsArgs struct {
	// Name of the branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Load service yaml from fallback branch
	LoadFromCache pulumi.BoolInput `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolInput `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote service override
	RepoName pulumi.StringInput `pulumi:"repoName"`
}

func (GetOverridesGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOverridesGitDetails)(nil)).Elem()
}

func (i GetOverridesGitDetailsArgs) ToGetOverridesGitDetailsOutput() GetOverridesGitDetailsOutput {
	return i.ToGetOverridesGitDetailsOutputWithContext(context.Background())
}

func (i GetOverridesGitDetailsArgs) ToGetOverridesGitDetailsOutputWithContext(ctx context.Context) GetOverridesGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverridesGitDetailsOutput)
}

func (i GetOverridesGitDetailsArgs) ToGetOverridesGitDetailsPtrOutput() GetOverridesGitDetailsPtrOutput {
	return i.ToGetOverridesGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetOverridesGitDetailsArgs) ToGetOverridesGitDetailsPtrOutputWithContext(ctx context.Context) GetOverridesGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverridesGitDetailsOutput).ToGetOverridesGitDetailsPtrOutputWithContext(ctx)
}

// GetOverridesGitDetailsPtrInput is an input type that accepts GetOverridesGitDetailsArgs, GetOverridesGitDetailsPtr and GetOverridesGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetOverridesGitDetailsPtrInput` via:
//
//	        GetOverridesGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetOverridesGitDetailsPtrInput interface {
	pulumi.Input

	ToGetOverridesGitDetailsPtrOutput() GetOverridesGitDetailsPtrOutput
	ToGetOverridesGitDetailsPtrOutputWithContext(context.Context) GetOverridesGitDetailsPtrOutput
}

type getOverridesGitDetailsPtrType GetOverridesGitDetailsArgs

func GetOverridesGitDetailsPtr(v *GetOverridesGitDetailsArgs) GetOverridesGitDetailsPtrInput {
	return (*getOverridesGitDetailsPtrType)(v)
}

func (*getOverridesGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetOverridesGitDetails)(nil)).Elem()
}

func (i *getOverridesGitDetailsPtrType) ToGetOverridesGitDetailsPtrOutput() GetOverridesGitDetailsPtrOutput {
	return i.ToGetOverridesGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getOverridesGitDetailsPtrType) ToGetOverridesGitDetailsPtrOutputWithContext(ctx context.Context) GetOverridesGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOverridesGitDetailsPtrOutput)
}

type GetOverridesGitDetailsOutput struct{ *pulumi.OutputState }

func (GetOverridesGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOverridesGitDetails)(nil)).Elem()
}

func (o GetOverridesGitDetailsOutput) ToGetOverridesGitDetailsOutput() GetOverridesGitDetailsOutput {
	return o
}

func (o GetOverridesGitDetailsOutput) ToGetOverridesGitDetailsOutputWithContext(ctx context.Context) GetOverridesGitDetailsOutput {
	return o
}

func (o GetOverridesGitDetailsOutput) ToGetOverridesGitDetailsPtrOutput() GetOverridesGitDetailsPtrOutput {
	return o.ToGetOverridesGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetOverridesGitDetailsOutput) ToGetOverridesGitDetailsPtrOutputWithContext(ctx context.Context) GetOverridesGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetOverridesGitDetails) *GetOverridesGitDetails {
		return &v
	}).(GetOverridesGitDetailsPtrOutput)
}

// Name of the branch.
func (o GetOverridesGitDetailsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetOverridesGitDetails) string { return v.Branch }).(pulumi.StringOutput)
}

// Load service yaml from fallback branch
func (o GetOverridesGitDetailsOutput) LoadFromCache() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOverridesGitDetails) bool { return v.LoadFromCache }).(pulumi.BoolOutput)
}

// Load service yaml from fallback branch
func (o GetOverridesGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOverridesGitDetails) bool { return v.LoadFromFallbackBranch }).(pulumi.BoolOutput)
}

// Repo name of remote service override
func (o GetOverridesGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOverridesGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

type GetOverridesGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetOverridesGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetOverridesGitDetails)(nil)).Elem()
}

func (o GetOverridesGitDetailsPtrOutput) ToGetOverridesGitDetailsPtrOutput() GetOverridesGitDetailsPtrOutput {
	return o
}

func (o GetOverridesGitDetailsPtrOutput) ToGetOverridesGitDetailsPtrOutputWithContext(ctx context.Context) GetOverridesGitDetailsPtrOutput {
	return o
}

func (o GetOverridesGitDetailsPtrOutput) Elem() GetOverridesGitDetailsOutput {
	return o.ApplyT(func(v *GetOverridesGitDetails) GetOverridesGitDetails {
		if v != nil {
			return *v
		}
		var ret GetOverridesGitDetails
		return ret
	}).(GetOverridesGitDetailsOutput)
}

// Name of the branch.
func (o GetOverridesGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetOverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// Load service yaml from fallback branch
func (o GetOverridesGitDetailsPtrOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetOverridesGitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromCache
	}).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o GetOverridesGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetOverridesGitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Repo name of remote service override
func (o GetOverridesGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetOverridesGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

type GetPermissionsPermission struct {
	// Action performed by the permission
	Action string `pulumi:"action"`
	// The scope levels at which this resource group can be used
	AllowedScopeLevels []string `pulumi:"allowedScopeLevels"`
	// Identifier of the permission
	Identifier string `pulumi:"identifier"`
	// Is included in all roles
	IncludeInAllRoles bool `pulumi:"includeInAllRoles"`
	// Name of the permission
	Name string `pulumi:"name"`
	// Resource type for the given permission
	ResourceType string `pulumi:"resourceType"`
	// Status of the permission
	Status string `pulumi:"status"`
}

// GetPermissionsPermissionInput is an input type that accepts GetPermissionsPermissionArgs and GetPermissionsPermissionOutput values.
// You can construct a concrete instance of `GetPermissionsPermissionInput` via:
//
//	GetPermissionsPermissionArgs{...}
type GetPermissionsPermissionInput interface {
	pulumi.Input

	ToGetPermissionsPermissionOutput() GetPermissionsPermissionOutput
	ToGetPermissionsPermissionOutputWithContext(context.Context) GetPermissionsPermissionOutput
}

type GetPermissionsPermissionArgs struct {
	// Action performed by the permission
	Action pulumi.StringInput `pulumi:"action"`
	// The scope levels at which this resource group can be used
	AllowedScopeLevels pulumi.StringArrayInput `pulumi:"allowedScopeLevels"`
	// Identifier of the permission
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Is included in all roles
	IncludeInAllRoles pulumi.BoolInput `pulumi:"includeInAllRoles"`
	// Name of the permission
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type for the given permission
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Status of the permission
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPermissionsPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsPermission)(nil)).Elem()
}

func (i GetPermissionsPermissionArgs) ToGetPermissionsPermissionOutput() GetPermissionsPermissionOutput {
	return i.ToGetPermissionsPermissionOutputWithContext(context.Background())
}

func (i GetPermissionsPermissionArgs) ToGetPermissionsPermissionOutputWithContext(ctx context.Context) GetPermissionsPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionsPermissionOutput)
}

// GetPermissionsPermissionArrayInput is an input type that accepts GetPermissionsPermissionArray and GetPermissionsPermissionArrayOutput values.
// You can construct a concrete instance of `GetPermissionsPermissionArrayInput` via:
//
//	GetPermissionsPermissionArray{ GetPermissionsPermissionArgs{...} }
type GetPermissionsPermissionArrayInput interface {
	pulumi.Input

	ToGetPermissionsPermissionArrayOutput() GetPermissionsPermissionArrayOutput
	ToGetPermissionsPermissionArrayOutputWithContext(context.Context) GetPermissionsPermissionArrayOutput
}

type GetPermissionsPermissionArray []GetPermissionsPermissionInput

func (GetPermissionsPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionsPermission)(nil)).Elem()
}

func (i GetPermissionsPermissionArray) ToGetPermissionsPermissionArrayOutput() GetPermissionsPermissionArrayOutput {
	return i.ToGetPermissionsPermissionArrayOutputWithContext(context.Background())
}

func (i GetPermissionsPermissionArray) ToGetPermissionsPermissionArrayOutputWithContext(ctx context.Context) GetPermissionsPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionsPermissionArrayOutput)
}

type GetPermissionsPermissionOutput struct{ *pulumi.OutputState }

func (GetPermissionsPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsPermission)(nil)).Elem()
}

func (o GetPermissionsPermissionOutput) ToGetPermissionsPermissionOutput() GetPermissionsPermissionOutput {
	return o
}

func (o GetPermissionsPermissionOutput) ToGetPermissionsPermissionOutputWithContext(ctx context.Context) GetPermissionsPermissionOutput {
	return o
}

// Action performed by the permission
func (o GetPermissionsPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Action }).(pulumi.StringOutput)
}

// The scope levels at which this resource group can be used
func (o GetPermissionsPermissionOutput) AllowedScopeLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPermissionsPermission) []string { return v.AllowedScopeLevels }).(pulumi.StringArrayOutput)
}

// Identifier of the permission
func (o GetPermissionsPermissionOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Identifier }).(pulumi.StringOutput)
}

// Is included in all roles
func (o GetPermissionsPermissionOutput) IncludeInAllRoles() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionsPermission) bool { return v.IncludeInAllRoles }).(pulumi.BoolOutput)
}

// Name of the permission
func (o GetPermissionsPermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type for the given permission
func (o GetPermissionsPermissionOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Status of the permission
func (o GetPermissionsPermissionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Status }).(pulumi.StringOutput)
}

type GetPermissionsPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetPermissionsPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionsPermission)(nil)).Elem()
}

func (o GetPermissionsPermissionArrayOutput) ToGetPermissionsPermissionArrayOutput() GetPermissionsPermissionArrayOutput {
	return o
}

func (o GetPermissionsPermissionArrayOutput) ToGetPermissionsPermissionArrayOutputWithContext(ctx context.Context) GetPermissionsPermissionArrayOutput {
	return o
}

func (o GetPermissionsPermissionArrayOutput) Index(i pulumi.IntInput) GetPermissionsPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPermissionsPermission {
		return vs[0].([]GetPermissionsPermission)[vs[1].(int)]
	}).(GetPermissionsPermissionOutput)
}

type GetPipelineFiltersFilterProperty struct {
	// description of the pipline filter.
	Description string `pulumi:"description"`
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType string `pulumi:"filterType"`
	// module properties of the pipline filter.
	ModuleProperties GetPipelineFiltersFilterPropertyModuleProperties `pulumi:"moduleProperties"`
	// Name of the pipeline filter.
	Name string `pulumi:"name"`
	// Pipeline identifiers to filter on.
	PipelineIdentifiers []string `pulumi:"pipelineIdentifiers"`
	// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
	PipelineTags []map[string]string `pulumi:"pipelineTags"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// GetPipelineFiltersFilterPropertyInput is an input type that accepts GetPipelineFiltersFilterPropertyArgs and GetPipelineFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyInput` via:
//
//	GetPipelineFiltersFilterPropertyArgs{...}
type GetPipelineFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyOutput() GetPipelineFiltersFilterPropertyOutput
	ToGetPipelineFiltersFilterPropertyOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyOutput
}

type GetPipelineFiltersFilterPropertyArgs struct {
	// description of the pipline filter.
	Description pulumi.StringInput `pulumi:"description"`
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// module properties of the pipline filter.
	ModuleProperties GetPipelineFiltersFilterPropertyModulePropertiesInput `pulumi:"moduleProperties"`
	// Name of the pipeline filter.
	Name pulumi.StringInput `pulumi:"name"`
	// Pipeline identifiers to filter on.
	PipelineIdentifiers pulumi.StringArrayInput `pulumi:"pipelineIdentifiers"`
	// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
	PipelineTags pulumi.StringMapArrayInput `pulumi:"pipelineTags"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetPipelineFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyArgs) ToGetPipelineFiltersFilterPropertyOutput() GetPipelineFiltersFilterPropertyOutput {
	return i.ToGetPipelineFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyArgs) ToGetPipelineFiltersFilterPropertyOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyOutput)
}

// GetPipelineFiltersFilterPropertyArrayInput is an input type that accepts GetPipelineFiltersFilterPropertyArray and GetPipelineFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyArrayInput` via:
//
//	GetPipelineFiltersFilterPropertyArray{ GetPipelineFiltersFilterPropertyArgs{...} }
type GetPipelineFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyArrayOutput() GetPipelineFiltersFilterPropertyArrayOutput
	ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyArrayOutput
}

type GetPipelineFiltersFilterPropertyArray []GetPipelineFiltersFilterPropertyInput

func (GetPipelineFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyArray) ToGetPipelineFiltersFilterPropertyArrayOutput() GetPipelineFiltersFilterPropertyArrayOutput {
	return i.ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyArray) ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyArrayOutput)
}

type GetPipelineFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyOutput) ToGetPipelineFiltersFilterPropertyOutput() GetPipelineFiltersFilterPropertyOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyOutput) ToGetPipelineFiltersFilterPropertyOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyOutput {
	return o
}

// description of the pipline filter.
func (o GetPipelineFiltersFilterPropertyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) string { return v.Description }).(pulumi.StringOutput)
}

// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
func (o GetPipelineFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

// module properties of the pipline filter.
func (o GetPipelineFiltersFilterPropertyOutput) ModuleProperties() GetPipelineFiltersFilterPropertyModulePropertiesOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) GetPipelineFiltersFilterPropertyModuleProperties {
		return v.ModuleProperties
	}).(GetPipelineFiltersFilterPropertyModulePropertiesOutput)
}

// Name of the pipeline filter.
func (o GetPipelineFiltersFilterPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) string { return v.Name }).(pulumi.StringOutput)
}

// Pipeline identifiers to filter on.
func (o GetPipelineFiltersFilterPropertyOutput) PipelineIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) []string { return v.PipelineIdentifiers }).(pulumi.StringArrayOutput)
}

// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
func (o GetPipelineFiltersFilterPropertyOutput) PipelineTags() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) []map[string]string { return v.PipelineTags }).(pulumi.StringMapArrayOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o GetPipelineFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetPipelineFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyArrayOutput) ToGetPipelineFiltersFilterPropertyArrayOutput() GetPipelineFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyArrayOutput) ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetPipelineFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineFiltersFilterProperty {
		return vs[0].([]GetPipelineFiltersFilterProperty)[vs[1].(int)]
	}).(GetPipelineFiltersFilterPropertyOutput)
}

type GetPipelineFiltersFilterPropertyModuleProperties struct {
	// CD related properties to be filtered on.
	Cd GetPipelineFiltersFilterPropertyModulePropertiesCd `pulumi:"cd"`
	// CI related properties to be filtered on.
	Ci GetPipelineFiltersFilterPropertyModulePropertiesCi `pulumi:"ci"`
}

// GetPipelineFiltersFilterPropertyModulePropertiesInput is an input type that accepts GetPipelineFiltersFilterPropertyModulePropertiesArgs and GetPipelineFiltersFilterPropertyModulePropertiesOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyModulePropertiesInput` via:
//
//	GetPipelineFiltersFilterPropertyModulePropertiesArgs{...}
type GetPipelineFiltersFilterPropertyModulePropertiesInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyModulePropertiesOutput() GetPipelineFiltersFilterPropertyModulePropertiesOutput
	ToGetPipelineFiltersFilterPropertyModulePropertiesOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyModulePropertiesOutput
}

type GetPipelineFiltersFilterPropertyModulePropertiesArgs struct {
	// CD related properties to be filtered on.
	Cd GetPipelineFiltersFilterPropertyModulePropertiesCdInput `pulumi:"cd"`
	// CI related properties to be filtered on.
	Ci GetPipelineFiltersFilterPropertyModulePropertiesCiInput `pulumi:"ci"`
}

func (GetPipelineFiltersFilterPropertyModulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModuleProperties)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesOutput() GetPipelineFiltersFilterPropertyModulePropertiesOutput {
	return i.ToGetPipelineFiltersFilterPropertyModulePropertiesOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyModulePropertiesOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyModulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModuleProperties)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesOutput() GetPipelineFiltersFilterPropertyModulePropertiesOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesOutput {
	return o
}

// CD related properties to be filtered on.
func (o GetPipelineFiltersFilterPropertyModulePropertiesOutput) Cd() GetPipelineFiltersFilterPropertyModulePropertiesCdOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModuleProperties) GetPipelineFiltersFilterPropertyModulePropertiesCd {
		return v.Cd
	}).(GetPipelineFiltersFilterPropertyModulePropertiesCdOutput)
}

// CI related properties to be filtered on.
func (o GetPipelineFiltersFilterPropertyModulePropertiesOutput) Ci() GetPipelineFiltersFilterPropertyModulePropertiesCiOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModuleProperties) GetPipelineFiltersFilterPropertyModulePropertiesCi {
		return v.Ci
	}).(GetPipelineFiltersFilterPropertyModulePropertiesCiOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCd struct {
	// Artifact display names of the CD pipeline.
	ArtifactDisplayNames []string `pulumi:"artifactDisplayNames"`
	// Deployment type of the CD pipeline, eg. Kubernetes
	DeploymentTypes string `pulumi:"deploymentTypes"`
	// Environment names of the CD pipeline.
	EnvironmentNames []string `pulumi:"environmentNames"`
	// Service identifiers of the CD pipeline.
	ServiceIdentifiers []string `pulumi:"serviceIdentifiers"`
	// Service names of the CD pipeline.
	ServiceNames []string `pulumi:"serviceNames"`
}

// GetPipelineFiltersFilterPropertyModulePropertiesCdInput is an input type that accepts GetPipelineFiltersFilterPropertyModulePropertiesCdArgs and GetPipelineFiltersFilterPropertyModulePropertiesCdOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyModulePropertiesCdInput` via:
//
//	GetPipelineFiltersFilterPropertyModulePropertiesCdArgs{...}
type GetPipelineFiltersFilterPropertyModulePropertiesCdInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutput() GetPipelineFiltersFilterPropertyModulePropertiesCdOutput
	ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCdOutput
}

type GetPipelineFiltersFilterPropertyModulePropertiesCdArgs struct {
	// Artifact display names of the CD pipeline.
	ArtifactDisplayNames pulumi.StringArrayInput `pulumi:"artifactDisplayNames"`
	// Deployment type of the CD pipeline, eg. Kubernetes
	DeploymentTypes pulumi.StringInput `pulumi:"deploymentTypes"`
	// Environment names of the CD pipeline.
	EnvironmentNames pulumi.StringArrayInput `pulumi:"environmentNames"`
	// Service identifiers of the CD pipeline.
	ServiceIdentifiers pulumi.StringArrayInput `pulumi:"serviceIdentifiers"`
	// Service names of the CD pipeline.
	ServiceNames pulumi.StringArrayInput `pulumi:"serviceNames"`
}

func (GetPipelineFiltersFilterPropertyModulePropertiesCdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCd)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCdArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutput() GetPipelineFiltersFilterPropertyModulePropertiesCdOutput {
	return i.ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCdArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyModulePropertiesCdOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCdOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCd)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutput() GetPipelineFiltersFilterPropertyModulePropertiesCdOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCdOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCdOutput {
	return o
}

// Artifact display names of the CD pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) ArtifactDisplayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCd) []string { return v.ArtifactDisplayNames }).(pulumi.StringArrayOutput)
}

// Deployment type of the CD pipeline, eg. Kubernetes
func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) DeploymentTypes() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCd) string { return v.DeploymentTypes }).(pulumi.StringOutput)
}

// Environment names of the CD pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) EnvironmentNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCd) []string { return v.EnvironmentNames }).(pulumi.StringArrayOutput)
}

// Service identifiers of the CD pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) ServiceIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCd) []string { return v.ServiceIdentifiers }).(pulumi.StringArrayOutput)
}

// Service names of the CD pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCdOutput) ServiceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCd) []string { return v.ServiceNames }).(pulumi.StringArrayOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCi struct {
	// Branch which was used while building.
	Branch string `pulumi:"branch"`
	// Build type of the pipeline. Possible values: branch.
	BuildType string `pulumi:"buildType"`
	// CI execution info for the pipeline.
	CiExecutionInfo GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo `pulumi:"ciExecutionInfo"`
	// name of the repository used in the pipeline.
	RepoNames string `pulumi:"repoNames"`
	// Tags to associate with the CI pipeline resource.
	Tag string `pulumi:"tag"`
}

// GetPipelineFiltersFilterPropertyModulePropertiesCiInput is an input type that accepts GetPipelineFiltersFilterPropertyModulePropertiesCiArgs and GetPipelineFiltersFilterPropertyModulePropertiesCiOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyModulePropertiesCiInput` via:
//
//	GetPipelineFiltersFilterPropertyModulePropertiesCiArgs{...}
type GetPipelineFiltersFilterPropertyModulePropertiesCiInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiOutput
	ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiOutput
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiArgs struct {
	// Branch which was used while building.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Build type of the pipeline. Possible values: branch.
	BuildType pulumi.StringInput `pulumi:"buildType"`
	// CI execution info for the pipeline.
	CiExecutionInfo GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoInput `pulumi:"ciExecutionInfo"`
	// name of the repository used in the pipeline.
	RepoNames pulumi.StringInput `pulumi:"repoNames"`
	// Tags to associate with the CI pipeline resource.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetPipelineFiltersFilterPropertyModulePropertiesCiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCi)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCiArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiOutput {
	return i.ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCiArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyModulePropertiesCiOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCi)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCiOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiOutput {
	return o
}

// Branch which was used while building.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCi) string { return v.Branch }).(pulumi.StringOutput)
}

// Build type of the pipeline. Possible values: branch.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) BuildType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCi) string { return v.BuildType }).(pulumi.StringOutput)
}

// CI execution info for the pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) CiExecutionInfo() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCi) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo {
		return v.CiExecutionInfo
	}).(GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput)
}

// name of the repository used in the pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) RepoNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCi) string { return v.RepoNames }).(pulumi.StringOutput)
}

// Tags to associate with the CI pipeline resource.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCi) string { return v.Tag }).(pulumi.StringOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo struct {
	// Event for the ci execution, Possible values: pullRequest.
	Event string `pulumi:"event"`
	// The pull request details of the CI pipeline.
	PullRequest GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest `pulumi:"pullRequest"`
}

// GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoInput is an input type that accepts GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs and GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoInput` via:
//
//	GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs{...}
type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput
	ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs struct {
	// Event for the ci execution, Possible values: pullRequest.
	Event pulumi.StringInput `pulumi:"event"`
	// The pull request details of the CI pipeline.
	PullRequest GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestInput `pulumi:"pullRequest"`
}

func (GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput {
	return i.ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput {
	return o
}

// Event for the ci execution, Possible values: pullRequest.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo) string { return v.Event }).(pulumi.StringOutput)
}

// The pull request details of the CI pipeline.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput) PullRequest() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfo) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest {
		return v.PullRequest
	}).(GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest struct {
	// Source branch of the pull request.
	SourceBranch string `pulumi:"sourceBranch"`
	// Target branch of the pull request.
	TargetBranch string `pulumi:"targetBranch"`
}

// GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestInput is an input type that accepts GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs and GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestInput` via:
//
//	GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs{...}
type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput
	ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs struct {
	// Source branch of the pull request.
	SourceBranch pulumi.StringInput `pulumi:"sourceBranch"`
	// Target branch of the pull request.
	TargetBranch pulumi.StringInput `pulumi:"targetBranch"`
}

func (GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return i.ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput)
}

type GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput() GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput) ToGetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput {
	return o
}

// Source branch of the pull request.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput) SourceBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest) string {
		return v.SourceBranch
	}).(pulumi.StringOutput)
}

// Target branch of the pull request.
func (o GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput) TargetBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequest) string {
		return v.TargetBranch
	}).(pulumi.StringOutput)
}

type GetPipelineGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType string `pulumi:"storeType"`
}

// GetPipelineGitDetailsInput is an input type that accepts GetPipelineGitDetailsArgs and GetPipelineGitDetailsOutput values.
// You can construct a concrete instance of `GetPipelineGitDetailsInput` via:
//
//	GetPipelineGitDetailsArgs{...}
type GetPipelineGitDetailsInput interface {
	pulumi.Input

	ToGetPipelineGitDetailsOutput() GetPipelineGitDetailsOutput
	ToGetPipelineGitDetailsOutputWithContext(context.Context) GetPipelineGitDetailsOutput
}

type GetPipelineGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringInput `pulumi:"storeType"`
}

func (GetPipelineGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineGitDetails)(nil)).Elem()
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsOutput() GetPipelineGitDetailsOutput {
	return i.ToGetPipelineGitDetailsOutputWithContext(context.Background())
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsOutputWithContext(ctx context.Context) GetPipelineGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineGitDetailsOutput)
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return i.ToGetPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineGitDetailsOutput).ToGetPipelineGitDetailsPtrOutputWithContext(ctx)
}

// GetPipelineGitDetailsPtrInput is an input type that accepts GetPipelineGitDetailsArgs, GetPipelineGitDetailsPtr and GetPipelineGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetPipelineGitDetailsPtrInput` via:
//
//	        GetPipelineGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetPipelineGitDetailsPtrInput interface {
	pulumi.Input

	ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput
	ToGetPipelineGitDetailsPtrOutputWithContext(context.Context) GetPipelineGitDetailsPtrOutput
}

type getPipelineGitDetailsPtrType GetPipelineGitDetailsArgs

func GetPipelineGitDetailsPtr(v *GetPipelineGitDetailsArgs) GetPipelineGitDetailsPtrInput {
	return (*getPipelineGitDetailsPtrType)(v)
}

func (*getPipelineGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPipelineGitDetails)(nil)).Elem()
}

func (i *getPipelineGitDetailsPtrType) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return i.ToGetPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getPipelineGitDetailsPtrType) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineGitDetailsPtrOutput)
}

type GetPipelineGitDetailsOutput struct{ *pulumi.OutputState }

func (GetPipelineGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineGitDetails)(nil)).Elem()
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsOutput() GetPipelineGitDetailsOutput {
	return o
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsOutputWithContext(ctx context.Context) GetPipelineGitDetailsOutput {
	return o
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return o.ToGetPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPipelineGitDetails) *GetPipelineGitDetails {
		return &v
	}).(GetPipelineGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetPipelineGitDetailsOutput) BaseBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.BaseBranch }).(pulumi.StringOutput)
}

// Name of the branch.
func (o GetPipelineGitDetailsOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.BranchName }).(pulumi.StringOutput)
}

// Commit message used for the merge commit.
func (o GetPipelineGitDetailsOutput) CommitMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.CommitMessage }).(pulumi.StringOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetPipelineGitDetailsOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// File path of the Entity in the repository.
func (o GetPipelineGitDetailsOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.FilePath }).(pulumi.StringOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsOutput) LastCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.LastCommitId }).(pulumi.StringOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsOutput) LastObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.LastObjectId }).(pulumi.StringOutput)
}

// Name of the repository.
func (o GetPipelineGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetPipelineGitDetailsOutput) StoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.StoreType }).(pulumi.StringOutput)
}

type GetPipelineGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetPipelineGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPipelineGitDetails)(nil)).Elem()
}

func (o GetPipelineGitDetailsPtrOutput) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return o
}

func (o GetPipelineGitDetailsPtrOutput) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return o
}

func (o GetPipelineGitDetailsPtrOutput) Elem() GetPipelineGitDetailsOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) GetPipelineGitDetails {
		if v != nil {
			return *v
		}
		var ret GetPipelineGitDetails
		return ret
	}).(GetPipelineGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetPipelineGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o GetPipelineGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o GetPipelineGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetPipelineGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetPipelineGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o GetPipelineGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetPipelineGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StoreType
	}).(pulumi.StringPtrOutput)
}

type GetPipelineListPipeline struct {
	Identifier string `pulumi:"identifier"`
	Name       string `pulumi:"name"`
}

// GetPipelineListPipelineInput is an input type that accepts GetPipelineListPipelineArgs and GetPipelineListPipelineOutput values.
// You can construct a concrete instance of `GetPipelineListPipelineInput` via:
//
//	GetPipelineListPipelineArgs{...}
type GetPipelineListPipelineInput interface {
	pulumi.Input

	ToGetPipelineListPipelineOutput() GetPipelineListPipelineOutput
	ToGetPipelineListPipelineOutputWithContext(context.Context) GetPipelineListPipelineOutput
}

type GetPipelineListPipelineArgs struct {
	Identifier pulumi.StringInput `pulumi:"identifier"`
	Name       pulumi.StringInput `pulumi:"name"`
}

func (GetPipelineListPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineListPipeline)(nil)).Elem()
}

func (i GetPipelineListPipelineArgs) ToGetPipelineListPipelineOutput() GetPipelineListPipelineOutput {
	return i.ToGetPipelineListPipelineOutputWithContext(context.Background())
}

func (i GetPipelineListPipelineArgs) ToGetPipelineListPipelineOutputWithContext(ctx context.Context) GetPipelineListPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineListPipelineOutput)
}

// GetPipelineListPipelineArrayInput is an input type that accepts GetPipelineListPipelineArray and GetPipelineListPipelineArrayOutput values.
// You can construct a concrete instance of `GetPipelineListPipelineArrayInput` via:
//
//	GetPipelineListPipelineArray{ GetPipelineListPipelineArgs{...} }
type GetPipelineListPipelineArrayInput interface {
	pulumi.Input

	ToGetPipelineListPipelineArrayOutput() GetPipelineListPipelineArrayOutput
	ToGetPipelineListPipelineArrayOutputWithContext(context.Context) GetPipelineListPipelineArrayOutput
}

type GetPipelineListPipelineArray []GetPipelineListPipelineInput

func (GetPipelineListPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineListPipeline)(nil)).Elem()
}

func (i GetPipelineListPipelineArray) ToGetPipelineListPipelineArrayOutput() GetPipelineListPipelineArrayOutput {
	return i.ToGetPipelineListPipelineArrayOutputWithContext(context.Background())
}

func (i GetPipelineListPipelineArray) ToGetPipelineListPipelineArrayOutputWithContext(ctx context.Context) GetPipelineListPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineListPipelineArrayOutput)
}

type GetPipelineListPipelineOutput struct{ *pulumi.OutputState }

func (GetPipelineListPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineListPipeline)(nil)).Elem()
}

func (o GetPipelineListPipelineOutput) ToGetPipelineListPipelineOutput() GetPipelineListPipelineOutput {
	return o
}

func (o GetPipelineListPipelineOutput) ToGetPipelineListPipelineOutputWithContext(ctx context.Context) GetPipelineListPipelineOutput {
	return o
}

func (o GetPipelineListPipelineOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineListPipeline) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o GetPipelineListPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineListPipeline) string { return v.Name }).(pulumi.StringOutput)
}

type GetPipelineListPipelineArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineListPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineListPipeline)(nil)).Elem()
}

func (o GetPipelineListPipelineArrayOutput) ToGetPipelineListPipelineArrayOutput() GetPipelineListPipelineArrayOutput {
	return o
}

func (o GetPipelineListPipelineArrayOutput) ToGetPipelineListPipelineArrayOutputWithContext(ctx context.Context) GetPipelineListPipelineArrayOutput {
	return o
}

func (o GetPipelineListPipelineArrayOutput) Index(i pulumi.IntInput) GetPipelineListPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineListPipeline {
		return vs[0].([]GetPipelineListPipeline)[vs[1].(int)]
	}).(GetPipelineListPipelineOutput)
}

type GetPolicySetPolicy struct {
	// Account Identifier of the account
	Identifier string `pulumi:"identifier"`
	// Policy failure response - 'warning' for continuation, 'error' for exit
	Severity string `pulumi:"severity"`
}

// GetPolicySetPolicyInput is an input type that accepts GetPolicySetPolicyArgs and GetPolicySetPolicyOutput values.
// You can construct a concrete instance of `GetPolicySetPolicyInput` via:
//
//	GetPolicySetPolicyArgs{...}
type GetPolicySetPolicyInput interface {
	pulumi.Input

	ToGetPolicySetPolicyOutput() GetPolicySetPolicyOutput
	ToGetPolicySetPolicyOutputWithContext(context.Context) GetPolicySetPolicyOutput
}

type GetPolicySetPolicyArgs struct {
	// Account Identifier of the account
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Policy failure response - 'warning' for continuation, 'error' for exit
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (GetPolicySetPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetPolicy)(nil)).Elem()
}

func (i GetPolicySetPolicyArgs) ToGetPolicySetPolicyOutput() GetPolicySetPolicyOutput {
	return i.ToGetPolicySetPolicyOutputWithContext(context.Background())
}

func (i GetPolicySetPolicyArgs) ToGetPolicySetPolicyOutputWithContext(ctx context.Context) GetPolicySetPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetPolicyOutput)
}

// GetPolicySetPolicyArrayInput is an input type that accepts GetPolicySetPolicyArray and GetPolicySetPolicyArrayOutput values.
// You can construct a concrete instance of `GetPolicySetPolicyArrayInput` via:
//
//	GetPolicySetPolicyArray{ GetPolicySetPolicyArgs{...} }
type GetPolicySetPolicyArrayInput interface {
	pulumi.Input

	ToGetPolicySetPolicyArrayOutput() GetPolicySetPolicyArrayOutput
	ToGetPolicySetPolicyArrayOutputWithContext(context.Context) GetPolicySetPolicyArrayOutput
}

type GetPolicySetPolicyArray []GetPolicySetPolicyInput

func (GetPolicySetPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetPolicy)(nil)).Elem()
}

func (i GetPolicySetPolicyArray) ToGetPolicySetPolicyArrayOutput() GetPolicySetPolicyArrayOutput {
	return i.ToGetPolicySetPolicyArrayOutputWithContext(context.Background())
}

func (i GetPolicySetPolicyArray) ToGetPolicySetPolicyArrayOutputWithContext(ctx context.Context) GetPolicySetPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetPolicyArrayOutput)
}

type GetPolicySetPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicySetPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetPolicy)(nil)).Elem()
}

func (o GetPolicySetPolicyOutput) ToGetPolicySetPolicyOutput() GetPolicySetPolicyOutput {
	return o
}

func (o GetPolicySetPolicyOutput) ToGetPolicySetPolicyOutputWithContext(ctx context.Context) GetPolicySetPolicyOutput {
	return o
}

// Account Identifier of the account
func (o GetPolicySetPolicyOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetPolicy) string { return v.Identifier }).(pulumi.StringOutput)
}

// Policy failure response - 'warning' for continuation, 'error' for exit
func (o GetPolicySetPolicyOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetPolicy) string { return v.Severity }).(pulumi.StringOutput)
}

type GetPolicySetPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySetPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetPolicy)(nil)).Elem()
}

func (o GetPolicySetPolicyArrayOutput) ToGetPolicySetPolicyArrayOutput() GetPolicySetPolicyArrayOutput {
	return o
}

func (o GetPolicySetPolicyArrayOutput) ToGetPolicySetPolicyArrayOutputWithContext(ctx context.Context) GetPolicySetPolicyArrayOutput {
	return o
}

func (o GetPolicySetPolicyArrayOutput) Index(i pulumi.IntInput) GetPolicySetPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySetPolicy {
		return vs[0].([]GetPolicySetPolicy)[vs[1].(int)]
	}).(GetPolicySetPolicyOutput)
}

type GetProjectListProject struct {
	Identifier string `pulumi:"identifier"`
	Name       string `pulumi:"name"`
}

// GetProjectListProjectInput is an input type that accepts GetProjectListProjectArgs and GetProjectListProjectOutput values.
// You can construct a concrete instance of `GetProjectListProjectInput` via:
//
//	GetProjectListProjectArgs{...}
type GetProjectListProjectInput interface {
	pulumi.Input

	ToGetProjectListProjectOutput() GetProjectListProjectOutput
	ToGetProjectListProjectOutputWithContext(context.Context) GetProjectListProjectOutput
}

type GetProjectListProjectArgs struct {
	Identifier pulumi.StringInput `pulumi:"identifier"`
	Name       pulumi.StringInput `pulumi:"name"`
}

func (GetProjectListProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectListProject)(nil)).Elem()
}

func (i GetProjectListProjectArgs) ToGetProjectListProjectOutput() GetProjectListProjectOutput {
	return i.ToGetProjectListProjectOutputWithContext(context.Background())
}

func (i GetProjectListProjectArgs) ToGetProjectListProjectOutputWithContext(ctx context.Context) GetProjectListProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectListProjectOutput)
}

// GetProjectListProjectArrayInput is an input type that accepts GetProjectListProjectArray and GetProjectListProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectListProjectArrayInput` via:
//
//	GetProjectListProjectArray{ GetProjectListProjectArgs{...} }
type GetProjectListProjectArrayInput interface {
	pulumi.Input

	ToGetProjectListProjectArrayOutput() GetProjectListProjectArrayOutput
	ToGetProjectListProjectArrayOutputWithContext(context.Context) GetProjectListProjectArrayOutput
}

type GetProjectListProjectArray []GetProjectListProjectInput

func (GetProjectListProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectListProject)(nil)).Elem()
}

func (i GetProjectListProjectArray) ToGetProjectListProjectArrayOutput() GetProjectListProjectArrayOutput {
	return i.ToGetProjectListProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectListProjectArray) ToGetProjectListProjectArrayOutputWithContext(ctx context.Context) GetProjectListProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectListProjectArrayOutput)
}

type GetProjectListProjectOutput struct{ *pulumi.OutputState }

func (GetProjectListProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectListProject)(nil)).Elem()
}

func (o GetProjectListProjectOutput) ToGetProjectListProjectOutput() GetProjectListProjectOutput {
	return o
}

func (o GetProjectListProjectOutput) ToGetProjectListProjectOutputWithContext(ctx context.Context) GetProjectListProjectOutput {
	return o
}

func (o GetProjectListProjectOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectListProject) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o GetProjectListProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectListProject) string { return v.Name }).(pulumi.StringOutput)
}

type GetProjectListProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectListProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectListProject)(nil)).Elem()
}

func (o GetProjectListProjectArrayOutput) ToGetProjectListProjectArrayOutput() GetProjectListProjectArrayOutput {
	return o
}

func (o GetProjectListProjectArrayOutput) ToGetProjectListProjectArrayOutputWithContext(ctx context.Context) GetProjectListProjectArrayOutput {
	return o
}

func (o GetProjectListProjectArrayOutput) Index(i pulumi.IntInput) GetProjectListProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectListProject {
		return vs[0].([]GetProjectListProject)[vs[1].(int)]
	}).(GetProjectListProjectOutput)
}

type GetPrometheusConnectorHeader struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef string `pulumi:"encryptedValueRef"`
	// Key.
	Key string `pulumi:"key"`
	// Value.
	Value string `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted bool `pulumi:"valueEncrypted"`
}

// GetPrometheusConnectorHeaderInput is an input type that accepts GetPrometheusConnectorHeaderArgs and GetPrometheusConnectorHeaderOutput values.
// You can construct a concrete instance of `GetPrometheusConnectorHeaderInput` via:
//
//	GetPrometheusConnectorHeaderArgs{...}
type GetPrometheusConnectorHeaderInput interface {
	pulumi.Input

	ToGetPrometheusConnectorHeaderOutput() GetPrometheusConnectorHeaderOutput
	ToGetPrometheusConnectorHeaderOutputWithContext(context.Context) GetPrometheusConnectorHeaderOutput
}

type GetPrometheusConnectorHeaderArgs struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef pulumi.StringInput `pulumi:"encryptedValueRef"`
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Value.
	Value pulumi.StringInput `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted pulumi.BoolInput `pulumi:"valueEncrypted"`
}

func (GetPrometheusConnectorHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheusConnectorHeader)(nil)).Elem()
}

func (i GetPrometheusConnectorHeaderArgs) ToGetPrometheusConnectorHeaderOutput() GetPrometheusConnectorHeaderOutput {
	return i.ToGetPrometheusConnectorHeaderOutputWithContext(context.Background())
}

func (i GetPrometheusConnectorHeaderArgs) ToGetPrometheusConnectorHeaderOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrometheusConnectorHeaderOutput)
}

// GetPrometheusConnectorHeaderArrayInput is an input type that accepts GetPrometheusConnectorHeaderArray and GetPrometheusConnectorHeaderArrayOutput values.
// You can construct a concrete instance of `GetPrometheusConnectorHeaderArrayInput` via:
//
//	GetPrometheusConnectorHeaderArray{ GetPrometheusConnectorHeaderArgs{...} }
type GetPrometheusConnectorHeaderArrayInput interface {
	pulumi.Input

	ToGetPrometheusConnectorHeaderArrayOutput() GetPrometheusConnectorHeaderArrayOutput
	ToGetPrometheusConnectorHeaderArrayOutputWithContext(context.Context) GetPrometheusConnectorHeaderArrayOutput
}

type GetPrometheusConnectorHeaderArray []GetPrometheusConnectorHeaderInput

func (GetPrometheusConnectorHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrometheusConnectorHeader)(nil)).Elem()
}

func (i GetPrometheusConnectorHeaderArray) ToGetPrometheusConnectorHeaderArrayOutput() GetPrometheusConnectorHeaderArrayOutput {
	return i.ToGetPrometheusConnectorHeaderArrayOutputWithContext(context.Background())
}

func (i GetPrometheusConnectorHeaderArray) ToGetPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrometheusConnectorHeaderArrayOutput)
}

type GetPrometheusConnectorHeaderOutput struct{ *pulumi.OutputState }

func (GetPrometheusConnectorHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheusConnectorHeader)(nil)).Elem()
}

func (o GetPrometheusConnectorHeaderOutput) ToGetPrometheusConnectorHeaderOutput() GetPrometheusConnectorHeaderOutput {
	return o
}

func (o GetPrometheusConnectorHeaderOutput) ToGetPrometheusConnectorHeaderOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderOutput {
	return o
}

// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetPrometheusConnectorHeaderOutput) EncryptedValueRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) string { return v.EncryptedValueRef }).(pulumi.StringOutput)
}

// Key.
func (o GetPrometheusConnectorHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) string { return v.Key }).(pulumi.StringOutput)
}

// Value.
func (o GetPrometheusConnectorHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) string { return v.Value }).(pulumi.StringOutput)
}

// Encrypted value.
func (o GetPrometheusConnectorHeaderOutput) ValueEncrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) bool { return v.ValueEncrypted }).(pulumi.BoolOutput)
}

type GetPrometheusConnectorHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetPrometheusConnectorHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrometheusConnectorHeader)(nil)).Elem()
}

func (o GetPrometheusConnectorHeaderArrayOutput) ToGetPrometheusConnectorHeaderArrayOutput() GetPrometheusConnectorHeaderArrayOutput {
	return o
}

func (o GetPrometheusConnectorHeaderArrayOutput) ToGetPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderArrayOutput {
	return o
}

func (o GetPrometheusConnectorHeaderArrayOutput) Index(i pulumi.IntInput) GetPrometheusConnectorHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrometheusConnectorHeader {
		return vs[0].([]GetPrometheusConnectorHeader)[vs[1].(int)]
	}).(GetPrometheusConnectorHeaderOutput)
}

type GetRepoRuleBranchBypass struct {
	// Allow users with repository edit permission to bypass.
	RepoOwners *bool `pulumi:"repoOwners"`
	// List of user ids with who can bypass.
	UserIds []string `pulumi:"userIds"`
}

// GetRepoRuleBranchBypassInput is an input type that accepts GetRepoRuleBranchBypassArgs and GetRepoRuleBranchBypassOutput values.
// You can construct a concrete instance of `GetRepoRuleBranchBypassInput` via:
//
//	GetRepoRuleBranchBypassArgs{...}
type GetRepoRuleBranchBypassInput interface {
	pulumi.Input

	ToGetRepoRuleBranchBypassOutput() GetRepoRuleBranchBypassOutput
	ToGetRepoRuleBranchBypassOutputWithContext(context.Context) GetRepoRuleBranchBypassOutput
}

type GetRepoRuleBranchBypassArgs struct {
	// Allow users with repository edit permission to bypass.
	RepoOwners pulumi.BoolPtrInput `pulumi:"repoOwners"`
	// List of user ids with who can bypass.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
}

func (GetRepoRuleBranchBypassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoRuleBranchBypass)(nil)).Elem()
}

func (i GetRepoRuleBranchBypassArgs) ToGetRepoRuleBranchBypassOutput() GetRepoRuleBranchBypassOutput {
	return i.ToGetRepoRuleBranchBypassOutputWithContext(context.Background())
}

func (i GetRepoRuleBranchBypassArgs) ToGetRepoRuleBranchBypassOutputWithContext(ctx context.Context) GetRepoRuleBranchBypassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoRuleBranchBypassOutput)
}

// GetRepoRuleBranchBypassArrayInput is an input type that accepts GetRepoRuleBranchBypassArray and GetRepoRuleBranchBypassArrayOutput values.
// You can construct a concrete instance of `GetRepoRuleBranchBypassArrayInput` via:
//
//	GetRepoRuleBranchBypassArray{ GetRepoRuleBranchBypassArgs{...} }
type GetRepoRuleBranchBypassArrayInput interface {
	pulumi.Input

	ToGetRepoRuleBranchBypassArrayOutput() GetRepoRuleBranchBypassArrayOutput
	ToGetRepoRuleBranchBypassArrayOutputWithContext(context.Context) GetRepoRuleBranchBypassArrayOutput
}

type GetRepoRuleBranchBypassArray []GetRepoRuleBranchBypassInput

func (GetRepoRuleBranchBypassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoRuleBranchBypass)(nil)).Elem()
}

func (i GetRepoRuleBranchBypassArray) ToGetRepoRuleBranchBypassArrayOutput() GetRepoRuleBranchBypassArrayOutput {
	return i.ToGetRepoRuleBranchBypassArrayOutputWithContext(context.Background())
}

func (i GetRepoRuleBranchBypassArray) ToGetRepoRuleBranchBypassArrayOutputWithContext(ctx context.Context) GetRepoRuleBranchBypassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoRuleBranchBypassArrayOutput)
}

type GetRepoRuleBranchBypassOutput struct{ *pulumi.OutputState }

func (GetRepoRuleBranchBypassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoRuleBranchBypass)(nil)).Elem()
}

func (o GetRepoRuleBranchBypassOutput) ToGetRepoRuleBranchBypassOutput() GetRepoRuleBranchBypassOutput {
	return o
}

func (o GetRepoRuleBranchBypassOutput) ToGetRepoRuleBranchBypassOutputWithContext(ctx context.Context) GetRepoRuleBranchBypassOutput {
	return o
}

// Allow users with repository edit permission to bypass.
func (o GetRepoRuleBranchBypassOutput) RepoOwners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchBypass) *bool { return v.RepoOwners }).(pulumi.BoolPtrOutput)
}

// List of user ids with who can bypass.
func (o GetRepoRuleBranchBypassOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRepoRuleBranchBypass) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

type GetRepoRuleBranchBypassArrayOutput struct{ *pulumi.OutputState }

func (GetRepoRuleBranchBypassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoRuleBranchBypass)(nil)).Elem()
}

func (o GetRepoRuleBranchBypassArrayOutput) ToGetRepoRuleBranchBypassArrayOutput() GetRepoRuleBranchBypassArrayOutput {
	return o
}

func (o GetRepoRuleBranchBypassArrayOutput) ToGetRepoRuleBranchBypassArrayOutputWithContext(ctx context.Context) GetRepoRuleBranchBypassArrayOutput {
	return o
}

func (o GetRepoRuleBranchBypassArrayOutput) Index(i pulumi.IntInput) GetRepoRuleBranchBypassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepoRuleBranchBypass {
		return vs[0].([]GetRepoRuleBranchBypass)[vs[1].(int)]
	}).(GetRepoRuleBranchBypassOutput)
}

type GetRepoRuleBranchPattern struct {
	// Should rule apply to default branch of the repository.
	DefaultBranch *bool `pulumi:"defaultBranch"`
	// Globstar branch patterns on which rules will NOT be applied.
	Excludes []string `pulumi:"excludes"`
	// Globstar branch patterns on which rules will be applied.
	Includes []string `pulumi:"includes"`
}

// GetRepoRuleBranchPatternInput is an input type that accepts GetRepoRuleBranchPatternArgs and GetRepoRuleBranchPatternOutput values.
// You can construct a concrete instance of `GetRepoRuleBranchPatternInput` via:
//
//	GetRepoRuleBranchPatternArgs{...}
type GetRepoRuleBranchPatternInput interface {
	pulumi.Input

	ToGetRepoRuleBranchPatternOutput() GetRepoRuleBranchPatternOutput
	ToGetRepoRuleBranchPatternOutputWithContext(context.Context) GetRepoRuleBranchPatternOutput
}

type GetRepoRuleBranchPatternArgs struct {
	// Should rule apply to default branch of the repository.
	DefaultBranch pulumi.BoolPtrInput `pulumi:"defaultBranch"`
	// Globstar branch patterns on which rules will NOT be applied.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// Globstar branch patterns on which rules will be applied.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (GetRepoRuleBranchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoRuleBranchPattern)(nil)).Elem()
}

func (i GetRepoRuleBranchPatternArgs) ToGetRepoRuleBranchPatternOutput() GetRepoRuleBranchPatternOutput {
	return i.ToGetRepoRuleBranchPatternOutputWithContext(context.Background())
}

func (i GetRepoRuleBranchPatternArgs) ToGetRepoRuleBranchPatternOutputWithContext(ctx context.Context) GetRepoRuleBranchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoRuleBranchPatternOutput)
}

// GetRepoRuleBranchPatternArrayInput is an input type that accepts GetRepoRuleBranchPatternArray and GetRepoRuleBranchPatternArrayOutput values.
// You can construct a concrete instance of `GetRepoRuleBranchPatternArrayInput` via:
//
//	GetRepoRuleBranchPatternArray{ GetRepoRuleBranchPatternArgs{...} }
type GetRepoRuleBranchPatternArrayInput interface {
	pulumi.Input

	ToGetRepoRuleBranchPatternArrayOutput() GetRepoRuleBranchPatternArrayOutput
	ToGetRepoRuleBranchPatternArrayOutputWithContext(context.Context) GetRepoRuleBranchPatternArrayOutput
}

type GetRepoRuleBranchPatternArray []GetRepoRuleBranchPatternInput

func (GetRepoRuleBranchPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoRuleBranchPattern)(nil)).Elem()
}

func (i GetRepoRuleBranchPatternArray) ToGetRepoRuleBranchPatternArrayOutput() GetRepoRuleBranchPatternArrayOutput {
	return i.ToGetRepoRuleBranchPatternArrayOutputWithContext(context.Background())
}

func (i GetRepoRuleBranchPatternArray) ToGetRepoRuleBranchPatternArrayOutputWithContext(ctx context.Context) GetRepoRuleBranchPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoRuleBranchPatternArrayOutput)
}

type GetRepoRuleBranchPatternOutput struct{ *pulumi.OutputState }

func (GetRepoRuleBranchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoRuleBranchPattern)(nil)).Elem()
}

func (o GetRepoRuleBranchPatternOutput) ToGetRepoRuleBranchPatternOutput() GetRepoRuleBranchPatternOutput {
	return o
}

func (o GetRepoRuleBranchPatternOutput) ToGetRepoRuleBranchPatternOutputWithContext(ctx context.Context) GetRepoRuleBranchPatternOutput {
	return o
}

// Should rule apply to default branch of the repository.
func (o GetRepoRuleBranchPatternOutput) DefaultBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPattern) *bool { return v.DefaultBranch }).(pulumi.BoolPtrOutput)
}

// Globstar branch patterns on which rules will NOT be applied.
func (o GetRepoRuleBranchPatternOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPattern) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// Globstar branch patterns on which rules will be applied.
func (o GetRepoRuleBranchPatternOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPattern) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type GetRepoRuleBranchPatternArrayOutput struct{ *pulumi.OutputState }

func (GetRepoRuleBranchPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoRuleBranchPattern)(nil)).Elem()
}

func (o GetRepoRuleBranchPatternArrayOutput) ToGetRepoRuleBranchPatternArrayOutput() GetRepoRuleBranchPatternArrayOutput {
	return o
}

func (o GetRepoRuleBranchPatternArrayOutput) ToGetRepoRuleBranchPatternArrayOutputWithContext(ctx context.Context) GetRepoRuleBranchPatternArrayOutput {
	return o
}

func (o GetRepoRuleBranchPatternArrayOutput) Index(i pulumi.IntInput) GetRepoRuleBranchPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepoRuleBranchPattern {
		return vs[0].([]GetRepoRuleBranchPattern)[vs[1].(int)]
	}).(GetRepoRuleBranchPatternOutput)
}

type GetRepoRuleBranchPolicy struct {
	// Limit which merge strategies are available to merge a pull request(Any of squash, rebase, merge).
	AllowMergeStrategies []string `pulumi:"allowMergeStrategies"`
	// Only allow users with bypass permission to create matching branches.
	BlockBranchCreation *bool `pulumi:"blockBranchCreation"`
	// Only allow users with bypass permission to delete matching branches.
	BlockBranchDeletion *bool `pulumi:"blockBranchDeletion"`
	// Automatically delete the source branch of a pull request after it is merged.
	DeleteBranchOnMerge *bool `pulumi:"deleteBranchOnMerge"`
	// Require approval on pull requests from one reviewer for each codeowner rule.
	RequireCodeOwners *bool `pulumi:"requireCodeOwners"`
	// Require re-approval when there are new changes in the pull request.
	RequireLatestCommitApproval *bool `pulumi:"requireLatestCommitApproval"`
	// Require approval on pull requests from a minimum number of reviewers.
	RequireMinimumApprovalCount *int `pulumi:"requireMinimumApprovalCount"`
	// Require all request for changes have been resolved.
	RequireNoChangeRequest *bool `pulumi:"requireNoChangeRequest"`
	// Do not allow any changes to matching branches without a pull request.
	RequirePullRequest *bool `pulumi:"requirePullRequest"`
	// All comments on a pull request must be resolved before it can be merged.
	RequireResolveAllComments *bool `pulumi:"requireResolveAllComments"`
	// Selected status checks must pass before a pull request can be merged.
	RequireStatusChecks []string `pulumi:"requireStatusChecks"`
}

// GetRepoRuleBranchPolicyInput is an input type that accepts GetRepoRuleBranchPolicyArgs and GetRepoRuleBranchPolicyOutput values.
// You can construct a concrete instance of `GetRepoRuleBranchPolicyInput` via:
//
//	GetRepoRuleBranchPolicyArgs{...}
type GetRepoRuleBranchPolicyInput interface {
	pulumi.Input

	ToGetRepoRuleBranchPolicyOutput() GetRepoRuleBranchPolicyOutput
	ToGetRepoRuleBranchPolicyOutputWithContext(context.Context) GetRepoRuleBranchPolicyOutput
}

type GetRepoRuleBranchPolicyArgs struct {
	// Limit which merge strategies are available to merge a pull request(Any of squash, rebase, merge).
	AllowMergeStrategies pulumi.StringArrayInput `pulumi:"allowMergeStrategies"`
	// Only allow users with bypass permission to create matching branches.
	BlockBranchCreation pulumi.BoolPtrInput `pulumi:"blockBranchCreation"`
	// Only allow users with bypass permission to delete matching branches.
	BlockBranchDeletion pulumi.BoolPtrInput `pulumi:"blockBranchDeletion"`
	// Automatically delete the source branch of a pull request after it is merged.
	DeleteBranchOnMerge pulumi.BoolPtrInput `pulumi:"deleteBranchOnMerge"`
	// Require approval on pull requests from one reviewer for each codeowner rule.
	RequireCodeOwners pulumi.BoolPtrInput `pulumi:"requireCodeOwners"`
	// Require re-approval when there are new changes in the pull request.
	RequireLatestCommitApproval pulumi.BoolPtrInput `pulumi:"requireLatestCommitApproval"`
	// Require approval on pull requests from a minimum number of reviewers.
	RequireMinimumApprovalCount pulumi.IntPtrInput `pulumi:"requireMinimumApprovalCount"`
	// Require all request for changes have been resolved.
	RequireNoChangeRequest pulumi.BoolPtrInput `pulumi:"requireNoChangeRequest"`
	// Do not allow any changes to matching branches without a pull request.
	RequirePullRequest pulumi.BoolPtrInput `pulumi:"requirePullRequest"`
	// All comments on a pull request must be resolved before it can be merged.
	RequireResolveAllComments pulumi.BoolPtrInput `pulumi:"requireResolveAllComments"`
	// Selected status checks must pass before a pull request can be merged.
	RequireStatusChecks pulumi.StringArrayInput `pulumi:"requireStatusChecks"`
}

func (GetRepoRuleBranchPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoRuleBranchPolicy)(nil)).Elem()
}

func (i GetRepoRuleBranchPolicyArgs) ToGetRepoRuleBranchPolicyOutput() GetRepoRuleBranchPolicyOutput {
	return i.ToGetRepoRuleBranchPolicyOutputWithContext(context.Background())
}

func (i GetRepoRuleBranchPolicyArgs) ToGetRepoRuleBranchPolicyOutputWithContext(ctx context.Context) GetRepoRuleBranchPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoRuleBranchPolicyOutput)
}

// GetRepoRuleBranchPolicyArrayInput is an input type that accepts GetRepoRuleBranchPolicyArray and GetRepoRuleBranchPolicyArrayOutput values.
// You can construct a concrete instance of `GetRepoRuleBranchPolicyArrayInput` via:
//
//	GetRepoRuleBranchPolicyArray{ GetRepoRuleBranchPolicyArgs{...} }
type GetRepoRuleBranchPolicyArrayInput interface {
	pulumi.Input

	ToGetRepoRuleBranchPolicyArrayOutput() GetRepoRuleBranchPolicyArrayOutput
	ToGetRepoRuleBranchPolicyArrayOutputWithContext(context.Context) GetRepoRuleBranchPolicyArrayOutput
}

type GetRepoRuleBranchPolicyArray []GetRepoRuleBranchPolicyInput

func (GetRepoRuleBranchPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoRuleBranchPolicy)(nil)).Elem()
}

func (i GetRepoRuleBranchPolicyArray) ToGetRepoRuleBranchPolicyArrayOutput() GetRepoRuleBranchPolicyArrayOutput {
	return i.ToGetRepoRuleBranchPolicyArrayOutputWithContext(context.Background())
}

func (i GetRepoRuleBranchPolicyArray) ToGetRepoRuleBranchPolicyArrayOutputWithContext(ctx context.Context) GetRepoRuleBranchPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoRuleBranchPolicyArrayOutput)
}

type GetRepoRuleBranchPolicyOutput struct{ *pulumi.OutputState }

func (GetRepoRuleBranchPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoRuleBranchPolicy)(nil)).Elem()
}

func (o GetRepoRuleBranchPolicyOutput) ToGetRepoRuleBranchPolicyOutput() GetRepoRuleBranchPolicyOutput {
	return o
}

func (o GetRepoRuleBranchPolicyOutput) ToGetRepoRuleBranchPolicyOutputWithContext(ctx context.Context) GetRepoRuleBranchPolicyOutput {
	return o
}

// Limit which merge strategies are available to merge a pull request(Any of squash, rebase, merge).
func (o GetRepoRuleBranchPolicyOutput) AllowMergeStrategies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) []string { return v.AllowMergeStrategies }).(pulumi.StringArrayOutput)
}

// Only allow users with bypass permission to create matching branches.
func (o GetRepoRuleBranchPolicyOutput) BlockBranchCreation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.BlockBranchCreation }).(pulumi.BoolPtrOutput)
}

// Only allow users with bypass permission to delete matching branches.
func (o GetRepoRuleBranchPolicyOutput) BlockBranchDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.BlockBranchDeletion }).(pulumi.BoolPtrOutput)
}

// Automatically delete the source branch of a pull request after it is merged.
func (o GetRepoRuleBranchPolicyOutput) DeleteBranchOnMerge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.DeleteBranchOnMerge }).(pulumi.BoolPtrOutput)
}

// Require approval on pull requests from one reviewer for each codeowner rule.
func (o GetRepoRuleBranchPolicyOutput) RequireCodeOwners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.RequireCodeOwners }).(pulumi.BoolPtrOutput)
}

// Require re-approval when there are new changes in the pull request.
func (o GetRepoRuleBranchPolicyOutput) RequireLatestCommitApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.RequireLatestCommitApproval }).(pulumi.BoolPtrOutput)
}

// Require approval on pull requests from a minimum number of reviewers.
func (o GetRepoRuleBranchPolicyOutput) RequireMinimumApprovalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *int { return v.RequireMinimumApprovalCount }).(pulumi.IntPtrOutput)
}

// Require all request for changes have been resolved.
func (o GetRepoRuleBranchPolicyOutput) RequireNoChangeRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.RequireNoChangeRequest }).(pulumi.BoolPtrOutput)
}

// Do not allow any changes to matching branches without a pull request.
func (o GetRepoRuleBranchPolicyOutput) RequirePullRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.RequirePullRequest }).(pulumi.BoolPtrOutput)
}

// All comments on a pull request must be resolved before it can be merged.
func (o GetRepoRuleBranchPolicyOutput) RequireResolveAllComments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) *bool { return v.RequireResolveAllComments }).(pulumi.BoolPtrOutput)
}

// Selected status checks must pass before a pull request can be merged.
func (o GetRepoRuleBranchPolicyOutput) RequireStatusChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRepoRuleBranchPolicy) []string { return v.RequireStatusChecks }).(pulumi.StringArrayOutput)
}

type GetRepoRuleBranchPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetRepoRuleBranchPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoRuleBranchPolicy)(nil)).Elem()
}

func (o GetRepoRuleBranchPolicyArrayOutput) ToGetRepoRuleBranchPolicyArrayOutput() GetRepoRuleBranchPolicyArrayOutput {
	return o
}

func (o GetRepoRuleBranchPolicyArrayOutput) ToGetRepoRuleBranchPolicyArrayOutputWithContext(ctx context.Context) GetRepoRuleBranchPolicyArrayOutput {
	return o
}

func (o GetRepoRuleBranchPolicyArrayOutput) Index(i pulumi.IntInput) GetRepoRuleBranchPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepoRuleBranchPolicy {
		return vs[0].([]GetRepoRuleBranchPolicy)[vs[1].(int)]
	}).(GetRepoRuleBranchPolicyOutput)
}

type GetRepoSource struct {
	// The host URL for the import source.
	Host *string `pulumi:"host"`
	// The password for authentication when importing.
	Password *string `pulumi:"password"`
	// The full identifier of the repository on the SCM provider's platform.
	Repo *string `pulumi:"repo"`
	// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
	Type *string `pulumi:"type"`
	// The username for authentication when importing.
	Username *string `pulumi:"username"`
}

// GetRepoSourceInput is an input type that accepts GetRepoSourceArgs and GetRepoSourceOutput values.
// You can construct a concrete instance of `GetRepoSourceInput` via:
//
//	GetRepoSourceArgs{...}
type GetRepoSourceInput interface {
	pulumi.Input

	ToGetRepoSourceOutput() GetRepoSourceOutput
	ToGetRepoSourceOutputWithContext(context.Context) GetRepoSourceOutput
}

type GetRepoSourceArgs struct {
	// The host URL for the import source.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The password for authentication when importing.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The full identifier of the repository on the SCM provider's platform.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
	// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The username for authentication when importing.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetRepoSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoSource)(nil)).Elem()
}

func (i GetRepoSourceArgs) ToGetRepoSourceOutput() GetRepoSourceOutput {
	return i.ToGetRepoSourceOutputWithContext(context.Background())
}

func (i GetRepoSourceArgs) ToGetRepoSourceOutputWithContext(ctx context.Context) GetRepoSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoSourceOutput)
}

// GetRepoSourceArrayInput is an input type that accepts GetRepoSourceArray and GetRepoSourceArrayOutput values.
// You can construct a concrete instance of `GetRepoSourceArrayInput` via:
//
//	GetRepoSourceArray{ GetRepoSourceArgs{...} }
type GetRepoSourceArrayInput interface {
	pulumi.Input

	ToGetRepoSourceArrayOutput() GetRepoSourceArrayOutput
	ToGetRepoSourceArrayOutputWithContext(context.Context) GetRepoSourceArrayOutput
}

type GetRepoSourceArray []GetRepoSourceInput

func (GetRepoSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoSource)(nil)).Elem()
}

func (i GetRepoSourceArray) ToGetRepoSourceArrayOutput() GetRepoSourceArrayOutput {
	return i.ToGetRepoSourceArrayOutputWithContext(context.Background())
}

func (i GetRepoSourceArray) ToGetRepoSourceArrayOutputWithContext(ctx context.Context) GetRepoSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRepoSourceArrayOutput)
}

type GetRepoSourceOutput struct{ *pulumi.OutputState }

func (GetRepoSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoSource)(nil)).Elem()
}

func (o GetRepoSourceOutput) ToGetRepoSourceOutput() GetRepoSourceOutput {
	return o
}

func (o GetRepoSourceOutput) ToGetRepoSourceOutputWithContext(ctx context.Context) GetRepoSourceOutput {
	return o
}

// The host URL for the import source.
func (o GetRepoSourceOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepoSource) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The password for authentication when importing.
func (o GetRepoSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepoSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The full identifier of the repository on the SCM provider's platform.
func (o GetRepoSourceOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepoSource) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
func (o GetRepoSourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepoSource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The username for authentication when importing.
func (o GetRepoSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepoSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetRepoSourceArrayOutput struct{ *pulumi.OutputState }

func (GetRepoSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRepoSource)(nil)).Elem()
}

func (o GetRepoSourceArrayOutput) ToGetRepoSourceArrayOutput() GetRepoSourceArrayOutput {
	return o
}

func (o GetRepoSourceArrayOutput) ToGetRepoSourceArrayOutputWithContext(ctx context.Context) GetRepoSourceArrayOutput {
	return o
}

func (o GetRepoSourceArrayOutput) Index(i pulumi.IntInput) GetRepoSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRepoSource {
		return vs[0].([]GetRepoSource)[vs[1].(int)]
	}).(GetRepoSourceOutput)
}

type GetResourceGroupIncludedScope struct {
	// Account Identifier of the account
	AccountId string `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING_CHILD_SCOPES or INCLUDING_CHILD_SCOPES
	Filter string `pulumi:"filter"`
	// Organization Identifier
	OrgId string `pulumi:"orgId"`
	// Project Identifier
	ProjectId string `pulumi:"projectId"`
}

// GetResourceGroupIncludedScopeInput is an input type that accepts GetResourceGroupIncludedScopeArgs and GetResourceGroupIncludedScopeOutput values.
// You can construct a concrete instance of `GetResourceGroupIncludedScopeInput` via:
//
//	GetResourceGroupIncludedScopeArgs{...}
type GetResourceGroupIncludedScopeInput interface {
	pulumi.Input

	ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput
	ToGetResourceGroupIncludedScopeOutputWithContext(context.Context) GetResourceGroupIncludedScopeOutput
}

type GetResourceGroupIncludedScopeArgs struct {
	// Account Identifier of the account
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING_CHILD_SCOPES or INCLUDING_CHILD_SCOPES
	Filter pulumi.StringInput `pulumi:"filter"`
	// Organization Identifier
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Project Identifier
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetResourceGroupIncludedScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupIncludedScope)(nil)).Elem()
}

func (i GetResourceGroupIncludedScopeArgs) ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput {
	return i.ToGetResourceGroupIncludedScopeOutputWithContext(context.Background())
}

func (i GetResourceGroupIncludedScopeArgs) ToGetResourceGroupIncludedScopeOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupIncludedScopeOutput)
}

// GetResourceGroupIncludedScopeArrayInput is an input type that accepts GetResourceGroupIncludedScopeArray and GetResourceGroupIncludedScopeArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupIncludedScopeArrayInput` via:
//
//	GetResourceGroupIncludedScopeArray{ GetResourceGroupIncludedScopeArgs{...} }
type GetResourceGroupIncludedScopeArrayInput interface {
	pulumi.Input

	ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput
	ToGetResourceGroupIncludedScopeArrayOutputWithContext(context.Context) GetResourceGroupIncludedScopeArrayOutput
}

type GetResourceGroupIncludedScopeArray []GetResourceGroupIncludedScopeInput

func (GetResourceGroupIncludedScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupIncludedScope)(nil)).Elem()
}

func (i GetResourceGroupIncludedScopeArray) ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput {
	return i.ToGetResourceGroupIncludedScopeArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupIncludedScopeArray) ToGetResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupIncludedScopeArrayOutput)
}

type GetResourceGroupIncludedScopeOutput struct{ *pulumi.OutputState }

func (GetResourceGroupIncludedScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupIncludedScope)(nil)).Elem()
}

func (o GetResourceGroupIncludedScopeOutput) ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput {
	return o
}

func (o GetResourceGroupIncludedScopeOutput) ToGetResourceGroupIncludedScopeOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeOutput {
	return o
}

// Account Identifier of the account
func (o GetResourceGroupIncludedScopeOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.AccountId }).(pulumi.StringOutput)
}

// Can be one of these 2 EXCLUDING_CHILD_SCOPES or INCLUDING_CHILD_SCOPES
func (o GetResourceGroupIncludedScopeOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.Filter }).(pulumi.StringOutput)
}

// Organization Identifier
func (o GetResourceGroupIncludedScopeOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.OrgId }).(pulumi.StringOutput)
}

// Project Identifier
func (o GetResourceGroupIncludedScopeOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetResourceGroupIncludedScopeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupIncludedScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupIncludedScope)(nil)).Elem()
}

func (o GetResourceGroupIncludedScopeArrayOutput) ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o GetResourceGroupIncludedScopeArrayOutput) ToGetResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o GetResourceGroupIncludedScopeArrayOutput) Index(i pulumi.IntInput) GetResourceGroupIncludedScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupIncludedScope {
		return vs[0].([]GetResourceGroupIncludedScope)[vs[1].(int)]
	}).(GetResourceGroupIncludedScopeOutput)
}

type GetResourceGroupResourceFilter struct {
	// Include all resource or not
	IncludeAllResources bool `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources []GetResourceGroupResourceFilterResource `pulumi:"resources"`
}

// GetResourceGroupResourceFilterInput is an input type that accepts GetResourceGroupResourceFilterArgs and GetResourceGroupResourceFilterOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterInput` via:
//
//	GetResourceGroupResourceFilterArgs{...}
type GetResourceGroupResourceFilterInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput
	ToGetResourceGroupResourceFilterOutputWithContext(context.Context) GetResourceGroupResourceFilterOutput
}

type GetResourceGroupResourceFilterArgs struct {
	// Include all resource or not
	IncludeAllResources pulumi.BoolInput `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources GetResourceGroupResourceFilterResourceArrayInput `pulumi:"resources"`
}

func (GetResourceGroupResourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterArgs) ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput {
	return i.ToGetResourceGroupResourceFilterOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterArgs) ToGetResourceGroupResourceFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterOutput)
}

// GetResourceGroupResourceFilterArrayInput is an input type that accepts GetResourceGroupResourceFilterArray and GetResourceGroupResourceFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterArrayInput` via:
//
//	GetResourceGroupResourceFilterArray{ GetResourceGroupResourceFilterArgs{...} }
type GetResourceGroupResourceFilterArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput
	ToGetResourceGroupResourceFilterArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterArrayOutput
}

type GetResourceGroupResourceFilterArray []GetResourceGroupResourceFilterInput

func (GetResourceGroupResourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterArray) ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput {
	return i.ToGetResourceGroupResourceFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterArray) ToGetResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterArrayOutput)
}

type GetResourceGroupResourceFilterOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterOutput) ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterOutput) ToGetResourceGroupResourceFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterOutput {
	return o
}

// Include all resource or not
func (o GetResourceGroupResourceFilterOutput) IncludeAllResources() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilter) bool { return v.IncludeAllResources }).(pulumi.BoolOutput)
}

// Resources for a resource group
func (o GetResourceGroupResourceFilterOutput) Resources() GetResourceGroupResourceFilterResourceArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilter) []GetResourceGroupResourceFilterResource { return v.Resources }).(GetResourceGroupResourceFilterResourceArrayOutput)
}

type GetResourceGroupResourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterArrayOutput) ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterArrayOutput) ToGetResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilter {
		return vs[0].([]GetResourceGroupResourceFilter)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterOutput)
}

type GetResourceGroupResourceFilterResource struct {
	// Used to filter resources on their attributes
	AttributeFilters []GetResourceGroupResourceFilterResourceAttributeFilter `pulumi:"attributeFilters"`
	// List of the identifiers
	Identifiers []string `pulumi:"identifiers"`
	// Type of the resource
	ResourceType string `pulumi:"resourceType"`
}

// GetResourceGroupResourceFilterResourceInput is an input type that accepts GetResourceGroupResourceFilterResourceArgs and GetResourceGroupResourceFilterResourceOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceInput` via:
//
//	GetResourceGroupResourceFilterResourceArgs{...}
type GetResourceGroupResourceFilterResourceInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput
	ToGetResourceGroupResourceFilterResourceOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceOutput
}

type GetResourceGroupResourceFilterResourceArgs struct {
	// Used to filter resources on their attributes
	AttributeFilters GetResourceGroupResourceFilterResourceAttributeFilterArrayInput `pulumi:"attributeFilters"`
	// List of the identifiers
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	// Type of the resource
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetResourceGroupResourceFilterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceArgs) ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput {
	return i.ToGetResourceGroupResourceFilterResourceOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceArgs) ToGetResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceOutput)
}

// GetResourceGroupResourceFilterResourceArrayInput is an input type that accepts GetResourceGroupResourceFilterResourceArray and GetResourceGroupResourceFilterResourceArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceArrayInput` via:
//
//	GetResourceGroupResourceFilterResourceArray{ GetResourceGroupResourceFilterResourceArgs{...} }
type GetResourceGroupResourceFilterResourceArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput
	ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceArrayOutput
}

type GetResourceGroupResourceFilterResourceArray []GetResourceGroupResourceFilterResourceInput

func (GetResourceGroupResourceFilterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceArray) ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput {
	return i.ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceArray) ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceArrayOutput)
}

type GetResourceGroupResourceFilterResourceOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceOutput) ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceOutput) ToGetResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceOutput {
	return o
}

// Used to filter resources on their attributes
func (o GetResourceGroupResourceFilterResourceOutput) AttributeFilters() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) []GetResourceGroupResourceFilterResourceAttributeFilter {
		return v.AttributeFilters
	}).(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

// List of the identifiers
func (o GetResourceGroupResourceFilterResourceOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

// Type of the resource
func (o GetResourceGroupResourceFilterResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetResourceGroupResourceFilterResourceArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilterResource {
		return vs[0].([]GetResourceGroupResourceFilterResource)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterResourceOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilter struct {
	// Name of the attribute
	AttributeName string `pulumi:"attributeName"`
	// Value of the attributes
	AttributeValues []string `pulumi:"attributeValues"`
}

// GetResourceGroupResourceFilterResourceAttributeFilterInput is an input type that accepts GetResourceGroupResourceFilterResourceAttributeFilterArgs and GetResourceGroupResourceFilterResourceAttributeFilterOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceAttributeFilterInput` via:
//
//	GetResourceGroupResourceFilterResourceAttributeFilterArgs{...}
type GetResourceGroupResourceFilterResourceAttributeFilterInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput
	ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput
}

type GetResourceGroupResourceFilterResourceAttributeFilterArgs struct {
	// Name of the attribute
	AttributeName pulumi.StringInput `pulumi:"attributeName"`
	// Value of the attributes
	AttributeValues pulumi.StringArrayInput `pulumi:"attributeValues"`
}

func (GetResourceGroupResourceFilterResourceAttributeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArgs) ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return i.ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArgs) ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceAttributeFilterOutput)
}

// GetResourceGroupResourceFilterResourceAttributeFilterArrayInput is an input type that accepts GetResourceGroupResourceFilterResourceAttributeFilterArray and GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceAttributeFilterArrayInput` via:
//
//	GetResourceGroupResourceFilterResourceAttributeFilterArray{ GetResourceGroupResourceFilterResourceAttributeFilterArgs{...} }
type GetResourceGroupResourceFilterResourceAttributeFilterArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput
	ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput
}

type GetResourceGroupResourceFilterResourceAttributeFilterArray []GetResourceGroupResourceFilterResourceAttributeFilterInput

func (GetResourceGroupResourceFilterResourceAttributeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArray) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return i.ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArray) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilterOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceAttributeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

// Name of the attribute
func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResourceAttributeFilter) string { return v.AttributeName }).(pulumi.StringOutput)
}

// Value of the attributes
func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResourceAttributeFilter) []string { return v.AttributeValues }).(pulumi.StringArrayOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilterResourceAttributeFilter {
		return vs[0].([]GetResourceGroupResourceFilterResourceAttributeFilter)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterResourceAttributeFilterOutput)
}

type GetRoleAssignmentsPrincipal struct {
	// Identifier.
	Identifier string `pulumi:"identifier"`
	// Scope level.
	ScopeLevel string `pulumi:"scopeLevel"`
	// Type.
	Type string `pulumi:"type"`
}

// GetRoleAssignmentsPrincipalInput is an input type that accepts GetRoleAssignmentsPrincipalArgs and GetRoleAssignmentsPrincipalOutput values.
// You can construct a concrete instance of `GetRoleAssignmentsPrincipalInput` via:
//
//	GetRoleAssignmentsPrincipalArgs{...}
type GetRoleAssignmentsPrincipalInput interface {
	pulumi.Input

	ToGetRoleAssignmentsPrincipalOutput() GetRoleAssignmentsPrincipalOutput
	ToGetRoleAssignmentsPrincipalOutputWithContext(context.Context) GetRoleAssignmentsPrincipalOutput
}

type GetRoleAssignmentsPrincipalArgs struct {
	// Identifier.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Scope level.
	ScopeLevel pulumi.StringInput `pulumi:"scopeLevel"`
	// Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRoleAssignmentsPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (i GetRoleAssignmentsPrincipalArgs) ToGetRoleAssignmentsPrincipalOutput() GetRoleAssignmentsPrincipalOutput {
	return i.ToGetRoleAssignmentsPrincipalOutputWithContext(context.Background())
}

func (i GetRoleAssignmentsPrincipalArgs) ToGetRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleAssignmentsPrincipalOutput)
}

// GetRoleAssignmentsPrincipalArrayInput is an input type that accepts GetRoleAssignmentsPrincipalArray and GetRoleAssignmentsPrincipalArrayOutput values.
// You can construct a concrete instance of `GetRoleAssignmentsPrincipalArrayInput` via:
//
//	GetRoleAssignmentsPrincipalArray{ GetRoleAssignmentsPrincipalArgs{...} }
type GetRoleAssignmentsPrincipalArrayInput interface {
	pulumi.Input

	ToGetRoleAssignmentsPrincipalArrayOutput() GetRoleAssignmentsPrincipalArrayOutput
	ToGetRoleAssignmentsPrincipalArrayOutputWithContext(context.Context) GetRoleAssignmentsPrincipalArrayOutput
}

type GetRoleAssignmentsPrincipalArray []GetRoleAssignmentsPrincipalInput

func (GetRoleAssignmentsPrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (i GetRoleAssignmentsPrincipalArray) ToGetRoleAssignmentsPrincipalArrayOutput() GetRoleAssignmentsPrincipalArrayOutput {
	return i.ToGetRoleAssignmentsPrincipalArrayOutputWithContext(context.Background())
}

func (i GetRoleAssignmentsPrincipalArray) ToGetRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleAssignmentsPrincipalArrayOutput)
}

type GetRoleAssignmentsPrincipalOutput struct{ *pulumi.OutputState }

func (GetRoleAssignmentsPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (o GetRoleAssignmentsPrincipalOutput) ToGetRoleAssignmentsPrincipalOutput() GetRoleAssignmentsPrincipalOutput {
	return o
}

func (o GetRoleAssignmentsPrincipalOutput) ToGetRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalOutput {
	return o
}

// Identifier.
func (o GetRoleAssignmentsPrincipalOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleAssignmentsPrincipal) string { return v.Identifier }).(pulumi.StringOutput)
}

// Scope level.
func (o GetRoleAssignmentsPrincipalOutput) ScopeLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleAssignmentsPrincipal) string { return v.ScopeLevel }).(pulumi.StringOutput)
}

// Type.
func (o GetRoleAssignmentsPrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleAssignmentsPrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type GetRoleAssignmentsPrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetRoleAssignmentsPrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (o GetRoleAssignmentsPrincipalArrayOutput) ToGetRoleAssignmentsPrincipalArrayOutput() GetRoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o GetRoleAssignmentsPrincipalArrayOutput) ToGetRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o GetRoleAssignmentsPrincipalArrayOutput) Index(i pulumi.IntInput) GetRoleAssignmentsPrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoleAssignmentsPrincipal {
		return vs[0].([]GetRoleAssignmentsPrincipal)[vs[1].(int)]
	}).(GetRoleAssignmentsPrincipalOutput)
}

type GetSecretSshkeyKerbero struct {
	// Username to use for authentication.
	Principal string `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm string `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod string `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpecs []GetSecretSshkeyKerberoTgtKeyTabFilePathSpec `pulumi:"tgtKeyTabFilePathSpecs"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpecs []GetSecretSshkeyKerberoTgtPasswordSpec `pulumi:"tgtPasswordSpecs"`
}

// GetSecretSshkeyKerberoInput is an input type that accepts GetSecretSshkeyKerberoArgs and GetSecretSshkeyKerberoOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoInput` via:
//
//	GetSecretSshkeyKerberoArgs{...}
type GetSecretSshkeyKerberoInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput
	ToGetSecretSshkeyKerberoOutputWithContext(context.Context) GetSecretSshkeyKerberoOutput
}

type GetSecretSshkeyKerberoArgs struct {
	// Username to use for authentication.
	Principal pulumi.StringInput `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm pulumi.StringInput `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod pulumi.StringInput `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpecs GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput `pulumi:"tgtKeyTabFilePathSpecs"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpecs GetSecretSshkeyKerberoTgtPasswordSpecArrayInput `pulumi:"tgtPasswordSpecs"`
}

func (GetSecretSshkeyKerberoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerbero)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoArgs) ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput {
	return i.ToGetSecretSshkeyKerberoOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoArgs) ToGetSecretSshkeyKerberoOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoOutput)
}

// GetSecretSshkeyKerberoArrayInput is an input type that accepts GetSecretSshkeyKerberoArray and GetSecretSshkeyKerberoArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoArrayInput` via:
//
//	GetSecretSshkeyKerberoArray{ GetSecretSshkeyKerberoArgs{...} }
type GetSecretSshkeyKerberoArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput
	ToGetSecretSshkeyKerberoArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoArrayOutput
}

type GetSecretSshkeyKerberoArray []GetSecretSshkeyKerberoInput

func (GetSecretSshkeyKerberoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerbero)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoArray) ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput {
	return i.ToGetSecretSshkeyKerberoArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoArray) ToGetSecretSshkeyKerberoArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoArrayOutput)
}

type GetSecretSshkeyKerberoOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerbero)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoOutput) ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput {
	return o
}

func (o GetSecretSshkeyKerberoOutput) ToGetSecretSshkeyKerberoOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoOutput {
	return o
}

// Username to use for authentication.
func (o GetSecretSshkeyKerberoOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.Principal }).(pulumi.StringOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o GetSecretSshkeyKerberoOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.Realm }).(pulumi.StringOutput)
}

// Method to generate tgt
func (o GetSecretSshkeyKerberoOutput) TgtGenerationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.TgtGenerationMethod }).(pulumi.StringOutput)
}

// Authenticate to App Dynamics using username and password.
func (o GetSecretSshkeyKerberoOutput) TgtKeyTabFilePathSpecs() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) []GetSecretSshkeyKerberoTgtKeyTabFilePathSpec {
		return v.TgtKeyTabFilePathSpecs
	}).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput)
}

// Authenticate to App Dynamics using username and password.
func (o GetSecretSshkeyKerberoOutput) TgtPasswordSpecs() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) []GetSecretSshkeyKerberoTgtPasswordSpec { return v.TgtPasswordSpecs }).(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput)
}

type GetSecretSshkeyKerberoArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerbero)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoArrayOutput) ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoArrayOutput) ToGetSecretSshkeyKerberoArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerbero {
		return vs[0].([]GetSecretSshkeyKerbero)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpec struct {
	// key path
	KeyPath string `pulumi:"keyPath"`
}

// GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput is an input type that accepts GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs and GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput` via:
//
//	GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{...}
type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput
	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs struct {
	// key path
	KeyPath pulumi.StringInput `pulumi:"keyPath"`
}

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return i.ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput)
}

// GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput is an input type that accepts GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray and GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput` via:
//
//	GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray{ GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{...} }
type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput
	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray []GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return i.ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return o
}

// key path
func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerberoTgtKeyTabFilePathSpec) string { return v.KeyPath }).(pulumi.StringOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerberoTgtKeyTabFilePathSpec {
		return vs[0].([]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpec struct {
	// password
	Password string `pulumi:"password"`
}

// GetSecretSshkeyKerberoTgtPasswordSpecInput is an input type that accepts GetSecretSshkeyKerberoTgtPasswordSpecArgs and GetSecretSshkeyKerberoTgtPasswordSpecOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtPasswordSpecInput` via:
//
//	GetSecretSshkeyKerberoTgtPasswordSpecArgs{...}
type GetSecretSshkeyKerberoTgtPasswordSpecInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput
	ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput
}

type GetSecretSshkeyKerberoTgtPasswordSpecArgs struct {
	// password
	Password pulumi.StringInput `pulumi:"password"`
}

func (GetSecretSshkeyKerberoTgtPasswordSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArgs) ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return i.ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArgs) ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtPasswordSpecOutput)
}

// GetSecretSshkeyKerberoTgtPasswordSpecArrayInput is an input type that accepts GetSecretSshkeyKerberoTgtPasswordSpecArray and GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtPasswordSpecArrayInput` via:
//
//	GetSecretSshkeyKerberoTgtPasswordSpecArray{ GetSecretSshkeyKerberoTgtPasswordSpecArgs{...} }
type GetSecretSshkeyKerberoTgtPasswordSpecArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput
	ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput
}

type GetSecretSshkeyKerberoTgtPasswordSpecArray []GetSecretSshkeyKerberoTgtPasswordSpecInput

func (GetSecretSshkeyKerberoTgtPasswordSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArray) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return i.ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArray) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpecOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtPasswordSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return o
}

// password
func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerberoTgtPasswordSpec) string { return v.Password }).(pulumi.StringOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerberoTgtPasswordSpec {
		return vs[0].([]GetSecretSshkeyKerberoTgtPasswordSpec)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoTgtPasswordSpecOutput)
}

type GetSecretSshkeySsh struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType string `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredentials []GetSecretSshkeySshSshPasswordCredential `pulumi:"sshPasswordCredentials"`
	// SSH credential of type keyPath
	SshkeyPathCredentials []GetSecretSshkeySshSshkeyPathCredential `pulumi:"sshkeyPathCredentials"`
	// SSH credential of type keyReference
	SshkeyReferenceCredentials []GetSecretSshkeySshSshkeyReferenceCredential `pulumi:"sshkeyReferenceCredentials"`
}

// GetSecretSshkeySshInput is an input type that accepts GetSecretSshkeySshArgs and GetSecretSshkeySshOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshInput` via:
//
//	GetSecretSshkeySshArgs{...}
type GetSecretSshkeySshInput interface {
	pulumi.Input

	ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput
	ToGetSecretSshkeySshOutputWithContext(context.Context) GetSecretSshkeySshOutput
}

type GetSecretSshkeySshArgs struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType pulumi.StringInput `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredentials GetSecretSshkeySshSshPasswordCredentialArrayInput `pulumi:"sshPasswordCredentials"`
	// SSH credential of type keyPath
	SshkeyPathCredentials GetSecretSshkeySshSshkeyPathCredentialArrayInput `pulumi:"sshkeyPathCredentials"`
	// SSH credential of type keyReference
	SshkeyReferenceCredentials GetSecretSshkeySshSshkeyReferenceCredentialArrayInput `pulumi:"sshkeyReferenceCredentials"`
}

func (GetSecretSshkeySshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySsh)(nil)).Elem()
}

func (i GetSecretSshkeySshArgs) ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput {
	return i.ToGetSecretSshkeySshOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshArgs) ToGetSecretSshkeySshOutputWithContext(ctx context.Context) GetSecretSshkeySshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshOutput)
}

// GetSecretSshkeySshArrayInput is an input type that accepts GetSecretSshkeySshArray and GetSecretSshkeySshArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshArrayInput` via:
//
//	GetSecretSshkeySshArray{ GetSecretSshkeySshArgs{...} }
type GetSecretSshkeySshArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput
	ToGetSecretSshkeySshArrayOutputWithContext(context.Context) GetSecretSshkeySshArrayOutput
}

type GetSecretSshkeySshArray []GetSecretSshkeySshInput

func (GetSecretSshkeySshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySsh)(nil)).Elem()
}

func (i GetSecretSshkeySshArray) ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput {
	return i.ToGetSecretSshkeySshArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshArray) ToGetSecretSshkeySshArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshArrayOutput)
}

type GetSecretSshkeySshOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySsh)(nil)).Elem()
}

func (o GetSecretSshkeySshOutput) ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput {
	return o
}

func (o GetSecretSshkeySshOutput) ToGetSecretSshkeySshOutputWithContext(ctx context.Context) GetSecretSshkeySshOutput {
	return o
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o GetSecretSshkeySshOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) string { return v.CredentialType }).(pulumi.StringOutput)
}

// SSH credential of type keyReference
func (o GetSecretSshkeySshOutput) SshPasswordCredentials() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshPasswordCredential { return v.SshPasswordCredentials }).(GetSecretSshkeySshSshPasswordCredentialArrayOutput)
}

// SSH credential of type keyPath
func (o GetSecretSshkeySshOutput) SshkeyPathCredentials() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshkeyPathCredential { return v.SshkeyPathCredentials }).(GetSecretSshkeySshSshkeyPathCredentialArrayOutput)
}

// SSH credential of type keyReference
func (o GetSecretSshkeySshOutput) SshkeyReferenceCredentials() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshkeyReferenceCredential {
		return v.SshkeyReferenceCredentials
	}).(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput)
}

type GetSecretSshkeySshArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySsh)(nil)).Elem()
}

func (o GetSecretSshkeySshArrayOutput) ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput {
	return o
}

func (o GetSecretSshkeySshArrayOutput) ToGetSecretSshkeySshArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshArrayOutput {
	return o
}

func (o GetSecretSshkeySshArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySsh {
		return vs[0].([]GetSecretSshkeySsh)[vs[1].(int)]
	}).(GetSecretSshkeySshOutput)
}

type GetSecretSshkeySshSshPasswordCredential struct {
	// SSH Password.
	Password string `pulumi:"password"`
	// SSH Username.
	UserName string `pulumi:"userName"`
}

// GetSecretSshkeySshSshPasswordCredentialInput is an input type that accepts GetSecretSshkeySshSshPasswordCredentialArgs and GetSecretSshkeySshSshPasswordCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshPasswordCredentialInput` via:
//
//	GetSecretSshkeySshSshPasswordCredentialArgs{...}
type GetSecretSshkeySshSshPasswordCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput
	ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshPasswordCredentialOutput
}

type GetSecretSshkeySshSshPasswordCredentialArgs struct {
	// SSH Password.
	Password pulumi.StringInput `pulumi:"password"`
	// SSH Username.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshPasswordCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshPasswordCredentialArgs) ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput {
	return i.ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshPasswordCredentialArgs) ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshPasswordCredentialOutput)
}

// GetSecretSshkeySshSshPasswordCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshPasswordCredentialArray and GetSecretSshkeySshSshPasswordCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshPasswordCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshPasswordCredentialArray{ GetSecretSshkeySshSshPasswordCredentialArgs{...} }
type GetSecretSshkeySshSshPasswordCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput
	ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput
}

type GetSecretSshkeySshSshPasswordCredentialArray []GetSecretSshkeySshSshPasswordCredentialInput

func (GetSecretSshkeySshSshPasswordCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshPasswordCredentialArray) ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshPasswordCredentialArray) ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshPasswordCredentialArrayOutput)
}

type GetSecretSshkeySshSshPasswordCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshPasswordCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialOutput {
	return o
}

// SSH Password.
func (o GetSecretSshkeySshSshPasswordCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshPasswordCredential) string { return v.Password }).(pulumi.StringOutput)
}

// SSH Username.
func (o GetSecretSshkeySshSshPasswordCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshPasswordCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshPasswordCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshPasswordCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshPasswordCredential {
		return vs[0].([]GetSecretSshkeySshSshPasswordCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshPasswordCredentialOutput)
}

type GetSecretSshkeySshSshkeyPathCredential struct {
	// Encrypted Passphrase
	EncryptedPassphrase string `pulumi:"encryptedPassphrase"`
	// Path of the key file.
	KeyPath string `pulumi:"keyPath"`
	// SSH Username.
	UserName string `pulumi:"userName"`
}

// GetSecretSshkeySshSshkeyPathCredentialInput is an input type that accepts GetSecretSshkeySshSshkeyPathCredentialArgs and GetSecretSshkeySshSshkeyPathCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyPathCredentialInput` via:
//
//	GetSecretSshkeySshSshkeyPathCredentialArgs{...}
type GetSecretSshkeySshSshkeyPathCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput
	ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput
}

type GetSecretSshkeySshSshkeyPathCredentialArgs struct {
	// Encrypted Passphrase
	EncryptedPassphrase pulumi.StringInput `pulumi:"encryptedPassphrase"`
	// Path of the key file.
	KeyPath pulumi.StringInput `pulumi:"keyPath"`
	// SSH Username.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshkeyPathCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyPathCredentialArgs) ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput {
	return i.ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyPathCredentialArgs) ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyPathCredentialOutput)
}

// GetSecretSshkeySshSshkeyPathCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshkeyPathCredentialArray and GetSecretSshkeySshSshkeyPathCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyPathCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshkeyPathCredentialArray{ GetSecretSshkeySshSshkeyPathCredentialArgs{...} }
type GetSecretSshkeySshSshkeyPathCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput
	ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput
}

type GetSecretSshkeySshSshkeyPathCredentialArray []GetSecretSshkeySshSshkeyPathCredentialInput

func (GetSecretSshkeySshSshkeyPathCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyPathCredentialArray) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyPathCredentialArray) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyPathCredentialArrayOutput)
}

type GetSecretSshkeySshSshkeyPathCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyPathCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

// Encrypted Passphrase
func (o GetSecretSshkeySshSshkeyPathCredentialOutput) EncryptedPassphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.EncryptedPassphrase }).(pulumi.StringOutput)
}

// Path of the key file.
func (o GetSecretSshkeySshSshkeyPathCredentialOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.KeyPath }).(pulumi.StringOutput)
}

// SSH Username.
func (o GetSecretSshkeySshSshkeyPathCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshkeyPathCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshkeyPathCredential {
		return vs[0].([]GetSecretSshkeySshSshkeyPathCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshkeyPathCredentialOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredential struct {
	// Encrypted Passphrase
	EncryptedAssphrase string `pulumi:"encryptedAssphrase"`
	// SSH key.
	Key string `pulumi:"key"`
	// SSH Username.
	UserName string `pulumi:"userName"`
}

// GetSecretSshkeySshSshkeyReferenceCredentialInput is an input type that accepts GetSecretSshkeySshSshkeyReferenceCredentialArgs and GetSecretSshkeySshSshkeyReferenceCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyReferenceCredentialInput` via:
//
//	GetSecretSshkeySshSshkeyReferenceCredentialArgs{...}
type GetSecretSshkeySshSshkeyReferenceCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput
	ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput
}

type GetSecretSshkeySshSshkeyReferenceCredentialArgs struct {
	// Encrypted Passphrase
	EncryptedAssphrase pulumi.StringInput `pulumi:"encryptedAssphrase"`
	// SSH key.
	Key pulumi.StringInput `pulumi:"key"`
	// SSH Username.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshkeyReferenceCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArgs) ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return i.ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArgs) ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyReferenceCredentialOutput)
}

// GetSecretSshkeySshSshkeyReferenceCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshkeyReferenceCredentialArray and GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyReferenceCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshkeyReferenceCredentialArray{ GetSecretSshkeySshSshkeyReferenceCredentialArgs{...} }
type GetSecretSshkeySshSshkeyReferenceCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput
	ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput
}

type GetSecretSshkeySshSshkeyReferenceCredentialArray []GetSecretSshkeySshSshkeyReferenceCredentialInput

func (GetSecretSshkeySshSshkeyReferenceCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArray) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArray) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyReferenceCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

// Encrypted Passphrase
func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) EncryptedAssphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.EncryptedAssphrase }).(pulumi.StringOutput)
}

// SSH key.
func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.Key }).(pulumi.StringOutput)
}

// SSH Username.
func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshkeyReferenceCredential {
		return vs[0].([]GetSecretSshkeySshSshkeyReferenceCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshkeyReferenceCredentialOutput)
}

type GetSecretTextAdditionalMetadata struct {
	Values []GetSecretTextAdditionalMetadataValue `pulumi:"values"`
}

// GetSecretTextAdditionalMetadataInput is an input type that accepts GetSecretTextAdditionalMetadataArgs and GetSecretTextAdditionalMetadataOutput values.
// You can construct a concrete instance of `GetSecretTextAdditionalMetadataInput` via:
//
//	GetSecretTextAdditionalMetadataArgs{...}
type GetSecretTextAdditionalMetadataInput interface {
	pulumi.Input

	ToGetSecretTextAdditionalMetadataOutput() GetSecretTextAdditionalMetadataOutput
	ToGetSecretTextAdditionalMetadataOutputWithContext(context.Context) GetSecretTextAdditionalMetadataOutput
}

type GetSecretTextAdditionalMetadataArgs struct {
	Values GetSecretTextAdditionalMetadataValueArrayInput `pulumi:"values"`
}

func (GetSecretTextAdditionalMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTextAdditionalMetadata)(nil)).Elem()
}

func (i GetSecretTextAdditionalMetadataArgs) ToGetSecretTextAdditionalMetadataOutput() GetSecretTextAdditionalMetadataOutput {
	return i.ToGetSecretTextAdditionalMetadataOutputWithContext(context.Background())
}

func (i GetSecretTextAdditionalMetadataArgs) ToGetSecretTextAdditionalMetadataOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTextAdditionalMetadataOutput)
}

// GetSecretTextAdditionalMetadataArrayInput is an input type that accepts GetSecretTextAdditionalMetadataArray and GetSecretTextAdditionalMetadataArrayOutput values.
// You can construct a concrete instance of `GetSecretTextAdditionalMetadataArrayInput` via:
//
//	GetSecretTextAdditionalMetadataArray{ GetSecretTextAdditionalMetadataArgs{...} }
type GetSecretTextAdditionalMetadataArrayInput interface {
	pulumi.Input

	ToGetSecretTextAdditionalMetadataArrayOutput() GetSecretTextAdditionalMetadataArrayOutput
	ToGetSecretTextAdditionalMetadataArrayOutputWithContext(context.Context) GetSecretTextAdditionalMetadataArrayOutput
}

type GetSecretTextAdditionalMetadataArray []GetSecretTextAdditionalMetadataInput

func (GetSecretTextAdditionalMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretTextAdditionalMetadata)(nil)).Elem()
}

func (i GetSecretTextAdditionalMetadataArray) ToGetSecretTextAdditionalMetadataArrayOutput() GetSecretTextAdditionalMetadataArrayOutput {
	return i.ToGetSecretTextAdditionalMetadataArrayOutputWithContext(context.Background())
}

func (i GetSecretTextAdditionalMetadataArray) ToGetSecretTextAdditionalMetadataArrayOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTextAdditionalMetadataArrayOutput)
}

type GetSecretTextAdditionalMetadataOutput struct{ *pulumi.OutputState }

func (GetSecretTextAdditionalMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTextAdditionalMetadata)(nil)).Elem()
}

func (o GetSecretTextAdditionalMetadataOutput) ToGetSecretTextAdditionalMetadataOutput() GetSecretTextAdditionalMetadataOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataOutput) ToGetSecretTextAdditionalMetadataOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataOutput) Values() GetSecretTextAdditionalMetadataValueArrayOutput {
	return o.ApplyT(func(v GetSecretTextAdditionalMetadata) []GetSecretTextAdditionalMetadataValue { return v.Values }).(GetSecretTextAdditionalMetadataValueArrayOutput)
}

type GetSecretTextAdditionalMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetSecretTextAdditionalMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretTextAdditionalMetadata)(nil)).Elem()
}

func (o GetSecretTextAdditionalMetadataArrayOutput) ToGetSecretTextAdditionalMetadataArrayOutput() GetSecretTextAdditionalMetadataArrayOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataArrayOutput) ToGetSecretTextAdditionalMetadataArrayOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataArrayOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataArrayOutput) Index(i pulumi.IntInput) GetSecretTextAdditionalMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretTextAdditionalMetadata {
		return vs[0].([]GetSecretTextAdditionalMetadata)[vs[1].(int)]
	}).(GetSecretTextAdditionalMetadataOutput)
}

type GetSecretTextAdditionalMetadataValue struct {
	Version *string `pulumi:"version"`
}

// GetSecretTextAdditionalMetadataValueInput is an input type that accepts GetSecretTextAdditionalMetadataValueArgs and GetSecretTextAdditionalMetadataValueOutput values.
// You can construct a concrete instance of `GetSecretTextAdditionalMetadataValueInput` via:
//
//	GetSecretTextAdditionalMetadataValueArgs{...}
type GetSecretTextAdditionalMetadataValueInput interface {
	pulumi.Input

	ToGetSecretTextAdditionalMetadataValueOutput() GetSecretTextAdditionalMetadataValueOutput
	ToGetSecretTextAdditionalMetadataValueOutputWithContext(context.Context) GetSecretTextAdditionalMetadataValueOutput
}

type GetSecretTextAdditionalMetadataValueArgs struct {
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetSecretTextAdditionalMetadataValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (i GetSecretTextAdditionalMetadataValueArgs) ToGetSecretTextAdditionalMetadataValueOutput() GetSecretTextAdditionalMetadataValueOutput {
	return i.ToGetSecretTextAdditionalMetadataValueOutputWithContext(context.Background())
}

func (i GetSecretTextAdditionalMetadataValueArgs) ToGetSecretTextAdditionalMetadataValueOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTextAdditionalMetadataValueOutput)
}

// GetSecretTextAdditionalMetadataValueArrayInput is an input type that accepts GetSecretTextAdditionalMetadataValueArray and GetSecretTextAdditionalMetadataValueArrayOutput values.
// You can construct a concrete instance of `GetSecretTextAdditionalMetadataValueArrayInput` via:
//
//	GetSecretTextAdditionalMetadataValueArray{ GetSecretTextAdditionalMetadataValueArgs{...} }
type GetSecretTextAdditionalMetadataValueArrayInput interface {
	pulumi.Input

	ToGetSecretTextAdditionalMetadataValueArrayOutput() GetSecretTextAdditionalMetadataValueArrayOutput
	ToGetSecretTextAdditionalMetadataValueArrayOutputWithContext(context.Context) GetSecretTextAdditionalMetadataValueArrayOutput
}

type GetSecretTextAdditionalMetadataValueArray []GetSecretTextAdditionalMetadataValueInput

func (GetSecretTextAdditionalMetadataValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (i GetSecretTextAdditionalMetadataValueArray) ToGetSecretTextAdditionalMetadataValueArrayOutput() GetSecretTextAdditionalMetadataValueArrayOutput {
	return i.ToGetSecretTextAdditionalMetadataValueArrayOutputWithContext(context.Background())
}

func (i GetSecretTextAdditionalMetadataValueArray) ToGetSecretTextAdditionalMetadataValueArrayOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretTextAdditionalMetadataValueArrayOutput)
}

type GetSecretTextAdditionalMetadataValueOutput struct{ *pulumi.OutputState }

func (GetSecretTextAdditionalMetadataValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (o GetSecretTextAdditionalMetadataValueOutput) ToGetSecretTextAdditionalMetadataValueOutput() GetSecretTextAdditionalMetadataValueOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataValueOutput) ToGetSecretTextAdditionalMetadataValueOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataValueOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataValueOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretTextAdditionalMetadataValue) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetSecretTextAdditionalMetadataValueArrayOutput struct{ *pulumi.OutputState }

func (GetSecretTextAdditionalMetadataValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretTextAdditionalMetadataValue)(nil)).Elem()
}

func (o GetSecretTextAdditionalMetadataValueArrayOutput) ToGetSecretTextAdditionalMetadataValueArrayOutput() GetSecretTextAdditionalMetadataValueArrayOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataValueArrayOutput) ToGetSecretTextAdditionalMetadataValueArrayOutputWithContext(ctx context.Context) GetSecretTextAdditionalMetadataValueArrayOutput {
	return o
}

func (o GetSecretTextAdditionalMetadataValueArrayOutput) Index(i pulumi.IntInput) GetSecretTextAdditionalMetadataValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretTextAdditionalMetadataValue {
		return vs[0].([]GetSecretTextAdditionalMetadataValue)[vs[1].(int)]
	}).(GetSecretTextAdditionalMetadataValueOutput)
}

type GetServiceGitDetails struct {
	// Name of the branch.
	Branch string `pulumi:"branch"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch bool `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote service
	RepoName string `pulumi:"repoName"`
}

// GetServiceGitDetailsInput is an input type that accepts GetServiceGitDetailsArgs and GetServiceGitDetailsOutput values.
// You can construct a concrete instance of `GetServiceGitDetailsInput` via:
//
//	GetServiceGitDetailsArgs{...}
type GetServiceGitDetailsInput interface {
	pulumi.Input

	ToGetServiceGitDetailsOutput() GetServiceGitDetailsOutput
	ToGetServiceGitDetailsOutputWithContext(context.Context) GetServiceGitDetailsOutput
}

type GetServiceGitDetailsArgs struct {
	// Name of the branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolInput `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote service
	RepoName pulumi.StringInput `pulumi:"repoName"`
}

func (GetServiceGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGitDetails)(nil)).Elem()
}

func (i GetServiceGitDetailsArgs) ToGetServiceGitDetailsOutput() GetServiceGitDetailsOutput {
	return i.ToGetServiceGitDetailsOutputWithContext(context.Background())
}

func (i GetServiceGitDetailsArgs) ToGetServiceGitDetailsOutputWithContext(ctx context.Context) GetServiceGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGitDetailsOutput)
}

func (i GetServiceGitDetailsArgs) ToGetServiceGitDetailsPtrOutput() GetServiceGitDetailsPtrOutput {
	return i.ToGetServiceGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetServiceGitDetailsArgs) ToGetServiceGitDetailsPtrOutputWithContext(ctx context.Context) GetServiceGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGitDetailsOutput).ToGetServiceGitDetailsPtrOutputWithContext(ctx)
}

// GetServiceGitDetailsPtrInput is an input type that accepts GetServiceGitDetailsArgs, GetServiceGitDetailsPtr and GetServiceGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetServiceGitDetailsPtrInput` via:
//
//	        GetServiceGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetServiceGitDetailsPtrInput interface {
	pulumi.Input

	ToGetServiceGitDetailsPtrOutput() GetServiceGitDetailsPtrOutput
	ToGetServiceGitDetailsPtrOutputWithContext(context.Context) GetServiceGitDetailsPtrOutput
}

type getServiceGitDetailsPtrType GetServiceGitDetailsArgs

func GetServiceGitDetailsPtr(v *GetServiceGitDetailsArgs) GetServiceGitDetailsPtrInput {
	return (*getServiceGitDetailsPtrType)(v)
}

func (*getServiceGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGitDetails)(nil)).Elem()
}

func (i *getServiceGitDetailsPtrType) ToGetServiceGitDetailsPtrOutput() GetServiceGitDetailsPtrOutput {
	return i.ToGetServiceGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getServiceGitDetailsPtrType) ToGetServiceGitDetailsPtrOutputWithContext(ctx context.Context) GetServiceGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGitDetailsPtrOutput)
}

type GetServiceGitDetailsOutput struct{ *pulumi.OutputState }

func (GetServiceGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGitDetails)(nil)).Elem()
}

func (o GetServiceGitDetailsOutput) ToGetServiceGitDetailsOutput() GetServiceGitDetailsOutput {
	return o
}

func (o GetServiceGitDetailsOutput) ToGetServiceGitDetailsOutputWithContext(ctx context.Context) GetServiceGitDetailsOutput {
	return o
}

func (o GetServiceGitDetailsOutput) ToGetServiceGitDetailsPtrOutput() GetServiceGitDetailsPtrOutput {
	return o.ToGetServiceGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetServiceGitDetailsOutput) ToGetServiceGitDetailsPtrOutputWithContext(ctx context.Context) GetServiceGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetServiceGitDetails) *GetServiceGitDetails {
		return &v
	}).(GetServiceGitDetailsPtrOutput)
}

// Name of the branch.
func (o GetServiceGitDetailsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGitDetails) string { return v.Branch }).(pulumi.StringOutput)
}

// Load service yaml from fallback branch
func (o GetServiceGitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceGitDetails) bool { return v.LoadFromFallbackBranch }).(pulumi.BoolOutput)
}

// Repo name of remote service
func (o GetServiceGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

type GetServiceGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetServiceGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceGitDetails)(nil)).Elem()
}

func (o GetServiceGitDetailsPtrOutput) ToGetServiceGitDetailsPtrOutput() GetServiceGitDetailsPtrOutput {
	return o
}

func (o GetServiceGitDetailsPtrOutput) ToGetServiceGitDetailsPtrOutputWithContext(ctx context.Context) GetServiceGitDetailsPtrOutput {
	return o
}

func (o GetServiceGitDetailsPtrOutput) Elem() GetServiceGitDetailsOutput {
	return o.ApplyT(func(v *GetServiceGitDetails) GetServiceGitDetails {
		if v != nil {
			return *v
		}
		var ret GetServiceGitDetails
		return ret
	}).(GetServiceGitDetailsOutput)
}

// Name of the branch.
func (o GetServiceGitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// Load service yaml from fallback branch
func (o GetServiceGitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceGitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Repo name of remote service
func (o GetServiceGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

type GetServiceListService struct {
	Identifier string `pulumi:"identifier"`
	Name       string `pulumi:"name"`
}

// GetServiceListServiceInput is an input type that accepts GetServiceListServiceArgs and GetServiceListServiceOutput values.
// You can construct a concrete instance of `GetServiceListServiceInput` via:
//
//	GetServiceListServiceArgs{...}
type GetServiceListServiceInput interface {
	pulumi.Input

	ToGetServiceListServiceOutput() GetServiceListServiceOutput
	ToGetServiceListServiceOutputWithContext(context.Context) GetServiceListServiceOutput
}

type GetServiceListServiceArgs struct {
	Identifier pulumi.StringInput `pulumi:"identifier"`
	Name       pulumi.StringInput `pulumi:"name"`
}

func (GetServiceListServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceListService)(nil)).Elem()
}

func (i GetServiceListServiceArgs) ToGetServiceListServiceOutput() GetServiceListServiceOutput {
	return i.ToGetServiceListServiceOutputWithContext(context.Background())
}

func (i GetServiceListServiceArgs) ToGetServiceListServiceOutputWithContext(ctx context.Context) GetServiceListServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceListServiceOutput)
}

// GetServiceListServiceArrayInput is an input type that accepts GetServiceListServiceArray and GetServiceListServiceArrayOutput values.
// You can construct a concrete instance of `GetServiceListServiceArrayInput` via:
//
//	GetServiceListServiceArray{ GetServiceListServiceArgs{...} }
type GetServiceListServiceArrayInput interface {
	pulumi.Input

	ToGetServiceListServiceArrayOutput() GetServiceListServiceArrayOutput
	ToGetServiceListServiceArrayOutputWithContext(context.Context) GetServiceListServiceArrayOutput
}

type GetServiceListServiceArray []GetServiceListServiceInput

func (GetServiceListServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceListService)(nil)).Elem()
}

func (i GetServiceListServiceArray) ToGetServiceListServiceArrayOutput() GetServiceListServiceArrayOutput {
	return i.ToGetServiceListServiceArrayOutputWithContext(context.Background())
}

func (i GetServiceListServiceArray) ToGetServiceListServiceArrayOutputWithContext(ctx context.Context) GetServiceListServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceListServiceArrayOutput)
}

type GetServiceListServiceOutput struct{ *pulumi.OutputState }

func (GetServiceListServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceListService)(nil)).Elem()
}

func (o GetServiceListServiceOutput) ToGetServiceListServiceOutput() GetServiceListServiceOutput {
	return o
}

func (o GetServiceListServiceOutput) ToGetServiceListServiceOutputWithContext(ctx context.Context) GetServiceListServiceOutput {
	return o
}

func (o GetServiceListServiceOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceListService) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o GetServiceListServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceListService) string { return v.Name }).(pulumi.StringOutput)
}

type GetServiceListServiceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceListServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceListService)(nil)).Elem()
}

func (o GetServiceListServiceArrayOutput) ToGetServiceListServiceArrayOutput() GetServiceListServiceArrayOutput {
	return o
}

func (o GetServiceListServiceArrayOutput) ToGetServiceListServiceArrayOutputWithContext(ctx context.Context) GetServiceListServiceArrayOutput {
	return o
}

func (o GetServiceListServiceArrayOutput) Index(i pulumi.IntInput) GetServiceListServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceListService {
		return vs[0].([]GetServiceListService)[vs[1].(int)]
	}).(GetServiceListServiceOutput)
}

type GetServiceNowConnectorAuth struct {
	// Authenticate using adfs client credentials with certificate.
	Adfs []GetServiceNowConnectorAuthAdf `pulumi:"adfs"`
	// Authentication types for Jira connector
	AuthType string `pulumi:"authType"`
	// Authenticate using refresh token grant type.
	RefreshTokens []GetServiceNowConnectorAuthRefreshToken `pulumi:"refreshTokens"`
	// Authenticate using username password.
	UsernamePasswords []GetServiceNowConnectorAuthUsernamePassword `pulumi:"usernamePasswords"`
}

// GetServiceNowConnectorAuthInput is an input type that accepts GetServiceNowConnectorAuthArgs and GetServiceNowConnectorAuthOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthInput` via:
//
//	GetServiceNowConnectorAuthArgs{...}
type GetServiceNowConnectorAuthInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthOutput() GetServiceNowConnectorAuthOutput
	ToGetServiceNowConnectorAuthOutputWithContext(context.Context) GetServiceNowConnectorAuthOutput
}

type GetServiceNowConnectorAuthArgs struct {
	// Authenticate using adfs client credentials with certificate.
	Adfs GetServiceNowConnectorAuthAdfArrayInput `pulumi:"adfs"`
	// Authentication types for Jira connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Authenticate using refresh token grant type.
	RefreshTokens GetServiceNowConnectorAuthRefreshTokenArrayInput `pulumi:"refreshTokens"`
	// Authenticate using username password.
	UsernamePasswords GetServiceNowConnectorAuthUsernamePasswordArrayInput `pulumi:"usernamePasswords"`
}

func (GetServiceNowConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuth)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthArgs) ToGetServiceNowConnectorAuthOutput() GetServiceNowConnectorAuthOutput {
	return i.ToGetServiceNowConnectorAuthOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthArgs) ToGetServiceNowConnectorAuthOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthOutput)
}

// GetServiceNowConnectorAuthArrayInput is an input type that accepts GetServiceNowConnectorAuthArray and GetServiceNowConnectorAuthArrayOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthArrayInput` via:
//
//	GetServiceNowConnectorAuthArray{ GetServiceNowConnectorAuthArgs{...} }
type GetServiceNowConnectorAuthArrayInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthArrayOutput() GetServiceNowConnectorAuthArrayOutput
	ToGetServiceNowConnectorAuthArrayOutputWithContext(context.Context) GetServiceNowConnectorAuthArrayOutput
}

type GetServiceNowConnectorAuthArray []GetServiceNowConnectorAuthInput

func (GetServiceNowConnectorAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuth)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthArray) ToGetServiceNowConnectorAuthArrayOutput() GetServiceNowConnectorAuthArrayOutput {
	return i.ToGetServiceNowConnectorAuthArrayOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthArray) ToGetServiceNowConnectorAuthArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthArrayOutput)
}

type GetServiceNowConnectorAuthOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuth)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthOutput) ToGetServiceNowConnectorAuthOutput() GetServiceNowConnectorAuthOutput {
	return o
}

func (o GetServiceNowConnectorAuthOutput) ToGetServiceNowConnectorAuthOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthOutput {
	return o
}

// Authenticate using adfs client credentials with certificate.
func (o GetServiceNowConnectorAuthOutput) Adfs() GetServiceNowConnectorAuthAdfArrayOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuth) []GetServiceNowConnectorAuthAdf { return v.Adfs }).(GetServiceNowConnectorAuthAdfArrayOutput)
}

// Authentication types for Jira connector
func (o GetServiceNowConnectorAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Authenticate using refresh token grant type.
func (o GetServiceNowConnectorAuthOutput) RefreshTokens() GetServiceNowConnectorAuthRefreshTokenArrayOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuth) []GetServiceNowConnectorAuthRefreshToken { return v.RefreshTokens }).(GetServiceNowConnectorAuthRefreshTokenArrayOutput)
}

// Authenticate using username password.
func (o GetServiceNowConnectorAuthOutput) UsernamePasswords() GetServiceNowConnectorAuthUsernamePasswordArrayOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuth) []GetServiceNowConnectorAuthUsernamePassword {
		return v.UsernamePasswords
	}).(GetServiceNowConnectorAuthUsernamePasswordArrayOutput)
}

type GetServiceNowConnectorAuthArrayOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuth)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthArrayOutput) ToGetServiceNowConnectorAuthArrayOutput() GetServiceNowConnectorAuthArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthArrayOutput) ToGetServiceNowConnectorAuthArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthArrayOutput) Index(i pulumi.IntInput) GetServiceNowConnectorAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceNowConnectorAuth {
		return vs[0].([]GetServiceNowConnectorAuth)[vs[1].(int)]
	}).(GetServiceNowConnectorAuthOutput)
}

type GetServiceNowConnectorAuthAdf struct {
	// asdf URL.
	AdfsUrl string `pulumi:"adfsUrl"`
	// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CertificateRef string `pulumi:"certificateRef"`
	// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef string `pulumi:"privateKeyRef"`
	// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ResourceIdRef string `pulumi:"resourceIdRef"`
}

// GetServiceNowConnectorAuthAdfInput is an input type that accepts GetServiceNowConnectorAuthAdfArgs and GetServiceNowConnectorAuthAdfOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthAdfInput` via:
//
//	GetServiceNowConnectorAuthAdfArgs{...}
type GetServiceNowConnectorAuthAdfInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthAdfOutput() GetServiceNowConnectorAuthAdfOutput
	ToGetServiceNowConnectorAuthAdfOutputWithContext(context.Context) GetServiceNowConnectorAuthAdfOutput
}

type GetServiceNowConnectorAuthAdfArgs struct {
	// asdf URL.
	AdfsUrl pulumi.StringInput `pulumi:"adfsUrl"`
	// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CertificateRef pulumi.StringInput `pulumi:"certificateRef"`
	// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PrivateKeyRef pulumi.StringInput `pulumi:"privateKeyRef"`
	// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ResourceIdRef pulumi.StringInput `pulumi:"resourceIdRef"`
}

func (GetServiceNowConnectorAuthAdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuthAdf)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthAdfArgs) ToGetServiceNowConnectorAuthAdfOutput() GetServiceNowConnectorAuthAdfOutput {
	return i.ToGetServiceNowConnectorAuthAdfOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthAdfArgs) ToGetServiceNowConnectorAuthAdfOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthAdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthAdfOutput)
}

// GetServiceNowConnectorAuthAdfArrayInput is an input type that accepts GetServiceNowConnectorAuthAdfArray and GetServiceNowConnectorAuthAdfArrayOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthAdfArrayInput` via:
//
//	GetServiceNowConnectorAuthAdfArray{ GetServiceNowConnectorAuthAdfArgs{...} }
type GetServiceNowConnectorAuthAdfArrayInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthAdfArrayOutput() GetServiceNowConnectorAuthAdfArrayOutput
	ToGetServiceNowConnectorAuthAdfArrayOutputWithContext(context.Context) GetServiceNowConnectorAuthAdfArrayOutput
}

type GetServiceNowConnectorAuthAdfArray []GetServiceNowConnectorAuthAdfInput

func (GetServiceNowConnectorAuthAdfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuthAdf)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthAdfArray) ToGetServiceNowConnectorAuthAdfArrayOutput() GetServiceNowConnectorAuthAdfArrayOutput {
	return i.ToGetServiceNowConnectorAuthAdfArrayOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthAdfArray) ToGetServiceNowConnectorAuthAdfArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthAdfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthAdfArrayOutput)
}

type GetServiceNowConnectorAuthAdfOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthAdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuthAdf)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthAdfOutput) ToGetServiceNowConnectorAuthAdfOutput() GetServiceNowConnectorAuthAdfOutput {
	return o
}

func (o GetServiceNowConnectorAuthAdfOutput) ToGetServiceNowConnectorAuthAdfOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthAdfOutput {
	return o
}

// asdf URL.
func (o GetServiceNowConnectorAuthAdfOutput) AdfsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthAdf) string { return v.AdfsUrl }).(pulumi.StringOutput)
}

// Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthAdfOutput) CertificateRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthAdf) string { return v.CertificateRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthAdfOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthAdf) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthAdfOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthAdf) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthAdfOutput) ResourceIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthAdf) string { return v.ResourceIdRef }).(pulumi.StringOutput)
}

type GetServiceNowConnectorAuthAdfArrayOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthAdfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuthAdf)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthAdfArrayOutput) ToGetServiceNowConnectorAuthAdfArrayOutput() GetServiceNowConnectorAuthAdfArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthAdfArrayOutput) ToGetServiceNowConnectorAuthAdfArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthAdfArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthAdfArrayOutput) Index(i pulumi.IntInput) GetServiceNowConnectorAuthAdfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceNowConnectorAuthAdf {
		return vs[0].([]GetServiceNowConnectorAuthAdf)[vs[1].(int)]
	}).(GetServiceNowConnectorAuthAdfOutput)
}

type GetServiceNowConnectorAuthRefreshToken struct {
	// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef string `pulumi:"clientSecretRef"`
	// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	RefreshTokenRef string `pulumi:"refreshTokenRef"`
	// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Scope string `pulumi:"scope"`
	// Token url to use for authentication.
	TokenUrl string `pulumi:"tokenUrl"`
}

// GetServiceNowConnectorAuthRefreshTokenInput is an input type that accepts GetServiceNowConnectorAuthRefreshTokenArgs and GetServiceNowConnectorAuthRefreshTokenOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthRefreshTokenInput` via:
//
//	GetServiceNowConnectorAuthRefreshTokenArgs{...}
type GetServiceNowConnectorAuthRefreshTokenInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthRefreshTokenOutput() GetServiceNowConnectorAuthRefreshTokenOutput
	ToGetServiceNowConnectorAuthRefreshTokenOutputWithContext(context.Context) GetServiceNowConnectorAuthRefreshTokenOutput
}

type GetServiceNowConnectorAuthRefreshTokenArgs struct {
	// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
	// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	RefreshTokenRef pulumi.StringInput `pulumi:"refreshTokenRef"`
	// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	Scope pulumi.StringInput `pulumi:"scope"`
	// Token url to use for authentication.
	TokenUrl pulumi.StringInput `pulumi:"tokenUrl"`
}

func (GetServiceNowConnectorAuthRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthRefreshTokenArgs) ToGetServiceNowConnectorAuthRefreshTokenOutput() GetServiceNowConnectorAuthRefreshTokenOutput {
	return i.ToGetServiceNowConnectorAuthRefreshTokenOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthRefreshTokenArgs) ToGetServiceNowConnectorAuthRefreshTokenOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthRefreshTokenOutput)
}

// GetServiceNowConnectorAuthRefreshTokenArrayInput is an input type that accepts GetServiceNowConnectorAuthRefreshTokenArray and GetServiceNowConnectorAuthRefreshTokenArrayOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthRefreshTokenArrayInput` via:
//
//	GetServiceNowConnectorAuthRefreshTokenArray{ GetServiceNowConnectorAuthRefreshTokenArgs{...} }
type GetServiceNowConnectorAuthRefreshTokenArrayInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthRefreshTokenArrayOutput() GetServiceNowConnectorAuthRefreshTokenArrayOutput
	ToGetServiceNowConnectorAuthRefreshTokenArrayOutputWithContext(context.Context) GetServiceNowConnectorAuthRefreshTokenArrayOutput
}

type GetServiceNowConnectorAuthRefreshTokenArray []GetServiceNowConnectorAuthRefreshTokenInput

func (GetServiceNowConnectorAuthRefreshTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthRefreshTokenArray) ToGetServiceNowConnectorAuthRefreshTokenArrayOutput() GetServiceNowConnectorAuthRefreshTokenArrayOutput {
	return i.ToGetServiceNowConnectorAuthRefreshTokenArrayOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthRefreshTokenArray) ToGetServiceNowConnectorAuthRefreshTokenArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthRefreshTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthRefreshTokenArrayOutput)
}

type GetServiceNowConnectorAuthRefreshTokenOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthRefreshTokenOutput) ToGetServiceNowConnectorAuthRefreshTokenOutput() GetServiceNowConnectorAuthRefreshTokenOutput {
	return o
}

func (o GetServiceNowConnectorAuthRefreshTokenOutput) ToGetServiceNowConnectorAuthRefreshTokenOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthRefreshTokenOutput {
	return o
}

// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthRefreshTokenOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthRefreshToken) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthRefreshTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthRefreshToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthRefreshTokenOutput) RefreshTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthRefreshToken) string { return v.RefreshTokenRef }).(pulumi.StringOutput)
}

// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthRefreshTokenOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthRefreshToken) string { return v.Scope }).(pulumi.StringOutput)
}

// Token url to use for authentication.
func (o GetServiceNowConnectorAuthRefreshTokenOutput) TokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthRefreshToken) string { return v.TokenUrl }).(pulumi.StringOutput)
}

type GetServiceNowConnectorAuthRefreshTokenArrayOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthRefreshTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuthRefreshToken)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthRefreshTokenArrayOutput) ToGetServiceNowConnectorAuthRefreshTokenArrayOutput() GetServiceNowConnectorAuthRefreshTokenArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthRefreshTokenArrayOutput) ToGetServiceNowConnectorAuthRefreshTokenArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthRefreshTokenArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthRefreshTokenArrayOutput) Index(i pulumi.IntInput) GetServiceNowConnectorAuthRefreshTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceNowConnectorAuthRefreshToken {
		return vs[0].([]GetServiceNowConnectorAuthRefreshToken)[vs[1].(int)]
	}).(GetServiceNowConnectorAuthRefreshTokenOutput)
}

type GetServiceNowConnectorAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetServiceNowConnectorAuthUsernamePasswordInput is an input type that accepts GetServiceNowConnectorAuthUsernamePasswordArgs and GetServiceNowConnectorAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthUsernamePasswordInput` via:
//
//	GetServiceNowConnectorAuthUsernamePasswordArgs{...}
type GetServiceNowConnectorAuthUsernamePasswordInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthUsernamePasswordOutput() GetServiceNowConnectorAuthUsernamePasswordOutput
	ToGetServiceNowConnectorAuthUsernamePasswordOutputWithContext(context.Context) GetServiceNowConnectorAuthUsernamePasswordOutput
}

type GetServiceNowConnectorAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetServiceNowConnectorAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthUsernamePasswordArgs) ToGetServiceNowConnectorAuthUsernamePasswordOutput() GetServiceNowConnectorAuthUsernamePasswordOutput {
	return i.ToGetServiceNowConnectorAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthUsernamePasswordArgs) ToGetServiceNowConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthUsernamePasswordOutput)
}

// GetServiceNowConnectorAuthUsernamePasswordArrayInput is an input type that accepts GetServiceNowConnectorAuthUsernamePasswordArray and GetServiceNowConnectorAuthUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetServiceNowConnectorAuthUsernamePasswordArrayInput` via:
//
//	GetServiceNowConnectorAuthUsernamePasswordArray{ GetServiceNowConnectorAuthUsernamePasswordArgs{...} }
type GetServiceNowConnectorAuthUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetServiceNowConnectorAuthUsernamePasswordArrayOutput() GetServiceNowConnectorAuthUsernamePasswordArrayOutput
	ToGetServiceNowConnectorAuthUsernamePasswordArrayOutputWithContext(context.Context) GetServiceNowConnectorAuthUsernamePasswordArrayOutput
}

type GetServiceNowConnectorAuthUsernamePasswordArray []GetServiceNowConnectorAuthUsernamePasswordInput

func (GetServiceNowConnectorAuthUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i GetServiceNowConnectorAuthUsernamePasswordArray) ToGetServiceNowConnectorAuthUsernamePasswordArrayOutput() GetServiceNowConnectorAuthUsernamePasswordArrayOutput {
	return i.ToGetServiceNowConnectorAuthUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetServiceNowConnectorAuthUsernamePasswordArray) ToGetServiceNowConnectorAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNowConnectorAuthUsernamePasswordArrayOutput)
}

type GetServiceNowConnectorAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthUsernamePasswordOutput) ToGetServiceNowConnectorAuthUsernamePasswordOutput() GetServiceNowConnectorAuthUsernamePasswordOutput {
	return o
}

func (o GetServiceNowConnectorAuthUsernamePasswordOutput) ToGetServiceNowConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetServiceNowConnectorAuthUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetServiceNowConnectorAuthUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceNowConnectorAuthUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetServiceNowConnectorAuthUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetServiceNowConnectorAuthUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNowConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o GetServiceNowConnectorAuthUsernamePasswordArrayOutput) ToGetServiceNowConnectorAuthUsernamePasswordArrayOutput() GetServiceNowConnectorAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthUsernamePasswordArrayOutput) ToGetServiceNowConnectorAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetServiceNowConnectorAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetServiceNowConnectorAuthUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetServiceNowConnectorAuthUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceNowConnectorAuthUsernamePassword {
		return vs[0].([]GetServiceNowConnectorAuthUsernamePassword)[vs[1].(int)]
	}).(GetServiceNowConnectorAuthUsernamePasswordOutput)
}

type GetServiceOverridesV2GitDetails struct {
	// Name of the branch.
	Branch string `pulumi:"branch"`
	// Load service yaml from fallback branch
	LoadFromCache bool `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch bool `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote service override
	RepoName string `pulumi:"repoName"`
}

// GetServiceOverridesV2GitDetailsInput is an input type that accepts GetServiceOverridesV2GitDetailsArgs and GetServiceOverridesV2GitDetailsOutput values.
// You can construct a concrete instance of `GetServiceOverridesV2GitDetailsInput` via:
//
//	GetServiceOverridesV2GitDetailsArgs{...}
type GetServiceOverridesV2GitDetailsInput interface {
	pulumi.Input

	ToGetServiceOverridesV2GitDetailsOutput() GetServiceOverridesV2GitDetailsOutput
	ToGetServiceOverridesV2GitDetailsOutputWithContext(context.Context) GetServiceOverridesV2GitDetailsOutput
}

type GetServiceOverridesV2GitDetailsArgs struct {
	// Name of the branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Load service yaml from fallback branch
	LoadFromCache pulumi.BoolInput `pulumi:"loadFromCache"`
	// Load service yaml from fallback branch
	LoadFromFallbackBranch pulumi.BoolInput `pulumi:"loadFromFallbackBranch"`
	// Repo name of remote service override
	RepoName pulumi.StringInput `pulumi:"repoName"`
}

func (GetServiceOverridesV2GitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceOverridesV2GitDetails)(nil)).Elem()
}

func (i GetServiceOverridesV2GitDetailsArgs) ToGetServiceOverridesV2GitDetailsOutput() GetServiceOverridesV2GitDetailsOutput {
	return i.ToGetServiceOverridesV2GitDetailsOutputWithContext(context.Background())
}

func (i GetServiceOverridesV2GitDetailsArgs) ToGetServiceOverridesV2GitDetailsOutputWithContext(ctx context.Context) GetServiceOverridesV2GitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceOverridesV2GitDetailsOutput)
}

func (i GetServiceOverridesV2GitDetailsArgs) ToGetServiceOverridesV2GitDetailsPtrOutput() GetServiceOverridesV2GitDetailsPtrOutput {
	return i.ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(context.Background())
}

func (i GetServiceOverridesV2GitDetailsArgs) ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) GetServiceOverridesV2GitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceOverridesV2GitDetailsOutput).ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(ctx)
}

// GetServiceOverridesV2GitDetailsPtrInput is an input type that accepts GetServiceOverridesV2GitDetailsArgs, GetServiceOverridesV2GitDetailsPtr and GetServiceOverridesV2GitDetailsPtrOutput values.
// You can construct a concrete instance of `GetServiceOverridesV2GitDetailsPtrInput` via:
//
//	        GetServiceOverridesV2GitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetServiceOverridesV2GitDetailsPtrInput interface {
	pulumi.Input

	ToGetServiceOverridesV2GitDetailsPtrOutput() GetServiceOverridesV2GitDetailsPtrOutput
	ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(context.Context) GetServiceOverridesV2GitDetailsPtrOutput
}

type getServiceOverridesV2GitDetailsPtrType GetServiceOverridesV2GitDetailsArgs

func GetServiceOverridesV2GitDetailsPtr(v *GetServiceOverridesV2GitDetailsArgs) GetServiceOverridesV2GitDetailsPtrInput {
	return (*getServiceOverridesV2GitDetailsPtrType)(v)
}

func (*getServiceOverridesV2GitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceOverridesV2GitDetails)(nil)).Elem()
}

func (i *getServiceOverridesV2GitDetailsPtrType) ToGetServiceOverridesV2GitDetailsPtrOutput() GetServiceOverridesV2GitDetailsPtrOutput {
	return i.ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(context.Background())
}

func (i *getServiceOverridesV2GitDetailsPtrType) ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) GetServiceOverridesV2GitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceOverridesV2GitDetailsPtrOutput)
}

type GetServiceOverridesV2GitDetailsOutput struct{ *pulumi.OutputState }

func (GetServiceOverridesV2GitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceOverridesV2GitDetails)(nil)).Elem()
}

func (o GetServiceOverridesV2GitDetailsOutput) ToGetServiceOverridesV2GitDetailsOutput() GetServiceOverridesV2GitDetailsOutput {
	return o
}

func (o GetServiceOverridesV2GitDetailsOutput) ToGetServiceOverridesV2GitDetailsOutputWithContext(ctx context.Context) GetServiceOverridesV2GitDetailsOutput {
	return o
}

func (o GetServiceOverridesV2GitDetailsOutput) ToGetServiceOverridesV2GitDetailsPtrOutput() GetServiceOverridesV2GitDetailsPtrOutput {
	return o.ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(context.Background())
}

func (o GetServiceOverridesV2GitDetailsOutput) ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) GetServiceOverridesV2GitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetServiceOverridesV2GitDetails) *GetServiceOverridesV2GitDetails {
		return &v
	}).(GetServiceOverridesV2GitDetailsPtrOutput)
}

// Name of the branch.
func (o GetServiceOverridesV2GitDetailsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceOverridesV2GitDetails) string { return v.Branch }).(pulumi.StringOutput)
}

// Load service yaml from fallback branch
func (o GetServiceOverridesV2GitDetailsOutput) LoadFromCache() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceOverridesV2GitDetails) bool { return v.LoadFromCache }).(pulumi.BoolOutput)
}

// Load service yaml from fallback branch
func (o GetServiceOverridesV2GitDetailsOutput) LoadFromFallbackBranch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceOverridesV2GitDetails) bool { return v.LoadFromFallbackBranch }).(pulumi.BoolOutput)
}

// Repo name of remote service override
func (o GetServiceOverridesV2GitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceOverridesV2GitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

type GetServiceOverridesV2GitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetServiceOverridesV2GitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetServiceOverridesV2GitDetails)(nil)).Elem()
}

func (o GetServiceOverridesV2GitDetailsPtrOutput) ToGetServiceOverridesV2GitDetailsPtrOutput() GetServiceOverridesV2GitDetailsPtrOutput {
	return o
}

func (o GetServiceOverridesV2GitDetailsPtrOutput) ToGetServiceOverridesV2GitDetailsPtrOutputWithContext(ctx context.Context) GetServiceOverridesV2GitDetailsPtrOutput {
	return o
}

func (o GetServiceOverridesV2GitDetailsPtrOutput) Elem() GetServiceOverridesV2GitDetailsOutput {
	return o.ApplyT(func(v *GetServiceOverridesV2GitDetails) GetServiceOverridesV2GitDetails {
		if v != nil {
			return *v
		}
		var ret GetServiceOverridesV2GitDetails
		return ret
	}).(GetServiceOverridesV2GitDetailsOutput)
}

// Name of the branch.
func (o GetServiceOverridesV2GitDetailsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// Load service yaml from fallback branch
func (o GetServiceOverridesV2GitDetailsPtrOutput) LoadFromCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceOverridesV2GitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromCache
	}).(pulumi.BoolPtrOutput)
}

// Load service yaml from fallback branch
func (o GetServiceOverridesV2GitDetailsPtrOutput) LoadFromFallbackBranch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetServiceOverridesV2GitDetails) *bool {
		if v == nil {
			return nil
		}
		return &v.LoadFromFallbackBranch
	}).(pulumi.BoolPtrOutput)
}

// Repo name of remote service override
func (o GetServiceOverridesV2GitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetServiceOverridesV2GitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

type GetSpotConnectorPermanentToken struct {
	// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef string `pulumi:"apiTokenRef"`
	// Connect only using delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Execute on delegate or not.
	ExecuteOnDelegate bool `pulumi:"executeOnDelegate"`
	// Spot account id.
	SpotAccountId string `pulumi:"spotAccountId"`
	// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SpotAccountIdRef string `pulumi:"spotAccountIdRef"`
}

// GetSpotConnectorPermanentTokenInput is an input type that accepts GetSpotConnectorPermanentTokenArgs and GetSpotConnectorPermanentTokenOutput values.
// You can construct a concrete instance of `GetSpotConnectorPermanentTokenInput` via:
//
//	GetSpotConnectorPermanentTokenArgs{...}
type GetSpotConnectorPermanentTokenInput interface {
	pulumi.Input

	ToGetSpotConnectorPermanentTokenOutput() GetSpotConnectorPermanentTokenOutput
	ToGetSpotConnectorPermanentTokenOutputWithContext(context.Context) GetSpotConnectorPermanentTokenOutput
}

type GetSpotConnectorPermanentTokenArgs struct {
	// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
	// Connect only using delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolInput `pulumi:"executeOnDelegate"`
	// Spot account id.
	SpotAccountId pulumi.StringInput `pulumi:"spotAccountId"`
	// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SpotAccountIdRef pulumi.StringInput `pulumi:"spotAccountIdRef"`
}

func (GetSpotConnectorPermanentTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpotConnectorPermanentToken)(nil)).Elem()
}

func (i GetSpotConnectorPermanentTokenArgs) ToGetSpotConnectorPermanentTokenOutput() GetSpotConnectorPermanentTokenOutput {
	return i.ToGetSpotConnectorPermanentTokenOutputWithContext(context.Background())
}

func (i GetSpotConnectorPermanentTokenArgs) ToGetSpotConnectorPermanentTokenOutputWithContext(ctx context.Context) GetSpotConnectorPermanentTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpotConnectorPermanentTokenOutput)
}

// GetSpotConnectorPermanentTokenArrayInput is an input type that accepts GetSpotConnectorPermanentTokenArray and GetSpotConnectorPermanentTokenArrayOutput values.
// You can construct a concrete instance of `GetSpotConnectorPermanentTokenArrayInput` via:
//
//	GetSpotConnectorPermanentTokenArray{ GetSpotConnectorPermanentTokenArgs{...} }
type GetSpotConnectorPermanentTokenArrayInput interface {
	pulumi.Input

	ToGetSpotConnectorPermanentTokenArrayOutput() GetSpotConnectorPermanentTokenArrayOutput
	ToGetSpotConnectorPermanentTokenArrayOutputWithContext(context.Context) GetSpotConnectorPermanentTokenArrayOutput
}

type GetSpotConnectorPermanentTokenArray []GetSpotConnectorPermanentTokenInput

func (GetSpotConnectorPermanentTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpotConnectorPermanentToken)(nil)).Elem()
}

func (i GetSpotConnectorPermanentTokenArray) ToGetSpotConnectorPermanentTokenArrayOutput() GetSpotConnectorPermanentTokenArrayOutput {
	return i.ToGetSpotConnectorPermanentTokenArrayOutputWithContext(context.Background())
}

func (i GetSpotConnectorPermanentTokenArray) ToGetSpotConnectorPermanentTokenArrayOutputWithContext(ctx context.Context) GetSpotConnectorPermanentTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpotConnectorPermanentTokenArrayOutput)
}

type GetSpotConnectorPermanentTokenOutput struct{ *pulumi.OutputState }

func (GetSpotConnectorPermanentTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpotConnectorPermanentToken)(nil)).Elem()
}

func (o GetSpotConnectorPermanentTokenOutput) ToGetSpotConnectorPermanentTokenOutput() GetSpotConnectorPermanentTokenOutput {
	return o
}

func (o GetSpotConnectorPermanentTokenOutput) ToGetSpotConnectorPermanentTokenOutputWithContext(ctx context.Context) GetSpotConnectorPermanentTokenOutput {
	return o
}

// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetSpotConnectorPermanentTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpotConnectorPermanentToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

// Connect only using delegates with these tags.
func (o GetSpotConnectorPermanentTokenOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSpotConnectorPermanentToken) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Execute on delegate or not.
func (o GetSpotConnectorPermanentTokenOutput) ExecuteOnDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSpotConnectorPermanentToken) bool { return v.ExecuteOnDelegate }).(pulumi.BoolOutput)
}

// Spot account id.
func (o GetSpotConnectorPermanentTokenOutput) SpotAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpotConnectorPermanentToken) string { return v.SpotAccountId }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetSpotConnectorPermanentTokenOutput) SpotAccountIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpotConnectorPermanentToken) string { return v.SpotAccountIdRef }).(pulumi.StringOutput)
}

type GetSpotConnectorPermanentTokenArrayOutput struct{ *pulumi.OutputState }

func (GetSpotConnectorPermanentTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpotConnectorPermanentToken)(nil)).Elem()
}

func (o GetSpotConnectorPermanentTokenArrayOutput) ToGetSpotConnectorPermanentTokenArrayOutput() GetSpotConnectorPermanentTokenArrayOutput {
	return o
}

func (o GetSpotConnectorPermanentTokenArrayOutput) ToGetSpotConnectorPermanentTokenArrayOutputWithContext(ctx context.Context) GetSpotConnectorPermanentTokenArrayOutput {
	return o
}

func (o GetSpotConnectorPermanentTokenArrayOutput) Index(i pulumi.IntInput) GetSpotConnectorPermanentTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSpotConnectorPermanentToken {
		return vs[0].([]GetSpotConnectorPermanentToken)[vs[1].(int)]
	}).(GetSpotConnectorPermanentTokenOutput)
}

type GetTasConnectorCredential struct {
	// Authenticate to Tas using manual details.
	TasManualDetails []GetTasConnectorCredentialTasManualDetail `pulumi:"tasManualDetails"`
	// Type can be ManualConfig.
	Type string `pulumi:"type"`
}

// GetTasConnectorCredentialInput is an input type that accepts GetTasConnectorCredentialArgs and GetTasConnectorCredentialOutput values.
// You can construct a concrete instance of `GetTasConnectorCredentialInput` via:
//
//	GetTasConnectorCredentialArgs{...}
type GetTasConnectorCredentialInput interface {
	pulumi.Input

	ToGetTasConnectorCredentialOutput() GetTasConnectorCredentialOutput
	ToGetTasConnectorCredentialOutputWithContext(context.Context) GetTasConnectorCredentialOutput
}

type GetTasConnectorCredentialArgs struct {
	// Authenticate to Tas using manual details.
	TasManualDetails GetTasConnectorCredentialTasManualDetailArrayInput `pulumi:"tasManualDetails"`
	// Type can be ManualConfig.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTasConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasConnectorCredential)(nil)).Elem()
}

func (i GetTasConnectorCredentialArgs) ToGetTasConnectorCredentialOutput() GetTasConnectorCredentialOutput {
	return i.ToGetTasConnectorCredentialOutputWithContext(context.Background())
}

func (i GetTasConnectorCredentialArgs) ToGetTasConnectorCredentialOutputWithContext(ctx context.Context) GetTasConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasConnectorCredentialOutput)
}

// GetTasConnectorCredentialArrayInput is an input type that accepts GetTasConnectorCredentialArray and GetTasConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetTasConnectorCredentialArrayInput` via:
//
//	GetTasConnectorCredentialArray{ GetTasConnectorCredentialArgs{...} }
type GetTasConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetTasConnectorCredentialArrayOutput() GetTasConnectorCredentialArrayOutput
	ToGetTasConnectorCredentialArrayOutputWithContext(context.Context) GetTasConnectorCredentialArrayOutput
}

type GetTasConnectorCredentialArray []GetTasConnectorCredentialInput

func (GetTasConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasConnectorCredential)(nil)).Elem()
}

func (i GetTasConnectorCredentialArray) ToGetTasConnectorCredentialArrayOutput() GetTasConnectorCredentialArrayOutput {
	return i.ToGetTasConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetTasConnectorCredentialArray) ToGetTasConnectorCredentialArrayOutputWithContext(ctx context.Context) GetTasConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasConnectorCredentialArrayOutput)
}

type GetTasConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetTasConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasConnectorCredential)(nil)).Elem()
}

func (o GetTasConnectorCredentialOutput) ToGetTasConnectorCredentialOutput() GetTasConnectorCredentialOutput {
	return o
}

func (o GetTasConnectorCredentialOutput) ToGetTasConnectorCredentialOutputWithContext(ctx context.Context) GetTasConnectorCredentialOutput {
	return o
}

// Authenticate to Tas using manual details.
func (o GetTasConnectorCredentialOutput) TasManualDetails() GetTasConnectorCredentialTasManualDetailArrayOutput {
	return o.ApplyT(func(v GetTasConnectorCredential) []GetTasConnectorCredentialTasManualDetail {
		return v.TasManualDetails
	}).(GetTasConnectorCredentialTasManualDetailArrayOutput)
}

// Type can be ManualConfig.
func (o GetTasConnectorCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasConnectorCredential) string { return v.Type }).(pulumi.StringOutput)
}

type GetTasConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetTasConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasConnectorCredential)(nil)).Elem()
}

func (o GetTasConnectorCredentialArrayOutput) ToGetTasConnectorCredentialArrayOutput() GetTasConnectorCredentialArrayOutput {
	return o
}

func (o GetTasConnectorCredentialArrayOutput) ToGetTasConnectorCredentialArrayOutputWithContext(ctx context.Context) GetTasConnectorCredentialArrayOutput {
	return o
}

func (o GetTasConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetTasConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTasConnectorCredential {
		return vs[0].([]GetTasConnectorCredential)[vs[1].(int)]
	}).(GetTasConnectorCredentialOutput)
}

type GetTasConnectorCredentialTasManualDetail struct {
	// URL of the Tas server.
	EndpointUrl string `pulumi:"endpointUrl"`
	// Reference of the secret for the password.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetTasConnectorCredentialTasManualDetailInput is an input type that accepts GetTasConnectorCredentialTasManualDetailArgs and GetTasConnectorCredentialTasManualDetailOutput values.
// You can construct a concrete instance of `GetTasConnectorCredentialTasManualDetailInput` via:
//
//	GetTasConnectorCredentialTasManualDetailArgs{...}
type GetTasConnectorCredentialTasManualDetailInput interface {
	pulumi.Input

	ToGetTasConnectorCredentialTasManualDetailOutput() GetTasConnectorCredentialTasManualDetailOutput
	ToGetTasConnectorCredentialTasManualDetailOutputWithContext(context.Context) GetTasConnectorCredentialTasManualDetailOutput
}

type GetTasConnectorCredentialTasManualDetailArgs struct {
	// URL of the Tas server.
	EndpointUrl pulumi.StringInput `pulumi:"endpointUrl"`
	// Reference of the secret for the password.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetTasConnectorCredentialTasManualDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasConnectorCredentialTasManualDetail)(nil)).Elem()
}

func (i GetTasConnectorCredentialTasManualDetailArgs) ToGetTasConnectorCredentialTasManualDetailOutput() GetTasConnectorCredentialTasManualDetailOutput {
	return i.ToGetTasConnectorCredentialTasManualDetailOutputWithContext(context.Background())
}

func (i GetTasConnectorCredentialTasManualDetailArgs) ToGetTasConnectorCredentialTasManualDetailOutputWithContext(ctx context.Context) GetTasConnectorCredentialTasManualDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasConnectorCredentialTasManualDetailOutput)
}

// GetTasConnectorCredentialTasManualDetailArrayInput is an input type that accepts GetTasConnectorCredentialTasManualDetailArray and GetTasConnectorCredentialTasManualDetailArrayOutput values.
// You can construct a concrete instance of `GetTasConnectorCredentialTasManualDetailArrayInput` via:
//
//	GetTasConnectorCredentialTasManualDetailArray{ GetTasConnectorCredentialTasManualDetailArgs{...} }
type GetTasConnectorCredentialTasManualDetailArrayInput interface {
	pulumi.Input

	ToGetTasConnectorCredentialTasManualDetailArrayOutput() GetTasConnectorCredentialTasManualDetailArrayOutput
	ToGetTasConnectorCredentialTasManualDetailArrayOutputWithContext(context.Context) GetTasConnectorCredentialTasManualDetailArrayOutput
}

type GetTasConnectorCredentialTasManualDetailArray []GetTasConnectorCredentialTasManualDetailInput

func (GetTasConnectorCredentialTasManualDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasConnectorCredentialTasManualDetail)(nil)).Elem()
}

func (i GetTasConnectorCredentialTasManualDetailArray) ToGetTasConnectorCredentialTasManualDetailArrayOutput() GetTasConnectorCredentialTasManualDetailArrayOutput {
	return i.ToGetTasConnectorCredentialTasManualDetailArrayOutputWithContext(context.Background())
}

func (i GetTasConnectorCredentialTasManualDetailArray) ToGetTasConnectorCredentialTasManualDetailArrayOutputWithContext(ctx context.Context) GetTasConnectorCredentialTasManualDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTasConnectorCredentialTasManualDetailArrayOutput)
}

type GetTasConnectorCredentialTasManualDetailOutput struct{ *pulumi.OutputState }

func (GetTasConnectorCredentialTasManualDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasConnectorCredentialTasManualDetail)(nil)).Elem()
}

func (o GetTasConnectorCredentialTasManualDetailOutput) ToGetTasConnectorCredentialTasManualDetailOutput() GetTasConnectorCredentialTasManualDetailOutput {
	return o
}

func (o GetTasConnectorCredentialTasManualDetailOutput) ToGetTasConnectorCredentialTasManualDetailOutputWithContext(ctx context.Context) GetTasConnectorCredentialTasManualDetailOutput {
	return o
}

// URL of the Tas server.
func (o GetTasConnectorCredentialTasManualDetailOutput) EndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasConnectorCredentialTasManualDetail) string { return v.EndpointUrl }).(pulumi.StringOutput)
}

// Reference of the secret for the password.
func (o GetTasConnectorCredentialTasManualDetailOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasConnectorCredentialTasManualDetail) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetTasConnectorCredentialTasManualDetailOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasConnectorCredentialTasManualDetail) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o GetTasConnectorCredentialTasManualDetailOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasConnectorCredentialTasManualDetail) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetTasConnectorCredentialTasManualDetailArrayOutput struct{ *pulumi.OutputState }

func (GetTasConnectorCredentialTasManualDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTasConnectorCredentialTasManualDetail)(nil)).Elem()
}

func (o GetTasConnectorCredentialTasManualDetailArrayOutput) ToGetTasConnectorCredentialTasManualDetailArrayOutput() GetTasConnectorCredentialTasManualDetailArrayOutput {
	return o
}

func (o GetTasConnectorCredentialTasManualDetailArrayOutput) ToGetTasConnectorCredentialTasManualDetailArrayOutputWithContext(ctx context.Context) GetTasConnectorCredentialTasManualDetailArrayOutput {
	return o
}

func (o GetTasConnectorCredentialTasManualDetailArrayOutput) Index(i pulumi.IntInput) GetTasConnectorCredentialTasManualDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTasConnectorCredentialTasManualDetail {
		return vs[0].([]GetTasConnectorCredentialTasManualDetail)[vs[1].(int)]
	}).(GetTasConnectorCredentialTasManualDetailOutput)
}

type GetTemplateFiltersFilterProperty struct {
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, TemplateSetup, TemplateExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// GetTemplateFiltersFilterPropertyInput is an input type that accepts GetTemplateFiltersFilterPropertyArgs and GetTemplateFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetTemplateFiltersFilterPropertyInput` via:
//
//	GetTemplateFiltersFilterPropertyArgs{...}
type GetTemplateFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetTemplateFiltersFilterPropertyOutput() GetTemplateFiltersFilterPropertyOutput
	ToGetTemplateFiltersFilterPropertyOutputWithContext(context.Context) GetTemplateFiltersFilterPropertyOutput
}

type GetTemplateFiltersFilterPropertyArgs struct {
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, TemplateSetup, TemplateExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetTemplateFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (i GetTemplateFiltersFilterPropertyArgs) ToGetTemplateFiltersFilterPropertyOutput() GetTemplateFiltersFilterPropertyOutput {
	return i.ToGetTemplateFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetTemplateFiltersFilterPropertyArgs) ToGetTemplateFiltersFilterPropertyOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateFiltersFilterPropertyOutput)
}

// GetTemplateFiltersFilterPropertyArrayInput is an input type that accepts GetTemplateFiltersFilterPropertyArray and GetTemplateFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetTemplateFiltersFilterPropertyArrayInput` via:
//
//	GetTemplateFiltersFilterPropertyArray{ GetTemplateFiltersFilterPropertyArgs{...} }
type GetTemplateFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetTemplateFiltersFilterPropertyArrayOutput() GetTemplateFiltersFilterPropertyArrayOutput
	ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(context.Context) GetTemplateFiltersFilterPropertyArrayOutput
}

type GetTemplateFiltersFilterPropertyArray []GetTemplateFiltersFilterPropertyInput

func (GetTemplateFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (i GetTemplateFiltersFilterPropertyArray) ToGetTemplateFiltersFilterPropertyArrayOutput() GetTemplateFiltersFilterPropertyArrayOutput {
	return i.ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetTemplateFiltersFilterPropertyArray) ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateFiltersFilterPropertyArrayOutput)
}

type GetTemplateFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetTemplateFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (o GetTemplateFiltersFilterPropertyOutput) ToGetTemplateFiltersFilterPropertyOutput() GetTemplateFiltersFilterPropertyOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyOutput) ToGetTemplateFiltersFilterPropertyOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyOutput {
	return o
}

// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, TemplateSetup, TemplateExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
func (o GetTemplateFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o GetTemplateFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTemplateFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetTemplateFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (o GetTemplateFiltersFilterPropertyArrayOutput) ToGetTemplateFiltersFilterPropertyArrayOutput() GetTemplateFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyArrayOutput) ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetTemplateFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateFiltersFilterProperty {
		return vs[0].([]GetTemplateFiltersFilterProperty)[vs[1].(int)]
	}).(GetTemplateFiltersFilterPropertyOutput)
}

type GetTemplateGitDetails struct {
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// File url of the Entity in the repository.
	FileUrl *string `pulumi:"fileUrl"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Repo url of the Entity in the repository.
	RepoUrl *string `pulumi:"repoUrl"`
}

// GetTemplateGitDetailsInput is an input type that accepts GetTemplateGitDetailsArgs and GetTemplateGitDetailsOutput values.
// You can construct a concrete instance of `GetTemplateGitDetailsInput` via:
//
//	GetTemplateGitDetailsArgs{...}
type GetTemplateGitDetailsInput interface {
	pulumi.Input

	ToGetTemplateGitDetailsOutput() GetTemplateGitDetailsOutput
	ToGetTemplateGitDetailsOutputWithContext(context.Context) GetTemplateGitDetailsOutput
}

type GetTemplateGitDetailsArgs struct {
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// File url of the Entity in the repository.
	FileUrl pulumi.StringPtrInput `pulumi:"fileUrl"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Repo url of the Entity in the repository.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (GetTemplateGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateGitDetails)(nil)).Elem()
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsOutput() GetTemplateGitDetailsOutput {
	return i.ToGetTemplateGitDetailsOutputWithContext(context.Background())
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsOutputWithContext(ctx context.Context) GetTemplateGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateGitDetailsOutput)
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return i.ToGetTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateGitDetailsOutput).ToGetTemplateGitDetailsPtrOutputWithContext(ctx)
}

// GetTemplateGitDetailsPtrInput is an input type that accepts GetTemplateGitDetailsArgs, GetTemplateGitDetailsPtr and GetTemplateGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetTemplateGitDetailsPtrInput` via:
//
//	        GetTemplateGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetTemplateGitDetailsPtrInput interface {
	pulumi.Input

	ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput
	ToGetTemplateGitDetailsPtrOutputWithContext(context.Context) GetTemplateGitDetailsPtrOutput
}

type getTemplateGitDetailsPtrType GetTemplateGitDetailsArgs

func GetTemplateGitDetailsPtr(v *GetTemplateGitDetailsArgs) GetTemplateGitDetailsPtrInput {
	return (*getTemplateGitDetailsPtrType)(v)
}

func (*getTemplateGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTemplateGitDetails)(nil)).Elem()
}

func (i *getTemplateGitDetailsPtrType) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return i.ToGetTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getTemplateGitDetailsPtrType) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateGitDetailsPtrOutput)
}

type GetTemplateGitDetailsOutput struct{ *pulumi.OutputState }

func (GetTemplateGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateGitDetails)(nil)).Elem()
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsOutput() GetTemplateGitDetailsOutput {
	return o
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsOutputWithContext(ctx context.Context) GetTemplateGitDetailsOutput {
	return o
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return o.ToGetTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTemplateGitDetails) *GetTemplateGitDetails {
		return &v
	}).(GetTemplateGitDetailsPtrOutput)
}

// Name of the branch.
func (o GetTemplateGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetTemplateGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// File url of the Entity in the repository.
func (o GetTemplateGitDetailsOutput) FileUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.FileUrl }).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsOutput) LastCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) string { return v.LastCommitId }).(pulumi.StringOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsOutput) LastObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) string { return v.LastObjectId }).(pulumi.StringOutput)
}

// Name of the repository.
func (o GetTemplateGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Repo url of the Entity in the repository.
func (o GetTemplateGitDetailsOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type GetTemplateGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetTemplateGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTemplateGitDetails)(nil)).Elem()
}

func (o GetTemplateGitDetailsPtrOutput) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return o
}

func (o GetTemplateGitDetailsPtrOutput) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return o
}

func (o GetTemplateGitDetailsPtrOutput) Elem() GetTemplateGitDetailsOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) GetTemplateGitDetails {
		if v != nil {
			return *v
		}
		var ret GetTemplateGitDetails
		return ret
	}).(GetTemplateGitDetailsOutput)
}

// Name of the branch.
func (o GetTemplateGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetTemplateGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// File url of the Entity in the repository.
func (o GetTemplateGitDetailsPtrOutput) FileUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FileUrl
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o GetTemplateGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Repo url of the Entity in the repository.
func (o GetTemplateGitDetailsPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

type GetTerraformCloudConnectorCredential struct {
	// API token credentials to use for authentication.
	ApiTokens []GetTerraformCloudConnectorCredentialApiToken `pulumi:"apiTokens"`
}

// GetTerraformCloudConnectorCredentialInput is an input type that accepts GetTerraformCloudConnectorCredentialArgs and GetTerraformCloudConnectorCredentialOutput values.
// You can construct a concrete instance of `GetTerraformCloudConnectorCredentialInput` via:
//
//	GetTerraformCloudConnectorCredentialArgs{...}
type GetTerraformCloudConnectorCredentialInput interface {
	pulumi.Input

	ToGetTerraformCloudConnectorCredentialOutput() GetTerraformCloudConnectorCredentialOutput
	ToGetTerraformCloudConnectorCredentialOutputWithContext(context.Context) GetTerraformCloudConnectorCredentialOutput
}

type GetTerraformCloudConnectorCredentialArgs struct {
	// API token credentials to use for authentication.
	ApiTokens GetTerraformCloudConnectorCredentialApiTokenArrayInput `pulumi:"apiTokens"`
}

func (GetTerraformCloudConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTerraformCloudConnectorCredential)(nil)).Elem()
}

func (i GetTerraformCloudConnectorCredentialArgs) ToGetTerraformCloudConnectorCredentialOutput() GetTerraformCloudConnectorCredentialOutput {
	return i.ToGetTerraformCloudConnectorCredentialOutputWithContext(context.Background())
}

func (i GetTerraformCloudConnectorCredentialArgs) ToGetTerraformCloudConnectorCredentialOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTerraformCloudConnectorCredentialOutput)
}

// GetTerraformCloudConnectorCredentialArrayInput is an input type that accepts GetTerraformCloudConnectorCredentialArray and GetTerraformCloudConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetTerraformCloudConnectorCredentialArrayInput` via:
//
//	GetTerraformCloudConnectorCredentialArray{ GetTerraformCloudConnectorCredentialArgs{...} }
type GetTerraformCloudConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetTerraformCloudConnectorCredentialArrayOutput() GetTerraformCloudConnectorCredentialArrayOutput
	ToGetTerraformCloudConnectorCredentialArrayOutputWithContext(context.Context) GetTerraformCloudConnectorCredentialArrayOutput
}

type GetTerraformCloudConnectorCredentialArray []GetTerraformCloudConnectorCredentialInput

func (GetTerraformCloudConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTerraformCloudConnectorCredential)(nil)).Elem()
}

func (i GetTerraformCloudConnectorCredentialArray) ToGetTerraformCloudConnectorCredentialArrayOutput() GetTerraformCloudConnectorCredentialArrayOutput {
	return i.ToGetTerraformCloudConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetTerraformCloudConnectorCredentialArray) ToGetTerraformCloudConnectorCredentialArrayOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTerraformCloudConnectorCredentialArrayOutput)
}

type GetTerraformCloudConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetTerraformCloudConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTerraformCloudConnectorCredential)(nil)).Elem()
}

func (o GetTerraformCloudConnectorCredentialOutput) ToGetTerraformCloudConnectorCredentialOutput() GetTerraformCloudConnectorCredentialOutput {
	return o
}

func (o GetTerraformCloudConnectorCredentialOutput) ToGetTerraformCloudConnectorCredentialOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialOutput {
	return o
}

// API token credentials to use for authentication.
func (o GetTerraformCloudConnectorCredentialOutput) ApiTokens() GetTerraformCloudConnectorCredentialApiTokenArrayOutput {
	return o.ApplyT(func(v GetTerraformCloudConnectorCredential) []GetTerraformCloudConnectorCredentialApiToken {
		return v.ApiTokens
	}).(GetTerraformCloudConnectorCredentialApiTokenArrayOutput)
}

type GetTerraformCloudConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetTerraformCloudConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTerraformCloudConnectorCredential)(nil)).Elem()
}

func (o GetTerraformCloudConnectorCredentialArrayOutput) ToGetTerraformCloudConnectorCredentialArrayOutput() GetTerraformCloudConnectorCredentialArrayOutput {
	return o
}

func (o GetTerraformCloudConnectorCredentialArrayOutput) ToGetTerraformCloudConnectorCredentialArrayOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialArrayOutput {
	return o
}

func (o GetTerraformCloudConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetTerraformCloudConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTerraformCloudConnectorCredential {
		return vs[0].([]GetTerraformCloudConnectorCredential)[vs[1].(int)]
	}).(GetTerraformCloudConnectorCredentialOutput)
}

type GetTerraformCloudConnectorCredentialApiToken struct {
	// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef string `pulumi:"apiTokenRef"`
}

// GetTerraformCloudConnectorCredentialApiTokenInput is an input type that accepts GetTerraformCloudConnectorCredentialApiTokenArgs and GetTerraformCloudConnectorCredentialApiTokenOutput values.
// You can construct a concrete instance of `GetTerraformCloudConnectorCredentialApiTokenInput` via:
//
//	GetTerraformCloudConnectorCredentialApiTokenArgs{...}
type GetTerraformCloudConnectorCredentialApiTokenInput interface {
	pulumi.Input

	ToGetTerraformCloudConnectorCredentialApiTokenOutput() GetTerraformCloudConnectorCredentialApiTokenOutput
	ToGetTerraformCloudConnectorCredentialApiTokenOutputWithContext(context.Context) GetTerraformCloudConnectorCredentialApiTokenOutput
}

type GetTerraformCloudConnectorCredentialApiTokenArgs struct {
	// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
}

func (GetTerraformCloudConnectorCredentialApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTerraformCloudConnectorCredentialApiToken)(nil)).Elem()
}

func (i GetTerraformCloudConnectorCredentialApiTokenArgs) ToGetTerraformCloudConnectorCredentialApiTokenOutput() GetTerraformCloudConnectorCredentialApiTokenOutput {
	return i.ToGetTerraformCloudConnectorCredentialApiTokenOutputWithContext(context.Background())
}

func (i GetTerraformCloudConnectorCredentialApiTokenArgs) ToGetTerraformCloudConnectorCredentialApiTokenOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTerraformCloudConnectorCredentialApiTokenOutput)
}

// GetTerraformCloudConnectorCredentialApiTokenArrayInput is an input type that accepts GetTerraformCloudConnectorCredentialApiTokenArray and GetTerraformCloudConnectorCredentialApiTokenArrayOutput values.
// You can construct a concrete instance of `GetTerraformCloudConnectorCredentialApiTokenArrayInput` via:
//
//	GetTerraformCloudConnectorCredentialApiTokenArray{ GetTerraformCloudConnectorCredentialApiTokenArgs{...} }
type GetTerraformCloudConnectorCredentialApiTokenArrayInput interface {
	pulumi.Input

	ToGetTerraformCloudConnectorCredentialApiTokenArrayOutput() GetTerraformCloudConnectorCredentialApiTokenArrayOutput
	ToGetTerraformCloudConnectorCredentialApiTokenArrayOutputWithContext(context.Context) GetTerraformCloudConnectorCredentialApiTokenArrayOutput
}

type GetTerraformCloudConnectorCredentialApiTokenArray []GetTerraformCloudConnectorCredentialApiTokenInput

func (GetTerraformCloudConnectorCredentialApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTerraformCloudConnectorCredentialApiToken)(nil)).Elem()
}

func (i GetTerraformCloudConnectorCredentialApiTokenArray) ToGetTerraformCloudConnectorCredentialApiTokenArrayOutput() GetTerraformCloudConnectorCredentialApiTokenArrayOutput {
	return i.ToGetTerraformCloudConnectorCredentialApiTokenArrayOutputWithContext(context.Background())
}

func (i GetTerraformCloudConnectorCredentialApiTokenArray) ToGetTerraformCloudConnectorCredentialApiTokenArrayOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTerraformCloudConnectorCredentialApiTokenArrayOutput)
}

type GetTerraformCloudConnectorCredentialApiTokenOutput struct{ *pulumi.OutputState }

func (GetTerraformCloudConnectorCredentialApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTerraformCloudConnectorCredentialApiToken)(nil)).Elem()
}

func (o GetTerraformCloudConnectorCredentialApiTokenOutput) ToGetTerraformCloudConnectorCredentialApiTokenOutput() GetTerraformCloudConnectorCredentialApiTokenOutput {
	return o
}

func (o GetTerraformCloudConnectorCredentialApiTokenOutput) ToGetTerraformCloudConnectorCredentialApiTokenOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialApiTokenOutput {
	return o
}

// Reference to a secret containing the API token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetTerraformCloudConnectorCredentialApiTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetTerraformCloudConnectorCredentialApiToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

type GetTerraformCloudConnectorCredentialApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetTerraformCloudConnectorCredentialApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTerraformCloudConnectorCredentialApiToken)(nil)).Elem()
}

func (o GetTerraformCloudConnectorCredentialApiTokenArrayOutput) ToGetTerraformCloudConnectorCredentialApiTokenArrayOutput() GetTerraformCloudConnectorCredentialApiTokenArrayOutput {
	return o
}

func (o GetTerraformCloudConnectorCredentialApiTokenArrayOutput) ToGetTerraformCloudConnectorCredentialApiTokenArrayOutputWithContext(ctx context.Context) GetTerraformCloudConnectorCredentialApiTokenArrayOutput {
	return o
}

func (o GetTerraformCloudConnectorCredentialApiTokenArrayOutput) Index(i pulumi.IntInput) GetTerraformCloudConnectorCredentialApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTerraformCloudConnectorCredentialApiToken {
		return vs[0].([]GetTerraformCloudConnectorCredentialApiToken)[vs[1].(int)]
	}).(GetTerraformCloudConnectorCredentialApiTokenOutput)
}

type GetUsergroupNotificationConfig struct {
	// Group email.
	GroupEmail string `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl string `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey string `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers bool `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl string `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type string `pulumi:"type"`
}

// GetUsergroupNotificationConfigInput is an input type that accepts GetUsergroupNotificationConfigArgs and GetUsergroupNotificationConfigOutput values.
// You can construct a concrete instance of `GetUsergroupNotificationConfigInput` via:
//
//	GetUsergroupNotificationConfigArgs{...}
type GetUsergroupNotificationConfigInput interface {
	pulumi.Input

	ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput
	ToGetUsergroupNotificationConfigOutputWithContext(context.Context) GetUsergroupNotificationConfigOutput
}

type GetUsergroupNotificationConfigArgs struct {
	// Group email.
	GroupEmail pulumi.StringInput `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl pulumi.StringInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey pulumi.StringInput `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers pulumi.BoolInput `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl pulumi.StringInput `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetUsergroupNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsergroupNotificationConfig)(nil)).Elem()
}

func (i GetUsergroupNotificationConfigArgs) ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput {
	return i.ToGetUsergroupNotificationConfigOutputWithContext(context.Background())
}

func (i GetUsergroupNotificationConfigArgs) ToGetUsergroupNotificationConfigOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsergroupNotificationConfigOutput)
}

// GetUsergroupNotificationConfigArrayInput is an input type that accepts GetUsergroupNotificationConfigArray and GetUsergroupNotificationConfigArrayOutput values.
// You can construct a concrete instance of `GetUsergroupNotificationConfigArrayInput` via:
//
//	GetUsergroupNotificationConfigArray{ GetUsergroupNotificationConfigArgs{...} }
type GetUsergroupNotificationConfigArrayInput interface {
	pulumi.Input

	ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput
	ToGetUsergroupNotificationConfigArrayOutputWithContext(context.Context) GetUsergroupNotificationConfigArrayOutput
}

type GetUsergroupNotificationConfigArray []GetUsergroupNotificationConfigInput

func (GetUsergroupNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsergroupNotificationConfig)(nil)).Elem()
}

func (i GetUsergroupNotificationConfigArray) ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput {
	return i.ToGetUsergroupNotificationConfigArrayOutputWithContext(context.Background())
}

func (i GetUsergroupNotificationConfigArray) ToGetUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsergroupNotificationConfigArrayOutput)
}

type GetUsergroupNotificationConfigOutput struct{ *pulumi.OutputState }

func (GetUsergroupNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsergroupNotificationConfig)(nil)).Elem()
}

func (o GetUsergroupNotificationConfigOutput) ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput {
	return o
}

func (o GetUsergroupNotificationConfigOutput) ToGetUsergroupNotificationConfigOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigOutput {
	return o
}

// Group email.
func (o GetUsergroupNotificationConfigOutput) GroupEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.GroupEmail }).(pulumi.StringOutput)
}

// Url of Microsoft teams webhook.
func (o GetUsergroupNotificationConfigOutput) MicrosoftTeamsWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringOutput)
}

// Pager duty key.
func (o GetUsergroupNotificationConfigOutput) PagerDutyKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.PagerDutyKey }).(pulumi.StringOutput)
}

// Send email to all the group members.
func (o GetUsergroupNotificationConfigOutput) SendEmailToAllUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) bool { return v.SendEmailToAllUsers }).(pulumi.BoolOutput)
}

// Url of slack webhook.
func (o GetUsergroupNotificationConfigOutput) SlackWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.SlackWebhookUrl }).(pulumi.StringOutput)
}

// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
func (o GetUsergroupNotificationConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetUsergroupNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetUsergroupNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsergroupNotificationConfig)(nil)).Elem()
}

func (o GetUsergroupNotificationConfigArrayOutput) ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput {
	return o
}

func (o GetUsergroupNotificationConfigArrayOutput) ToGetUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigArrayOutput {
	return o
}

func (o GetUsergroupNotificationConfigArrayOutput) Index(i pulumi.IntInput) GetUsergroupNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsergroupNotificationConfig {
		return vs[0].([]GetUsergroupNotificationConfig)[vs[1].(int)]
	}).(GetUsergroupNotificationConfigOutput)
}

type GetVariablesSpec struct {
	// FixedValue of the variable
	FixedValue string `pulumi:"fixedValue"`
	// Type of Value of the Variable. For now only FIXED is supported
	ValueType string `pulumi:"valueType"`
}

// GetVariablesSpecInput is an input type that accepts GetVariablesSpecArgs and GetVariablesSpecOutput values.
// You can construct a concrete instance of `GetVariablesSpecInput` via:
//
//	GetVariablesSpecArgs{...}
type GetVariablesSpecInput interface {
	pulumi.Input

	ToGetVariablesSpecOutput() GetVariablesSpecOutput
	ToGetVariablesSpecOutputWithContext(context.Context) GetVariablesSpecOutput
}

type GetVariablesSpecArgs struct {
	// FixedValue of the variable
	FixedValue pulumi.StringInput `pulumi:"fixedValue"`
	// Type of Value of the Variable. For now only FIXED is supported
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetVariablesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesSpec)(nil)).Elem()
}

func (i GetVariablesSpecArgs) ToGetVariablesSpecOutput() GetVariablesSpecOutput {
	return i.ToGetVariablesSpecOutputWithContext(context.Background())
}

func (i GetVariablesSpecArgs) ToGetVariablesSpecOutputWithContext(ctx context.Context) GetVariablesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesSpecOutput)
}

// GetVariablesSpecArrayInput is an input type that accepts GetVariablesSpecArray and GetVariablesSpecArrayOutput values.
// You can construct a concrete instance of `GetVariablesSpecArrayInput` via:
//
//	GetVariablesSpecArray{ GetVariablesSpecArgs{...} }
type GetVariablesSpecArrayInput interface {
	pulumi.Input

	ToGetVariablesSpecArrayOutput() GetVariablesSpecArrayOutput
	ToGetVariablesSpecArrayOutputWithContext(context.Context) GetVariablesSpecArrayOutput
}

type GetVariablesSpecArray []GetVariablesSpecInput

func (GetVariablesSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesSpec)(nil)).Elem()
}

func (i GetVariablesSpecArray) ToGetVariablesSpecArrayOutput() GetVariablesSpecArrayOutput {
	return i.ToGetVariablesSpecArrayOutputWithContext(context.Background())
}

func (i GetVariablesSpecArray) ToGetVariablesSpecArrayOutputWithContext(ctx context.Context) GetVariablesSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesSpecArrayOutput)
}

type GetVariablesSpecOutput struct{ *pulumi.OutputState }

func (GetVariablesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesSpec)(nil)).Elem()
}

func (o GetVariablesSpecOutput) ToGetVariablesSpecOutput() GetVariablesSpecOutput {
	return o
}

func (o GetVariablesSpecOutput) ToGetVariablesSpecOutputWithContext(ctx context.Context) GetVariablesSpecOutput {
	return o
}

// FixedValue of the variable
func (o GetVariablesSpecOutput) FixedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesSpec) string { return v.FixedValue }).(pulumi.StringOutput)
}

// Type of Value of the Variable. For now only FIXED is supported
func (o GetVariablesSpecOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesSpec) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetVariablesSpecArrayOutput struct{ *pulumi.OutputState }

func (GetVariablesSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesSpec)(nil)).Elem()
}

func (o GetVariablesSpecArrayOutput) ToGetVariablesSpecArrayOutput() GetVariablesSpecArrayOutput {
	return o
}

func (o GetVariablesSpecArrayOutput) ToGetVariablesSpecArrayOutputWithContext(ctx context.Context) GetVariablesSpecArrayOutput {
	return o
}

func (o GetVariablesSpecArrayOutput) Index(i pulumi.IntInput) GetVariablesSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVariablesSpec {
		return vs[0].([]GetVariablesSpec)[vs[1].(int)]
	}).(GetVariablesSpecOutput)
}

type GetWorkspaceConnector struct {
	// Connector Ref is the reference to the connector
	ConnectorRef string `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type string `pulumi:"type"`
}

// GetWorkspaceConnectorInput is an input type that accepts GetWorkspaceConnectorArgs and GetWorkspaceConnectorOutput values.
// You can construct a concrete instance of `GetWorkspaceConnectorInput` via:
//
//	GetWorkspaceConnectorArgs{...}
type GetWorkspaceConnectorInput interface {
	pulumi.Input

	ToGetWorkspaceConnectorOutput() GetWorkspaceConnectorOutput
	ToGetWorkspaceConnectorOutputWithContext(context.Context) GetWorkspaceConnectorOutput
}

type GetWorkspaceConnectorArgs struct {
	// Connector Ref is the reference to the connector
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// Type is the connector type of the connector. Supported types: aws, azure, gcp
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetWorkspaceConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceConnector)(nil)).Elem()
}

func (i GetWorkspaceConnectorArgs) ToGetWorkspaceConnectorOutput() GetWorkspaceConnectorOutput {
	return i.ToGetWorkspaceConnectorOutputWithContext(context.Background())
}

func (i GetWorkspaceConnectorArgs) ToGetWorkspaceConnectorOutputWithContext(ctx context.Context) GetWorkspaceConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceConnectorOutput)
}

// GetWorkspaceConnectorArrayInput is an input type that accepts GetWorkspaceConnectorArray and GetWorkspaceConnectorArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceConnectorArrayInput` via:
//
//	GetWorkspaceConnectorArray{ GetWorkspaceConnectorArgs{...} }
type GetWorkspaceConnectorArrayInput interface {
	pulumi.Input

	ToGetWorkspaceConnectorArrayOutput() GetWorkspaceConnectorArrayOutput
	ToGetWorkspaceConnectorArrayOutputWithContext(context.Context) GetWorkspaceConnectorArrayOutput
}

type GetWorkspaceConnectorArray []GetWorkspaceConnectorInput

func (GetWorkspaceConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceConnector)(nil)).Elem()
}

func (i GetWorkspaceConnectorArray) ToGetWorkspaceConnectorArrayOutput() GetWorkspaceConnectorArrayOutput {
	return i.ToGetWorkspaceConnectorArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceConnectorArray) ToGetWorkspaceConnectorArrayOutputWithContext(ctx context.Context) GetWorkspaceConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceConnectorArrayOutput)
}

type GetWorkspaceConnectorOutput struct{ *pulumi.OutputState }

func (GetWorkspaceConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceConnector)(nil)).Elem()
}

func (o GetWorkspaceConnectorOutput) ToGetWorkspaceConnectorOutput() GetWorkspaceConnectorOutput {
	return o
}

func (o GetWorkspaceConnectorOutput) ToGetWorkspaceConnectorOutputWithContext(ctx context.Context) GetWorkspaceConnectorOutput {
	return o
}

// Connector Ref is the reference to the connector
func (o GetWorkspaceConnectorOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceConnector) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// Type is the connector type of the connector. Supported types: aws, azure, gcp
func (o GetWorkspaceConnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceConnector) string { return v.Type }).(pulumi.StringOutput)
}

type GetWorkspaceConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceConnector)(nil)).Elem()
}

func (o GetWorkspaceConnectorArrayOutput) ToGetWorkspaceConnectorArrayOutput() GetWorkspaceConnectorArrayOutput {
	return o
}

func (o GetWorkspaceConnectorArrayOutput) ToGetWorkspaceConnectorArrayOutputWithContext(ctx context.Context) GetWorkspaceConnectorArrayOutput {
	return o
}

func (o GetWorkspaceConnectorArrayOutput) Index(i pulumi.IntInput) GetWorkspaceConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceConnector {
		return vs[0].([]GetWorkspaceConnector)[vs[1].(int)]
	}).(GetWorkspaceConnectorOutput)
}

type GetWorkspaceEnvironmentVariable struct {
	// Key is the identifier for the variable`
	Key string `pulumi:"key"`
	// value is the value of the variable
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable, text or secret
	ValueType string `pulumi:"valueType"`
}

// GetWorkspaceEnvironmentVariableInput is an input type that accepts GetWorkspaceEnvironmentVariableArgs and GetWorkspaceEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetWorkspaceEnvironmentVariableInput` via:
//
//	GetWorkspaceEnvironmentVariableArgs{...}
type GetWorkspaceEnvironmentVariableInput interface {
	pulumi.Input

	ToGetWorkspaceEnvironmentVariableOutput() GetWorkspaceEnvironmentVariableOutput
	ToGetWorkspaceEnvironmentVariableOutputWithContext(context.Context) GetWorkspaceEnvironmentVariableOutput
}

type GetWorkspaceEnvironmentVariableArgs struct {
	// Key is the identifier for the variable`
	Key pulumi.StringInput `pulumi:"key"`
	// value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable, text or secret
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetWorkspaceEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceEnvironmentVariable)(nil)).Elem()
}

func (i GetWorkspaceEnvironmentVariableArgs) ToGetWorkspaceEnvironmentVariableOutput() GetWorkspaceEnvironmentVariableOutput {
	return i.ToGetWorkspaceEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetWorkspaceEnvironmentVariableArgs) ToGetWorkspaceEnvironmentVariableOutputWithContext(ctx context.Context) GetWorkspaceEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceEnvironmentVariableOutput)
}

// GetWorkspaceEnvironmentVariableArrayInput is an input type that accepts GetWorkspaceEnvironmentVariableArray and GetWorkspaceEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceEnvironmentVariableArrayInput` via:
//
//	GetWorkspaceEnvironmentVariableArray{ GetWorkspaceEnvironmentVariableArgs{...} }
type GetWorkspaceEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetWorkspaceEnvironmentVariableArrayOutput() GetWorkspaceEnvironmentVariableArrayOutput
	ToGetWorkspaceEnvironmentVariableArrayOutputWithContext(context.Context) GetWorkspaceEnvironmentVariableArrayOutput
}

type GetWorkspaceEnvironmentVariableArray []GetWorkspaceEnvironmentVariableInput

func (GetWorkspaceEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceEnvironmentVariable)(nil)).Elem()
}

func (i GetWorkspaceEnvironmentVariableArray) ToGetWorkspaceEnvironmentVariableArrayOutput() GetWorkspaceEnvironmentVariableArrayOutput {
	return i.ToGetWorkspaceEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceEnvironmentVariableArray) ToGetWorkspaceEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetWorkspaceEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceEnvironmentVariableArrayOutput)
}

type GetWorkspaceEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetWorkspaceEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceEnvironmentVariable)(nil)).Elem()
}

func (o GetWorkspaceEnvironmentVariableOutput) ToGetWorkspaceEnvironmentVariableOutput() GetWorkspaceEnvironmentVariableOutput {
	return o
}

func (o GetWorkspaceEnvironmentVariableOutput) ToGetWorkspaceEnvironmentVariableOutputWithContext(ctx context.Context) GetWorkspaceEnvironmentVariableOutput {
	return o
}

// Key is the identifier for the variable`
func (o GetWorkspaceEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// value is the value of the variable
func (o GetWorkspaceEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable, text or secret
func (o GetWorkspaceEnvironmentVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceEnvironmentVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetWorkspaceEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceEnvironmentVariable)(nil)).Elem()
}

func (o GetWorkspaceEnvironmentVariableArrayOutput) ToGetWorkspaceEnvironmentVariableArrayOutput() GetWorkspaceEnvironmentVariableArrayOutput {
	return o
}

func (o GetWorkspaceEnvironmentVariableArrayOutput) ToGetWorkspaceEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetWorkspaceEnvironmentVariableArrayOutput {
	return o
}

func (o GetWorkspaceEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetWorkspaceEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceEnvironmentVariable {
		return vs[0].([]GetWorkspaceEnvironmentVariable)[vs[1].(int)]
	}).(GetWorkspaceEnvironmentVariableOutput)
}

type GetWorkspaceOutputValueOutputValue struct {
	// Name associated with the output.
	Name string `pulumi:"name"`
	// Indicates if the output is sensitive.
	Sensitive bool `pulumi:"sensitive"`
	// Value of the output.
	Value string `pulumi:"value"`
}

// GetWorkspaceOutputValueOutputValueInput is an input type that accepts GetWorkspaceOutputValueOutputValueArgs and GetWorkspaceOutputValueOutputValueOutput values.
// You can construct a concrete instance of `GetWorkspaceOutputValueOutputValueInput` via:
//
//	GetWorkspaceOutputValueOutputValueArgs{...}
type GetWorkspaceOutputValueOutputValueInput interface {
	pulumi.Input

	ToGetWorkspaceOutputValueOutputValueOutput() GetWorkspaceOutputValueOutputValueOutput
	ToGetWorkspaceOutputValueOutputValueOutputWithContext(context.Context) GetWorkspaceOutputValueOutputValueOutput
}

type GetWorkspaceOutputValueOutputValueArgs struct {
	// Name associated with the output.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates if the output is sensitive.
	Sensitive pulumi.BoolInput `pulumi:"sensitive"`
	// Value of the output.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetWorkspaceOutputValueOutputValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceOutputValueOutputValue)(nil)).Elem()
}

func (i GetWorkspaceOutputValueOutputValueArgs) ToGetWorkspaceOutputValueOutputValueOutput() GetWorkspaceOutputValueOutputValueOutput {
	return i.ToGetWorkspaceOutputValueOutputValueOutputWithContext(context.Background())
}

func (i GetWorkspaceOutputValueOutputValueArgs) ToGetWorkspaceOutputValueOutputValueOutputWithContext(ctx context.Context) GetWorkspaceOutputValueOutputValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceOutputValueOutputValueOutput)
}

// GetWorkspaceOutputValueOutputValueArrayInput is an input type that accepts GetWorkspaceOutputValueOutputValueArray and GetWorkspaceOutputValueOutputValueArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceOutputValueOutputValueArrayInput` via:
//
//	GetWorkspaceOutputValueOutputValueArray{ GetWorkspaceOutputValueOutputValueArgs{...} }
type GetWorkspaceOutputValueOutputValueArrayInput interface {
	pulumi.Input

	ToGetWorkspaceOutputValueOutputValueArrayOutput() GetWorkspaceOutputValueOutputValueArrayOutput
	ToGetWorkspaceOutputValueOutputValueArrayOutputWithContext(context.Context) GetWorkspaceOutputValueOutputValueArrayOutput
}

type GetWorkspaceOutputValueOutputValueArray []GetWorkspaceOutputValueOutputValueInput

func (GetWorkspaceOutputValueOutputValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceOutputValueOutputValue)(nil)).Elem()
}

func (i GetWorkspaceOutputValueOutputValueArray) ToGetWorkspaceOutputValueOutputValueArrayOutput() GetWorkspaceOutputValueOutputValueArrayOutput {
	return i.ToGetWorkspaceOutputValueOutputValueArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceOutputValueOutputValueArray) ToGetWorkspaceOutputValueOutputValueArrayOutputWithContext(ctx context.Context) GetWorkspaceOutputValueOutputValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceOutputValueOutputValueArrayOutput)
}

type GetWorkspaceOutputValueOutputValueOutput struct{ *pulumi.OutputState }

func (GetWorkspaceOutputValueOutputValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceOutputValueOutputValue)(nil)).Elem()
}

func (o GetWorkspaceOutputValueOutputValueOutput) ToGetWorkspaceOutputValueOutputValueOutput() GetWorkspaceOutputValueOutputValueOutput {
	return o
}

func (o GetWorkspaceOutputValueOutputValueOutput) ToGetWorkspaceOutputValueOutputValueOutputWithContext(ctx context.Context) GetWorkspaceOutputValueOutputValueOutput {
	return o
}

// Name associated with the output.
func (o GetWorkspaceOutputValueOutputValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceOutputValueOutputValue) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates if the output is sensitive.
func (o GetWorkspaceOutputValueOutputValueOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWorkspaceOutputValueOutputValue) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

// Value of the output.
func (o GetWorkspaceOutputValueOutputValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceOutputValueOutputValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetWorkspaceOutputValueOutputValueArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceOutputValueOutputValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceOutputValueOutputValue)(nil)).Elem()
}

func (o GetWorkspaceOutputValueOutputValueArrayOutput) ToGetWorkspaceOutputValueOutputValueArrayOutput() GetWorkspaceOutputValueOutputValueArrayOutput {
	return o
}

func (o GetWorkspaceOutputValueOutputValueArrayOutput) ToGetWorkspaceOutputValueOutputValueArrayOutputWithContext(ctx context.Context) GetWorkspaceOutputValueOutputValueArrayOutput {
	return o
}

func (o GetWorkspaceOutputValueOutputValueArrayOutput) Index(i pulumi.IntInput) GetWorkspaceOutputValueOutputValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceOutputValueOutputValue {
		return vs[0].([]GetWorkspaceOutputValueOutputValue)[vs[1].(int)]
	}).(GetWorkspaceOutputValueOutputValueOutput)
}

type GetWorkspaceTerraformVariable struct {
	// Key is the identifier for the variable`
	Key string `pulumi:"key"`
	// value is the value of the variable
	Value string `pulumi:"value"`
	// Value type indicates the value type of the variable, text or secret
	ValueType string `pulumi:"valueType"`
}

// GetWorkspaceTerraformVariableInput is an input type that accepts GetWorkspaceTerraformVariableArgs and GetWorkspaceTerraformVariableOutput values.
// You can construct a concrete instance of `GetWorkspaceTerraformVariableInput` via:
//
//	GetWorkspaceTerraformVariableArgs{...}
type GetWorkspaceTerraformVariableInput interface {
	pulumi.Input

	ToGetWorkspaceTerraformVariableOutput() GetWorkspaceTerraformVariableOutput
	ToGetWorkspaceTerraformVariableOutputWithContext(context.Context) GetWorkspaceTerraformVariableOutput
}

type GetWorkspaceTerraformVariableArgs struct {
	// Key is the identifier for the variable`
	Key pulumi.StringInput `pulumi:"key"`
	// value is the value of the variable
	Value pulumi.StringInput `pulumi:"value"`
	// Value type indicates the value type of the variable, text or secret
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (GetWorkspaceTerraformVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceTerraformVariable)(nil)).Elem()
}

func (i GetWorkspaceTerraformVariableArgs) ToGetWorkspaceTerraformVariableOutput() GetWorkspaceTerraformVariableOutput {
	return i.ToGetWorkspaceTerraformVariableOutputWithContext(context.Background())
}

func (i GetWorkspaceTerraformVariableArgs) ToGetWorkspaceTerraformVariableOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceTerraformVariableOutput)
}

// GetWorkspaceTerraformVariableArrayInput is an input type that accepts GetWorkspaceTerraformVariableArray and GetWorkspaceTerraformVariableArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceTerraformVariableArrayInput` via:
//
//	GetWorkspaceTerraformVariableArray{ GetWorkspaceTerraformVariableArgs{...} }
type GetWorkspaceTerraformVariableArrayInput interface {
	pulumi.Input

	ToGetWorkspaceTerraformVariableArrayOutput() GetWorkspaceTerraformVariableArrayOutput
	ToGetWorkspaceTerraformVariableArrayOutputWithContext(context.Context) GetWorkspaceTerraformVariableArrayOutput
}

type GetWorkspaceTerraformVariableArray []GetWorkspaceTerraformVariableInput

func (GetWorkspaceTerraformVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceTerraformVariable)(nil)).Elem()
}

func (i GetWorkspaceTerraformVariableArray) ToGetWorkspaceTerraformVariableArrayOutput() GetWorkspaceTerraformVariableArrayOutput {
	return i.ToGetWorkspaceTerraformVariableArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceTerraformVariableArray) ToGetWorkspaceTerraformVariableArrayOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceTerraformVariableArrayOutput)
}

type GetWorkspaceTerraformVariableOutput struct{ *pulumi.OutputState }

func (GetWorkspaceTerraformVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceTerraformVariable)(nil)).Elem()
}

func (o GetWorkspaceTerraformVariableOutput) ToGetWorkspaceTerraformVariableOutput() GetWorkspaceTerraformVariableOutput {
	return o
}

func (o GetWorkspaceTerraformVariableOutput) ToGetWorkspaceTerraformVariableOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableOutput {
	return o
}

// Key is the identifier for the variable`
func (o GetWorkspaceTerraformVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariable) string { return v.Key }).(pulumi.StringOutput)
}

// value is the value of the variable
func (o GetWorkspaceTerraformVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariable) string { return v.Value }).(pulumi.StringOutput)
}

// Value type indicates the value type of the variable, text or secret
func (o GetWorkspaceTerraformVariableOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariable) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetWorkspaceTerraformVariableArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceTerraformVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceTerraformVariable)(nil)).Elem()
}

func (o GetWorkspaceTerraformVariableArrayOutput) ToGetWorkspaceTerraformVariableArrayOutput() GetWorkspaceTerraformVariableArrayOutput {
	return o
}

func (o GetWorkspaceTerraformVariableArrayOutput) ToGetWorkspaceTerraformVariableArrayOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableArrayOutput {
	return o
}

func (o GetWorkspaceTerraformVariableArrayOutput) Index(i pulumi.IntInput) GetWorkspaceTerraformVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceTerraformVariable {
		return vs[0].([]GetWorkspaceTerraformVariable)[vs[1].(int)]
	}).(GetWorkspaceTerraformVariableOutput)
}

type GetWorkspaceTerraformVariableFile struct {
	// Repository is the name of the repository to fetch the code from.
	Repository string `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch string `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit string `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector string `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath string `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha string `pulumi:"repositorySha"`
}

// GetWorkspaceTerraformVariableFileInput is an input type that accepts GetWorkspaceTerraformVariableFileArgs and GetWorkspaceTerraformVariableFileOutput values.
// You can construct a concrete instance of `GetWorkspaceTerraformVariableFileInput` via:
//
//	GetWorkspaceTerraformVariableFileArgs{...}
type GetWorkspaceTerraformVariableFileInput interface {
	pulumi.Input

	ToGetWorkspaceTerraformVariableFileOutput() GetWorkspaceTerraformVariableFileOutput
	ToGetWorkspaceTerraformVariableFileOutputWithContext(context.Context) GetWorkspaceTerraformVariableFileOutput
}

type GetWorkspaceTerraformVariableFileArgs struct {
	// Repository is the name of the repository to fetch the code from.
	Repository pulumi.StringInput `pulumi:"repository"`
	// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
	RepositoryBranch pulumi.StringInput `pulumi:"repositoryBranch"`
	// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
	RepositoryCommit pulumi.StringInput `pulumi:"repositoryCommit"`
	// Repository connector is the reference to the connector used to fetch the variables.
	RepositoryConnector pulumi.StringInput `pulumi:"repositoryConnector"`
	// Repository path is the path in which the variables reside.
	RepositoryPath pulumi.StringInput `pulumi:"repositoryPath"`
	// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
	RepositorySha pulumi.StringInput `pulumi:"repositorySha"`
}

func (GetWorkspaceTerraformVariableFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceTerraformVariableFile)(nil)).Elem()
}

func (i GetWorkspaceTerraformVariableFileArgs) ToGetWorkspaceTerraformVariableFileOutput() GetWorkspaceTerraformVariableFileOutput {
	return i.ToGetWorkspaceTerraformVariableFileOutputWithContext(context.Background())
}

func (i GetWorkspaceTerraformVariableFileArgs) ToGetWorkspaceTerraformVariableFileOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceTerraformVariableFileOutput)
}

// GetWorkspaceTerraformVariableFileArrayInput is an input type that accepts GetWorkspaceTerraformVariableFileArray and GetWorkspaceTerraformVariableFileArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceTerraformVariableFileArrayInput` via:
//
//	GetWorkspaceTerraformVariableFileArray{ GetWorkspaceTerraformVariableFileArgs{...} }
type GetWorkspaceTerraformVariableFileArrayInput interface {
	pulumi.Input

	ToGetWorkspaceTerraformVariableFileArrayOutput() GetWorkspaceTerraformVariableFileArrayOutput
	ToGetWorkspaceTerraformVariableFileArrayOutputWithContext(context.Context) GetWorkspaceTerraformVariableFileArrayOutput
}

type GetWorkspaceTerraformVariableFileArray []GetWorkspaceTerraformVariableFileInput

func (GetWorkspaceTerraformVariableFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceTerraformVariableFile)(nil)).Elem()
}

func (i GetWorkspaceTerraformVariableFileArray) ToGetWorkspaceTerraformVariableFileArrayOutput() GetWorkspaceTerraformVariableFileArrayOutput {
	return i.ToGetWorkspaceTerraformVariableFileArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceTerraformVariableFileArray) ToGetWorkspaceTerraformVariableFileArrayOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceTerraformVariableFileArrayOutput)
}

type GetWorkspaceTerraformVariableFileOutput struct{ *pulumi.OutputState }

func (GetWorkspaceTerraformVariableFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceTerraformVariableFile)(nil)).Elem()
}

func (o GetWorkspaceTerraformVariableFileOutput) ToGetWorkspaceTerraformVariableFileOutput() GetWorkspaceTerraformVariableFileOutput {
	return o
}

func (o GetWorkspaceTerraformVariableFileOutput) ToGetWorkspaceTerraformVariableFileOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableFileOutput {
	return o
}

// Repository is the name of the repository to fetch the code from.
func (o GetWorkspaceTerraformVariableFileOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariableFile) string { return v.Repository }).(pulumi.StringOutput)
}

// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
func (o GetWorkspaceTerraformVariableFileOutput) RepositoryBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariableFile) string { return v.RepositoryBranch }).(pulumi.StringOutput)
}

// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
func (o GetWorkspaceTerraformVariableFileOutput) RepositoryCommit() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariableFile) string { return v.RepositoryCommit }).(pulumi.StringOutput)
}

// Repository connector is the reference to the connector used to fetch the variables.
func (o GetWorkspaceTerraformVariableFileOutput) RepositoryConnector() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariableFile) string { return v.RepositoryConnector }).(pulumi.StringOutput)
}

// Repository path is the path in which the variables reside.
func (o GetWorkspaceTerraformVariableFileOutput) RepositoryPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariableFile) string { return v.RepositoryPath }).(pulumi.StringOutput)
}

// Repository commit is SHA to fetch the variables from. This cannot be set if repository branch or commit is set.
func (o GetWorkspaceTerraformVariableFileOutput) RepositorySha() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceTerraformVariableFile) string { return v.RepositorySha }).(pulumi.StringOutput)
}

type GetWorkspaceTerraformVariableFileArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceTerraformVariableFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceTerraformVariableFile)(nil)).Elem()
}

func (o GetWorkspaceTerraformVariableFileArrayOutput) ToGetWorkspaceTerraformVariableFileArrayOutput() GetWorkspaceTerraformVariableFileArrayOutput {
	return o
}

func (o GetWorkspaceTerraformVariableFileArrayOutput) ToGetWorkspaceTerraformVariableFileArrayOutputWithContext(ctx context.Context) GetWorkspaceTerraformVariableFileArrayOutput {
	return o
}

func (o GetWorkspaceTerraformVariableFileArrayOutput) Index(i pulumi.IntInput) GetWorkspaceTerraformVariableFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceTerraformVariableFile {
		return vs[0].([]GetWorkspaceTerraformVariableFile)[vs[1].(int)]
	}).(GetWorkspaceTerraformVariableFileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecSyncPolicyInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecSyncPolicyPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplatePtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateMetadataInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecInfoInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrInput)(nil)).Elem(), GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HarRegistryConfigInput)(nil)).Elem(), HarRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HarRegistryConfigArrayInput)(nil)).Elem(), HarRegistryConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HarRegistryConfigAuthInput)(nil)).Elem(), HarRegistryConfigAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HarRegistryConfigAuthArrayInput)(nil)).Elem(), HarRegistryConfigAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmConnectorCredentialsInput)(nil)).Elem(), HelmConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmConnectorCredentialsPtrInput)(nil)).Elem(), HelmConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetConnectorInput)(nil)).Elem(), InfraVariableSetConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetConnectorArrayInput)(nil)).Elem(), InfraVariableSetConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetEnvironmentVariableInput)(nil)).Elem(), InfraVariableSetEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetEnvironmentVariableArrayInput)(nil)).Elem(), InfraVariableSetEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetTerraformVariableInput)(nil)).Elem(), InfraVariableSetTerraformVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetTerraformVariableArrayInput)(nil)).Elem(), InfraVariableSetTerraformVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetTerraformVariableFileInput)(nil)).Elem(), InfraVariableSetTerraformVariableFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraVariableSetTerraformVariableFileArrayInput)(nil)).Elem(), InfraVariableSetTerraformVariableFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureGitDetailsInput)(nil)).Elem(), InfrastructureGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureGitDetailsPtrInput)(nil)).Elem(), InfrastructureGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetGitDetailsInput)(nil)).Elem(), InputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetGitDetailsPtrInput)(nil)).Elem(), InputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetGitImportInfoInput)(nil)).Elem(), InputSetGitImportInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetGitImportInfoPtrInput)(nil)).Elem(), InputSetGitImportInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetInputSetImportRequestInput)(nil)).Elem(), InputSetInputSetImportRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetInputSetImportRequestPtrInput)(nil)).Elem(), InputSetInputSetImportRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectorAuthInput)(nil)).Elem(), JenkinsConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectorAuthPtrInput)(nil)).Elem(), JenkinsConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectorAuthJenkinsBearerTokenInput)(nil)).Elem(), JenkinsConnectorAuthJenkinsBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectorAuthJenkinsBearerTokenPtrInput)(nil)).Elem(), JenkinsConnectorAuthJenkinsBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectorAuthJenkinsUserNamePasswordInput)(nil)).Elem(), JenkinsConnectorAuthJenkinsUserNamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectorAuthJenkinsUserNamePasswordPtrInput)(nil)).Elem(), JenkinsConnectorAuthJenkinsUserNamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthInput)(nil)).Elem(), JiraConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthPtrInput)(nil)).Elem(), JiraConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthPersonalAccessTokenInput)(nil)).Elem(), JiraConnectorAuthPersonalAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthPersonalAccessTokenPtrInput)(nil)).Elem(), JiraConnectorAuthPersonalAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthUsernamePasswordInput)(nil)).Elem(), JiraConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthUsernamePasswordPtrInput)(nil)).Elem(), JiraConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorClientKeyCertInput)(nil)).Elem(), KubernetesConnectorClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorClientKeyCertPtrInput)(nil)).Elem(), KubernetesConnectorClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorInheritFromDelegateInput)(nil)).Elem(), KubernetesConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorInheritFromDelegatePtrInput)(nil)).Elem(), KubernetesConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorOpenidConnectInput)(nil)).Elem(), KubernetesConnectorOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorOpenidConnectPtrInput)(nil)).Elem(), KubernetesConnectorOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorServiceAccountInput)(nil)).Elem(), KubernetesConnectorServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorServiceAccountPtrInput)(nil)).Elem(), KubernetesConnectorServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorUsernamePasswordInput)(nil)).Elem(), KubernetesConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorUsernamePasswordPtrInput)(nil)).Elem(), KubernetesConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindowInput)(nil)).Elem(), ManualFreezeCurrentOrUpcomingWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindowArrayInput)(nil)).Elem(), ManualFreezeCurrentOrUpcomingWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowInput)(nil)).Elem(), ManualFreezeFreezeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowArrayInput)(nil)).Elem(), ManualFreezeFreezeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceArrayInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestInput)(nil)).Elem(), MonitoredServiceRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestPtrInput)(nil)).Elem(), MonitoredServiceRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestChangeSourceInput)(nil)).Elem(), MonitoredServiceRequestChangeSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestChangeSourceArrayInput)(nil)).Elem(), MonitoredServiceRequestChangeSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestDependencyInput)(nil)).Elem(), MonitoredServiceRequestDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestDependencyArrayInput)(nil)).Elem(), MonitoredServiceRequestDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestHealthSourceInput)(nil)).Elem(), MonitoredServiceRequestHealthSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestHealthSourceArrayInput)(nil)).Elem(), MonitoredServiceRequestHealthSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRefInput)(nil)).Elem(), MonitoredServiceRequestNotificationRuleRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRefArrayInput)(nil)).Elem(), MonitoredServiceRequestNotificationRuleRefArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusConnectorCredentialsInput)(nil)).Elem(), NexusConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusConnectorCredentialsPtrInput)(nil)).Elem(), NexusConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationRuleRequestInput)(nil)).Elem(), NotificationRuleRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationRuleRequestPtrInput)(nil)).Elem(), NotificationRuleRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationRuleRequestConditionInput)(nil)).Elem(), NotificationRuleRequestConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationRuleRequestConditionArrayInput)(nil)).Elem(), NotificationRuleRequestConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationRuleRequestNotificationMethodInput)(nil)).Elem(), NotificationRuleRequestNotificationMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationRuleRequestNotificationMethodPtrInput)(nil)).Elem(), NotificationRuleRequestNotificationMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciHelmConnectorCredentialsInput)(nil)).Elem(), OciHelmConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OciHelmConnectorCredentialsPtrInput)(nil)).Elem(), OciHelmConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OverridesGitDetailsInput)(nil)).Elem(), OverridesGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OverridesGitDetailsPtrInput)(nil)).Elem(), OverridesGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesInput)(nil)).Elem(), PipelineFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCdInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCdPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitDetailsInput)(nil)).Elem(), PipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitDetailsPtrInput)(nil)).Elem(), PipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitImportInfoInput)(nil)).Elem(), PipelineGitImportInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitImportInfoPtrInput)(nil)).Elem(), PipelineGitImportInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelinePipelineImportRequestInput)(nil)).Elem(), PipelinePipelineImportRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelinePipelineImportRequestPtrInput)(nil)).Elem(), PipelinePipelineImportRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetPolicyInput)(nil)).Elem(), PolicySetPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetPolicyArrayInput)(nil)).Elem(), PolicySetPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusConnectorHeaderInput)(nil)).Elem(), PrometheusConnectorHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusConnectorHeaderArrayInput)(nil)).Elem(), PrometheusConnectorHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecInput)(nil)).Elem(), ProviderSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderSpecPtrInput)(nil)).Elem(), ProviderSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoRuleBranchBypassInput)(nil)).Elem(), RepoRuleBranchBypassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoRuleBranchBypassArrayInput)(nil)).Elem(), RepoRuleBranchBypassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoRuleBranchPatternInput)(nil)).Elem(), RepoRuleBranchPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoRuleBranchPatternArrayInput)(nil)).Elem(), RepoRuleBranchPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoRuleBranchPolicyInput)(nil)).Elem(), RepoRuleBranchPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoRuleBranchPolicyArrayInput)(nil)).Elem(), RepoRuleBranchPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoSourceInput)(nil)).Elem(), RepoSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepoSourceArrayInput)(nil)).Elem(), RepoSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupIncludedScopeInput)(nil)).Elem(), ResourceGroupIncludedScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupIncludedScopeArrayInput)(nil)).Elem(), ResourceGroupIncludedScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterInput)(nil)).Elem(), ResourceGroupResourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterArrayInput)(nil)).Elem(), ResourceGroupResourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceInput)(nil)).Elem(), ResourceGroupResourceFilterResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceArrayInput)(nil)).Elem(), ResourceGroupResourceFilterResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilterInput)(nil)).Elem(), ResourceGroupResourceFilterResourceAttributeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilterArrayInput)(nil)).Elem(), ResourceGroupResourceFilterResourceAttributeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleAssignmentsPrincipalInput)(nil)).Elem(), RoleAssignmentsPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleAssignmentsPrincipalArrayInput)(nil)).Elem(), RoleAssignmentsPrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosInput)(nil)).Elem(), SecretSshkeyKerberosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosPtrInput)(nil)).Elem(), SecretSshkeyKerberosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpecInput)(nil)).Elem(), SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput)(nil)).Elem(), SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpecInput)(nil)).Elem(), SecretSshkeyKerberosTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpecPtrInput)(nil)).Elem(), SecretSshkeyKerberosTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshInput)(nil)).Elem(), SecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshPtrInput)(nil)).Elem(), SecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshPasswordCredentialInput)(nil)).Elem(), SecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshPasswordCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyPathCredentialInput)(nil)).Elem(), SecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyPathCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredentialInput)(nil)).Elem(), SecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTextAdditionalMetadataInput)(nil)).Elem(), SecretTextAdditionalMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTextAdditionalMetadataArrayInput)(nil)).Elem(), SecretTextAdditionalMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTextAdditionalMetadataValueInput)(nil)).Elem(), SecretTextAdditionalMetadataValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTextAdditionalMetadataValueArrayInput)(nil)).Elem(), SecretTextAdditionalMetadataValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGitDetailsInput)(nil)).Elem(), ServiceGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGitDetailsPtrInput)(nil)).Elem(), ServiceGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthInput)(nil)).Elem(), ServiceNowConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthPtrInput)(nil)).Elem(), ServiceNowConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthAdfsInput)(nil)).Elem(), ServiceNowConnectorAuthAdfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthAdfsPtrInput)(nil)).Elem(), ServiceNowConnectorAuthAdfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthRefreshTokenInput)(nil)).Elem(), ServiceNowConnectorAuthRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthRefreshTokenPtrInput)(nil)).Elem(), ServiceNowConnectorAuthRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthUsernamePasswordInput)(nil)).Elem(), ServiceNowConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNowConnectorAuthUsernamePasswordPtrInput)(nil)).Elem(), ServiceNowConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceOverridesV2GitDetailsInput)(nil)).Elem(), ServiceOverridesV2GitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceOverridesV2GitDetailsPtrInput)(nil)).Elem(), ServiceOverridesV2GitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestInput)(nil)).Elem(), SloRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestPtrInput)(nil)).Elem(), SloRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestNotificationRuleRefInput)(nil)).Elem(), SloRequestNotificationRuleRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestNotificationRuleRefArrayInput)(nil)).Elem(), SloRequestNotificationRuleRefArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestSloTargetInput)(nil)).Elem(), SloRequestSloTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestSloTargetPtrInput)(nil)).Elem(), SloRequestSloTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpotConnectorPermanentTokenInput)(nil)).Elem(), SpotConnectorPermanentTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpotConnectorPermanentTokenPtrInput)(nil)).Elem(), SpotConnectorPermanentTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TasConnectorCredentialsInput)(nil)).Elem(), TasConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TasConnectorCredentialsPtrInput)(nil)).Elem(), TasConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TasConnectorCredentialsTasManualDetailsInput)(nil)).Elem(), TasConnectorCredentialsTasManualDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TasConnectorCredentialsTasManualDetailsPtrInput)(nil)).Elem(), TasConnectorCredentialsTasManualDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFiltersFilterPropertiesInput)(nil)).Elem(), TemplateFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFiltersFilterPropertiesPtrInput)(nil)).Elem(), TemplateFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGitDetailsInput)(nil)).Elem(), TemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGitDetailsPtrInput)(nil)).Elem(), TemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGitImportDetailsInput)(nil)).Elem(), TemplateGitImportDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGitImportDetailsPtrInput)(nil)).Elem(), TemplateGitImportDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTemplateImportRequestInput)(nil)).Elem(), TemplateTemplateImportRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTemplateImportRequestPtrInput)(nil)).Elem(), TemplateTemplateImportRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorCredentialsInput)(nil)).Elem(), TerraformCloudConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorCredentialsPtrInput)(nil)).Elem(), TerraformCloudConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorCredentialsApiTokenInput)(nil)).Elem(), TerraformCloudConnectorCredentialsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TerraformCloudConnectorCredentialsApiTokenPtrInput)(nil)).Elem(), TerraformCloudConnectorCredentialsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleBindingInput)(nil)).Elem(), UserRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleBindingArrayInput)(nil)).Elem(), UserRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupNotificationConfigInput)(nil)).Elem(), UsergroupNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupNotificationConfigArrayInput)(nil)).Elem(), UsergroupNotificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablesSpecInput)(nil)).Elem(), VariablesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablesSpecPtrInput)(nil)).Elem(), VariablesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceConnectorInput)(nil)).Elem(), WorkspaceConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceConnectorArrayInput)(nil)).Elem(), WorkspaceConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceEnvironmentVariableInput)(nil)).Elem(), WorkspaceEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceEnvironmentVariableArrayInput)(nil)).Elem(), WorkspaceEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTerraformVariableInput)(nil)).Elem(), WorkspaceTerraformVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTerraformVariableArrayInput)(nil)).Elem(), WorkspaceTerraformVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTerraformVariableFileInput)(nil)).Elem(), WorkspaceTerraformVariableFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTerraformVariableFileArrayInput)(nil)).Elem(), WorkspaceTerraformVariableFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorApiTokenInput)(nil)).Elem(), GetAppDynamicsConnectorApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorApiTokenArrayInput)(nil)).Elem(), GetAppDynamicsConnectorApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorUsernamePasswordInput)(nil)).Elem(), GetAppDynamicsConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorUsernamePasswordArrayInput)(nil)).Elem(), GetAppDynamicsConnectorUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetArtifactoryConnectorCredentialInput)(nil)).Elem(), GetArtifactoryConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetArtifactoryConnectorCredentialArrayInput)(nil)).Elem(), GetArtifactoryConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccessInput)(nil)).Elem(), GetAwsCCConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccessArrayInput)(nil)).Elem(), GetAwsCCConnectorCrossAccountAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorCrossAccountAccessInput)(nil)).Elem(), GetAwsConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorCrossAccountAccessArrayInput)(nil)).Elem(), GetAwsConnectorCrossAccountAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorEqualJitterBackoffStrategyInput)(nil)).Elem(), GetAwsConnectorEqualJitterBackoffStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorEqualJitterBackoffStrategyArrayInput)(nil)).Elem(), GetAwsConnectorEqualJitterBackoffStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorFixedDelayBackoffStrategyInput)(nil)).Elem(), GetAwsConnectorFixedDelayBackoffStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorFixedDelayBackoffStrategyArrayInput)(nil)).Elem(), GetAwsConnectorFixedDelayBackoffStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorFullJitterBackoffStrategyInput)(nil)).Elem(), GetAwsConnectorFullJitterBackoffStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorFullJitterBackoffStrategyArrayInput)(nil)).Elem(), GetAwsConnectorFullJitterBackoffStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorInheritFromDelegateInput)(nil)).Elem(), GetAwsConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GetAwsConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorIrsaInput)(nil)).Elem(), GetAwsConnectorIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorIrsaArrayInput)(nil)).Elem(), GetAwsConnectorIrsaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorManualInput)(nil)).Elem(), GetAwsConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorManualArrayInput)(nil)).Elem(), GetAwsConnectorManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorOidcAuthenticationInput)(nil)).Elem(), GetAwsConnectorOidcAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorOidcAuthenticationArrayInput)(nil)).Elem(), GetAwsConnectorOidcAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialInput)(nil)).Elem(), GetAwsKmsConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRoleInput)(nil)).Elem(), GetAwsKmsConnectorCredentialAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRoleArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialAssumeRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialManualInput)(nil)).Elem(), GetAwsKmsConnectorCredentialManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialManualArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialOidcAuthenticationInput)(nil)).Elem(), GetAwsKmsConnectorCredentialOidcAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialOidcAuthenticationArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialOidcAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRoleInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialAssumeRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManualInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManualArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialOidcAuthenticationInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialOidcAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialOidcAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpec2Input)(nil)).Elem(), GetAzureCloudCostConnectorBillingExportSpec2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpec2ArrayInput)(nil)).Elem(), GetAzureCloudCostConnectorBillingExportSpec2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpecInput)(nil)).Elem(), GetAzureCloudCostConnectorBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudCostConnectorBillingExportSpecArrayInput)(nil)).Elem(), GetAzureCloudCostConnectorBillingExportSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput)(nil)).Elem(), GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorApiAuthenticationInput)(nil)).Elem(), GetBitbucketConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorApiAuthenticationArrayInput)(nil)).Elem(), GetBitbucketConnectorApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialInput)(nil)).Elem(), GetBitbucketConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialArrayInput)(nil)).Elem(), GetBitbucketConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialHttpInput)(nil)).Elem(), GetBitbucketConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialHttpArrayInput)(nil)).Elem(), GetBitbucketConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialSshInput)(nil)).Elem(), GetBitbucketConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialSshArrayInput)(nil)).Elem(), GetBitbucketConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCcmFiltersFilterPropertyInput)(nil)).Elem(), GetCcmFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCcmFiltersFilterPropertyArrayInput)(nil)).Elem(), GetCcmFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationChannelChannelInput)(nil)).Elem(), GetCentralNotificationChannelChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationChannelChannelArrayInput)(nil)).Elem(), GetCentralNotificationChannelChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationChannelChannelHeaderInput)(nil)).Elem(), GetCentralNotificationChannelChannelHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationChannelChannelHeaderArrayInput)(nil)).Elem(), GetCentralNotificationChannelChannelHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationChannelChannelUserGroupInput)(nil)).Elem(), GetCentralNotificationChannelChannelUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationChannelChannelUserGroupArrayInput)(nil)).Elem(), GetCentralNotificationChannelChannelUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRefInput)(nil)).Elem(), GetCentralNotificationRuleCustomNotificationTemplateRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRefPtrInput)(nil)).Elem(), GetCentralNotificationRuleCustomNotificationTemplateRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRefVariableInput)(nil)).Elem(), GetCentralNotificationRuleCustomNotificationTemplateRefVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayInput)(nil)).Elem(), GetCentralNotificationRuleCustomNotificationTemplateRefVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleNotificationConditionInput)(nil)).Elem(), GetCentralNotificationRuleNotificationConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleNotificationConditionArrayInput)(nil)).Elem(), GetCentralNotificationRuleNotificationConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleNotificationConditionNotificationEventConfigInput)(nil)).Elem(), GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayInput)(nil)).Elem(), GetCentralNotificationRuleNotificationConditionNotificationEventConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoApiAuthenticationInput)(nil)).Elem(), GetConnectorAzureRepoApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoApiAuthenticationArrayInput)(nil)).Elem(), GetConnectorAzureRepoApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoCredentialInput)(nil)).Elem(), GetConnectorAzureRepoCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoCredentialArrayInput)(nil)).Elem(), GetConnectorAzureRepoCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoCredentialHttpInput)(nil)).Elem(), GetConnectorAzureRepoCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoCredentialHttpArrayInput)(nil)).Elem(), GetConnectorAzureRepoCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoCredentialSshInput)(nil)).Elem(), GetConnectorAzureRepoCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureRepoCredentialSshArrayInput)(nil)).Elem(), GetConnectorAzureRepoCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInputInput)(nil)).Elem(), GetConnectorCustomSecretManagerTemplateInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInputArrayInput)(nil)).Elem(), GetConnectorCustomSecretManagerTemplateInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableInput)(nil)).Elem(), GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayInput)(nil)).Elem(), GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomhealthsourceHeaderInput)(nil)).Elem(), GetConnectorCustomhealthsourceHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomhealthsourceHeaderArrayInput)(nil)).Elem(), GetConnectorCustomhealthsourceHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomhealthsourceParamInput)(nil)).Elem(), GetConnectorCustomhealthsourceParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorCustomhealthsourceParamArrayInput)(nil)).Elem(), GetConnectorCustomhealthsourceParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorGcpKmsManualInput)(nil)).Elem(), GetConnectorGcpKmsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorGcpKmsManualArrayInput)(nil)).Elem(), GetConnectorGcpKmsManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorGcpKmsOidcAuthenticationInput)(nil)).Elem(), GetConnectorGcpKmsOidcAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorGcpKmsOidcAuthenticationArrayInput)(nil)).Elem(), GetConnectorGcpKmsOidcAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJdbcCredentialInput)(nil)).Elem(), GetConnectorJdbcCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJdbcCredentialArrayInput)(nil)).Elem(), GetConnectorJdbcCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJdbcCredentialServiceAccountInput)(nil)).Elem(), GetConnectorJdbcCredentialServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJdbcCredentialServiceAccountArrayInput)(nil)).Elem(), GetConnectorJdbcCredentialServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJdbcCredentialUsernamePasswordInput)(nil)).Elem(), GetConnectorJdbcCredentialUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJdbcCredentialUsernamePasswordArrayInput)(nil)).Elem(), GetConnectorJdbcCredentialUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorPdcHostInput)(nil)).Elem(), GetConnectorPdcHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorPdcHostArrayInput)(nil)).Elem(), GetConnectorPdcHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorRancherBearerTokenInput)(nil)).Elem(), GetConnectorRancherBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorRancherBearerTokenPtrInput)(nil)).Elem(), GetConnectorRancherBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbSchemaChangelogScriptInput)(nil)).Elem(), GetDbSchemaChangelogScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbSchemaSchemaSourceInput)(nil)).Elem(), GetDbSchemaSchemaSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbSchemaSchemaSourceArrayInput)(nil)).Elem(), GetDbSchemaSchemaSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetInput)(nil)).Elem(), GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput)(nil)).Elem(), GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateInput)(nil)).Elem(), GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableInput)(nil)).Elem(), GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayInput)(nil)).Elem(), GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDockerConnectorCredentialInput)(nil)).Elem(), GetDockerConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDockerConnectorCredentialArrayInput)(nil)).Elem(), GetDockerConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchConnectorApiTokenInput)(nil)).Elem(), GetElasticsearchConnectorApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchConnectorApiTokenArrayInput)(nil)).Elem(), GetElasticsearchConnectorApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchConnectorUsernamePasswordInput)(nil)).Elem(), GetElasticsearchConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchConnectorUsernamePasswordArrayInput)(nil)).Elem(), GetElasticsearchConnectorUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentClustersMappingClusterInput)(nil)).Elem(), GetEnvironmentClustersMappingClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentClustersMappingClusterArrayInput)(nil)).Elem(), GetEnvironmentClustersMappingClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentGitDetailsInput)(nil)).Elem(), GetEnvironmentGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentGitDetailsPtrInput)(nil)).Elem(), GetEnvironmentGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentListEnvironmentInput)(nil)).Elem(), GetEnvironmentListEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentListEnvironmentArrayInput)(nil)).Elem(), GetEnvironmentListEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFileCreatedByInput)(nil)).Elem(), GetFileStoreFileCreatedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFileCreatedByArrayInput)(nil)).Elem(), GetFileStoreFileCreatedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFileLastModifiedByInput)(nil)).Elem(), GetFileStoreFileLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFileLastModifiedByArrayInput)(nil)).Elem(), GetFileStoreFileLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFolderCreatedByInput)(nil)).Elem(), GetFileStoreFolderCreatedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFolderCreatedByArrayInput)(nil)).Elem(), GetFileStoreFolderCreatedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFolderLastModifiedByInput)(nil)).Elem(), GetFileStoreFolderLastModifiedByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileStoreFolderLastModifiedByArrayInput)(nil)).Elem(), GetFileStoreFolderLastModifiedByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFiltersFilterPropertyInput)(nil)).Elem(), GetFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFiltersFilterPropertyArrayInput)(nil)).Elem(), GetFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpCloudCostConnectorBillingExportSpecInput)(nil)).Elem(), GetGcpCloudCostConnectorBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpCloudCostConnectorBillingExportSpecArrayInput)(nil)).Elem(), GetGcpCloudCostConnectorBillingExportSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorInheritFromDelegateInput)(nil)).Elem(), GetGcpConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GetGcpConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorManualInput)(nil)).Elem(), GetGcpConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorManualArrayInput)(nil)).Elem(), GetGcpConnectorManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorOidcAuthenticationInput)(nil)).Elem(), GetGcpConnectorOidcAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorOidcAuthenticationArrayInput)(nil)).Elem(), GetGcpConnectorOidcAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpSecretManagerConnectorOidcAuthenticationInput)(nil)).Elem(), GetGcpSecretManagerConnectorOidcAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpSecretManagerConnectorOidcAuthenticationArrayInput)(nil)).Elem(), GetGcpSecretManagerConnectorOidcAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialInput)(nil)).Elem(), GetGitConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialArrayInput)(nil)).Elem(), GetGitConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialHttpInput)(nil)).Elem(), GetGitConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialHttpArrayInput)(nil)).Elem(), GetGitConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialSshInput)(nil)).Elem(), GetGitConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialSshArrayInput)(nil)).Elem(), GetGitConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationArrayInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubAppInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubAppArrayInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationGithubAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialInput)(nil)).Elem(), GetGithubConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialArrayInput)(nil)).Elem(), GetGithubConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpInput)(nil)).Elem(), GetGithubConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpArrayInput)(nil)).Elem(), GetGithubConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpAnonymouseInput)(nil)).Elem(), GetGithubConnectorCredentialHttpAnonymouseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpAnonymouseArrayInput)(nil)).Elem(), GetGithubConnectorCredentialHttpAnonymouseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpGithubAppInput)(nil)).Elem(), GetGithubConnectorCredentialHttpGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpGithubAppArrayInput)(nil)).Elem(), GetGithubConnectorCredentialHttpGithubAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialSshInput)(nil)).Elem(), GetGithubConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialSshArrayInput)(nil)).Elem(), GetGithubConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorApiAuthenticationInput)(nil)).Elem(), GetGitlabConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorApiAuthenticationArrayInput)(nil)).Elem(), GetGitlabConnectorApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialInput)(nil)).Elem(), GetGitlabConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialArrayInput)(nil)).Elem(), GetGitlabConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialHttpInput)(nil)).Elem(), GetGitlabConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialHttpArrayInput)(nil)).Elem(), GetGitlabConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialSshInput)(nil)).Elem(), GetGitlabConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialSshArrayInput)(nil)).Elem(), GetGitlabConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentDeployYamlArgocdSettingsInput)(nil)).Elem(), GetGitopsAgentDeployYamlArgocdSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentDeployYamlArgocdSettingsPtrInput)(nil)).Elem(), GetGitopsAgentDeployYamlArgocdSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentDeployYamlProxyInput)(nil)).Elem(), GetGitopsAgentDeployYamlProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentDeployYamlProxyArrayInput)(nil)).Elem(), GetGitopsAgentDeployYamlProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentMetadataInput)(nil)).Elem(), GetGitopsAgentMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentMetadataArrayInput)(nil)).Elem(), GetGitopsAgentMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentOperatorYamlProxyInput)(nil)).Elem(), GetGitopsAgentOperatorYamlProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentOperatorYamlProxyArrayInput)(nil)).Elem(), GetGitopsAgentOperatorYamlProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationInput)(nil)).Elem(), GetGitopsApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReferenceInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataOwnerReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestinationInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestinationArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameterInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomizeInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKustomizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnvInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestInput)(nil)).Elem(), GetGitopsClusterRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestArrayInput)(nil)).Elem(), GetGitopsClusterRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInput)(nil)).Elem(), GetGitopsClusterRequestClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigExecProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigExecProviderConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigTlsClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigTlsClientConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfoInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoCacheInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfoArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoCacheInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAtInput)(nil)).Elem(), GetGitopsClusterRequestClusterRefreshRequestedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterRefreshRequestedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestInput)(nil)).Elem(), GetGitopsGnupgRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestArrayInput)(nil)).Elem(), GetGitopsGnupgRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestPublickeyInput)(nil)).Elem(), GetGitopsGnupgRequestPublickeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestPublickeyArrayInput)(nil)).Elem(), GetGitopsGnupgRequestPublickeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepoCredCredInput)(nil)).Elem(), GetGitopsRepoCredCredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepoCredCredArrayInput)(nil)).Elem(), GetGitopsRepoCredCredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepositoryRepoInput)(nil)).Elem(), GetGitopsRepositoryRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepositoryRepoArrayInput)(nil)).Elem(), GetGitopsRepositoryRepoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHarRegistryConfigInput)(nil)).Elem(), GetHarRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHarRegistryConfigArrayInput)(nil)).Elem(), GetHarRegistryConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHarRegistryConfigAuthInput)(nil)).Elem(), GetHarRegistryConfigAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHarRegistryConfigAuthArrayInput)(nil)).Elem(), GetHarRegistryConfigAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmConnectorCredentialInput)(nil)).Elem(), GetHelmConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmConnectorCredentialArrayInput)(nil)).Elem(), GetHelmConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetConnectorInput)(nil)).Elem(), GetInfraVariableSetConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetConnectorArrayInput)(nil)).Elem(), GetInfraVariableSetConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetEnvironmentVariableInput)(nil)).Elem(), GetInfraVariableSetEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetEnvironmentVariableArrayInput)(nil)).Elem(), GetInfraVariableSetEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetTerraformVariableInput)(nil)).Elem(), GetInfraVariableSetTerraformVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetTerraformVariableArrayInput)(nil)).Elem(), GetInfraVariableSetTerraformVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetTerraformVariableFileInput)(nil)).Elem(), GetInfraVariableSetTerraformVariableFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfraVariableSetTerraformVariableFileArrayInput)(nil)).Elem(), GetInfraVariableSetTerraformVariableFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureGitDetailsInput)(nil)).Elem(), GetInfrastructureGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureGitDetailsPtrInput)(nil)).Elem(), GetInfrastructureGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInputSetGitDetailsInput)(nil)).Elem(), GetInputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInputSetGitDetailsPtrInput)(nil)).Elem(), GetInputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJenkinsConnectorAuthInput)(nil)).Elem(), GetJenkinsConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJenkinsConnectorAuthArrayInput)(nil)).Elem(), GetJenkinsConnectorAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsBearerTokenInput)(nil)).Elem(), GetJenkinsConnectorAuthJenkinsBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsBearerTokenArrayInput)(nil)).Elem(), GetJenkinsConnectorAuthJenkinsBearerTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsUserNamePasswordInput)(nil)).Elem(), GetJenkinsConnectorAuthJenkinsUserNamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayInput)(nil)).Elem(), GetJenkinsConnectorAuthJenkinsUserNamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthInput)(nil)).Elem(), GetJiraConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthArrayInput)(nil)).Elem(), GetJiraConnectorAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthPersonalAccessTokenInput)(nil)).Elem(), GetJiraConnectorAuthPersonalAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthPersonalAccessTokenArrayInput)(nil)).Elem(), GetJiraConnectorAuthPersonalAccessTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthUsernamePasswordInput)(nil)).Elem(), GetJiraConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthUsernamePasswordArrayInput)(nil)).Elem(), GetJiraConnectorAuthUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorClientKeyCertInput)(nil)).Elem(), GetKubernetesConnectorClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorClientKeyCertArrayInput)(nil)).Elem(), GetKubernetesConnectorClientKeyCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegateInput)(nil)).Elem(), GetKubernetesConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GetKubernetesConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorOpenidConnectInput)(nil)).Elem(), GetKubernetesConnectorOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorOpenidConnectArrayInput)(nil)).Elem(), GetKubernetesConnectorOpenidConnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorServiceAccountInput)(nil)).Elem(), GetKubernetesConnectorServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorServiceAccountArrayInput)(nil)).Elem(), GetKubernetesConnectorServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorUsernamePasswordInput)(nil)).Elem(), GetKubernetesConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorUsernamePasswordArrayInput)(nil)).Elem(), GetKubernetesConnectorUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindowInput)(nil)).Elem(), GetManualFreezeCurrentOrUpcomingWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindowArrayInput)(nil)).Elem(), GetManualFreezeCurrentOrUpcomingWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowInput)(nil)).Elem(), GetManualFreezeFreezeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowArrayInput)(nil)).Elem(), GetManualFreezeFreezeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceArrayInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNexusConnectorCredentialInput)(nil)).Elem(), GetNexusConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNexusConnectorCredentialArrayInput)(nil)).Elem(), GetNexusConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOciHelmConnectorCredentialInput)(nil)).Elem(), GetOciHelmConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOciHelmConnectorCredentialArrayInput)(nil)).Elem(), GetOciHelmConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOverridesGitDetailsInput)(nil)).Elem(), GetOverridesGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOverridesGitDetailsPtrInput)(nil)).Elem(), GetOverridesGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionsPermissionInput)(nil)).Elem(), GetPermissionsPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionsPermissionArrayInput)(nil)).Elem(), GetPermissionsPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyArrayInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyModulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCdInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyModulePropertiesCdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyModulePropertiesCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineGitDetailsInput)(nil)).Elem(), GetPipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineGitDetailsPtrInput)(nil)).Elem(), GetPipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineListPipelineInput)(nil)).Elem(), GetPipelineListPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineListPipelineArrayInput)(nil)).Elem(), GetPipelineListPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySetPolicyInput)(nil)).Elem(), GetPolicySetPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySetPolicyArrayInput)(nil)).Elem(), GetPolicySetPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectListProjectInput)(nil)).Elem(), GetProjectListProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectListProjectArrayInput)(nil)).Elem(), GetProjectListProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrometheusConnectorHeaderInput)(nil)).Elem(), GetPrometheusConnectorHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrometheusConnectorHeaderArrayInput)(nil)).Elem(), GetPrometheusConnectorHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoRuleBranchBypassInput)(nil)).Elem(), GetRepoRuleBranchBypassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoRuleBranchBypassArrayInput)(nil)).Elem(), GetRepoRuleBranchBypassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoRuleBranchPatternInput)(nil)).Elem(), GetRepoRuleBranchPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoRuleBranchPatternArrayInput)(nil)).Elem(), GetRepoRuleBranchPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoRuleBranchPolicyInput)(nil)).Elem(), GetRepoRuleBranchPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoRuleBranchPolicyArrayInput)(nil)).Elem(), GetRepoRuleBranchPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoSourceInput)(nil)).Elem(), GetRepoSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRepoSourceArrayInput)(nil)).Elem(), GetRepoSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupIncludedScopeInput)(nil)).Elem(), GetResourceGroupIncludedScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupIncludedScopeArrayInput)(nil)).Elem(), GetResourceGroupIncludedScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterInput)(nil)).Elem(), GetResourceGroupResourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilterInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceAttributeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilterArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceAttributeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleAssignmentsPrincipalInput)(nil)).Elem(), GetRoleAssignmentsPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleAssignmentsPrincipalArrayInput)(nil)).Elem(), GetRoleAssignmentsPrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoInput)(nil)).Elem(), GetSecretSshkeyKerberoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpecInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpecArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtPasswordSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshInput)(nil)).Elem(), GetSecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshArrayInput)(nil)).Elem(), GetSecretSshkeySshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshPasswordCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshkeyPathCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshkeyReferenceCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretTextAdditionalMetadataInput)(nil)).Elem(), GetSecretTextAdditionalMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretTextAdditionalMetadataArrayInput)(nil)).Elem(), GetSecretTextAdditionalMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretTextAdditionalMetadataValueInput)(nil)).Elem(), GetSecretTextAdditionalMetadataValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretTextAdditionalMetadataValueArrayInput)(nil)).Elem(), GetSecretTextAdditionalMetadataValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceGitDetailsInput)(nil)).Elem(), GetServiceGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceGitDetailsPtrInput)(nil)).Elem(), GetServiceGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceListServiceInput)(nil)).Elem(), GetServiceListServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceListServiceArrayInput)(nil)).Elem(), GetServiceListServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthInput)(nil)).Elem(), GetServiceNowConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthArrayInput)(nil)).Elem(), GetServiceNowConnectorAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthAdfInput)(nil)).Elem(), GetServiceNowConnectorAuthAdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthAdfArrayInput)(nil)).Elem(), GetServiceNowConnectorAuthAdfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthRefreshTokenInput)(nil)).Elem(), GetServiceNowConnectorAuthRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthRefreshTokenArrayInput)(nil)).Elem(), GetServiceNowConnectorAuthRefreshTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthUsernamePasswordInput)(nil)).Elem(), GetServiceNowConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNowConnectorAuthUsernamePasswordArrayInput)(nil)).Elem(), GetServiceNowConnectorAuthUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceOverridesV2GitDetailsInput)(nil)).Elem(), GetServiceOverridesV2GitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceOverridesV2GitDetailsPtrInput)(nil)).Elem(), GetServiceOverridesV2GitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpotConnectorPermanentTokenInput)(nil)).Elem(), GetSpotConnectorPermanentTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpotConnectorPermanentTokenArrayInput)(nil)).Elem(), GetSpotConnectorPermanentTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasConnectorCredentialInput)(nil)).Elem(), GetTasConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasConnectorCredentialArrayInput)(nil)).Elem(), GetTasConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasConnectorCredentialTasManualDetailInput)(nil)).Elem(), GetTasConnectorCredentialTasManualDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTasConnectorCredentialTasManualDetailArrayInput)(nil)).Elem(), GetTasConnectorCredentialTasManualDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateFiltersFilterPropertyInput)(nil)).Elem(), GetTemplateFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateFiltersFilterPropertyArrayInput)(nil)).Elem(), GetTemplateFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateGitDetailsInput)(nil)).Elem(), GetTemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateGitDetailsPtrInput)(nil)).Elem(), GetTemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTerraformCloudConnectorCredentialInput)(nil)).Elem(), GetTerraformCloudConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTerraformCloudConnectorCredentialArrayInput)(nil)).Elem(), GetTerraformCloudConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTerraformCloudConnectorCredentialApiTokenInput)(nil)).Elem(), GetTerraformCloudConnectorCredentialApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTerraformCloudConnectorCredentialApiTokenArrayInput)(nil)).Elem(), GetTerraformCloudConnectorCredentialApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsergroupNotificationConfigInput)(nil)).Elem(), GetUsergroupNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsergroupNotificationConfigArrayInput)(nil)).Elem(), GetUsergroupNotificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesSpecInput)(nil)).Elem(), GetVariablesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesSpecArrayInput)(nil)).Elem(), GetVariablesSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceConnectorInput)(nil)).Elem(), GetWorkspaceConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceConnectorArrayInput)(nil)).Elem(), GetWorkspaceConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceEnvironmentVariableInput)(nil)).Elem(), GetWorkspaceEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceEnvironmentVariableArrayInput)(nil)).Elem(), GetWorkspaceEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceOutputValueOutputValueInput)(nil)).Elem(), GetWorkspaceOutputValueOutputValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceOutputValueOutputValueArrayInput)(nil)).Elem(), GetWorkspaceOutputValueOutputValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceTerraformVariableInput)(nil)).Elem(), GetWorkspaceTerraformVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceTerraformVariableArrayInput)(nil)).Elem(), GetWorkspaceTerraformVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceTerraformVariableFileInput)(nil)).Elem(), GetWorkspaceTerraformVariableFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceTerraformVariableFileArrayInput)(nil)).Elem(), GetWorkspaceTerraformVariableFileArray{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecSyncPolicyPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateMetadataOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecIgnoreDifferenceArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecInfoArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetExtVarArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceDirectoryJsonnetTlaArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmFileParameterArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceHelmParameterArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizeOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceKustomizePtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyAutomatedPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyManagedNamespaceMetadataPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsetApplicationsetSpecTemplateSpecSyncPolicyRetryBackoffPtrOutput{})
	pulumi.RegisterOutputType(HarRegistryConfigOutput{})
	pulumi.RegisterOutputType(HarRegistryConfigArrayOutput{})
	pulumi.RegisterOutputType(HarRegistryConfigAuthOutput{})
	pulumi.RegisterOutputType(HarRegistryConfigAuthArrayOutput{})
	pulumi.RegisterOutputType(HelmConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(HelmConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(InfraVariableSetConnectorOutput{})
	pulumi.RegisterOutputType(InfraVariableSetConnectorArrayOutput{})
	pulumi.RegisterOutputType(InfraVariableSetEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(InfraVariableSetEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(InfraVariableSetTerraformVariableOutput{})
	pulumi.RegisterOutputType(InfraVariableSetTerraformVariableArrayOutput{})
	pulumi.RegisterOutputType(InfraVariableSetTerraformVariableFileOutput{})
	pulumi.RegisterOutputType(InfraVariableSetTerraformVariableFileArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureGitDetailsOutput{})
	pulumi.RegisterOutputType(InfrastructureGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(InputSetGitDetailsOutput{})
	pulumi.RegisterOutputType(InputSetGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(InputSetGitImportInfoOutput{})
	pulumi.RegisterOutputType(InputSetGitImportInfoPtrOutput{})
	pulumi.RegisterOutputType(InputSetInputSetImportRequestOutput{})
	pulumi.RegisterOutputType(InputSetInputSetImportRequestPtrOutput{})
	pulumi.RegisterOutputType(JenkinsConnectorAuthOutput{})
	pulumi.RegisterOutputType(JenkinsConnectorAuthPtrOutput{})
	pulumi.RegisterOutputType(JenkinsConnectorAuthJenkinsBearerTokenOutput{})
	pulumi.RegisterOutputType(JenkinsConnectorAuthJenkinsBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(JenkinsConnectorAuthJenkinsUserNamePasswordOutput{})
	pulumi.RegisterOutputType(JenkinsConnectorAuthJenkinsUserNamePasswordPtrOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthPtrOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthPersonalAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorClientKeyCertOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorClientKeyCertPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorInheritFromDelegatePtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorOpenidConnectOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorOpenidConnectPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorServiceAccountOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ManualFreezeCurrentOrUpcomingWindowOutput{})
	pulumi.RegisterOutputType(ManualFreezeCurrentOrUpcomingWindowArrayOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowArrayOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestPtrOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestChangeSourceOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestChangeSourceArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestDependencyOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestDependencyArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestHealthSourceOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestHealthSourceArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestNotificationRuleRefOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestNotificationRuleRefArrayOutput{})
	pulumi.RegisterOutputType(NexusConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(NexusConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(NotificationRuleRequestOutput{})
	pulumi.RegisterOutputType(NotificationRuleRequestPtrOutput{})
	pulumi.RegisterOutputType(NotificationRuleRequestConditionOutput{})
	pulumi.RegisterOutputType(NotificationRuleRequestConditionArrayOutput{})
	pulumi.RegisterOutputType(NotificationRuleRequestNotificationMethodOutput{})
	pulumi.RegisterOutputType(NotificationRuleRequestNotificationMethodPtrOutput{})
	pulumi.RegisterOutputType(OciHelmConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(OciHelmConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(OverridesGitDetailsOutput{})
	pulumi.RegisterOutputType(OverridesGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCdOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCdPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCiOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCiPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfoPullRequestPtrOutput{})
	pulumi.RegisterOutputType(PipelineGitDetailsOutput{})
	pulumi.RegisterOutputType(PipelineGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(PipelineGitImportInfoOutput{})
	pulumi.RegisterOutputType(PipelineGitImportInfoPtrOutput{})
	pulumi.RegisterOutputType(PipelinePipelineImportRequestOutput{})
	pulumi.RegisterOutputType(PipelinePipelineImportRequestPtrOutput{})
	pulumi.RegisterOutputType(PolicySetPolicyOutput{})
	pulumi.RegisterOutputType(PolicySetPolicyArrayOutput{})
	pulumi.RegisterOutputType(PrometheusConnectorHeaderOutput{})
	pulumi.RegisterOutputType(PrometheusConnectorHeaderArrayOutput{})
	pulumi.RegisterOutputType(ProviderSpecOutput{})
	pulumi.RegisterOutputType(ProviderSpecPtrOutput{})
	pulumi.RegisterOutputType(RepoRuleBranchBypassOutput{})
	pulumi.RegisterOutputType(RepoRuleBranchBypassArrayOutput{})
	pulumi.RegisterOutputType(RepoRuleBranchPatternOutput{})
	pulumi.RegisterOutputType(RepoRuleBranchPatternArrayOutput{})
	pulumi.RegisterOutputType(RepoRuleBranchPolicyOutput{})
	pulumi.RegisterOutputType(RepoRuleBranchPolicyArrayOutput{})
	pulumi.RegisterOutputType(RepoSourceOutput{})
	pulumi.RegisterOutputType(RepoSourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupIncludedScopeOutput{})
	pulumi.RegisterOutputType(ResourceGroupIncludedScopeArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceAttributeFilterOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput{})
	pulumi.RegisterOutputType(RoleAssignmentsPrincipalOutput{})
	pulumi.RegisterOutputType(RoleAssignmentsPrincipalArrayOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtPasswordSpecOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtPasswordSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshPasswordCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshPasswordCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyPathCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyPathCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyReferenceCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyReferenceCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretTextAdditionalMetadataOutput{})
	pulumi.RegisterOutputType(SecretTextAdditionalMetadataArrayOutput{})
	pulumi.RegisterOutputType(SecretTextAdditionalMetadataValueOutput{})
	pulumi.RegisterOutputType(SecretTextAdditionalMetadataValueArrayOutput{})
	pulumi.RegisterOutputType(ServiceGitDetailsOutput{})
	pulumi.RegisterOutputType(ServiceGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthPtrOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthAdfsOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthAdfsPtrOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthRefreshTokenOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthRefreshTokenPtrOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(ServiceNowConnectorAuthUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ServiceOverridesV2GitDetailsOutput{})
	pulumi.RegisterOutputType(ServiceOverridesV2GitDetailsPtrOutput{})
	pulumi.RegisterOutputType(SloRequestOutput{})
	pulumi.RegisterOutputType(SloRequestPtrOutput{})
	pulumi.RegisterOutputType(SloRequestNotificationRuleRefOutput{})
	pulumi.RegisterOutputType(SloRequestNotificationRuleRefArrayOutput{})
	pulumi.RegisterOutputType(SloRequestSloTargetOutput{})
	pulumi.RegisterOutputType(SloRequestSloTargetPtrOutput{})
	pulumi.RegisterOutputType(SpotConnectorPermanentTokenOutput{})
	pulumi.RegisterOutputType(SpotConnectorPermanentTokenPtrOutput{})
	pulumi.RegisterOutputType(TasConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(TasConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(TasConnectorCredentialsTasManualDetailsOutput{})
	pulumi.RegisterOutputType(TasConnectorCredentialsTasManualDetailsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFiltersFilterPropertiesOutput{})
	pulumi.RegisterOutputType(TemplateFiltersFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateGitDetailsOutput{})
	pulumi.RegisterOutputType(TemplateGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGitImportDetailsOutput{})
	pulumi.RegisterOutputType(TemplateGitImportDetailsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTemplateImportRequestOutput{})
	pulumi.RegisterOutputType(TemplateTemplateImportRequestPtrOutput{})
	pulumi.RegisterOutputType(TerraformCloudConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(TerraformCloudConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(TerraformCloudConnectorCredentialsApiTokenOutput{})
	pulumi.RegisterOutputType(TerraformCloudConnectorCredentialsApiTokenPtrOutput{})
	pulumi.RegisterOutputType(UserRoleBindingOutput{})
	pulumi.RegisterOutputType(UserRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(UsergroupNotificationConfigOutput{})
	pulumi.RegisterOutputType(UsergroupNotificationConfigArrayOutput{})
	pulumi.RegisterOutputType(VariablesSpecOutput{})
	pulumi.RegisterOutputType(VariablesSpecPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectorOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectorArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(WorkspaceEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceTerraformVariableOutput{})
	pulumi.RegisterOutputType(WorkspaceTerraformVariableArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceTerraformVariableFileOutput{})
	pulumi.RegisterOutputType(WorkspaceTerraformVariableFileArrayOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorApiTokenOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetArtifactoryConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetArtifactoryConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsCCConnectorCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(GetAwsCCConnectorCrossAccountAccessArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorCrossAccountAccessArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorEqualJitterBackoffStrategyOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorEqualJitterBackoffStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorFixedDelayBackoffStrategyOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorFixedDelayBackoffStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorFullJitterBackoffStrategyOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorFullJitterBackoffStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorIrsaOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorIrsaArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorManualOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorOidcAuthenticationOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorOidcAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialAssumeRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialManualOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialOidcAuthenticationOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialOidcAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialManualOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialOidcAuthenticationOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialOidcAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudCostConnectorBillingExportSpec2Output{})
	pulumi.RegisterOutputType(GetAzureCloudCostConnectorBillingExportSpec2ArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudCostConnectorBillingExportSpecOutput{})
	pulumi.RegisterOutputType(GetAzureCloudCostConnectorBillingExportSpecArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyOutput{})
	pulumi.RegisterOutputType(GetAzureCloudProviderConnectorCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetCcmFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetCcmFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationChannelChannelOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationChannelChannelArrayOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationChannelChannelHeaderOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationChannelChannelHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationChannelChannelUserGroupOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationChannelChannelUserGroupArrayOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleCustomNotificationTemplateRefOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleCustomNotificationTemplateRefPtrOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleCustomNotificationTemplateRefVariableOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleCustomNotificationTemplateRefVariableArrayOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleNotificationConditionOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleNotificationConditionArrayOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleNotificationConditionNotificationEventConfigOutput{})
	pulumi.RegisterOutputType(GetCentralNotificationRuleNotificationConditionNotificationEventConfigArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoCredentialOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoCredentialSshOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureRepoCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomSecretManagerTemplateInputOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomSecretManagerTemplateInputArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomSecretManagerTemplateInputEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomhealthsourceHeaderOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomhealthsourceHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomhealthsourceParamOutput{})
	pulumi.RegisterOutputType(GetConnectorCustomhealthsourceParamArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorGcpKmsManualOutput{})
	pulumi.RegisterOutputType(GetConnectorGcpKmsManualArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorGcpKmsOidcAuthenticationOutput{})
	pulumi.RegisterOutputType(GetConnectorGcpKmsOidcAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorJdbcCredentialOutput{})
	pulumi.RegisterOutputType(GetConnectorJdbcCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorJdbcCredentialServiceAccountOutput{})
	pulumi.RegisterOutputType(GetConnectorJdbcCredentialServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorJdbcCredentialUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetConnectorJdbcCredentialUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorPdcHostOutput{})
	pulumi.RegisterOutputType(GetConnectorPdcHostArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorRancherBearerTokenOutput{})
	pulumi.RegisterOutputType(GetConnectorRancherBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(GetDbSchemaChangelogScriptOutput{})
	pulumi.RegisterOutputType(GetDbSchemaSchemaSourceOutput{})
	pulumi.RegisterOutputType(GetDbSchemaSchemaSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetOutput{})
	pulumi.RegisterOutputType(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput{})
	pulumi.RegisterOutputType(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateOutput{})
	pulumi.RegisterOutputType(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableOutput{})
	pulumi.RegisterOutputType(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateVariableArrayOutput{})
	pulumi.RegisterOutputType(GetDockerConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetDockerConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetElasticsearchConnectorApiTokenOutput{})
	pulumi.RegisterOutputType(GetElasticsearchConnectorApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetElasticsearchConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetElasticsearchConnectorUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentClustersMappingClusterOutput{})
	pulumi.RegisterOutputType(GetEnvironmentClustersMappingClusterArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentGitDetailsOutput{})
	pulumi.RegisterOutputType(GetEnvironmentGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetEnvironmentListEnvironmentOutput{})
	pulumi.RegisterOutputType(GetEnvironmentListEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetFileStoreFileCreatedByOutput{})
	pulumi.RegisterOutputType(GetFileStoreFileCreatedByArrayOutput{})
	pulumi.RegisterOutputType(GetFileStoreFileLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetFileStoreFileLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetFileStoreFolderCreatedByOutput{})
	pulumi.RegisterOutputType(GetFileStoreFolderCreatedByArrayOutput{})
	pulumi.RegisterOutputType(GetFileStoreFolderLastModifiedByOutput{})
	pulumi.RegisterOutputType(GetFileStoreFolderLastModifiedByArrayOutput{})
	pulumi.RegisterOutputType(GetFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetGcpCloudCostConnectorBillingExportSpecOutput{})
	pulumi.RegisterOutputType(GetGcpCloudCostConnectorBillingExportSpecArrayOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorManualOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorManualArrayOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorOidcAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorOidcAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGcpSecretManagerConnectorOidcAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGcpSecretManagerConnectorOidcAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationGithubAppOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationGithubAppArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpAnonymouseOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpAnonymouseArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpGithubAppOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpGithubAppArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentDeployYamlArgocdSettingsOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentDeployYamlArgocdSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentDeployYamlProxyOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentDeployYamlProxyArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentMetadataOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentOperatorYamlProxyOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentOperatorYamlProxyArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecDestinationOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKustomizeOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigExecProviderConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigTlsClientConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoCacheInfoOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterRefreshRequestedAtOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestPublickeyOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestPublickeyArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsRepoCredCredOutput{})
	pulumi.RegisterOutputType(GetGitopsRepoCredCredArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsRepositoryRepoOutput{})
	pulumi.RegisterOutputType(GetGitopsRepositoryRepoArrayOutput{})
	pulumi.RegisterOutputType(GetHarRegistryConfigOutput{})
	pulumi.RegisterOutputType(GetHarRegistryConfigArrayOutput{})
	pulumi.RegisterOutputType(GetHarRegistryConfigAuthOutput{})
	pulumi.RegisterOutputType(GetHarRegistryConfigAuthArrayOutput{})
	pulumi.RegisterOutputType(GetHelmConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetHelmConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetConnectorOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetTerraformVariableOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetTerraformVariableArrayOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetTerraformVariableFileOutput{})
	pulumi.RegisterOutputType(GetInfraVariableSetTerraformVariableFileArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureGitDetailsOutput{})
	pulumi.RegisterOutputType(GetInfrastructureGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetInputSetGitDetailsOutput{})
	pulumi.RegisterOutputType(GetInputSetGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetJenkinsConnectorAuthOutput{})
	pulumi.RegisterOutputType(GetJenkinsConnectorAuthArrayOutput{})
	pulumi.RegisterOutputType(GetJenkinsConnectorAuthJenkinsBearerTokenOutput{})
	pulumi.RegisterOutputType(GetJenkinsConnectorAuthJenkinsBearerTokenArrayOutput{})
	pulumi.RegisterOutputType(GetJenkinsConnectorAuthJenkinsUserNamePasswordOutput{})
	pulumi.RegisterOutputType(GetJenkinsConnectorAuthJenkinsUserNamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthArrayOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthPersonalAccessTokenArrayOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorClientKeyCertOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorClientKeyCertArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorOpenidConnectOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorOpenidConnectArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorServiceAccountOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeCurrentOrUpcomingWindowOutput{})
	pulumi.RegisterOutputType(GetManualFreezeCurrentOrUpcomingWindowArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetNexusConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetNexusConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetOciHelmConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetOciHelmConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetOverridesGitDetailsOutput{})
	pulumi.RegisterOutputType(GetOverridesGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetPermissionsPermissionOutput{})
	pulumi.RegisterOutputType(GetPermissionsPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyModulePropertiesOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyModulePropertiesCdOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyModulePropertiesCiOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyModulePropertiesCiCiExecutionInfoPullRequestOutput{})
	pulumi.RegisterOutputType(GetPipelineGitDetailsOutput{})
	pulumi.RegisterOutputType(GetPipelineGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetPipelineListPipelineOutput{})
	pulumi.RegisterOutputType(GetPipelineListPipelineArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySetPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicySetPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectListProjectOutput{})
	pulumi.RegisterOutputType(GetProjectListProjectArrayOutput{})
	pulumi.RegisterOutputType(GetPrometheusConnectorHeaderOutput{})
	pulumi.RegisterOutputType(GetPrometheusConnectorHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetRepoRuleBranchBypassOutput{})
	pulumi.RegisterOutputType(GetRepoRuleBranchBypassArrayOutput{})
	pulumi.RegisterOutputType(GetRepoRuleBranchPatternOutput{})
	pulumi.RegisterOutputType(GetRepoRuleBranchPatternArrayOutput{})
	pulumi.RegisterOutputType(GetRepoRuleBranchPolicyOutput{})
	pulumi.RegisterOutputType(GetRepoRuleBranchPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetRepoSourceOutput{})
	pulumi.RegisterOutputType(GetRepoSourceArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupIncludedScopeOutput{})
	pulumi.RegisterOutputType(GetResourceGroupIncludedScopeArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceAttributeFilterOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRoleAssignmentsPrincipalOutput{})
	pulumi.RegisterOutputType(GetRoleAssignmentsPrincipalArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtPasswordSpecOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshPasswordCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshPasswordCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyPathCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyPathCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyReferenceCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretTextAdditionalMetadataOutput{})
	pulumi.RegisterOutputType(GetSecretTextAdditionalMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetSecretTextAdditionalMetadataValueOutput{})
	pulumi.RegisterOutputType(GetSecretTextAdditionalMetadataValueArrayOutput{})
	pulumi.RegisterOutputType(GetServiceGitDetailsOutput{})
	pulumi.RegisterOutputType(GetServiceGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetServiceListServiceOutput{})
	pulumi.RegisterOutputType(GetServiceListServiceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthArrayOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthAdfOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthAdfArrayOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthRefreshTokenOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthRefreshTokenArrayOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetServiceNowConnectorAuthUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetServiceOverridesV2GitDetailsOutput{})
	pulumi.RegisterOutputType(GetServiceOverridesV2GitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetSpotConnectorPermanentTokenOutput{})
	pulumi.RegisterOutputType(GetSpotConnectorPermanentTokenArrayOutput{})
	pulumi.RegisterOutputType(GetTasConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetTasConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetTasConnectorCredentialTasManualDetailOutput{})
	pulumi.RegisterOutputType(GetTasConnectorCredentialTasManualDetailArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetTemplateFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateGitDetailsOutput{})
	pulumi.RegisterOutputType(GetTemplateGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetTerraformCloudConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetTerraformCloudConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetTerraformCloudConnectorCredentialApiTokenOutput{})
	pulumi.RegisterOutputType(GetTerraformCloudConnectorCredentialApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetUsergroupNotificationConfigOutput{})
	pulumi.RegisterOutputType(GetUsergroupNotificationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVariablesSpecOutput{})
	pulumi.RegisterOutputType(GetVariablesSpecArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspaceConnectorOutput{})
	pulumi.RegisterOutputType(GetWorkspaceConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspaceEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetWorkspaceEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspaceOutputValueOutputValueOutput{})
	pulumi.RegisterOutputType(GetWorkspaceOutputValueOutputValueArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspaceTerraformVariableOutput{})
	pulumi.RegisterOutputType(GetWorkspaceTerraformVariableArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspaceTerraformVariableFileOutput{})
	pulumi.RegisterOutputType(GetWorkspaceTerraformVariableFileArrayOutput{})
}
