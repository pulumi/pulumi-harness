// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Default Notification Template Set.
func LookupDefaultNotificationTemplateSet(ctx *pulumi.Context, args *LookupDefaultNotificationTemplateSetArgs, opts ...pulumi.InvokeOption) (*LookupDefaultNotificationTemplateSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDefaultNotificationTemplateSetResult
	err := ctx.Invoke("harness:platform/getDefaultNotificationTemplateSet:getDefaultNotificationTemplateSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDefaultNotificationTemplateSet.
type LookupDefaultNotificationTemplateSetArgs struct {
	// Description for Default Notification Template Set
	Description *string `pulumi:"description"`
	// Set of event-template configurations
	EventTemplateConfigurationSets []GetDefaultNotificationTemplateSetEventTemplateConfigurationSet `pulumi:"eventTemplateConfigurationSets"`
	// Identifier of Default Notification Template Set
	Identifier string `pulumi:"identifier"`
	// Name of Default Notification Template Set
	Name string `pulumi:"name"`
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType string `pulumi:"notificationChannelType"`
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity string `pulumi:"notificationEntity"`
	// Key-value tags
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getDefaultNotificationTemplateSet.
type LookupDefaultNotificationTemplateSetResult struct {
	// Timestamp when the notification rule was created.
	Created int `pulumi:"created"`
	// Description for Default Notification Template Set
	Description *string `pulumi:"description"`
	// Set of event-template configurations
	EventTemplateConfigurationSets []GetDefaultNotificationTemplateSetEventTemplateConfigurationSet `pulumi:"eventTemplateConfigurationSets"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Identifier of Default Notification Template Set
	Identifier string `pulumi:"identifier"`
	// Timestamp when the notification rule was last modified.
	LastModified int `pulumi:"lastModified"`
	// Name of Default Notification Template Set
	Name string `pulumi:"name"`
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType string `pulumi:"notificationChannelType"`
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity string `pulumi:"notificationEntity"`
	// Key-value tags
	Tags map[string]string `pulumi:"tags"`
}

func LookupDefaultNotificationTemplateSetOutput(ctx *pulumi.Context, args LookupDefaultNotificationTemplateSetOutputArgs, opts ...pulumi.InvokeOption) LookupDefaultNotificationTemplateSetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDefaultNotificationTemplateSetResultOutput, error) {
			args := v.(LookupDefaultNotificationTemplateSetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getDefaultNotificationTemplateSet:getDefaultNotificationTemplateSet", args, LookupDefaultNotificationTemplateSetResultOutput{}, options).(LookupDefaultNotificationTemplateSetResultOutput), nil
		}).(LookupDefaultNotificationTemplateSetResultOutput)
}

// A collection of arguments for invoking getDefaultNotificationTemplateSet.
type LookupDefaultNotificationTemplateSetOutputArgs struct {
	// Description for Default Notification Template Set
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Set of event-template configurations
	EventTemplateConfigurationSets GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayInput `pulumi:"eventTemplateConfigurationSets"`
	// Identifier of Default Notification Template Set
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of Default Notification Template Set
	Name pulumi.StringInput `pulumi:"name"`
	// Type of channel (e.g. SLACK, EMAIL, etc.)
	NotificationChannelType pulumi.StringInput `pulumi:"notificationChannelType"`
	// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
	NotificationEntity pulumi.StringInput `pulumi:"notificationEntity"`
	// Key-value tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupDefaultNotificationTemplateSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultNotificationTemplateSetArgs)(nil)).Elem()
}

// A collection of values returned by getDefaultNotificationTemplateSet.
type LookupDefaultNotificationTemplateSetResultOutput struct{ *pulumi.OutputState }

func (LookupDefaultNotificationTemplateSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDefaultNotificationTemplateSetResult)(nil)).Elem()
}

func (o LookupDefaultNotificationTemplateSetResultOutput) ToLookupDefaultNotificationTemplateSetResultOutput() LookupDefaultNotificationTemplateSetResultOutput {
	return o
}

func (o LookupDefaultNotificationTemplateSetResultOutput) ToLookupDefaultNotificationTemplateSetResultOutputWithContext(ctx context.Context) LookupDefaultNotificationTemplateSetResultOutput {
	return o
}

// Timestamp when the notification rule was created.
func (o LookupDefaultNotificationTemplateSetResultOutput) Created() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) int { return v.Created }).(pulumi.IntOutput)
}

// Description for Default Notification Template Set
func (o LookupDefaultNotificationTemplateSetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Set of event-template configurations
func (o LookupDefaultNotificationTemplateSetResultOutput) EventTemplateConfigurationSets() GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) []GetDefaultNotificationTemplateSetEventTemplateConfigurationSet {
		return v.EventTemplateConfigurationSets
	}).(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDefaultNotificationTemplateSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier of Default Notification Template Set
func (o LookupDefaultNotificationTemplateSetResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Timestamp when the notification rule was last modified.
func (o LookupDefaultNotificationTemplateSetResultOutput) LastModified() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) int { return v.LastModified }).(pulumi.IntOutput)
}

// Name of Default Notification Template Set
func (o LookupDefaultNotificationTemplateSetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of channel (e.g. SLACK, EMAIL, etc.)
func (o LookupDefaultNotificationTemplateSetResultOutput) NotificationChannelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) string { return v.NotificationChannelType }).(pulumi.StringOutput)
}

// Type of the entity (e.g. PIPELINE, SERVICE, etc.)
func (o LookupDefaultNotificationTemplateSetResultOutput) NotificationEntity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) string { return v.NotificationEntity }).(pulumi.StringOutput)
}

// Key-value tags
func (o LookupDefaultNotificationTemplateSetResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDefaultNotificationTemplateSetResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDefaultNotificationTemplateSetResultOutput{})
}
