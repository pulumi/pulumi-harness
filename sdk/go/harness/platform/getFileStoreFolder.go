// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving folders.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupFileStoreFolder(ctx, &platform.LookupFileStoreFolderArgs{
//				Identifier: "identifier",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFileStoreFolder(ctx *pulumi.Context, args *LookupFileStoreFolderArgs, opts ...pulumi.InvokeOption) (*LookupFileStoreFolderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFileStoreFolderResult
	err := ctx.Invoke("harness:platform/getFileStoreFolder:getFileStoreFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFileStoreFolder.
type LookupFileStoreFolderArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getFileStoreFolder.
type LookupFileStoreFolderResult struct {
	// Created by
	CreatedBies []GetFileStoreFolderCreatedBy `pulumi:"createdBies"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Last modified at
	LastModifiedAt int `pulumi:"lastModifiedAt"`
	// Last modified by
	LastModifiedBies []GetFileStoreFolderLastModifiedBy `pulumi:"lastModifiedBies"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Folder parent identifier on Harness File Store
	ParentIdentifier string `pulumi:"parentIdentifier"`
	// Harness File Store folder path
	Path string `pulumi:"path"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

func LookupFileStoreFolderOutput(ctx *pulumi.Context, args LookupFileStoreFolderOutputArgs, opts ...pulumi.InvokeOption) LookupFileStoreFolderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFileStoreFolderResultOutput, error) {
			args := v.(LookupFileStoreFolderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getFileStoreFolder:getFileStoreFolder", args, LookupFileStoreFolderResultOutput{}, options).(LookupFileStoreFolderResultOutput), nil
		}).(LookupFileStoreFolderResultOutput)
}

// A collection of arguments for invoking getFileStoreFolder.
type LookupFileStoreFolderOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupFileStoreFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileStoreFolderArgs)(nil)).Elem()
}

// A collection of values returned by getFileStoreFolder.
type LookupFileStoreFolderResultOutput struct{ *pulumi.OutputState }

func (LookupFileStoreFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileStoreFolderResult)(nil)).Elem()
}

func (o LookupFileStoreFolderResultOutput) ToLookupFileStoreFolderResultOutput() LookupFileStoreFolderResultOutput {
	return o
}

func (o LookupFileStoreFolderResultOutput) ToLookupFileStoreFolderResultOutputWithContext(ctx context.Context) LookupFileStoreFolderResultOutput {
	return o
}

// Created by
func (o LookupFileStoreFolderResultOutput) CreatedBies() GetFileStoreFolderCreatedByArrayOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) []GetFileStoreFolderCreatedBy { return v.CreatedBies }).(GetFileStoreFolderCreatedByArrayOutput)
}

// Description of the resource.
func (o LookupFileStoreFolderResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFileStoreFolderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupFileStoreFolderResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Last modified at
func (o LookupFileStoreFolderResultOutput) LastModifiedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) int { return v.LastModifiedAt }).(pulumi.IntOutput)
}

// Last modified by
func (o LookupFileStoreFolderResultOutput) LastModifiedBies() GetFileStoreFolderLastModifiedByArrayOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) []GetFileStoreFolderLastModifiedBy { return v.LastModifiedBies }).(GetFileStoreFolderLastModifiedByArrayOutput)
}

// Name of the resource.
func (o LookupFileStoreFolderResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupFileStoreFolderResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Folder parent identifier on Harness File Store
func (o LookupFileStoreFolderResultOutput) ParentIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) string { return v.ParentIdentifier }).(pulumi.StringOutput)
}

// Harness File Store folder path
func (o LookupFileStoreFolderResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) string { return v.Path }).(pulumi.StringOutput)
}

// Unique identifier of the project.
func (o LookupFileStoreFolderResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o LookupFileStoreFolderResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFileStoreFolderResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFileStoreFolderResultOutput{})
}
