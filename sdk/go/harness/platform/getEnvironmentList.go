// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness environment List.
func GetEnvironmentList(ctx *pulumi.Context, args *GetEnvironmentListArgs, opts ...pulumi.InvokeOption) (*GetEnvironmentListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvironmentListResult
	err := ctx.Invoke("harness:platform/getEnvironmentList:getEnvironmentList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnvironmentList.
type GetEnvironmentListArgs struct {
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getEnvironmentList.
type GetEnvironmentListResult struct {
	Environments []GetEnvironmentListEnvironment `pulumi:"environments"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

func GetEnvironmentListOutput(ctx *pulumi.Context, args GetEnvironmentListOutputArgs, opts ...pulumi.InvokeOption) GetEnvironmentListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEnvironmentListResultOutput, error) {
			args := v.(GetEnvironmentListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getEnvironmentList:getEnvironmentList", args, GetEnvironmentListResultOutput{}, options).(GetEnvironmentListResultOutput), nil
		}).(GetEnvironmentListResultOutput)
}

// A collection of arguments for invoking getEnvironmentList.
type GetEnvironmentListOutputArgs struct {
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (GetEnvironmentListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentListArgs)(nil)).Elem()
}

// A collection of values returned by getEnvironmentList.
type GetEnvironmentListResultOutput struct{ *pulumi.OutputState }

func (GetEnvironmentListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentListResult)(nil)).Elem()
}

func (o GetEnvironmentListResultOutput) ToGetEnvironmentListResultOutput() GetEnvironmentListResultOutput {
	return o
}

func (o GetEnvironmentListResultOutput) ToGetEnvironmentListResultOutputWithContext(ctx context.Context) GetEnvironmentListResultOutput {
	return o
}

func (o GetEnvironmentListResultOutput) Environments() GetEnvironmentListEnvironmentArrayOutput {
	return o.ApplyT(func(v GetEnvironmentListResult) []GetEnvironmentListEnvironment { return v.Environments }).(GetEnvironmentListEnvironmentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEnvironmentListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentListResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o GetEnvironmentListResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentListResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o GetEnvironmentListResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentListResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvironmentListResultOutput{})
}
