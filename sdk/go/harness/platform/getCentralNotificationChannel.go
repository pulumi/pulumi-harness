// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a central notification channel in Harness.
func LookupCentralNotificationChannel(ctx *pulumi.Context, args *LookupCentralNotificationChannelArgs, opts ...pulumi.InvokeOption) (*LookupCentralNotificationChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCentralNotificationChannelResult
	err := ctx.Invoke("harness:platform/getCentralNotificationChannel:getCentralNotificationChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCentralNotificationChannel.
type LookupCentralNotificationChannelArgs struct {
	// Account identifier associated with this notification channel.
	Account *string `pulumi:"account"`
	// Configuration details of the notification channel.
	Channels []GetCentralNotificationChannelChannel `pulumi:"channels"`
	// Timestamp when the notification channel was created.
	Created *int `pulumi:"created"`
	// Unique identifier of the notification channel.
	Identifier string `pulumi:"identifier"`
	// Timestamp when the notification channel was last modified.
	LastModified *int `pulumi:"lastModified"`
	// Name of the notification channel.
	Name *string `pulumi:"name"`
	// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
	NotificationChannelType *string `pulumi:"notificationChannelType"`
	// Identifier of the organization the notification channel is scoped to.
	Org *string `pulumi:"org"`
	// Identifier of the project the notification channel is scoped to.
	Project *string `pulumi:"project"`
	// Status of the notification channel. Possible values are ENABLED or DISABLED.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getCentralNotificationChannel.
type LookupCentralNotificationChannelResult struct {
	// Account identifier associated with this notification channel.
	Account *string `pulumi:"account"`
	// Configuration details of the notification channel.
	Channels []GetCentralNotificationChannelChannel `pulumi:"channels"`
	// Timestamp when the notification channel was created.
	Created *int `pulumi:"created"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the notification channel.
	Identifier string `pulumi:"identifier"`
	// Timestamp when the notification channel was last modified.
	LastModified *int `pulumi:"lastModified"`
	// Name of the notification channel.
	Name *string `pulumi:"name"`
	// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
	NotificationChannelType *string `pulumi:"notificationChannelType"`
	// Identifier of the organization the notification channel is scoped to.
	Org *string `pulumi:"org"`
	// Identifier of the project the notification channel is scoped to.
	Project *string `pulumi:"project"`
	// Status of the notification channel. Possible values are ENABLED or DISABLED.
	Status *string `pulumi:"status"`
}

func LookupCentralNotificationChannelOutput(ctx *pulumi.Context, args LookupCentralNotificationChannelOutputArgs, opts ...pulumi.InvokeOption) LookupCentralNotificationChannelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCentralNotificationChannelResultOutput, error) {
			args := v.(LookupCentralNotificationChannelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getCentralNotificationChannel:getCentralNotificationChannel", args, LookupCentralNotificationChannelResultOutput{}, options).(LookupCentralNotificationChannelResultOutput), nil
		}).(LookupCentralNotificationChannelResultOutput)
}

// A collection of arguments for invoking getCentralNotificationChannel.
type LookupCentralNotificationChannelOutputArgs struct {
	// Account identifier associated with this notification channel.
	Account pulumi.StringPtrInput `pulumi:"account"`
	// Configuration details of the notification channel.
	Channels GetCentralNotificationChannelChannelArrayInput `pulumi:"channels"`
	// Timestamp when the notification channel was created.
	Created pulumi.IntPtrInput `pulumi:"created"`
	// Unique identifier of the notification channel.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Timestamp when the notification channel was last modified.
	LastModified pulumi.IntPtrInput `pulumi:"lastModified"`
	// Name of the notification channel.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
	NotificationChannelType pulumi.StringPtrInput `pulumi:"notificationChannelType"`
	// Identifier of the organization the notification channel is scoped to.
	Org pulumi.StringPtrInput `pulumi:"org"`
	// Identifier of the project the notification channel is scoped to.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Status of the notification channel. Possible values are ENABLED or DISABLED.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupCentralNotificationChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCentralNotificationChannelArgs)(nil)).Elem()
}

// A collection of values returned by getCentralNotificationChannel.
type LookupCentralNotificationChannelResultOutput struct{ *pulumi.OutputState }

func (LookupCentralNotificationChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCentralNotificationChannelResult)(nil)).Elem()
}

func (o LookupCentralNotificationChannelResultOutput) ToLookupCentralNotificationChannelResultOutput() LookupCentralNotificationChannelResultOutput {
	return o
}

func (o LookupCentralNotificationChannelResultOutput) ToLookupCentralNotificationChannelResultOutputWithContext(ctx context.Context) LookupCentralNotificationChannelResultOutput {
	return o
}

// Account identifier associated with this notification channel.
func (o LookupCentralNotificationChannelResultOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// Configuration details of the notification channel.
func (o LookupCentralNotificationChannelResultOutput) Channels() GetCentralNotificationChannelChannelArrayOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) []GetCentralNotificationChannelChannel {
		return v.Channels
	}).(GetCentralNotificationChannelChannelArrayOutput)
}

// Timestamp when the notification channel was created.
func (o LookupCentralNotificationChannelResultOutput) Created() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *int { return v.Created }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCentralNotificationChannelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the notification channel.
func (o LookupCentralNotificationChannelResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Timestamp when the notification channel was last modified.
func (o LookupCentralNotificationChannelResultOutput) LastModified() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *int { return v.LastModified }).(pulumi.IntPtrOutput)
}

// Name of the notification channel.
func (o LookupCentralNotificationChannelResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
func (o LookupCentralNotificationChannelResultOutput) NotificationChannelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *string { return v.NotificationChannelType }).(pulumi.StringPtrOutput)
}

// Identifier of the organization the notification channel is scoped to.
func (o LookupCentralNotificationChannelResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

// Identifier of the project the notification channel is scoped to.
func (o LookupCentralNotificationChannelResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Status of the notification channel. Possible values are ENABLED or DISABLED.
func (o LookupCentralNotificationChannelResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCentralNotificationChannelResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCentralNotificationChannelResultOutput{})
}
