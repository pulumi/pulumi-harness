// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving IACM default pipelines.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupIacmDefaultPipeline(ctx, &platform.LookupIacmDefaultPipelineArgs{
//				OrgId:           test.Id,
//				ProjectId:       testHarnessPlatformProject.Id,
//				ProvisionerType: "terraform",
//				Operation:       "plan",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIacmDefaultPipeline(ctx *pulumi.Context, args *LookupIacmDefaultPipelineArgs, opts ...pulumi.InvokeOption) (*LookupIacmDefaultPipelineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIacmDefaultPipelineResult
	err := ctx.Invoke("harness:platform/getIacmDefaultPipeline:getIacmDefaultPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIacmDefaultPipeline.
type LookupIacmDefaultPipelineArgs struct {
	// The operation associated with this default.
	Operation string `pulumi:"operation"`
	// Organization identifier of the organization the default pipelines resides in.
	OrgId string `pulumi:"orgId"`
	// Project identifier of the project the default pipelines resides in.
	ProjectId string `pulumi:"projectId"`
	// The provisioner associated with this default.
	ProvisionerType string `pulumi:"provisionerType"`
}

// A collection of values returned by getIacmDefaultPipeline.
type LookupIacmDefaultPipelineResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The operation associated with this default.
	Operation string `pulumi:"operation"`
	// Organization identifier of the organization the default pipelines resides in.
	OrgId string `pulumi:"orgId"`
	// The pipeline associated with this default.
	Pipeline string `pulumi:"pipeline"`
	// Project identifier of the project the default pipelines resides in.
	ProjectId string `pulumi:"projectId"`
	// The provisioner associated with this default.
	ProvisionerType string `pulumi:"provisionerType"`
}

func LookupIacmDefaultPipelineOutput(ctx *pulumi.Context, args LookupIacmDefaultPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupIacmDefaultPipelineResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIacmDefaultPipelineResultOutput, error) {
			args := v.(LookupIacmDefaultPipelineArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:platform/getIacmDefaultPipeline:getIacmDefaultPipeline", args, LookupIacmDefaultPipelineResultOutput{}, options).(LookupIacmDefaultPipelineResultOutput), nil
		}).(LookupIacmDefaultPipelineResultOutput)
}

// A collection of arguments for invoking getIacmDefaultPipeline.
type LookupIacmDefaultPipelineOutputArgs struct {
	// The operation associated with this default.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Organization identifier of the organization the default pipelines resides in.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Project identifier of the project the default pipelines resides in.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The provisioner associated with this default.
	ProvisionerType pulumi.StringInput `pulumi:"provisionerType"`
}

func (LookupIacmDefaultPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIacmDefaultPipelineArgs)(nil)).Elem()
}

// A collection of values returned by getIacmDefaultPipeline.
type LookupIacmDefaultPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupIacmDefaultPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIacmDefaultPipelineResult)(nil)).Elem()
}

func (o LookupIacmDefaultPipelineResultOutput) ToLookupIacmDefaultPipelineResultOutput() LookupIacmDefaultPipelineResultOutput {
	return o
}

func (o LookupIacmDefaultPipelineResultOutput) ToLookupIacmDefaultPipelineResultOutputWithContext(ctx context.Context) LookupIacmDefaultPipelineResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIacmDefaultPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIacmDefaultPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

// The operation associated with this default.
func (o LookupIacmDefaultPipelineResultOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIacmDefaultPipelineResult) string { return v.Operation }).(pulumi.StringOutput)
}

// Organization identifier of the organization the default pipelines resides in.
func (o LookupIacmDefaultPipelineResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIacmDefaultPipelineResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// The pipeline associated with this default.
func (o LookupIacmDefaultPipelineResultOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIacmDefaultPipelineResult) string { return v.Pipeline }).(pulumi.StringOutput)
}

// Project identifier of the project the default pipelines resides in.
func (o LookupIacmDefaultPipelineResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIacmDefaultPipelineResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The provisioner associated with this default.
func (o LookupIacmDefaultPipelineResultOutput) ProvisionerType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIacmDefaultPipelineResult) string { return v.ProvisionerType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIacmDefaultPipelineResultOutput{})
}
