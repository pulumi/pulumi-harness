// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package service

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness Service Discovery Agent.
//
// This data source allows you to fetch details of a Service Discovery Agent using either its unique identifier or name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/service"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Data source to fetch a specific agent by name
//			byName, err := service.LookupDiscoveryAgent(ctx, &service.LookupDiscoveryAgentArgs{
//				Name:                  pulumi.StringRef("example-agent"),
//				OrgIdentifier:         pulumi.StringRef(orgIdentifier),
//				ProjectIdentifier:     pulumi.StringRef(projectIdentifier),
//				EnvironmentIdentifier: environmentIdentifier,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("agentDetailsByName", byName)
//			// Data source to fetch a specific agent by identity
//			byIdentity, err := service.LookupDiscoveryAgent(ctx, &service.LookupDiscoveryAgentArgs{
//				Identity:              pulumi.StringRef("example-infra"),
//				OrgIdentifier:         pulumi.StringRef(orgIdentifier),
//				ProjectIdentifier:     pulumi.StringRef(projectIdentifier),
//				EnvironmentIdentifier: environmentIdentifier,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("agentDetailsByIdentity", byIdentity)
//			return nil
//		})
//	}
//
// ```
func LookupDiscoveryAgent(ctx *pulumi.Context, args *LookupDiscoveryAgentArgs, opts ...pulumi.InvokeOption) (*LookupDiscoveryAgentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiscoveryAgentResult
	err := ctx.Invoke("harness:service/getDiscoveryAgent:getDiscoveryAgent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiscoveryAgent.
type LookupDiscoveryAgentArgs struct {
	// The environment identifier of the agent. This is a required field.
	EnvironmentIdentifier string `pulumi:"environmentIdentifier"`
	// The unique identity of the agent. Either this or 'name' must be provided.
	Identity *string `pulumi:"identity"`
	// The name of the agent. Either this or 'identity' must be provided.
	Name *string `pulumi:"name"`
	// The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
	OrgIdentifier *string `pulumi:"orgIdentifier"`
	// The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
}

// A collection of values returned by getDiscoveryAgent.
type LookupDiscoveryAgentResult struct {
	// Configuration for the agent.
	Configs []GetDiscoveryAgentConfig `pulumi:"configs"`
	// Correlation ID for the agent.
	CorrelationId string `pulumi:"correlationId"`
	// Timestamp when the agent was created.
	CreatedAt string `pulumi:"createdAt"`
	// User who created the agent.
	CreatedBy string `pulumi:"createdBy"`
	// Description of the agent.
	Description string `pulumi:"description"`
	// The environment identifier of the agent. This is a required field.
	EnvironmentIdentifier string `pulumi:"environmentIdentifier"`
	// The unique identifier of the agent.
	Id string `pulumi:"id"`
	// The unique identity of the agent. Either this or 'name' must be provided.
	Identity *string `pulumi:"identity"`
	// Installation details of the agent.
	InstallationDetails []GetDiscoveryAgentInstallationDetail `pulumi:"installationDetails"`
	// Type of installation for the agent.
	InstallationType string `pulumi:"installationType"`
	// The name of the agent. Either this or 'identity' must be provided.
	Name *string `pulumi:"name"`
	// Number of network maps associated with this agent.
	NetworkMapCount int `pulumi:"networkMapCount"`
	// The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
	OrgIdentifier *string `pulumi:"orgIdentifier"`
	// Whether this is a permanent installation.
	PermanentInstallation bool `pulumi:"permanentInstallation"`
	// The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
	// Whether the agent has been removed.
	Removed bool `pulumi:"removed"`
	// Timestamp when the agent was removed.
	RemovedAt string `pulumi:"removedAt"`
	// Number of services managed by this agent.
	ServiceCount int `pulumi:"serviceCount"`
	// Key-value list of resource tags for the agent.
	Tags []string `pulumi:"tags"`
	// Timestamp when the agent was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// User who last updated the agent.
	UpdatedBy string `pulumi:"updatedBy"`
	// Webhook URL for the agent.
	WebhookUrl string `pulumi:"webhookUrl"`
}

func LookupDiscoveryAgentOutput(ctx *pulumi.Context, args LookupDiscoveryAgentOutputArgs, opts ...pulumi.InvokeOption) LookupDiscoveryAgentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDiscoveryAgentResultOutput, error) {
			args := v.(LookupDiscoveryAgentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harness:service/getDiscoveryAgent:getDiscoveryAgent", args, LookupDiscoveryAgentResultOutput{}, options).(LookupDiscoveryAgentResultOutput), nil
		}).(LookupDiscoveryAgentResultOutput)
}

// A collection of arguments for invoking getDiscoveryAgent.
type LookupDiscoveryAgentOutputArgs struct {
	// The environment identifier of the agent. This is a required field.
	EnvironmentIdentifier pulumi.StringInput `pulumi:"environmentIdentifier"`
	// The unique identity of the agent. Either this or 'name' must be provided.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The name of the agent. Either this or 'identity' must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
	OrgIdentifier pulumi.StringPtrInput `pulumi:"orgIdentifier"`
	// The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
	ProjectIdentifier pulumi.StringPtrInput `pulumi:"projectIdentifier"`
}

func (LookupDiscoveryAgentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryAgentArgs)(nil)).Elem()
}

// A collection of values returned by getDiscoveryAgent.
type LookupDiscoveryAgentResultOutput struct{ *pulumi.OutputState }

func (LookupDiscoveryAgentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryAgentResult)(nil)).Elem()
}

func (o LookupDiscoveryAgentResultOutput) ToLookupDiscoveryAgentResultOutput() LookupDiscoveryAgentResultOutput {
	return o
}

func (o LookupDiscoveryAgentResultOutput) ToLookupDiscoveryAgentResultOutputWithContext(ctx context.Context) LookupDiscoveryAgentResultOutput {
	return o
}

// Configuration for the agent.
func (o LookupDiscoveryAgentResultOutput) Configs() GetDiscoveryAgentConfigArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) []GetDiscoveryAgentConfig { return v.Configs }).(GetDiscoveryAgentConfigArrayOutput)
}

// Correlation ID for the agent.
func (o LookupDiscoveryAgentResultOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// Timestamp when the agent was created.
func (o LookupDiscoveryAgentResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// User who created the agent.
func (o LookupDiscoveryAgentResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Description of the agent.
func (o LookupDiscoveryAgentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The environment identifier of the agent. This is a required field.
func (o LookupDiscoveryAgentResultOutput) EnvironmentIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.EnvironmentIdentifier }).(pulumi.StringOutput)
}

// The unique identifier of the agent.
func (o LookupDiscoveryAgentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identity of the agent. Either this or 'name' must be provided.
func (o LookupDiscoveryAgentResultOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// Installation details of the agent.
func (o LookupDiscoveryAgentResultOutput) InstallationDetails() GetDiscoveryAgentInstallationDetailArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) []GetDiscoveryAgentInstallationDetail { return v.InstallationDetails }).(GetDiscoveryAgentInstallationDetailArrayOutput)
}

// Type of installation for the agent.
func (o LookupDiscoveryAgentResultOutput) InstallationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.InstallationType }).(pulumi.StringOutput)
}

// The name of the agent. Either this or 'identity' must be provided.
func (o LookupDiscoveryAgentResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Number of network maps associated with this agent.
func (o LookupDiscoveryAgentResultOutput) NetworkMapCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) int { return v.NetworkMapCount }).(pulumi.IntOutput)
}

// The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
func (o LookupDiscoveryAgentResultOutput) OrgIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) *string { return v.OrgIdentifier }).(pulumi.StringPtrOutput)
}

// Whether this is a permanent installation.
func (o LookupDiscoveryAgentResultOutput) PermanentInstallation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) bool { return v.PermanentInstallation }).(pulumi.BoolOutput)
}

// The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
func (o LookupDiscoveryAgentResultOutput) ProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) *string { return v.ProjectIdentifier }).(pulumi.StringPtrOutput)
}

// Whether the agent has been removed.
func (o LookupDiscoveryAgentResultOutput) Removed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) bool { return v.Removed }).(pulumi.BoolOutput)
}

// Timestamp when the agent was removed.
func (o LookupDiscoveryAgentResultOutput) RemovedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.RemovedAt }).(pulumi.StringOutput)
}

// Number of services managed by this agent.
func (o LookupDiscoveryAgentResultOutput) ServiceCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) int { return v.ServiceCount }).(pulumi.IntOutput)
}

// Key-value list of resource tags for the agent.
func (o LookupDiscoveryAgentResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Timestamp when the agent was last updated.
func (o LookupDiscoveryAgentResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// User who last updated the agent.
func (o LookupDiscoveryAgentResultOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// Webhook URL for the agent.
func (o LookupDiscoveryAgentResultOutput) WebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryAgentResult) string { return v.WebhookUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiscoveryAgentResultOutput{})
}
