// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package service

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing service discovery settings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/service"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Update image registry settings for service discovery
//			_, err := service.NewDiscoverySetting(ctx, "example", &service.DiscoverySettingArgs{
//				OrgIdentifier:     pulumi.String("sechaosworkshop"),
//				ProjectIdentifier: pulumi.String("se1"),
//				ImageRegistry: &service.DiscoverySettingImageRegistryArgs{
//					Account: pulumi.String("<account_name>"),
//					Server:  pulumi.String("<registry_server>"),
//					Secrets: pulumi.StringArray{
//						pulumi.String("<secret_name>"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DiscoverySetting struct {
	pulumi.CustomResourceState

	// Correlation ID for the request.
	CorrelationId pulumi.StringPtrOutput `pulumi:"correlationId"`
	// Timestamp when the setting was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Image registry configuration.
	ImageRegistry DiscoverySettingImageRegistryPtrOutput `pulumi:"imageRegistry"`
	// The organization identifier.
	OrgIdentifier pulumi.StringPtrOutput `pulumi:"orgIdentifier"`
	// The project identifier.
	ProjectIdentifier pulumi.StringPtrOutput `pulumi:"projectIdentifier"`
	// Timestamp when the setting was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewDiscoverySetting registers a new resource with the given unique name, arguments, and options.
func NewDiscoverySetting(ctx *pulumi.Context,
	name string, args *DiscoverySettingArgs, opts ...pulumi.ResourceOption) (*DiscoverySetting, error) {
	if args == nil {
		args = &DiscoverySettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DiscoverySetting
	err := ctx.RegisterResource("harness:service/discoverySetting:DiscoverySetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoverySetting gets an existing DiscoverySetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoverySetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoverySettingState, opts ...pulumi.ResourceOption) (*DiscoverySetting, error) {
	var resource DiscoverySetting
	err := ctx.ReadResource("harness:service/discoverySetting:DiscoverySetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoverySetting resources.
type discoverySettingState struct {
	// Correlation ID for the request.
	CorrelationId *string `pulumi:"correlationId"`
	// Timestamp when the setting was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Image registry configuration.
	ImageRegistry *DiscoverySettingImageRegistry `pulumi:"imageRegistry"`
	// The organization identifier.
	OrgIdentifier *string `pulumi:"orgIdentifier"`
	// The project identifier.
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
	// Timestamp when the setting was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type DiscoverySettingState struct {
	// Correlation ID for the request.
	CorrelationId pulumi.StringPtrInput
	// Timestamp when the setting was created.
	CreatedAt pulumi.StringPtrInput
	// Image registry configuration.
	ImageRegistry DiscoverySettingImageRegistryPtrInput
	// The organization identifier.
	OrgIdentifier pulumi.StringPtrInput
	// The project identifier.
	ProjectIdentifier pulumi.StringPtrInput
	// Timestamp when the setting was last updated.
	UpdatedAt pulumi.StringPtrInput
}

func (DiscoverySettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoverySettingState)(nil)).Elem()
}

type discoverySettingArgs struct {
	// Correlation ID for the request.
	CorrelationId *string `pulumi:"correlationId"`
	// Image registry configuration.
	ImageRegistry *DiscoverySettingImageRegistry `pulumi:"imageRegistry"`
	// The organization identifier.
	OrgIdentifier *string `pulumi:"orgIdentifier"`
	// The project identifier.
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
}

// The set of arguments for constructing a DiscoverySetting resource.
type DiscoverySettingArgs struct {
	// Correlation ID for the request.
	CorrelationId pulumi.StringPtrInput
	// Image registry configuration.
	ImageRegistry DiscoverySettingImageRegistryPtrInput
	// The organization identifier.
	OrgIdentifier pulumi.StringPtrInput
	// The project identifier.
	ProjectIdentifier pulumi.StringPtrInput
}

func (DiscoverySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoverySettingArgs)(nil)).Elem()
}

type DiscoverySettingInput interface {
	pulumi.Input

	ToDiscoverySettingOutput() DiscoverySettingOutput
	ToDiscoverySettingOutputWithContext(ctx context.Context) DiscoverySettingOutput
}

func (*DiscoverySetting) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoverySetting)(nil)).Elem()
}

func (i *DiscoverySetting) ToDiscoverySettingOutput() DiscoverySettingOutput {
	return i.ToDiscoverySettingOutputWithContext(context.Background())
}

func (i *DiscoverySetting) ToDiscoverySettingOutputWithContext(ctx context.Context) DiscoverySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoverySettingOutput)
}

// DiscoverySettingArrayInput is an input type that accepts DiscoverySettingArray and DiscoverySettingArrayOutput values.
// You can construct a concrete instance of `DiscoverySettingArrayInput` via:
//
//	DiscoverySettingArray{ DiscoverySettingArgs{...} }
type DiscoverySettingArrayInput interface {
	pulumi.Input

	ToDiscoverySettingArrayOutput() DiscoverySettingArrayOutput
	ToDiscoverySettingArrayOutputWithContext(context.Context) DiscoverySettingArrayOutput
}

type DiscoverySettingArray []DiscoverySettingInput

func (DiscoverySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiscoverySetting)(nil)).Elem()
}

func (i DiscoverySettingArray) ToDiscoverySettingArrayOutput() DiscoverySettingArrayOutput {
	return i.ToDiscoverySettingArrayOutputWithContext(context.Background())
}

func (i DiscoverySettingArray) ToDiscoverySettingArrayOutputWithContext(ctx context.Context) DiscoverySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoverySettingArrayOutput)
}

// DiscoverySettingMapInput is an input type that accepts DiscoverySettingMap and DiscoverySettingMapOutput values.
// You can construct a concrete instance of `DiscoverySettingMapInput` via:
//
//	DiscoverySettingMap{ "key": DiscoverySettingArgs{...} }
type DiscoverySettingMapInput interface {
	pulumi.Input

	ToDiscoverySettingMapOutput() DiscoverySettingMapOutput
	ToDiscoverySettingMapOutputWithContext(context.Context) DiscoverySettingMapOutput
}

type DiscoverySettingMap map[string]DiscoverySettingInput

func (DiscoverySettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiscoverySetting)(nil)).Elem()
}

func (i DiscoverySettingMap) ToDiscoverySettingMapOutput() DiscoverySettingMapOutput {
	return i.ToDiscoverySettingMapOutputWithContext(context.Background())
}

func (i DiscoverySettingMap) ToDiscoverySettingMapOutputWithContext(ctx context.Context) DiscoverySettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoverySettingMapOutput)
}

type DiscoverySettingOutput struct{ *pulumi.OutputState }

func (DiscoverySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoverySetting)(nil)).Elem()
}

func (o DiscoverySettingOutput) ToDiscoverySettingOutput() DiscoverySettingOutput {
	return o
}

func (o DiscoverySettingOutput) ToDiscoverySettingOutputWithContext(ctx context.Context) DiscoverySettingOutput {
	return o
}

// Correlation ID for the request.
func (o DiscoverySettingOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoverySetting) pulumi.StringPtrOutput { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// Timestamp when the setting was created.
func (o DiscoverySettingOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoverySetting) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Image registry configuration.
func (o DiscoverySettingOutput) ImageRegistry() DiscoverySettingImageRegistryPtrOutput {
	return o.ApplyT(func(v *DiscoverySetting) DiscoverySettingImageRegistryPtrOutput { return v.ImageRegistry }).(DiscoverySettingImageRegistryPtrOutput)
}

// The organization identifier.
func (o DiscoverySettingOutput) OrgIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoverySetting) pulumi.StringPtrOutput { return v.OrgIdentifier }).(pulumi.StringPtrOutput)
}

// The project identifier.
func (o DiscoverySettingOutput) ProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoverySetting) pulumi.StringPtrOutput { return v.ProjectIdentifier }).(pulumi.StringPtrOutput)
}

// Timestamp when the setting was last updated.
func (o DiscoverySettingOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoverySetting) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type DiscoverySettingArrayOutput struct{ *pulumi.OutputState }

func (DiscoverySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiscoverySetting)(nil)).Elem()
}

func (o DiscoverySettingArrayOutput) ToDiscoverySettingArrayOutput() DiscoverySettingArrayOutput {
	return o
}

func (o DiscoverySettingArrayOutput) ToDiscoverySettingArrayOutputWithContext(ctx context.Context) DiscoverySettingArrayOutput {
	return o
}

func (o DiscoverySettingArrayOutput) Index(i pulumi.IntInput) DiscoverySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DiscoverySetting {
		return vs[0].([]*DiscoverySetting)[vs[1].(int)]
	}).(DiscoverySettingOutput)
}

type DiscoverySettingMapOutput struct{ *pulumi.OutputState }

func (DiscoverySettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiscoverySetting)(nil)).Elem()
}

func (o DiscoverySettingMapOutput) ToDiscoverySettingMapOutput() DiscoverySettingMapOutput {
	return o
}

func (o DiscoverySettingMapOutput) ToDiscoverySettingMapOutputWithContext(ctx context.Context) DiscoverySettingMapOutput {
	return o
}

func (o DiscoverySettingMapOutput) MapIndex(k pulumi.StringInput) DiscoverySettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DiscoverySetting {
		return vs[0].(map[string]*DiscoverySetting)[vs[1].(string)]
	}).(DiscoverySettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoverySettingInput)(nil)).Elem(), &DiscoverySetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoverySettingArrayInput)(nil)).Elem(), DiscoverySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoverySettingMapInput)(nil)).Elem(), DiscoverySettingMap{})
	pulumi.RegisterOutputType(DiscoverySettingOutput{})
	pulumi.RegisterOutputType(DiscoverySettingArrayOutput{})
	pulumi.RegisterOutputType(DiscoverySettingMapOutput{})
}
