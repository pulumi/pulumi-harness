// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chaos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ImageRegistryCustomImage struct {
	Ddcr       *string `pulumi:"ddcr"`
	DdcrFault  *string `pulumi:"ddcrFault"`
	DdcrLib    *string `pulumi:"ddcrLib"`
	LogWatcher *string `pulumi:"logWatcher"`
}

// ImageRegistryCustomImageInput is an input type that accepts ImageRegistryCustomImageArgs and ImageRegistryCustomImageOutput values.
// You can construct a concrete instance of `ImageRegistryCustomImageInput` via:
//
//	ImageRegistryCustomImageArgs{...}
type ImageRegistryCustomImageInput interface {
	pulumi.Input

	ToImageRegistryCustomImageOutput() ImageRegistryCustomImageOutput
	ToImageRegistryCustomImageOutputWithContext(context.Context) ImageRegistryCustomImageOutput
}

type ImageRegistryCustomImageArgs struct {
	Ddcr       pulumi.StringPtrInput `pulumi:"ddcr"`
	DdcrFault  pulumi.StringPtrInput `pulumi:"ddcrFault"`
	DdcrLib    pulumi.StringPtrInput `pulumi:"ddcrLib"`
	LogWatcher pulumi.StringPtrInput `pulumi:"logWatcher"`
}

func (ImageRegistryCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegistryCustomImage)(nil)).Elem()
}

func (i ImageRegistryCustomImageArgs) ToImageRegistryCustomImageOutput() ImageRegistryCustomImageOutput {
	return i.ToImageRegistryCustomImageOutputWithContext(context.Background())
}

func (i ImageRegistryCustomImageArgs) ToImageRegistryCustomImageOutputWithContext(ctx context.Context) ImageRegistryCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRegistryCustomImageOutput)
}

// ImageRegistryCustomImageArrayInput is an input type that accepts ImageRegistryCustomImageArray and ImageRegistryCustomImageArrayOutput values.
// You can construct a concrete instance of `ImageRegistryCustomImageArrayInput` via:
//
//	ImageRegistryCustomImageArray{ ImageRegistryCustomImageArgs{...} }
type ImageRegistryCustomImageArrayInput interface {
	pulumi.Input

	ToImageRegistryCustomImageArrayOutput() ImageRegistryCustomImageArrayOutput
	ToImageRegistryCustomImageArrayOutputWithContext(context.Context) ImageRegistryCustomImageArrayOutput
}

type ImageRegistryCustomImageArray []ImageRegistryCustomImageInput

func (ImageRegistryCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRegistryCustomImage)(nil)).Elem()
}

func (i ImageRegistryCustomImageArray) ToImageRegistryCustomImageArrayOutput() ImageRegistryCustomImageArrayOutput {
	return i.ToImageRegistryCustomImageArrayOutputWithContext(context.Background())
}

func (i ImageRegistryCustomImageArray) ToImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) ImageRegistryCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRegistryCustomImageArrayOutput)
}

type ImageRegistryCustomImageOutput struct{ *pulumi.OutputState }

func (ImageRegistryCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegistryCustomImage)(nil)).Elem()
}

func (o ImageRegistryCustomImageOutput) ToImageRegistryCustomImageOutput() ImageRegistryCustomImageOutput {
	return o
}

func (o ImageRegistryCustomImageOutput) ToImageRegistryCustomImageOutputWithContext(ctx context.Context) ImageRegistryCustomImageOutput {
	return o
}

func (o ImageRegistryCustomImageOutput) Ddcr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCustomImage) *string { return v.Ddcr }).(pulumi.StringPtrOutput)
}

func (o ImageRegistryCustomImageOutput) DdcrFault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCustomImage) *string { return v.DdcrFault }).(pulumi.StringPtrOutput)
}

func (o ImageRegistryCustomImageOutput) DdcrLib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCustomImage) *string { return v.DdcrLib }).(pulumi.StringPtrOutput)
}

func (o ImageRegistryCustomImageOutput) LogWatcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRegistryCustomImage) *string { return v.LogWatcher }).(pulumi.StringPtrOutput)
}

type ImageRegistryCustomImageArrayOutput struct{ *pulumi.OutputState }

func (ImageRegistryCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRegistryCustomImage)(nil)).Elem()
}

func (o ImageRegistryCustomImageArrayOutput) ToImageRegistryCustomImageArrayOutput() ImageRegistryCustomImageArrayOutput {
	return o
}

func (o ImageRegistryCustomImageArrayOutput) ToImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) ImageRegistryCustomImageArrayOutput {
	return o
}

func (o ImageRegistryCustomImageArrayOutput) Index(i pulumi.IntInput) ImageRegistryCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRegistryCustomImage {
		return vs[0].([]ImageRegistryCustomImage)[vs[1].(int)]
	}).(ImageRegistryCustomImageOutput)
}

type InfrastructureV2Env struct {
	// Variable name from a ConfigMap or Secret. Required when valueFrom is configMapKeyRef or secretKeyRef.
	Key *string `pulumi:"key"`
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name string `pulumi:"name"`
	// Variable references $(VAR*NAME) are expanded using the container's environment. If the variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR*NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value *string `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom *string `pulumi:"valueFrom"`
}

// InfrastructureV2EnvInput is an input type that accepts InfrastructureV2EnvArgs and InfrastructureV2EnvOutput values.
// You can construct a concrete instance of `InfrastructureV2EnvInput` via:
//
//	InfrastructureV2EnvArgs{...}
type InfrastructureV2EnvInput interface {
	pulumi.Input

	ToInfrastructureV2EnvOutput() InfrastructureV2EnvOutput
	ToInfrastructureV2EnvOutputWithContext(context.Context) InfrastructureV2EnvOutput
}

type InfrastructureV2EnvArgs struct {
	// Variable name from a ConfigMap or Secret. Required when valueFrom is configMapKeyRef or secretKeyRef.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the environment variable. Must be a C_IDENTIFIER.
	Name pulumi.StringInput `pulumi:"name"`
	// Variable references $(VAR*NAME) are expanded using the container's environment. If the variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR*NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Source for the environment variable's value. Cannot be used if value is not empty.
	ValueFrom pulumi.StringPtrInput `pulumi:"valueFrom"`
}

func (InfrastructureV2EnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Env)(nil)).Elem()
}

func (i InfrastructureV2EnvArgs) ToInfrastructureV2EnvOutput() InfrastructureV2EnvOutput {
	return i.ToInfrastructureV2EnvOutputWithContext(context.Background())
}

func (i InfrastructureV2EnvArgs) ToInfrastructureV2EnvOutputWithContext(ctx context.Context) InfrastructureV2EnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2EnvOutput)
}

// InfrastructureV2EnvArrayInput is an input type that accepts InfrastructureV2EnvArray and InfrastructureV2EnvArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2EnvArrayInput` via:
//
//	InfrastructureV2EnvArray{ InfrastructureV2EnvArgs{...} }
type InfrastructureV2EnvArrayInput interface {
	pulumi.Input

	ToInfrastructureV2EnvArrayOutput() InfrastructureV2EnvArrayOutput
	ToInfrastructureV2EnvArrayOutputWithContext(context.Context) InfrastructureV2EnvArrayOutput
}

type InfrastructureV2EnvArray []InfrastructureV2EnvInput

func (InfrastructureV2EnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Env)(nil)).Elem()
}

func (i InfrastructureV2EnvArray) ToInfrastructureV2EnvArrayOutput() InfrastructureV2EnvArrayOutput {
	return i.ToInfrastructureV2EnvArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2EnvArray) ToInfrastructureV2EnvArrayOutputWithContext(ctx context.Context) InfrastructureV2EnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2EnvArrayOutput)
}

type InfrastructureV2EnvOutput struct{ *pulumi.OutputState }

func (InfrastructureV2EnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Env)(nil)).Elem()
}

func (o InfrastructureV2EnvOutput) ToInfrastructureV2EnvOutput() InfrastructureV2EnvOutput {
	return o
}

func (o InfrastructureV2EnvOutput) ToInfrastructureV2EnvOutputWithContext(ctx context.Context) InfrastructureV2EnvOutput {
	return o
}

// Variable name from a ConfigMap or Secret. Required when valueFrom is configMapKeyRef or secretKeyRef.
func (o InfrastructureV2EnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Env) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the environment variable. Must be a C_IDENTIFIER.
func (o InfrastructureV2EnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2Env) string { return v.Name }).(pulumi.StringOutput)
}

// Variable references $(VAR*NAME) are expanded using the container's environment. If the variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR*NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
func (o InfrastructureV2EnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Env) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Source for the environment variable's value. Cannot be used if value is not empty.
func (o InfrastructureV2EnvOutput) ValueFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Env) *string { return v.ValueFrom }).(pulumi.StringPtrOutput)
}

type InfrastructureV2EnvArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2EnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Env)(nil)).Elem()
}

func (o InfrastructureV2EnvArrayOutput) ToInfrastructureV2EnvArrayOutput() InfrastructureV2EnvArrayOutput {
	return o
}

func (o InfrastructureV2EnvArrayOutput) ToInfrastructureV2EnvArrayOutputWithContext(ctx context.Context) InfrastructureV2EnvArrayOutput {
	return o
}

func (o InfrastructureV2EnvArrayOutput) Index(i pulumi.IntInput) InfrastructureV2EnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2Env {
		return vs[0].([]InfrastructureV2Env)[vs[1].(int)]
	}).(InfrastructureV2EnvOutput)
}

type InfrastructureV2Identifier struct {
	// Account identifier.
	AccountIdentifier *string `pulumi:"accountIdentifier"`
	// Organization identifier.
	OrgIdentifier *string `pulumi:"orgIdentifier"`
	// Project identifier.
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
}

// InfrastructureV2IdentifierInput is an input type that accepts InfrastructureV2IdentifierArgs and InfrastructureV2IdentifierOutput values.
// You can construct a concrete instance of `InfrastructureV2IdentifierInput` via:
//
//	InfrastructureV2IdentifierArgs{...}
type InfrastructureV2IdentifierInput interface {
	pulumi.Input

	ToInfrastructureV2IdentifierOutput() InfrastructureV2IdentifierOutput
	ToInfrastructureV2IdentifierOutputWithContext(context.Context) InfrastructureV2IdentifierOutput
}

type InfrastructureV2IdentifierArgs struct {
	// Account identifier.
	AccountIdentifier pulumi.StringPtrInput `pulumi:"accountIdentifier"`
	// Organization identifier.
	OrgIdentifier pulumi.StringPtrInput `pulumi:"orgIdentifier"`
	// Project identifier.
	ProjectIdentifier pulumi.StringPtrInput `pulumi:"projectIdentifier"`
}

func (InfrastructureV2IdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Identifier)(nil)).Elem()
}

func (i InfrastructureV2IdentifierArgs) ToInfrastructureV2IdentifierOutput() InfrastructureV2IdentifierOutput {
	return i.ToInfrastructureV2IdentifierOutputWithContext(context.Background())
}

func (i InfrastructureV2IdentifierArgs) ToInfrastructureV2IdentifierOutputWithContext(ctx context.Context) InfrastructureV2IdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2IdentifierOutput)
}

// InfrastructureV2IdentifierArrayInput is an input type that accepts InfrastructureV2IdentifierArray and InfrastructureV2IdentifierArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2IdentifierArrayInput` via:
//
//	InfrastructureV2IdentifierArray{ InfrastructureV2IdentifierArgs{...} }
type InfrastructureV2IdentifierArrayInput interface {
	pulumi.Input

	ToInfrastructureV2IdentifierArrayOutput() InfrastructureV2IdentifierArrayOutput
	ToInfrastructureV2IdentifierArrayOutputWithContext(context.Context) InfrastructureV2IdentifierArrayOutput
}

type InfrastructureV2IdentifierArray []InfrastructureV2IdentifierInput

func (InfrastructureV2IdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Identifier)(nil)).Elem()
}

func (i InfrastructureV2IdentifierArray) ToInfrastructureV2IdentifierArrayOutput() InfrastructureV2IdentifierArrayOutput {
	return i.ToInfrastructureV2IdentifierArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2IdentifierArray) ToInfrastructureV2IdentifierArrayOutputWithContext(ctx context.Context) InfrastructureV2IdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2IdentifierArrayOutput)
}

type InfrastructureV2IdentifierOutput struct{ *pulumi.OutputState }

func (InfrastructureV2IdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Identifier)(nil)).Elem()
}

func (o InfrastructureV2IdentifierOutput) ToInfrastructureV2IdentifierOutput() InfrastructureV2IdentifierOutput {
	return o
}

func (o InfrastructureV2IdentifierOutput) ToInfrastructureV2IdentifierOutputWithContext(ctx context.Context) InfrastructureV2IdentifierOutput {
	return o
}

// Account identifier.
func (o InfrastructureV2IdentifierOutput) AccountIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Identifier) *string { return v.AccountIdentifier }).(pulumi.StringPtrOutput)
}

// Organization identifier.
func (o InfrastructureV2IdentifierOutput) OrgIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Identifier) *string { return v.OrgIdentifier }).(pulumi.StringPtrOutput)
}

// Project identifier.
func (o InfrastructureV2IdentifierOutput) ProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Identifier) *string { return v.ProjectIdentifier }).(pulumi.StringPtrOutput)
}

type InfrastructureV2IdentifierArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2IdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Identifier)(nil)).Elem()
}

func (o InfrastructureV2IdentifierArrayOutput) ToInfrastructureV2IdentifierArrayOutput() InfrastructureV2IdentifierArrayOutput {
	return o
}

func (o InfrastructureV2IdentifierArrayOutput) ToInfrastructureV2IdentifierArrayOutputWithContext(ctx context.Context) InfrastructureV2IdentifierArrayOutput {
	return o
}

func (o InfrastructureV2IdentifierArrayOutput) Index(i pulumi.IntInput) InfrastructureV2IdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2Identifier {
		return vs[0].([]InfrastructureV2Identifier)[vs[1].(int)]
	}).(InfrastructureV2IdentifierOutput)
}

type InfrastructureV2ImageRegistry struct {
	// Timestamp when the registry was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Custom image configurations. Required when use*custom*images is true.
	CustomImages []InfrastructureV2ImageRegistryCustomImage `pulumi:"customImages"`
	// Scoped identifiers for the registry.
	Identifiers []InfrastructureV2ImageRegistryIdentifier `pulumi:"identifiers"`
	// ID of the infrastructure.
	InfraId *string `pulumi:"infraId"`
	// Whether this is the default registry.
	IsDefault *bool `pulumi:"isDefault"`
	// Whether override is allowed for this registry.
	IsOverrideAllowed *bool `pulumi:"isOverrideAllowed"`
	// Whether the registry is private.
	IsPrivate *bool `pulumi:"isPrivate"`
	// The account name for the container registry.
	RegistryAccount *string `pulumi:"registryAccount"`
	// The container image registry server URL (e.g., docker.io, gcr.io).
	RegistryServer *string `pulumi:"registryServer"`
	// Name of the Kubernetes secret containing registry credentials.
	SecretName *string `pulumi:"secretName"`
	// Timestamp when the registry was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Whether to use custom images instead of default ones.
	UseCustomImages *bool `pulumi:"useCustomImages"`
}

// InfrastructureV2ImageRegistryInput is an input type that accepts InfrastructureV2ImageRegistryArgs and InfrastructureV2ImageRegistryOutput values.
// You can construct a concrete instance of `InfrastructureV2ImageRegistryInput` via:
//
//	InfrastructureV2ImageRegistryArgs{...}
type InfrastructureV2ImageRegistryInput interface {
	pulumi.Input

	ToInfrastructureV2ImageRegistryOutput() InfrastructureV2ImageRegistryOutput
	ToInfrastructureV2ImageRegistryOutputWithContext(context.Context) InfrastructureV2ImageRegistryOutput
}

type InfrastructureV2ImageRegistryArgs struct {
	// Timestamp when the registry was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Custom image configurations. Required when use*custom*images is true.
	CustomImages InfrastructureV2ImageRegistryCustomImageArrayInput `pulumi:"customImages"`
	// Scoped identifiers for the registry.
	Identifiers InfrastructureV2ImageRegistryIdentifierArrayInput `pulumi:"identifiers"`
	// ID of the infrastructure.
	InfraId pulumi.StringPtrInput `pulumi:"infraId"`
	// Whether this is the default registry.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Whether override is allowed for this registry.
	IsOverrideAllowed pulumi.BoolPtrInput `pulumi:"isOverrideAllowed"`
	// Whether the registry is private.
	IsPrivate pulumi.BoolPtrInput `pulumi:"isPrivate"`
	// The account name for the container registry.
	RegistryAccount pulumi.StringPtrInput `pulumi:"registryAccount"`
	// The container image registry server URL (e.g., docker.io, gcr.io).
	RegistryServer pulumi.StringPtrInput `pulumi:"registryServer"`
	// Name of the Kubernetes secret containing registry credentials.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// Timestamp when the registry was last updated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
	// Whether to use custom images instead of default ones.
	UseCustomImages pulumi.BoolPtrInput `pulumi:"useCustomImages"`
}

func (InfrastructureV2ImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2ImageRegistry)(nil)).Elem()
}

func (i InfrastructureV2ImageRegistryArgs) ToInfrastructureV2ImageRegistryOutput() InfrastructureV2ImageRegistryOutput {
	return i.ToInfrastructureV2ImageRegistryOutputWithContext(context.Background())
}

func (i InfrastructureV2ImageRegistryArgs) ToInfrastructureV2ImageRegistryOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ImageRegistryOutput)
}

// InfrastructureV2ImageRegistryArrayInput is an input type that accepts InfrastructureV2ImageRegistryArray and InfrastructureV2ImageRegistryArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2ImageRegistryArrayInput` via:
//
//	InfrastructureV2ImageRegistryArray{ InfrastructureV2ImageRegistryArgs{...} }
type InfrastructureV2ImageRegistryArrayInput interface {
	pulumi.Input

	ToInfrastructureV2ImageRegistryArrayOutput() InfrastructureV2ImageRegistryArrayOutput
	ToInfrastructureV2ImageRegistryArrayOutputWithContext(context.Context) InfrastructureV2ImageRegistryArrayOutput
}

type InfrastructureV2ImageRegistryArray []InfrastructureV2ImageRegistryInput

func (InfrastructureV2ImageRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2ImageRegistry)(nil)).Elem()
}

func (i InfrastructureV2ImageRegistryArray) ToInfrastructureV2ImageRegistryArrayOutput() InfrastructureV2ImageRegistryArrayOutput {
	return i.ToInfrastructureV2ImageRegistryArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2ImageRegistryArray) ToInfrastructureV2ImageRegistryArrayOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ImageRegistryArrayOutput)
}

type InfrastructureV2ImageRegistryOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2ImageRegistry)(nil)).Elem()
}

func (o InfrastructureV2ImageRegistryOutput) ToInfrastructureV2ImageRegistryOutput() InfrastructureV2ImageRegistryOutput {
	return o
}

func (o InfrastructureV2ImageRegistryOutput) ToInfrastructureV2ImageRegistryOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryOutput {
	return o
}

// Timestamp when the registry was created.
func (o InfrastructureV2ImageRegistryOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Custom image configurations. Required when use*custom*images is true.
func (o InfrastructureV2ImageRegistryOutput) CustomImages() InfrastructureV2ImageRegistryCustomImageArrayOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) []InfrastructureV2ImageRegistryCustomImage {
		return v.CustomImages
	}).(InfrastructureV2ImageRegistryCustomImageArrayOutput)
}

// Scoped identifiers for the registry.
func (o InfrastructureV2ImageRegistryOutput) Identifiers() InfrastructureV2ImageRegistryIdentifierArrayOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) []InfrastructureV2ImageRegistryIdentifier { return v.Identifiers }).(InfrastructureV2ImageRegistryIdentifierArrayOutput)
}

// ID of the infrastructure.
func (o InfrastructureV2ImageRegistryOutput) InfraId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *string { return v.InfraId }).(pulumi.StringPtrOutput)
}

// Whether this is the default registry.
func (o InfrastructureV2ImageRegistryOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Whether override is allowed for this registry.
func (o InfrastructureV2ImageRegistryOutput) IsOverrideAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *bool { return v.IsOverrideAllowed }).(pulumi.BoolPtrOutput)
}

// Whether the registry is private.
func (o InfrastructureV2ImageRegistryOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *bool { return v.IsPrivate }).(pulumi.BoolPtrOutput)
}

// The account name for the container registry.
func (o InfrastructureV2ImageRegistryOutput) RegistryAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *string { return v.RegistryAccount }).(pulumi.StringPtrOutput)
}

// The container image registry server URL (e.g., docker.io, gcr.io).
func (o InfrastructureV2ImageRegistryOutput) RegistryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *string { return v.RegistryServer }).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes secret containing registry credentials.
func (o InfrastructureV2ImageRegistryOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// Timestamp when the registry was last updated.
func (o InfrastructureV2ImageRegistryOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// Whether to use custom images instead of default ones.
func (o InfrastructureV2ImageRegistryOutput) UseCustomImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistry) *bool { return v.UseCustomImages }).(pulumi.BoolPtrOutput)
}

type InfrastructureV2ImageRegistryArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ImageRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2ImageRegistry)(nil)).Elem()
}

func (o InfrastructureV2ImageRegistryArrayOutput) ToInfrastructureV2ImageRegistryArrayOutput() InfrastructureV2ImageRegistryArrayOutput {
	return o
}

func (o InfrastructureV2ImageRegistryArrayOutput) ToInfrastructureV2ImageRegistryArrayOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryArrayOutput {
	return o
}

func (o InfrastructureV2ImageRegistryArrayOutput) Index(i pulumi.IntInput) InfrastructureV2ImageRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2ImageRegistry {
		return vs[0].([]InfrastructureV2ImageRegistry)[vs[1].(int)]
	}).(InfrastructureV2ImageRegistryOutput)
}

type InfrastructureV2ImageRegistryCustomImage struct {
	// Custom image for ddcr.
	Ddcr *string `pulumi:"ddcr"`
	// Custom image for ddcr-fault.
	DdcrFault *string `pulumi:"ddcrFault"`
	// Custom image for ddcr-lib.
	DdcrLib *string `pulumi:"ddcrLib"`
	// Custom image for log-watcher.
	LogWatcher *string `pulumi:"logWatcher"`
}

// InfrastructureV2ImageRegistryCustomImageInput is an input type that accepts InfrastructureV2ImageRegistryCustomImageArgs and InfrastructureV2ImageRegistryCustomImageOutput values.
// You can construct a concrete instance of `InfrastructureV2ImageRegistryCustomImageInput` via:
//
//	InfrastructureV2ImageRegistryCustomImageArgs{...}
type InfrastructureV2ImageRegistryCustomImageInput interface {
	pulumi.Input

	ToInfrastructureV2ImageRegistryCustomImageOutput() InfrastructureV2ImageRegistryCustomImageOutput
	ToInfrastructureV2ImageRegistryCustomImageOutputWithContext(context.Context) InfrastructureV2ImageRegistryCustomImageOutput
}

type InfrastructureV2ImageRegistryCustomImageArgs struct {
	// Custom image for ddcr.
	Ddcr pulumi.StringPtrInput `pulumi:"ddcr"`
	// Custom image for ddcr-fault.
	DdcrFault pulumi.StringPtrInput `pulumi:"ddcrFault"`
	// Custom image for ddcr-lib.
	DdcrLib pulumi.StringPtrInput `pulumi:"ddcrLib"`
	// Custom image for log-watcher.
	LogWatcher pulumi.StringPtrInput `pulumi:"logWatcher"`
}

func (InfrastructureV2ImageRegistryCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (i InfrastructureV2ImageRegistryCustomImageArgs) ToInfrastructureV2ImageRegistryCustomImageOutput() InfrastructureV2ImageRegistryCustomImageOutput {
	return i.ToInfrastructureV2ImageRegistryCustomImageOutputWithContext(context.Background())
}

func (i InfrastructureV2ImageRegistryCustomImageArgs) ToInfrastructureV2ImageRegistryCustomImageOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ImageRegistryCustomImageOutput)
}

// InfrastructureV2ImageRegistryCustomImageArrayInput is an input type that accepts InfrastructureV2ImageRegistryCustomImageArray and InfrastructureV2ImageRegistryCustomImageArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2ImageRegistryCustomImageArrayInput` via:
//
//	InfrastructureV2ImageRegistryCustomImageArray{ InfrastructureV2ImageRegistryCustomImageArgs{...} }
type InfrastructureV2ImageRegistryCustomImageArrayInput interface {
	pulumi.Input

	ToInfrastructureV2ImageRegistryCustomImageArrayOutput() InfrastructureV2ImageRegistryCustomImageArrayOutput
	ToInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(context.Context) InfrastructureV2ImageRegistryCustomImageArrayOutput
}

type InfrastructureV2ImageRegistryCustomImageArray []InfrastructureV2ImageRegistryCustomImageInput

func (InfrastructureV2ImageRegistryCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (i InfrastructureV2ImageRegistryCustomImageArray) ToInfrastructureV2ImageRegistryCustomImageArrayOutput() InfrastructureV2ImageRegistryCustomImageArrayOutput {
	return i.ToInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2ImageRegistryCustomImageArray) ToInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ImageRegistryCustomImageArrayOutput)
}

type InfrastructureV2ImageRegistryCustomImageOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ImageRegistryCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (o InfrastructureV2ImageRegistryCustomImageOutput) ToInfrastructureV2ImageRegistryCustomImageOutput() InfrastructureV2ImageRegistryCustomImageOutput {
	return o
}

func (o InfrastructureV2ImageRegistryCustomImageOutput) ToInfrastructureV2ImageRegistryCustomImageOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryCustomImageOutput {
	return o
}

// Custom image for ddcr.
func (o InfrastructureV2ImageRegistryCustomImageOutput) Ddcr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryCustomImage) *string { return v.Ddcr }).(pulumi.StringPtrOutput)
}

// Custom image for ddcr-fault.
func (o InfrastructureV2ImageRegistryCustomImageOutput) DdcrFault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryCustomImage) *string { return v.DdcrFault }).(pulumi.StringPtrOutput)
}

// Custom image for ddcr-lib.
func (o InfrastructureV2ImageRegistryCustomImageOutput) DdcrLib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryCustomImage) *string { return v.DdcrLib }).(pulumi.StringPtrOutput)
}

// Custom image for log-watcher.
func (o InfrastructureV2ImageRegistryCustomImageOutput) LogWatcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryCustomImage) *string { return v.LogWatcher }).(pulumi.StringPtrOutput)
}

type InfrastructureV2ImageRegistryCustomImageArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ImageRegistryCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (o InfrastructureV2ImageRegistryCustomImageArrayOutput) ToInfrastructureV2ImageRegistryCustomImageArrayOutput() InfrastructureV2ImageRegistryCustomImageArrayOutput {
	return o
}

func (o InfrastructureV2ImageRegistryCustomImageArrayOutput) ToInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryCustomImageArrayOutput {
	return o
}

func (o InfrastructureV2ImageRegistryCustomImageArrayOutput) Index(i pulumi.IntInput) InfrastructureV2ImageRegistryCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2ImageRegistryCustomImage {
		return vs[0].([]InfrastructureV2ImageRegistryCustomImage)[vs[1].(int)]
	}).(InfrastructureV2ImageRegistryCustomImageOutput)
}

type InfrastructureV2ImageRegistryIdentifier struct {
	// Harness account identifier.
	AccountIdentifier *string `pulumi:"accountIdentifier"`
	// Harness organization identifier.
	OrgIdentifier *string `pulumi:"orgIdentifier"`
	// Harness project identifier.
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
}

// InfrastructureV2ImageRegistryIdentifierInput is an input type that accepts InfrastructureV2ImageRegistryIdentifierArgs and InfrastructureV2ImageRegistryIdentifierOutput values.
// You can construct a concrete instance of `InfrastructureV2ImageRegistryIdentifierInput` via:
//
//	InfrastructureV2ImageRegistryIdentifierArgs{...}
type InfrastructureV2ImageRegistryIdentifierInput interface {
	pulumi.Input

	ToInfrastructureV2ImageRegistryIdentifierOutput() InfrastructureV2ImageRegistryIdentifierOutput
	ToInfrastructureV2ImageRegistryIdentifierOutputWithContext(context.Context) InfrastructureV2ImageRegistryIdentifierOutput
}

type InfrastructureV2ImageRegistryIdentifierArgs struct {
	// Harness account identifier.
	AccountIdentifier pulumi.StringPtrInput `pulumi:"accountIdentifier"`
	// Harness organization identifier.
	OrgIdentifier pulumi.StringPtrInput `pulumi:"orgIdentifier"`
	// Harness project identifier.
	ProjectIdentifier pulumi.StringPtrInput `pulumi:"projectIdentifier"`
}

func (InfrastructureV2ImageRegistryIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (i InfrastructureV2ImageRegistryIdentifierArgs) ToInfrastructureV2ImageRegistryIdentifierOutput() InfrastructureV2ImageRegistryIdentifierOutput {
	return i.ToInfrastructureV2ImageRegistryIdentifierOutputWithContext(context.Background())
}

func (i InfrastructureV2ImageRegistryIdentifierArgs) ToInfrastructureV2ImageRegistryIdentifierOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ImageRegistryIdentifierOutput)
}

// InfrastructureV2ImageRegistryIdentifierArrayInput is an input type that accepts InfrastructureV2ImageRegistryIdentifierArray and InfrastructureV2ImageRegistryIdentifierArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2ImageRegistryIdentifierArrayInput` via:
//
//	InfrastructureV2ImageRegistryIdentifierArray{ InfrastructureV2ImageRegistryIdentifierArgs{...} }
type InfrastructureV2ImageRegistryIdentifierArrayInput interface {
	pulumi.Input

	ToInfrastructureV2ImageRegistryIdentifierArrayOutput() InfrastructureV2ImageRegistryIdentifierArrayOutput
	ToInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(context.Context) InfrastructureV2ImageRegistryIdentifierArrayOutput
}

type InfrastructureV2ImageRegistryIdentifierArray []InfrastructureV2ImageRegistryIdentifierInput

func (InfrastructureV2ImageRegistryIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (i InfrastructureV2ImageRegistryIdentifierArray) ToInfrastructureV2ImageRegistryIdentifierArrayOutput() InfrastructureV2ImageRegistryIdentifierArrayOutput {
	return i.ToInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2ImageRegistryIdentifierArray) ToInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ImageRegistryIdentifierArrayOutput)
}

type InfrastructureV2ImageRegistryIdentifierOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ImageRegistryIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (o InfrastructureV2ImageRegistryIdentifierOutput) ToInfrastructureV2ImageRegistryIdentifierOutput() InfrastructureV2ImageRegistryIdentifierOutput {
	return o
}

func (o InfrastructureV2ImageRegistryIdentifierOutput) ToInfrastructureV2ImageRegistryIdentifierOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryIdentifierOutput {
	return o
}

// Harness account identifier.
func (o InfrastructureV2ImageRegistryIdentifierOutput) AccountIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryIdentifier) *string { return v.AccountIdentifier }).(pulumi.StringPtrOutput)
}

// Harness organization identifier.
func (o InfrastructureV2ImageRegistryIdentifierOutput) OrgIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryIdentifier) *string { return v.OrgIdentifier }).(pulumi.StringPtrOutput)
}

// Harness project identifier.
func (o InfrastructureV2ImageRegistryIdentifierOutput) ProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2ImageRegistryIdentifier) *string { return v.ProjectIdentifier }).(pulumi.StringPtrOutput)
}

type InfrastructureV2ImageRegistryIdentifierArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ImageRegistryIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (o InfrastructureV2ImageRegistryIdentifierArrayOutput) ToInfrastructureV2ImageRegistryIdentifierArrayOutput() InfrastructureV2ImageRegistryIdentifierArrayOutput {
	return o
}

func (o InfrastructureV2ImageRegistryIdentifierArrayOutput) ToInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(ctx context.Context) InfrastructureV2ImageRegistryIdentifierArrayOutput {
	return o
}

func (o InfrastructureV2ImageRegistryIdentifierArrayOutput) Index(i pulumi.IntInput) InfrastructureV2ImageRegistryIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2ImageRegistryIdentifier {
		return vs[0].([]InfrastructureV2ImageRegistryIdentifier)[vs[1].(int)]
	}).(InfrastructureV2ImageRegistryIdentifierOutput)
}

type InfrastructureV2Mtls struct {
	// Path to the certificate file for mTLS
	CertPath *string `pulumi:"certPath"`
	// Path to the private key file for mTLS
	KeyPath *string `pulumi:"keyPath"`
	// Name of the Kubernetes secret containing mTLS certificates
	SecretName *string `pulumi:"secretName"`
	// URL for the mTLS endpoint
	Url *string `pulumi:"url"`
}

// InfrastructureV2MtlsInput is an input type that accepts InfrastructureV2MtlsArgs and InfrastructureV2MtlsOutput values.
// You can construct a concrete instance of `InfrastructureV2MtlsInput` via:
//
//	InfrastructureV2MtlsArgs{...}
type InfrastructureV2MtlsInput interface {
	pulumi.Input

	ToInfrastructureV2MtlsOutput() InfrastructureV2MtlsOutput
	ToInfrastructureV2MtlsOutputWithContext(context.Context) InfrastructureV2MtlsOutput
}

type InfrastructureV2MtlsArgs struct {
	// Path to the certificate file for mTLS
	CertPath pulumi.StringPtrInput `pulumi:"certPath"`
	// Path to the private key file for mTLS
	KeyPath pulumi.StringPtrInput `pulumi:"keyPath"`
	// Name of the Kubernetes secret containing mTLS certificates
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// URL for the mTLS endpoint
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (InfrastructureV2MtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Mtls)(nil)).Elem()
}

func (i InfrastructureV2MtlsArgs) ToInfrastructureV2MtlsOutput() InfrastructureV2MtlsOutput {
	return i.ToInfrastructureV2MtlsOutputWithContext(context.Background())
}

func (i InfrastructureV2MtlsArgs) ToInfrastructureV2MtlsOutputWithContext(ctx context.Context) InfrastructureV2MtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2MtlsOutput)
}

func (i InfrastructureV2MtlsArgs) ToInfrastructureV2MtlsPtrOutput() InfrastructureV2MtlsPtrOutput {
	return i.ToInfrastructureV2MtlsPtrOutputWithContext(context.Background())
}

func (i InfrastructureV2MtlsArgs) ToInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) InfrastructureV2MtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2MtlsOutput).ToInfrastructureV2MtlsPtrOutputWithContext(ctx)
}

// InfrastructureV2MtlsPtrInput is an input type that accepts InfrastructureV2MtlsArgs, InfrastructureV2MtlsPtr and InfrastructureV2MtlsPtrOutput values.
// You can construct a concrete instance of `InfrastructureV2MtlsPtrInput` via:
//
//	        InfrastructureV2MtlsArgs{...}
//
//	or:
//
//	        nil
type InfrastructureV2MtlsPtrInput interface {
	pulumi.Input

	ToInfrastructureV2MtlsPtrOutput() InfrastructureV2MtlsPtrOutput
	ToInfrastructureV2MtlsPtrOutputWithContext(context.Context) InfrastructureV2MtlsPtrOutput
}

type infrastructureV2MtlsPtrType InfrastructureV2MtlsArgs

func InfrastructureV2MtlsPtr(v *InfrastructureV2MtlsArgs) InfrastructureV2MtlsPtrInput {
	return (*infrastructureV2MtlsPtrType)(v)
}

func (*infrastructureV2MtlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureV2Mtls)(nil)).Elem()
}

func (i *infrastructureV2MtlsPtrType) ToInfrastructureV2MtlsPtrOutput() InfrastructureV2MtlsPtrOutput {
	return i.ToInfrastructureV2MtlsPtrOutputWithContext(context.Background())
}

func (i *infrastructureV2MtlsPtrType) ToInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) InfrastructureV2MtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2MtlsPtrOutput)
}

type InfrastructureV2MtlsOutput struct{ *pulumi.OutputState }

func (InfrastructureV2MtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Mtls)(nil)).Elem()
}

func (o InfrastructureV2MtlsOutput) ToInfrastructureV2MtlsOutput() InfrastructureV2MtlsOutput {
	return o
}

func (o InfrastructureV2MtlsOutput) ToInfrastructureV2MtlsOutputWithContext(ctx context.Context) InfrastructureV2MtlsOutput {
	return o
}

func (o InfrastructureV2MtlsOutput) ToInfrastructureV2MtlsPtrOutput() InfrastructureV2MtlsPtrOutput {
	return o.ToInfrastructureV2MtlsPtrOutputWithContext(context.Background())
}

func (o InfrastructureV2MtlsOutput) ToInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) InfrastructureV2MtlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureV2Mtls) *InfrastructureV2Mtls {
		return &v
	}).(InfrastructureV2MtlsPtrOutput)
}

// Path to the certificate file for mTLS
func (o InfrastructureV2MtlsOutput) CertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Mtls) *string { return v.CertPath }).(pulumi.StringPtrOutput)
}

// Path to the private key file for mTLS
func (o InfrastructureV2MtlsOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Mtls) *string { return v.KeyPath }).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes secret containing mTLS certificates
func (o InfrastructureV2MtlsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Mtls) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// URL for the mTLS endpoint
func (o InfrastructureV2MtlsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Mtls) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type InfrastructureV2MtlsPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureV2MtlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureV2Mtls)(nil)).Elem()
}

func (o InfrastructureV2MtlsPtrOutput) ToInfrastructureV2MtlsPtrOutput() InfrastructureV2MtlsPtrOutput {
	return o
}

func (o InfrastructureV2MtlsPtrOutput) ToInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) InfrastructureV2MtlsPtrOutput {
	return o
}

func (o InfrastructureV2MtlsPtrOutput) Elem() InfrastructureV2MtlsOutput {
	return o.ApplyT(func(v *InfrastructureV2Mtls) InfrastructureV2Mtls {
		if v != nil {
			return *v
		}
		var ret InfrastructureV2Mtls
		return ret
	}).(InfrastructureV2MtlsOutput)
}

// Path to the certificate file for mTLS
func (o InfrastructureV2MtlsPtrOutput) CertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.CertPath
	}).(pulumi.StringPtrOutput)
}

// Path to the private key file for mTLS
func (o InfrastructureV2MtlsPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.KeyPath
	}).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes secret containing mTLS certificates
func (o InfrastructureV2MtlsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// URL for the mTLS endpoint
func (o InfrastructureV2MtlsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type InfrastructureV2Proxy struct {
	// HTTP proxy URL.
	HttpProxy *string `pulumi:"httpProxy"`
	// HTTPS proxy URL.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// List of hosts that should not use proxy.
	NoProxy *string `pulumi:"noProxy"`
	// Proxy URL.
	Url string `pulumi:"url"`
}

// InfrastructureV2ProxyInput is an input type that accepts InfrastructureV2ProxyArgs and InfrastructureV2ProxyOutput values.
// You can construct a concrete instance of `InfrastructureV2ProxyInput` via:
//
//	InfrastructureV2ProxyArgs{...}
type InfrastructureV2ProxyInput interface {
	pulumi.Input

	ToInfrastructureV2ProxyOutput() InfrastructureV2ProxyOutput
	ToInfrastructureV2ProxyOutputWithContext(context.Context) InfrastructureV2ProxyOutput
}

type InfrastructureV2ProxyArgs struct {
	// HTTP proxy URL.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// HTTPS proxy URL.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// List of hosts that should not use proxy.
	NoProxy pulumi.StringPtrInput `pulumi:"noProxy"`
	// Proxy URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (InfrastructureV2ProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Proxy)(nil)).Elem()
}

func (i InfrastructureV2ProxyArgs) ToInfrastructureV2ProxyOutput() InfrastructureV2ProxyOutput {
	return i.ToInfrastructureV2ProxyOutputWithContext(context.Background())
}

func (i InfrastructureV2ProxyArgs) ToInfrastructureV2ProxyOutputWithContext(ctx context.Context) InfrastructureV2ProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ProxyOutput)
}

func (i InfrastructureV2ProxyArgs) ToInfrastructureV2ProxyPtrOutput() InfrastructureV2ProxyPtrOutput {
	return i.ToInfrastructureV2ProxyPtrOutputWithContext(context.Background())
}

func (i InfrastructureV2ProxyArgs) ToInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) InfrastructureV2ProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ProxyOutput).ToInfrastructureV2ProxyPtrOutputWithContext(ctx)
}

// InfrastructureV2ProxyPtrInput is an input type that accepts InfrastructureV2ProxyArgs, InfrastructureV2ProxyPtr and InfrastructureV2ProxyPtrOutput values.
// You can construct a concrete instance of `InfrastructureV2ProxyPtrInput` via:
//
//	        InfrastructureV2ProxyArgs{...}
//
//	or:
//
//	        nil
type InfrastructureV2ProxyPtrInput interface {
	pulumi.Input

	ToInfrastructureV2ProxyPtrOutput() InfrastructureV2ProxyPtrOutput
	ToInfrastructureV2ProxyPtrOutputWithContext(context.Context) InfrastructureV2ProxyPtrOutput
}

type infrastructureV2ProxyPtrType InfrastructureV2ProxyArgs

func InfrastructureV2ProxyPtr(v *InfrastructureV2ProxyArgs) InfrastructureV2ProxyPtrInput {
	return (*infrastructureV2ProxyPtrType)(v)
}

func (*infrastructureV2ProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureV2Proxy)(nil)).Elem()
}

func (i *infrastructureV2ProxyPtrType) ToInfrastructureV2ProxyPtrOutput() InfrastructureV2ProxyPtrOutput {
	return i.ToInfrastructureV2ProxyPtrOutputWithContext(context.Background())
}

func (i *infrastructureV2ProxyPtrType) ToInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) InfrastructureV2ProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2ProxyPtrOutput)
}

type InfrastructureV2ProxyOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Proxy)(nil)).Elem()
}

func (o InfrastructureV2ProxyOutput) ToInfrastructureV2ProxyOutput() InfrastructureV2ProxyOutput {
	return o
}

func (o InfrastructureV2ProxyOutput) ToInfrastructureV2ProxyOutputWithContext(ctx context.Context) InfrastructureV2ProxyOutput {
	return o
}

func (o InfrastructureV2ProxyOutput) ToInfrastructureV2ProxyPtrOutput() InfrastructureV2ProxyPtrOutput {
	return o.ToInfrastructureV2ProxyPtrOutputWithContext(context.Background())
}

func (o InfrastructureV2ProxyOutput) ToInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) InfrastructureV2ProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureV2Proxy) *InfrastructureV2Proxy {
		return &v
	}).(InfrastructureV2ProxyPtrOutput)
}

// HTTP proxy URL.
func (o InfrastructureV2ProxyOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Proxy) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// HTTPS proxy URL.
func (o InfrastructureV2ProxyOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Proxy) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// List of hosts that should not use proxy.
func (o InfrastructureV2ProxyOutput) NoProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Proxy) *string { return v.NoProxy }).(pulumi.StringPtrOutput)
}

// Proxy URL.
func (o InfrastructureV2ProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2Proxy) string { return v.Url }).(pulumi.StringOutput)
}

type InfrastructureV2ProxyPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureV2ProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureV2Proxy)(nil)).Elem()
}

func (o InfrastructureV2ProxyPtrOutput) ToInfrastructureV2ProxyPtrOutput() InfrastructureV2ProxyPtrOutput {
	return o
}

func (o InfrastructureV2ProxyPtrOutput) ToInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) InfrastructureV2ProxyPtrOutput {
	return o
}

func (o InfrastructureV2ProxyPtrOutput) Elem() InfrastructureV2ProxyOutput {
	return o.ApplyT(func(v *InfrastructureV2Proxy) InfrastructureV2Proxy {
		if v != nil {
			return *v
		}
		var ret InfrastructureV2Proxy
		return ret
	}).(InfrastructureV2ProxyOutput)
}

// HTTP proxy URL.
func (o InfrastructureV2ProxyPtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// HTTPS proxy URL.
func (o InfrastructureV2ProxyPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// List of hosts that should not use proxy.
func (o InfrastructureV2ProxyPtrOutput) NoProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringPtrOutput)
}

// Proxy URL.
func (o InfrastructureV2ProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type InfrastructureV2Toleration struct {
	// Effect indicates the taint effect to match. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists.
	Key string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
	Operator string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// InfrastructureV2TolerationInput is an input type that accepts InfrastructureV2TolerationArgs and InfrastructureV2TolerationOutput values.
// You can construct a concrete instance of `InfrastructureV2TolerationInput` via:
//
//	InfrastructureV2TolerationArgs{...}
type InfrastructureV2TolerationInput interface {
	pulumi.Input

	ToInfrastructureV2TolerationOutput() InfrastructureV2TolerationOutput
	ToInfrastructureV2TolerationOutputWithContext(context.Context) InfrastructureV2TolerationOutput
}

type InfrastructureV2TolerationArgs struct {
	// Effect indicates the taint effect to match. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists.
	Key pulumi.StringInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
	Operator pulumi.StringInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (InfrastructureV2TolerationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Toleration)(nil)).Elem()
}

func (i InfrastructureV2TolerationArgs) ToInfrastructureV2TolerationOutput() InfrastructureV2TolerationOutput {
	return i.ToInfrastructureV2TolerationOutputWithContext(context.Background())
}

func (i InfrastructureV2TolerationArgs) ToInfrastructureV2TolerationOutputWithContext(ctx context.Context) InfrastructureV2TolerationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2TolerationOutput)
}

// InfrastructureV2TolerationArrayInput is an input type that accepts InfrastructureV2TolerationArray and InfrastructureV2TolerationArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2TolerationArrayInput` via:
//
//	InfrastructureV2TolerationArray{ InfrastructureV2TolerationArgs{...} }
type InfrastructureV2TolerationArrayInput interface {
	pulumi.Input

	ToInfrastructureV2TolerationArrayOutput() InfrastructureV2TolerationArrayOutput
	ToInfrastructureV2TolerationArrayOutputWithContext(context.Context) InfrastructureV2TolerationArrayOutput
}

type InfrastructureV2TolerationArray []InfrastructureV2TolerationInput

func (InfrastructureV2TolerationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Toleration)(nil)).Elem()
}

func (i InfrastructureV2TolerationArray) ToInfrastructureV2TolerationArrayOutput() InfrastructureV2TolerationArrayOutput {
	return i.ToInfrastructureV2TolerationArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2TolerationArray) ToInfrastructureV2TolerationArrayOutputWithContext(ctx context.Context) InfrastructureV2TolerationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2TolerationArrayOutput)
}

type InfrastructureV2TolerationOutput struct{ *pulumi.OutputState }

func (InfrastructureV2TolerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Toleration)(nil)).Elem()
}

func (o InfrastructureV2TolerationOutput) ToInfrastructureV2TolerationOutput() InfrastructureV2TolerationOutput {
	return o
}

func (o InfrastructureV2TolerationOutput) ToInfrastructureV2TolerationOutputWithContext(ctx context.Context) InfrastructureV2TolerationOutput {
	return o
}

// Effect indicates the taint effect to match. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o InfrastructureV2TolerationOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2Toleration) string { return v.Effect }).(pulumi.StringOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists.
func (o InfrastructureV2TolerationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2Toleration) string { return v.Key }).(pulumi.StringOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
func (o InfrastructureV2TolerationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2Toleration) string { return v.Operator }).(pulumi.StringOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o InfrastructureV2TolerationOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Toleration) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o InfrastructureV2TolerationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Toleration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type InfrastructureV2TolerationArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2TolerationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Toleration)(nil)).Elem()
}

func (o InfrastructureV2TolerationArrayOutput) ToInfrastructureV2TolerationArrayOutput() InfrastructureV2TolerationArrayOutput {
	return o
}

func (o InfrastructureV2TolerationArrayOutput) ToInfrastructureV2TolerationArrayOutputWithContext(ctx context.Context) InfrastructureV2TolerationArrayOutput {
	return o
}

func (o InfrastructureV2TolerationArrayOutput) Index(i pulumi.IntInput) InfrastructureV2TolerationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2Toleration {
		return vs[0].([]InfrastructureV2Toleration)[vs[1].(int)]
	}).(InfrastructureV2TolerationOutput)
}

type InfrastructureV2Volume struct {
	// Name of the volume. Must be a DNS_LABEL and unique within the pod.
	Name string `pulumi:"name"`
	// Size limit of the volume. Example: '10Gi', '100Mi'
	SizeLimit *string `pulumi:"sizeLimit"`
}

// InfrastructureV2VolumeInput is an input type that accepts InfrastructureV2VolumeArgs and InfrastructureV2VolumeOutput values.
// You can construct a concrete instance of `InfrastructureV2VolumeInput` via:
//
//	InfrastructureV2VolumeArgs{...}
type InfrastructureV2VolumeInput interface {
	pulumi.Input

	ToInfrastructureV2VolumeOutput() InfrastructureV2VolumeOutput
	ToInfrastructureV2VolumeOutputWithContext(context.Context) InfrastructureV2VolumeOutput
}

type InfrastructureV2VolumeArgs struct {
	// Name of the volume. Must be a DNS_LABEL and unique within the pod.
	Name pulumi.StringInput `pulumi:"name"`
	// Size limit of the volume. Example: '10Gi', '100Mi'
	SizeLimit pulumi.StringPtrInput `pulumi:"sizeLimit"`
}

func (InfrastructureV2VolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Volume)(nil)).Elem()
}

func (i InfrastructureV2VolumeArgs) ToInfrastructureV2VolumeOutput() InfrastructureV2VolumeOutput {
	return i.ToInfrastructureV2VolumeOutputWithContext(context.Background())
}

func (i InfrastructureV2VolumeArgs) ToInfrastructureV2VolumeOutputWithContext(ctx context.Context) InfrastructureV2VolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2VolumeOutput)
}

// InfrastructureV2VolumeArrayInput is an input type that accepts InfrastructureV2VolumeArray and InfrastructureV2VolumeArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2VolumeArrayInput` via:
//
//	InfrastructureV2VolumeArray{ InfrastructureV2VolumeArgs{...} }
type InfrastructureV2VolumeArrayInput interface {
	pulumi.Input

	ToInfrastructureV2VolumeArrayOutput() InfrastructureV2VolumeArrayOutput
	ToInfrastructureV2VolumeArrayOutputWithContext(context.Context) InfrastructureV2VolumeArrayOutput
}

type InfrastructureV2VolumeArray []InfrastructureV2VolumeInput

func (InfrastructureV2VolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Volume)(nil)).Elem()
}

func (i InfrastructureV2VolumeArray) ToInfrastructureV2VolumeArrayOutput() InfrastructureV2VolumeArrayOutput {
	return i.ToInfrastructureV2VolumeArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2VolumeArray) ToInfrastructureV2VolumeArrayOutputWithContext(ctx context.Context) InfrastructureV2VolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2VolumeArrayOutput)
}

type InfrastructureV2VolumeOutput struct{ *pulumi.OutputState }

func (InfrastructureV2VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2Volume)(nil)).Elem()
}

func (o InfrastructureV2VolumeOutput) ToInfrastructureV2VolumeOutput() InfrastructureV2VolumeOutput {
	return o
}

func (o InfrastructureV2VolumeOutput) ToInfrastructureV2VolumeOutputWithContext(ctx context.Context) InfrastructureV2VolumeOutput {
	return o
}

// Name of the volume. Must be a DNS_LABEL and unique within the pod.
func (o InfrastructureV2VolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2Volume) string { return v.Name }).(pulumi.StringOutput)
}

// Size limit of the volume. Example: '10Gi', '100Mi'
func (o InfrastructureV2VolumeOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2Volume) *string { return v.SizeLimit }).(pulumi.StringPtrOutput)
}

type InfrastructureV2VolumeArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2VolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2Volume)(nil)).Elem()
}

func (o InfrastructureV2VolumeArrayOutput) ToInfrastructureV2VolumeArrayOutput() InfrastructureV2VolumeArrayOutput {
	return o
}

func (o InfrastructureV2VolumeArrayOutput) ToInfrastructureV2VolumeArrayOutputWithContext(ctx context.Context) InfrastructureV2VolumeArrayOutput {
	return o
}

func (o InfrastructureV2VolumeArrayOutput) Index(i pulumi.IntInput) InfrastructureV2VolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2Volume {
		return vs[0].([]InfrastructureV2Volume)[vs[1].(int)]
	}).(InfrastructureV2VolumeOutput)
}

type InfrastructureV2VolumeMount struct {
	// Path within the container at which the volume should be mounted. Must not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise.
	ReadOnly *bool `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// InfrastructureV2VolumeMountInput is an input type that accepts InfrastructureV2VolumeMountArgs and InfrastructureV2VolumeMountOutput values.
// You can construct a concrete instance of `InfrastructureV2VolumeMountInput` via:
//
//	InfrastructureV2VolumeMountArgs{...}
type InfrastructureV2VolumeMountInput interface {
	pulumi.Input

	ToInfrastructureV2VolumeMountOutput() InfrastructureV2VolumeMountOutput
	ToInfrastructureV2VolumeMountOutputWithContext(context.Context) InfrastructureV2VolumeMountOutput
}

type InfrastructureV2VolumeMountArgs struct {
	// Path within the container at which the volume should be mounted. Must not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (InfrastructureV2VolumeMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2VolumeMount)(nil)).Elem()
}

func (i InfrastructureV2VolumeMountArgs) ToInfrastructureV2VolumeMountOutput() InfrastructureV2VolumeMountOutput {
	return i.ToInfrastructureV2VolumeMountOutputWithContext(context.Background())
}

func (i InfrastructureV2VolumeMountArgs) ToInfrastructureV2VolumeMountOutputWithContext(ctx context.Context) InfrastructureV2VolumeMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2VolumeMountOutput)
}

// InfrastructureV2VolumeMountArrayInput is an input type that accepts InfrastructureV2VolumeMountArray and InfrastructureV2VolumeMountArrayOutput values.
// You can construct a concrete instance of `InfrastructureV2VolumeMountArrayInput` via:
//
//	InfrastructureV2VolumeMountArray{ InfrastructureV2VolumeMountArgs{...} }
type InfrastructureV2VolumeMountArrayInput interface {
	pulumi.Input

	ToInfrastructureV2VolumeMountArrayOutput() InfrastructureV2VolumeMountArrayOutput
	ToInfrastructureV2VolumeMountArrayOutputWithContext(context.Context) InfrastructureV2VolumeMountArrayOutput
}

type InfrastructureV2VolumeMountArray []InfrastructureV2VolumeMountInput

func (InfrastructureV2VolumeMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2VolumeMount)(nil)).Elem()
}

func (i InfrastructureV2VolumeMountArray) ToInfrastructureV2VolumeMountArrayOutput() InfrastructureV2VolumeMountArrayOutput {
	return i.ToInfrastructureV2VolumeMountArrayOutputWithContext(context.Background())
}

func (i InfrastructureV2VolumeMountArray) ToInfrastructureV2VolumeMountArrayOutputWithContext(ctx context.Context) InfrastructureV2VolumeMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureV2VolumeMountArrayOutput)
}

type InfrastructureV2VolumeMountOutput struct{ *pulumi.OutputState }

func (InfrastructureV2VolumeMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureV2VolumeMount)(nil)).Elem()
}

func (o InfrastructureV2VolumeMountOutput) ToInfrastructureV2VolumeMountOutput() InfrastructureV2VolumeMountOutput {
	return o
}

func (o InfrastructureV2VolumeMountOutput) ToInfrastructureV2VolumeMountOutputWithContext(ctx context.Context) InfrastructureV2VolumeMountOutput {
	return o
}

// Path within the container at which the volume should be mounted. Must not contain ':'.
func (o InfrastructureV2VolumeMountOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2VolumeMount) string { return v.MountPath }).(pulumi.StringOutput)
}

// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
func (o InfrastructureV2VolumeMountOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2VolumeMount) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o InfrastructureV2VolumeMountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureV2VolumeMount) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise.
func (o InfrastructureV2VolumeMountOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureV2VolumeMount) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
func (o InfrastructureV2VolumeMountOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2VolumeMount) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
func (o InfrastructureV2VolumeMountOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureV2VolumeMount) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type InfrastructureV2VolumeMountArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureV2VolumeMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureV2VolumeMount)(nil)).Elem()
}

func (o InfrastructureV2VolumeMountArrayOutput) ToInfrastructureV2VolumeMountArrayOutput() InfrastructureV2VolumeMountArrayOutput {
	return o
}

func (o InfrastructureV2VolumeMountArrayOutput) ToInfrastructureV2VolumeMountArrayOutputWithContext(ctx context.Context) InfrastructureV2VolumeMountArrayOutput {
	return o
}

func (o InfrastructureV2VolumeMountArrayOutput) Index(i pulumi.IntInput) InfrastructureV2VolumeMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureV2VolumeMount {
		return vs[0].([]InfrastructureV2VolumeMount)[vs[1].(int)]
	}).(InfrastructureV2VolumeMountOutput)
}

type SecurityGovernanceConditionFaultSpec struct {
	// List of fault specifications
	Faults []SecurityGovernanceConditionFaultSpecFault `pulumi:"faults"`
	// Operator for comparing faults (EQUAL*TO or NOT*EQUAL_TO)
	Operator string `pulumi:"operator"`
}

// SecurityGovernanceConditionFaultSpecInput is an input type that accepts SecurityGovernanceConditionFaultSpecArgs and SecurityGovernanceConditionFaultSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionFaultSpecInput` via:
//
//	SecurityGovernanceConditionFaultSpecArgs{...}
type SecurityGovernanceConditionFaultSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionFaultSpecOutput() SecurityGovernanceConditionFaultSpecOutput
	ToSecurityGovernanceConditionFaultSpecOutputWithContext(context.Context) SecurityGovernanceConditionFaultSpecOutput
}

type SecurityGovernanceConditionFaultSpecArgs struct {
	// List of fault specifications
	Faults SecurityGovernanceConditionFaultSpecFaultArrayInput `pulumi:"faults"`
	// Operator for comparing faults (EQUAL*TO or NOT*EQUAL_TO)
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (SecurityGovernanceConditionFaultSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionFaultSpecArgs) ToSecurityGovernanceConditionFaultSpecOutput() SecurityGovernanceConditionFaultSpecOutput {
	return i.ToSecurityGovernanceConditionFaultSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionFaultSpecArgs) ToSecurityGovernanceConditionFaultSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionFaultSpecOutput)
}

func (i SecurityGovernanceConditionFaultSpecArgs) ToSecurityGovernanceConditionFaultSpecPtrOutput() SecurityGovernanceConditionFaultSpecPtrOutput {
	return i.ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionFaultSpecArgs) ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionFaultSpecOutput).ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionFaultSpecPtrInput is an input type that accepts SecurityGovernanceConditionFaultSpecArgs, SecurityGovernanceConditionFaultSpecPtr and SecurityGovernanceConditionFaultSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionFaultSpecPtrInput` via:
//
//	        SecurityGovernanceConditionFaultSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionFaultSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionFaultSpecPtrOutput() SecurityGovernanceConditionFaultSpecPtrOutput
	ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionFaultSpecPtrOutput
}

type securityGovernanceConditionFaultSpecPtrType SecurityGovernanceConditionFaultSpecArgs

func SecurityGovernanceConditionFaultSpecPtr(v *SecurityGovernanceConditionFaultSpecArgs) SecurityGovernanceConditionFaultSpecPtrInput {
	return (*securityGovernanceConditionFaultSpecPtrType)(v)
}

func (*securityGovernanceConditionFaultSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionFaultSpecPtrType) ToSecurityGovernanceConditionFaultSpecPtrOutput() SecurityGovernanceConditionFaultSpecPtrOutput {
	return i.ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionFaultSpecPtrType) ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionFaultSpecPtrOutput)
}

type SecurityGovernanceConditionFaultSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionFaultSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionFaultSpecOutput) ToSecurityGovernanceConditionFaultSpecOutput() SecurityGovernanceConditionFaultSpecOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecOutput) ToSecurityGovernanceConditionFaultSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecOutput) ToSecurityGovernanceConditionFaultSpecPtrOutput() SecurityGovernanceConditionFaultSpecPtrOutput {
	return o.ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionFaultSpecOutput) ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionFaultSpec) *SecurityGovernanceConditionFaultSpec {
		return &v
	}).(SecurityGovernanceConditionFaultSpecPtrOutput)
}

// List of fault specifications
func (o SecurityGovernanceConditionFaultSpecOutput) Faults() SecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionFaultSpec) []SecurityGovernanceConditionFaultSpecFault {
		return v.Faults
	}).(SecurityGovernanceConditionFaultSpecFaultArrayOutput)
}

// Operator for comparing faults (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionFaultSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionFaultSpec) string { return v.Operator }).(pulumi.StringOutput)
}

type SecurityGovernanceConditionFaultSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionFaultSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionFaultSpecPtrOutput) ToSecurityGovernanceConditionFaultSpecPtrOutput() SecurityGovernanceConditionFaultSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecPtrOutput) ToSecurityGovernanceConditionFaultSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecPtrOutput) Elem() SecurityGovernanceConditionFaultSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionFaultSpec) SecurityGovernanceConditionFaultSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionFaultSpec
		return ret
	}).(SecurityGovernanceConditionFaultSpecOutput)
}

// List of fault specifications
func (o SecurityGovernanceConditionFaultSpecPtrOutput) Faults() SecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionFaultSpec) []SecurityGovernanceConditionFaultSpecFault {
		if v == nil {
			return nil
		}
		return v.Faults
	}).(SecurityGovernanceConditionFaultSpecFaultArrayOutput)
}

// Operator for comparing faults (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionFaultSpecPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionFaultSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

type SecurityGovernanceConditionFaultSpecFault struct {
	// Type of the fault (FAULT or FAULT_GROUP)
	FaultType string `pulumi:"faultType"`
	// Name of the fault
	Name string `pulumi:"name"`
}

// SecurityGovernanceConditionFaultSpecFaultInput is an input type that accepts SecurityGovernanceConditionFaultSpecFaultArgs and SecurityGovernanceConditionFaultSpecFaultOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionFaultSpecFaultInput` via:
//
//	SecurityGovernanceConditionFaultSpecFaultArgs{...}
type SecurityGovernanceConditionFaultSpecFaultInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionFaultSpecFaultOutput() SecurityGovernanceConditionFaultSpecFaultOutput
	ToSecurityGovernanceConditionFaultSpecFaultOutputWithContext(context.Context) SecurityGovernanceConditionFaultSpecFaultOutput
}

type SecurityGovernanceConditionFaultSpecFaultArgs struct {
	// Type of the fault (FAULT or FAULT_GROUP)
	FaultType pulumi.StringInput `pulumi:"faultType"`
	// Name of the fault
	Name pulumi.StringInput `pulumi:"name"`
}

func (SecurityGovernanceConditionFaultSpecFaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (i SecurityGovernanceConditionFaultSpecFaultArgs) ToSecurityGovernanceConditionFaultSpecFaultOutput() SecurityGovernanceConditionFaultSpecFaultOutput {
	return i.ToSecurityGovernanceConditionFaultSpecFaultOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionFaultSpecFaultArgs) ToSecurityGovernanceConditionFaultSpecFaultOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecFaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionFaultSpecFaultOutput)
}

// SecurityGovernanceConditionFaultSpecFaultArrayInput is an input type that accepts SecurityGovernanceConditionFaultSpecFaultArray and SecurityGovernanceConditionFaultSpecFaultArrayOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionFaultSpecFaultArrayInput` via:
//
//	SecurityGovernanceConditionFaultSpecFaultArray{ SecurityGovernanceConditionFaultSpecFaultArgs{...} }
type SecurityGovernanceConditionFaultSpecFaultArrayInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionFaultSpecFaultArrayOutput() SecurityGovernanceConditionFaultSpecFaultArrayOutput
	ToSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(context.Context) SecurityGovernanceConditionFaultSpecFaultArrayOutput
}

type SecurityGovernanceConditionFaultSpecFaultArray []SecurityGovernanceConditionFaultSpecFaultInput

func (SecurityGovernanceConditionFaultSpecFaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (i SecurityGovernanceConditionFaultSpecFaultArray) ToSecurityGovernanceConditionFaultSpecFaultArrayOutput() SecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return i.ToSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionFaultSpecFaultArray) ToSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionFaultSpecFaultArrayOutput)
}

type SecurityGovernanceConditionFaultSpecFaultOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionFaultSpecFaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (o SecurityGovernanceConditionFaultSpecFaultOutput) ToSecurityGovernanceConditionFaultSpecFaultOutput() SecurityGovernanceConditionFaultSpecFaultOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecFaultOutput) ToSecurityGovernanceConditionFaultSpecFaultOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecFaultOutput {
	return o
}

// Type of the fault (FAULT or FAULT_GROUP)
func (o SecurityGovernanceConditionFaultSpecFaultOutput) FaultType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionFaultSpecFault) string { return v.FaultType }).(pulumi.StringOutput)
}

// Name of the fault
func (o SecurityGovernanceConditionFaultSpecFaultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionFaultSpecFault) string { return v.Name }).(pulumi.StringOutput)
}

type SecurityGovernanceConditionFaultSpecFaultArrayOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionFaultSpecFaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (o SecurityGovernanceConditionFaultSpecFaultArrayOutput) ToSecurityGovernanceConditionFaultSpecFaultArrayOutput() SecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecFaultArrayOutput) ToSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(ctx context.Context) SecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o
}

func (o SecurityGovernanceConditionFaultSpecFaultArrayOutput) Index(i pulumi.IntInput) SecurityGovernanceConditionFaultSpecFaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGovernanceConditionFaultSpecFault {
		return vs[0].([]SecurityGovernanceConditionFaultSpecFault)[vs[1].(int)]
	}).(SecurityGovernanceConditionFaultSpecFaultOutput)
}

type SecurityGovernanceConditionK8sSpec struct {
	// Application specification
	ApplicationSpec *SecurityGovernanceConditionK8sSpecApplicationSpec `pulumi:"applicationSpec"`
	// Chaos service account specification
	ChaosServiceAccountSpec *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec `pulumi:"chaosServiceAccountSpec"`
	// Infrastructure specification
	InfraSpec *SecurityGovernanceConditionK8sSpecInfraSpec `pulumi:"infraSpec"`
}

// SecurityGovernanceConditionK8sSpecInput is an input type that accepts SecurityGovernanceConditionK8sSpecArgs and SecurityGovernanceConditionK8sSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecInput` via:
//
//	SecurityGovernanceConditionK8sSpecArgs{...}
type SecurityGovernanceConditionK8sSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecOutput() SecurityGovernanceConditionK8sSpecOutput
	ToSecurityGovernanceConditionK8sSpecOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecOutput
}

type SecurityGovernanceConditionK8sSpecArgs struct {
	// Application specification
	ApplicationSpec SecurityGovernanceConditionK8sSpecApplicationSpecPtrInput `pulumi:"applicationSpec"`
	// Chaos service account specification
	ChaosServiceAccountSpec SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrInput `pulumi:"chaosServiceAccountSpec"`
	// Infrastructure specification
	InfraSpec SecurityGovernanceConditionK8sSpecInfraSpecPtrInput `pulumi:"infraSpec"`
}

func (SecurityGovernanceConditionK8sSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionK8sSpecArgs) ToSecurityGovernanceConditionK8sSpecOutput() SecurityGovernanceConditionK8sSpecOutput {
	return i.ToSecurityGovernanceConditionK8sSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecArgs) ToSecurityGovernanceConditionK8sSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecOutput)
}

func (i SecurityGovernanceConditionK8sSpecArgs) ToSecurityGovernanceConditionK8sSpecPtrOutput() SecurityGovernanceConditionK8sSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecArgs) ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecOutput).ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionK8sSpecPtrInput is an input type that accepts SecurityGovernanceConditionK8sSpecArgs, SecurityGovernanceConditionK8sSpecPtr and SecurityGovernanceConditionK8sSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecPtrInput` via:
//
//	        SecurityGovernanceConditionK8sSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionK8sSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecPtrOutput() SecurityGovernanceConditionK8sSpecPtrOutput
	ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecPtrOutput
}

type securityGovernanceConditionK8sSpecPtrType SecurityGovernanceConditionK8sSpecArgs

func SecurityGovernanceConditionK8sSpecPtr(v *SecurityGovernanceConditionK8sSpecArgs) SecurityGovernanceConditionK8sSpecPtrInput {
	return (*securityGovernanceConditionK8sSpecPtrType)(v)
}

func (*securityGovernanceConditionK8sSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionK8sSpecPtrType) ToSecurityGovernanceConditionK8sSpecPtrOutput() SecurityGovernanceConditionK8sSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionK8sSpecPtrType) ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecPtrOutput)
}

type SecurityGovernanceConditionK8sSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecOutput) ToSecurityGovernanceConditionK8sSpecOutput() SecurityGovernanceConditionK8sSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecOutput) ToSecurityGovernanceConditionK8sSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecOutput) ToSecurityGovernanceConditionK8sSpecPtrOutput() SecurityGovernanceConditionK8sSpecPtrOutput {
	return o.ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionK8sSpecOutput) ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpec {
		return &v
	}).(SecurityGovernanceConditionK8sSpecPtrOutput)
}

// Application specification
func (o SecurityGovernanceConditionK8sSpecOutput) ApplicationSpec() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpecApplicationSpec {
		return v.ApplicationSpec
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput)
}

// Chaos service account specification
func (o SecurityGovernanceConditionK8sSpecOutput) ChaosServiceAccountSpec() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec {
		return v.ChaosServiceAccountSpec
	}).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput)
}

// Infrastructure specification
func (o SecurityGovernanceConditionK8sSpecOutput) InfraSpec() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpecInfraSpec {
		return v.InfraSpec
	}).(SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput)
}

type SecurityGovernanceConditionK8sSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecPtrOutput() SecurityGovernanceConditionK8sSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecPtrOutput) Elem() SecurityGovernanceConditionK8sSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpec) SecurityGovernanceConditionK8sSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionK8sSpec
		return ret
	}).(SecurityGovernanceConditionK8sSpecOutput)
}

// Application specification
func (o SecurityGovernanceConditionK8sSpecPtrOutput) ApplicationSpec() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpecApplicationSpec {
		if v == nil {
			return nil
		}
		return v.ApplicationSpec
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput)
}

// Chaos service account specification
func (o SecurityGovernanceConditionK8sSpecPtrOutput) ChaosServiceAccountSpec() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec {
		if v == nil {
			return nil
		}
		return v.ChaosServiceAccountSpec
	}).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput)
}

// Infrastructure specification
func (o SecurityGovernanceConditionK8sSpecPtrOutput) InfraSpec() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpec) *SecurityGovernanceConditionK8sSpecInfraSpec {
		if v == nil {
			return nil
		}
		return v.InfraSpec
	}).(SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput)
}

type SecurityGovernanceConditionK8sSpecApplicationSpec struct {
	// Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
	Operator string `pulumi:"operator"`
	// List of workloads to include/exclude
	Workloads []SecurityGovernanceConditionK8sSpecApplicationSpecWorkload `pulumi:"workloads"`
}

// SecurityGovernanceConditionK8sSpecApplicationSpecInput is an input type that accepts SecurityGovernanceConditionK8sSpecApplicationSpecArgs and SecurityGovernanceConditionK8sSpecApplicationSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecApplicationSpecInput` via:
//
//	SecurityGovernanceConditionK8sSpecApplicationSpecArgs{...}
type SecurityGovernanceConditionK8sSpecApplicationSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecApplicationSpecOutput() SecurityGovernanceConditionK8sSpecApplicationSpecOutput
	ToSecurityGovernanceConditionK8sSpecApplicationSpecOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecOutput
}

type SecurityGovernanceConditionK8sSpecApplicationSpecArgs struct {
	// Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of workloads to include/exclude
	Workloads SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayInput `pulumi:"workloads"`
}

func (SecurityGovernanceConditionK8sSpecApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecArgs) ToSecurityGovernanceConditionK8sSpecApplicationSpecOutput() SecurityGovernanceConditionK8sSpecApplicationSpecOutput {
	return i.ToSecurityGovernanceConditionK8sSpecApplicationSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecArgs) ToSecurityGovernanceConditionK8sSpecApplicationSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecApplicationSpecOutput)
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecArgs) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecArgs) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecApplicationSpecOutput).ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionK8sSpecApplicationSpecPtrInput is an input type that accepts SecurityGovernanceConditionK8sSpecApplicationSpecArgs, SecurityGovernanceConditionK8sSpecApplicationSpecPtr and SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecApplicationSpecPtrInput` via:
//
//	        SecurityGovernanceConditionK8sSpecApplicationSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionK8sSpecApplicationSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput
	ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput
}

type securityGovernanceConditionK8sSpecApplicationSpecPtrType SecurityGovernanceConditionK8sSpecApplicationSpecArgs

func SecurityGovernanceConditionK8sSpecApplicationSpecPtr(v *SecurityGovernanceConditionK8sSpecApplicationSpecArgs) SecurityGovernanceConditionK8sSpecApplicationSpecPtrInput {
	return (*securityGovernanceConditionK8sSpecApplicationSpecPtrType)(v)
}

func (*securityGovernanceConditionK8sSpecApplicationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpecApplicationSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionK8sSpecApplicationSpecPtrType) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionK8sSpecApplicationSpecPtrType) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput)
}

type SecurityGovernanceConditionK8sSpecApplicationSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecOutput() SecurityGovernanceConditionK8sSpecApplicationSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return o.ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionK8sSpecApplicationSpec) *SecurityGovernanceConditionK8sSpecApplicationSpec {
		return &v
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput)
}

// Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionK8sSpecApplicationSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpec) string { return v.Operator }).(pulumi.StringOutput)
}

// List of workloads to include/exclude
func (o SecurityGovernanceConditionK8sSpecApplicationSpecOutput) Workloads() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpec) []SecurityGovernanceConditionK8sSpecApplicationSpecWorkload {
		return v.Workloads
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput)
}

type SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpecApplicationSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput() SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput) Elem() SecurityGovernanceConditionK8sSpecApplicationSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecApplicationSpec) SecurityGovernanceConditionK8sSpecApplicationSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionK8sSpecApplicationSpec
		return ret
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecOutput)
}

// Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecApplicationSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// List of workloads to include/exclude
func (o SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput) Workloads() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecApplicationSpec) []SecurityGovernanceConditionK8sSpecApplicationSpecWorkload {
		if v == nil {
			return nil
		}
		return v.Workloads
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput)
}

type SecurityGovernanceConditionK8sSpecApplicationSpecWorkload struct {
	// ID for the application map
	ApplicationMapId *string `pulumi:"applicationMapId"`
	// Kind of the workload (e.g., deployment, statefulset)
	Kind *string `pulumi:"kind"`
	// Label selector for the workload
	Label *string `pulumi:"label"`
	// Namespace of the workload
	Namespace string `pulumi:"namespace"`
	// List of services associated with the workload
	Services []string `pulumi:"services"`
}

// SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadInput is an input type that accepts SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs and SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadInput` via:
//
//	SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs{...}
type SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput
	ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput
}

type SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs struct {
	// ID for the application map
	ApplicationMapId pulumi.StringPtrInput `pulumi:"applicationMapId"`
	// Kind of the workload (e.g., deployment, statefulset)
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Label selector for the workload
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Namespace of the workload
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// List of services associated with the workload
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpecWorkload)(nil)).Elem()
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput {
	return i.ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput)
}

// SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayInput is an input type that accepts SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray and SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayInput` via:
//
//	SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray{ SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs{...} }
type SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput
	ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput
}

type SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray []SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadInput

func (SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGovernanceConditionK8sSpecApplicationSpecWorkload)(nil)).Elem()
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput {
	return i.ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput)
}

type SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpecWorkload)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput {
	return o
}

// ID for the application map
func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) ApplicationMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpecWorkload) *string { return v.ApplicationMapId }).(pulumi.StringPtrOutput)
}

// Kind of the workload (e.g., deployment, statefulset)
func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpecWorkload) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Label selector for the workload
func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpecWorkload) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Namespace of the workload
func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpecWorkload) string { return v.Namespace }).(pulumi.StringOutput)
}

// List of services associated with the workload
func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecApplicationSpecWorkload) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGovernanceConditionK8sSpecApplicationSpecWorkload)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput() SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput) ToSecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput) Index(i pulumi.IntInput) SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGovernanceConditionK8sSpecApplicationSpecWorkload {
		return vs[0].([]SecurityGovernanceConditionK8sSpecApplicationSpecWorkload)[vs[1].(int)]
	}).(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput)
}

type SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec struct {
	// Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
	Operator string `pulumi:"operator"`
	// List of service accounts to include/exclude
	ServiceAccounts []string `pulumi:"serviceAccounts"`
}

// SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecInput is an input type that accepts SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs and SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecInput` via:
//
//	SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs{...}
type SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput
	ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput
}

type SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs struct {
	// Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of service accounts to include/exclude
	ServiceAccounts pulumi.StringArrayInput `pulumi:"serviceAccounts"`
}

func (SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput {
	return i.ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput)
}

func (i SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput).ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrInput is an input type that accepts SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs, SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtr and SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrInput` via:
//
//	        SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput
	ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput
}

type securityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrType SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs

func SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtr(v *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrInput {
	return (*securityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrType)(v)
}

func (*securityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrType) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrType) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput)
}

type SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return o.ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec) *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec {
		return &v
	}).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput)
}

// Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec) string { return v.Operator }).(pulumi.StringOutput)
}

// List of service accounts to include/exclude
func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput) ServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec) []string { return v.ServiceAccounts }).(pulumi.StringArrayOutput)
}

type SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput) Elem() SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec) SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec
		return ret
	}).(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput)
}

// Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// List of service accounts to include/exclude
func (o SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput) ServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecChaosServiceAccountSpec) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAccounts
	}).(pulumi.StringArrayOutput)
}

type SecurityGovernanceConditionK8sSpecInfraSpec struct {
	// List of infrastructure IDs to apply the condition to
	InfraIds []string `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
	Operator string `pulumi:"operator"`
}

// SecurityGovernanceConditionK8sSpecInfraSpecInput is an input type that accepts SecurityGovernanceConditionK8sSpecInfraSpecArgs and SecurityGovernanceConditionK8sSpecInfraSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecInfraSpecInput` via:
//
//	SecurityGovernanceConditionK8sSpecInfraSpecArgs{...}
type SecurityGovernanceConditionK8sSpecInfraSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecInfraSpecOutput() SecurityGovernanceConditionK8sSpecInfraSpecOutput
	ToSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecInfraSpecOutput
}

type SecurityGovernanceConditionK8sSpecInfraSpecArgs struct {
	// List of infrastructure IDs to apply the condition to
	InfraIds pulumi.StringArrayInput `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (SecurityGovernanceConditionK8sSpecInfraSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionK8sSpecInfraSpecArgs) ToSecurityGovernanceConditionK8sSpecInfraSpecOutput() SecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return i.ToSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecInfraSpecArgs) ToSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecInfraSpecOutput)
}

func (i SecurityGovernanceConditionK8sSpecInfraSpecArgs) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutput() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionK8sSpecInfraSpecArgs) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecInfraSpecOutput).ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionK8sSpecInfraSpecPtrInput is an input type that accepts SecurityGovernanceConditionK8sSpecInfraSpecArgs, SecurityGovernanceConditionK8sSpecInfraSpecPtr and SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionK8sSpecInfraSpecPtrInput` via:
//
//	        SecurityGovernanceConditionK8sSpecInfraSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionK8sSpecInfraSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutput() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput
	ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput
}

type securityGovernanceConditionK8sSpecInfraSpecPtrType SecurityGovernanceConditionK8sSpecInfraSpecArgs

func SecurityGovernanceConditionK8sSpecInfraSpecPtr(v *SecurityGovernanceConditionK8sSpecInfraSpecArgs) SecurityGovernanceConditionK8sSpecInfraSpecPtrInput {
	return (*securityGovernanceConditionK8sSpecInfraSpecPtrType)(v)
}

func (*securityGovernanceConditionK8sSpecInfraSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionK8sSpecInfraSpecPtrType) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutput() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return i.ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionK8sSpecInfraSpecPtrType) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput)
}

type SecurityGovernanceConditionK8sSpecInfraSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecInfraSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecOutput) ToSecurityGovernanceConditionK8sSpecInfraSpecOutput() SecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecOutput) ToSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecOutput) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutput() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return o.ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecOutput) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionK8sSpecInfraSpec) *SecurityGovernanceConditionK8sSpecInfraSpec {
		return &v
	}).(SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput)
}

// List of infrastructure IDs to apply the condition to
func (o SecurityGovernanceConditionK8sSpecInfraSpecOutput) InfraIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecInfraSpec) []string { return v.InfraIds }).(pulumi.StringArrayOutput)
}

// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionK8sSpecInfraSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionK8sSpecInfraSpec) string { return v.Operator }).(pulumi.StringOutput)
}

type SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutput() SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput) ToSecurityGovernanceConditionK8sSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput) Elem() SecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecInfraSpec) SecurityGovernanceConditionK8sSpecInfraSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionK8sSpecInfraSpec
		return ret
	}).(SecurityGovernanceConditionK8sSpecInfraSpecOutput)
}

// List of infrastructure IDs to apply the condition to
func (o SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput) InfraIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecInfraSpec) []string {
		if v == nil {
			return nil
		}
		return v.InfraIds
	}).(pulumi.StringArrayOutput)
}

// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionK8sSpecInfraSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

type SecurityGovernanceConditionMachineSpec struct {
	// Infrastructure specification
	InfraSpec *SecurityGovernanceConditionMachineSpecInfraSpec `pulumi:"infraSpec"`
}

// SecurityGovernanceConditionMachineSpecInput is an input type that accepts SecurityGovernanceConditionMachineSpecArgs and SecurityGovernanceConditionMachineSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionMachineSpecInput` via:
//
//	SecurityGovernanceConditionMachineSpecArgs{...}
type SecurityGovernanceConditionMachineSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionMachineSpecOutput() SecurityGovernanceConditionMachineSpecOutput
	ToSecurityGovernanceConditionMachineSpecOutputWithContext(context.Context) SecurityGovernanceConditionMachineSpecOutput
}

type SecurityGovernanceConditionMachineSpecArgs struct {
	// Infrastructure specification
	InfraSpec SecurityGovernanceConditionMachineSpecInfraSpecPtrInput `pulumi:"infraSpec"`
}

func (SecurityGovernanceConditionMachineSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionMachineSpecArgs) ToSecurityGovernanceConditionMachineSpecOutput() SecurityGovernanceConditionMachineSpecOutput {
	return i.ToSecurityGovernanceConditionMachineSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionMachineSpecArgs) ToSecurityGovernanceConditionMachineSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionMachineSpecOutput)
}

func (i SecurityGovernanceConditionMachineSpecArgs) ToSecurityGovernanceConditionMachineSpecPtrOutput() SecurityGovernanceConditionMachineSpecPtrOutput {
	return i.ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionMachineSpecArgs) ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionMachineSpecOutput).ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionMachineSpecPtrInput is an input type that accepts SecurityGovernanceConditionMachineSpecArgs, SecurityGovernanceConditionMachineSpecPtr and SecurityGovernanceConditionMachineSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionMachineSpecPtrInput` via:
//
//	        SecurityGovernanceConditionMachineSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionMachineSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionMachineSpecPtrOutput() SecurityGovernanceConditionMachineSpecPtrOutput
	ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionMachineSpecPtrOutput
}

type securityGovernanceConditionMachineSpecPtrType SecurityGovernanceConditionMachineSpecArgs

func SecurityGovernanceConditionMachineSpecPtr(v *SecurityGovernanceConditionMachineSpecArgs) SecurityGovernanceConditionMachineSpecPtrInput {
	return (*securityGovernanceConditionMachineSpecPtrType)(v)
}

func (*securityGovernanceConditionMachineSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionMachineSpecPtrType) ToSecurityGovernanceConditionMachineSpecPtrOutput() SecurityGovernanceConditionMachineSpecPtrOutput {
	return i.ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionMachineSpecPtrType) ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionMachineSpecPtrOutput)
}

type SecurityGovernanceConditionMachineSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionMachineSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionMachineSpecOutput) ToSecurityGovernanceConditionMachineSpecOutput() SecurityGovernanceConditionMachineSpecOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecOutput) ToSecurityGovernanceConditionMachineSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecOutput) ToSecurityGovernanceConditionMachineSpecPtrOutput() SecurityGovernanceConditionMachineSpecPtrOutput {
	return o.ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionMachineSpecOutput) ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionMachineSpec) *SecurityGovernanceConditionMachineSpec {
		return &v
	}).(SecurityGovernanceConditionMachineSpecPtrOutput)
}

// Infrastructure specification
func (o SecurityGovernanceConditionMachineSpecOutput) InfraSpec() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionMachineSpec) *SecurityGovernanceConditionMachineSpecInfraSpec {
		return v.InfraSpec
	}).(SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput)
}

type SecurityGovernanceConditionMachineSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionMachineSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionMachineSpecPtrOutput) ToSecurityGovernanceConditionMachineSpecPtrOutput() SecurityGovernanceConditionMachineSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecPtrOutput) ToSecurityGovernanceConditionMachineSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecPtrOutput) Elem() SecurityGovernanceConditionMachineSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionMachineSpec) SecurityGovernanceConditionMachineSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionMachineSpec
		return ret
	}).(SecurityGovernanceConditionMachineSpecOutput)
}

// Infrastructure specification
func (o SecurityGovernanceConditionMachineSpecPtrOutput) InfraSpec() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionMachineSpec) *SecurityGovernanceConditionMachineSpecInfraSpec {
		if v == nil {
			return nil
		}
		return v.InfraSpec
	}).(SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput)
}

type SecurityGovernanceConditionMachineSpecInfraSpec struct {
	// List of infrastructure IDs to apply the condition to
	InfraIds []string `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
	Operator string `pulumi:"operator"`
}

// SecurityGovernanceConditionMachineSpecInfraSpecInput is an input type that accepts SecurityGovernanceConditionMachineSpecInfraSpecArgs and SecurityGovernanceConditionMachineSpecInfraSpecOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionMachineSpecInfraSpecInput` via:
//
//	SecurityGovernanceConditionMachineSpecInfraSpecArgs{...}
type SecurityGovernanceConditionMachineSpecInfraSpecInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionMachineSpecInfraSpecOutput() SecurityGovernanceConditionMachineSpecInfraSpecOutput
	ToSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(context.Context) SecurityGovernanceConditionMachineSpecInfraSpecOutput
}

type SecurityGovernanceConditionMachineSpecInfraSpecArgs struct {
	// List of infrastructure IDs to apply the condition to
	InfraIds pulumi.StringArrayInput `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (SecurityGovernanceConditionMachineSpecInfraSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (i SecurityGovernanceConditionMachineSpecInfraSpecArgs) ToSecurityGovernanceConditionMachineSpecInfraSpecOutput() SecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return i.ToSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionMachineSpecInfraSpecArgs) ToSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionMachineSpecInfraSpecOutput)
}

func (i SecurityGovernanceConditionMachineSpecInfraSpecArgs) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutput() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return i.ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceConditionMachineSpecInfraSpecArgs) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionMachineSpecInfraSpecOutput).ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(ctx)
}

// SecurityGovernanceConditionMachineSpecInfraSpecPtrInput is an input type that accepts SecurityGovernanceConditionMachineSpecInfraSpecArgs, SecurityGovernanceConditionMachineSpecInfraSpecPtr and SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceConditionMachineSpecInfraSpecPtrInput` via:
//
//	        SecurityGovernanceConditionMachineSpecInfraSpecArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceConditionMachineSpecInfraSpecPtrInput interface {
	pulumi.Input

	ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutput() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput
	ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(context.Context) SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput
}

type securityGovernanceConditionMachineSpecInfraSpecPtrType SecurityGovernanceConditionMachineSpecInfraSpecArgs

func SecurityGovernanceConditionMachineSpecInfraSpecPtr(v *SecurityGovernanceConditionMachineSpecInfraSpecArgs) SecurityGovernanceConditionMachineSpecInfraSpecPtrInput {
	return (*securityGovernanceConditionMachineSpecInfraSpecPtrType)(v)
}

func (*securityGovernanceConditionMachineSpecInfraSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (i *securityGovernanceConditionMachineSpecInfraSpecPtrType) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutput() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return i.ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(context.Background())
}

func (i *securityGovernanceConditionMachineSpecInfraSpecPtrType) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput)
}

type SecurityGovernanceConditionMachineSpecInfraSpecOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionMachineSpecInfraSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecOutput) ToSecurityGovernanceConditionMachineSpecInfraSpecOutput() SecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecOutput) ToSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecOutput) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutput() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return o.ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecOutput) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceConditionMachineSpecInfraSpec) *SecurityGovernanceConditionMachineSpecInfraSpec {
		return &v
	}).(SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput)
}

// List of infrastructure IDs to apply the condition to
func (o SecurityGovernanceConditionMachineSpecInfraSpecOutput) InfraIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionMachineSpecInfraSpec) []string { return v.InfraIds }).(pulumi.StringArrayOutput)
}

// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionMachineSpecInfraSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceConditionMachineSpecInfraSpec) string { return v.Operator }).(pulumi.StringOutput)
}

type SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutput() SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput) ToSecurityGovernanceConditionMachineSpecInfraSpecPtrOutputWithContext(ctx context.Context) SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput {
	return o
}

func (o SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput) Elem() SecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionMachineSpecInfraSpec) SecurityGovernanceConditionMachineSpecInfraSpec {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceConditionMachineSpecInfraSpec
		return ret
	}).(SecurityGovernanceConditionMachineSpecInfraSpecOutput)
}

// List of infrastructure IDs to apply the condition to
func (o SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput) InfraIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionMachineSpecInfraSpec) []string {
		if v == nil {
			return nil
		}
		return v.InfraIds
	}).(pulumi.StringArrayOutput)
}

// Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
func (o SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceConditionMachineSpecInfraSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

type SecurityGovernanceRuleTimeWindow struct {
	Duration   *string                                     `pulumi:"duration"`
	EndTime    *int                                        `pulumi:"endTime"`
	Recurrence *SecurityGovernanceRuleTimeWindowRecurrence `pulumi:"recurrence"`
	StartTime  int                                         `pulumi:"startTime"`
	TimeZone   string                                      `pulumi:"timeZone"`
}

// SecurityGovernanceRuleTimeWindowInput is an input type that accepts SecurityGovernanceRuleTimeWindowArgs and SecurityGovernanceRuleTimeWindowOutput values.
// You can construct a concrete instance of `SecurityGovernanceRuleTimeWindowInput` via:
//
//	SecurityGovernanceRuleTimeWindowArgs{...}
type SecurityGovernanceRuleTimeWindowInput interface {
	pulumi.Input

	ToSecurityGovernanceRuleTimeWindowOutput() SecurityGovernanceRuleTimeWindowOutput
	ToSecurityGovernanceRuleTimeWindowOutputWithContext(context.Context) SecurityGovernanceRuleTimeWindowOutput
}

type SecurityGovernanceRuleTimeWindowArgs struct {
	Duration   pulumi.StringPtrInput                              `pulumi:"duration"`
	EndTime    pulumi.IntPtrInput                                 `pulumi:"endTime"`
	Recurrence SecurityGovernanceRuleTimeWindowRecurrencePtrInput `pulumi:"recurrence"`
	StartTime  pulumi.IntInput                                    `pulumi:"startTime"`
	TimeZone   pulumi.StringInput                                 `pulumi:"timeZone"`
}

func (SecurityGovernanceRuleTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (i SecurityGovernanceRuleTimeWindowArgs) ToSecurityGovernanceRuleTimeWindowOutput() SecurityGovernanceRuleTimeWindowOutput {
	return i.ToSecurityGovernanceRuleTimeWindowOutputWithContext(context.Background())
}

func (i SecurityGovernanceRuleTimeWindowArgs) ToSecurityGovernanceRuleTimeWindowOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceRuleTimeWindowOutput)
}

// SecurityGovernanceRuleTimeWindowArrayInput is an input type that accepts SecurityGovernanceRuleTimeWindowArray and SecurityGovernanceRuleTimeWindowArrayOutput values.
// You can construct a concrete instance of `SecurityGovernanceRuleTimeWindowArrayInput` via:
//
//	SecurityGovernanceRuleTimeWindowArray{ SecurityGovernanceRuleTimeWindowArgs{...} }
type SecurityGovernanceRuleTimeWindowArrayInput interface {
	pulumi.Input

	ToSecurityGovernanceRuleTimeWindowArrayOutput() SecurityGovernanceRuleTimeWindowArrayOutput
	ToSecurityGovernanceRuleTimeWindowArrayOutputWithContext(context.Context) SecurityGovernanceRuleTimeWindowArrayOutput
}

type SecurityGovernanceRuleTimeWindowArray []SecurityGovernanceRuleTimeWindowInput

func (SecurityGovernanceRuleTimeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (i SecurityGovernanceRuleTimeWindowArray) ToSecurityGovernanceRuleTimeWindowArrayOutput() SecurityGovernanceRuleTimeWindowArrayOutput {
	return i.ToSecurityGovernanceRuleTimeWindowArrayOutputWithContext(context.Background())
}

func (i SecurityGovernanceRuleTimeWindowArray) ToSecurityGovernanceRuleTimeWindowArrayOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceRuleTimeWindowArrayOutput)
}

type SecurityGovernanceRuleTimeWindowOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceRuleTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (o SecurityGovernanceRuleTimeWindowOutput) ToSecurityGovernanceRuleTimeWindowOutput() SecurityGovernanceRuleTimeWindowOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowOutput) ToSecurityGovernanceRuleTimeWindowOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o SecurityGovernanceRuleTimeWindowOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindow) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o SecurityGovernanceRuleTimeWindowOutput) Recurrence() SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindow) *SecurityGovernanceRuleTimeWindowRecurrence {
		return v.Recurrence
	}).(SecurityGovernanceRuleTimeWindowRecurrencePtrOutput)
}

func (o SecurityGovernanceRuleTimeWindowOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindow) int { return v.StartTime }).(pulumi.IntOutput)
}

func (o SecurityGovernanceRuleTimeWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type SecurityGovernanceRuleTimeWindowArrayOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceRuleTimeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (o SecurityGovernanceRuleTimeWindowArrayOutput) ToSecurityGovernanceRuleTimeWindowArrayOutput() SecurityGovernanceRuleTimeWindowArrayOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowArrayOutput) ToSecurityGovernanceRuleTimeWindowArrayOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowArrayOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowArrayOutput) Index(i pulumi.IntInput) SecurityGovernanceRuleTimeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGovernanceRuleTimeWindow {
		return vs[0].([]SecurityGovernanceRuleTimeWindow)[vs[1].(int)]
	}).(SecurityGovernanceRuleTimeWindowOutput)
}

type SecurityGovernanceRuleTimeWindowRecurrence struct {
	Type  string `pulumi:"type"`
	Until int    `pulumi:"until"`
	Value *int   `pulumi:"value"`
}

// SecurityGovernanceRuleTimeWindowRecurrenceInput is an input type that accepts SecurityGovernanceRuleTimeWindowRecurrenceArgs and SecurityGovernanceRuleTimeWindowRecurrenceOutput values.
// You can construct a concrete instance of `SecurityGovernanceRuleTimeWindowRecurrenceInput` via:
//
//	SecurityGovernanceRuleTimeWindowRecurrenceArgs{...}
type SecurityGovernanceRuleTimeWindowRecurrenceInput interface {
	pulumi.Input

	ToSecurityGovernanceRuleTimeWindowRecurrenceOutput() SecurityGovernanceRuleTimeWindowRecurrenceOutput
	ToSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(context.Context) SecurityGovernanceRuleTimeWindowRecurrenceOutput
}

type SecurityGovernanceRuleTimeWindowRecurrenceArgs struct {
	Type  pulumi.StringInput `pulumi:"type"`
	Until pulumi.IntInput    `pulumi:"until"`
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (SecurityGovernanceRuleTimeWindowRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (i SecurityGovernanceRuleTimeWindowRecurrenceArgs) ToSecurityGovernanceRuleTimeWindowRecurrenceOutput() SecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return i.ToSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(context.Background())
}

func (i SecurityGovernanceRuleTimeWindowRecurrenceArgs) ToSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceRuleTimeWindowRecurrenceOutput)
}

func (i SecurityGovernanceRuleTimeWindowRecurrenceArgs) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutput() SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return i.ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(context.Background())
}

func (i SecurityGovernanceRuleTimeWindowRecurrenceArgs) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceRuleTimeWindowRecurrenceOutput).ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(ctx)
}

// SecurityGovernanceRuleTimeWindowRecurrencePtrInput is an input type that accepts SecurityGovernanceRuleTimeWindowRecurrenceArgs, SecurityGovernanceRuleTimeWindowRecurrencePtr and SecurityGovernanceRuleTimeWindowRecurrencePtrOutput values.
// You can construct a concrete instance of `SecurityGovernanceRuleTimeWindowRecurrencePtrInput` via:
//
//	        SecurityGovernanceRuleTimeWindowRecurrenceArgs{...}
//
//	or:
//
//	        nil
type SecurityGovernanceRuleTimeWindowRecurrencePtrInput interface {
	pulumi.Input

	ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutput() SecurityGovernanceRuleTimeWindowRecurrencePtrOutput
	ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(context.Context) SecurityGovernanceRuleTimeWindowRecurrencePtrOutput
}

type securityGovernanceRuleTimeWindowRecurrencePtrType SecurityGovernanceRuleTimeWindowRecurrenceArgs

func SecurityGovernanceRuleTimeWindowRecurrencePtr(v *SecurityGovernanceRuleTimeWindowRecurrenceArgs) SecurityGovernanceRuleTimeWindowRecurrencePtrInput {
	return (*securityGovernanceRuleTimeWindowRecurrencePtrType)(v)
}

func (*securityGovernanceRuleTimeWindowRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (i *securityGovernanceRuleTimeWindowRecurrencePtrType) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutput() SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return i.ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(context.Background())
}

func (i *securityGovernanceRuleTimeWindowRecurrencePtrType) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGovernanceRuleTimeWindowRecurrencePtrOutput)
}

type SecurityGovernanceRuleTimeWindowRecurrenceOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceRuleTimeWindowRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) ToSecurityGovernanceRuleTimeWindowRecurrenceOutput() SecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) ToSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutput() SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return o.ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(context.Background())
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityGovernanceRuleTimeWindowRecurrence) *SecurityGovernanceRuleTimeWindowRecurrence {
		return &v
	}).(SecurityGovernanceRuleTimeWindowRecurrencePtrOutput)
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindowRecurrence) string { return v.Type }).(pulumi.StringOutput)
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) Until() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindowRecurrence) int { return v.Until }).(pulumi.IntOutput)
}

func (o SecurityGovernanceRuleTimeWindowRecurrenceOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityGovernanceRuleTimeWindowRecurrence) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type SecurityGovernanceRuleTimeWindowRecurrencePtrOutput struct{ *pulumi.OutputState }

func (SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (o SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutput() SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) ToSecurityGovernanceRuleTimeWindowRecurrencePtrOutputWithContext(ctx context.Context) SecurityGovernanceRuleTimeWindowRecurrencePtrOutput {
	return o
}

func (o SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) Elem() SecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return o.ApplyT(func(v *SecurityGovernanceRuleTimeWindowRecurrence) SecurityGovernanceRuleTimeWindowRecurrence {
		if v != nil {
			return *v
		}
		var ret SecurityGovernanceRuleTimeWindowRecurrence
		return ret
	}).(SecurityGovernanceRuleTimeWindowRecurrenceOutput)
}

func (o SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceRuleTimeWindowRecurrence) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) Until() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceRuleTimeWindowRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.Until
	}).(pulumi.IntPtrOutput)
}

func (o SecurityGovernanceRuleTimeWindowRecurrencePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityGovernanceRuleTimeWindowRecurrence) *int {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.IntPtrOutput)
}

type GetImageRegistryCustomImage struct {
	Ddcr       string `pulumi:"ddcr"`
	DdcrFault  string `pulumi:"ddcrFault"`
	DdcrLib    string `pulumi:"ddcrLib"`
	LogWatcher string `pulumi:"logWatcher"`
}

// GetImageRegistryCustomImageInput is an input type that accepts GetImageRegistryCustomImageArgs and GetImageRegistryCustomImageOutput values.
// You can construct a concrete instance of `GetImageRegistryCustomImageInput` via:
//
//	GetImageRegistryCustomImageArgs{...}
type GetImageRegistryCustomImageInput interface {
	pulumi.Input

	ToGetImageRegistryCustomImageOutput() GetImageRegistryCustomImageOutput
	ToGetImageRegistryCustomImageOutputWithContext(context.Context) GetImageRegistryCustomImageOutput
}

type GetImageRegistryCustomImageArgs struct {
	Ddcr       pulumi.StringInput `pulumi:"ddcr"`
	DdcrFault  pulumi.StringInput `pulumi:"ddcrFault"`
	DdcrLib    pulumi.StringInput `pulumi:"ddcrLib"`
	LogWatcher pulumi.StringInput `pulumi:"logWatcher"`
}

func (GetImageRegistryCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRegistryCustomImage)(nil)).Elem()
}

func (i GetImageRegistryCustomImageArgs) ToGetImageRegistryCustomImageOutput() GetImageRegistryCustomImageOutput {
	return i.ToGetImageRegistryCustomImageOutputWithContext(context.Background())
}

func (i GetImageRegistryCustomImageArgs) ToGetImageRegistryCustomImageOutputWithContext(ctx context.Context) GetImageRegistryCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRegistryCustomImageOutput)
}

// GetImageRegistryCustomImageArrayInput is an input type that accepts GetImageRegistryCustomImageArray and GetImageRegistryCustomImageArrayOutput values.
// You can construct a concrete instance of `GetImageRegistryCustomImageArrayInput` via:
//
//	GetImageRegistryCustomImageArray{ GetImageRegistryCustomImageArgs{...} }
type GetImageRegistryCustomImageArrayInput interface {
	pulumi.Input

	ToGetImageRegistryCustomImageArrayOutput() GetImageRegistryCustomImageArrayOutput
	ToGetImageRegistryCustomImageArrayOutputWithContext(context.Context) GetImageRegistryCustomImageArrayOutput
}

type GetImageRegistryCustomImageArray []GetImageRegistryCustomImageInput

func (GetImageRegistryCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRegistryCustomImage)(nil)).Elem()
}

func (i GetImageRegistryCustomImageArray) ToGetImageRegistryCustomImageArrayOutput() GetImageRegistryCustomImageArrayOutput {
	return i.ToGetImageRegistryCustomImageArrayOutputWithContext(context.Background())
}

func (i GetImageRegistryCustomImageArray) ToGetImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) GetImageRegistryCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRegistryCustomImageArrayOutput)
}

type GetImageRegistryCustomImageOutput struct{ *pulumi.OutputState }

func (GetImageRegistryCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRegistryCustomImage)(nil)).Elem()
}

func (o GetImageRegistryCustomImageOutput) ToGetImageRegistryCustomImageOutput() GetImageRegistryCustomImageOutput {
	return o
}

func (o GetImageRegistryCustomImageOutput) ToGetImageRegistryCustomImageOutputWithContext(ctx context.Context) GetImageRegistryCustomImageOutput {
	return o
}

func (o GetImageRegistryCustomImageOutput) Ddcr() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRegistryCustomImage) string { return v.Ddcr }).(pulumi.StringOutput)
}

func (o GetImageRegistryCustomImageOutput) DdcrFault() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRegistryCustomImage) string { return v.DdcrFault }).(pulumi.StringOutput)
}

func (o GetImageRegistryCustomImageOutput) DdcrLib() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRegistryCustomImage) string { return v.DdcrLib }).(pulumi.StringOutput)
}

func (o GetImageRegistryCustomImageOutput) LogWatcher() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRegistryCustomImage) string { return v.LogWatcher }).(pulumi.StringOutput)
}

type GetImageRegistryCustomImageArrayOutput struct{ *pulumi.OutputState }

func (GetImageRegistryCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRegistryCustomImage)(nil)).Elem()
}

func (o GetImageRegistryCustomImageArrayOutput) ToGetImageRegistryCustomImageArrayOutput() GetImageRegistryCustomImageArrayOutput {
	return o
}

func (o GetImageRegistryCustomImageArrayOutput) ToGetImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) GetImageRegistryCustomImageArrayOutput {
	return o
}

func (o GetImageRegistryCustomImageArrayOutput) Index(i pulumi.IntInput) GetImageRegistryCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageRegistryCustomImage {
		return vs[0].([]GetImageRegistryCustomImage)[vs[1].(int)]
	}).(GetImageRegistryCustomImageOutput)
}

type GetInfrastructureV2ImageRegistry struct {
	// Timestamp when the registry was created.
	CreatedAt string `pulumi:"createdAt"`
	// Custom image configurations. Required when use*custom*images is true.
	CustomImages []GetInfrastructureV2ImageRegistryCustomImage `pulumi:"customImages"`
	// Scoped identifiers for the registry.
	Identifiers []GetInfrastructureV2ImageRegistryIdentifier `pulumi:"identifiers"`
	// ID of the infrastructure.
	InfraId string `pulumi:"infraId"`
	// Whether this is the default registry.
	IsDefault bool `pulumi:"isDefault"`
	// Whether override is allowed for this registry.
	IsOverrideAllowed bool `pulumi:"isOverrideAllowed"`
	// Whether the registry is private.
	IsPrivate bool `pulumi:"isPrivate"`
	// The account name for the container registry.
	RegistryAccount string `pulumi:"registryAccount"`
	// The container image registry server URL (e.g., docker.io, gcr.io).
	RegistryServer string `pulumi:"registryServer"`
	// Name of the Kubernetes secret containing registry credentials.
	SecretName *string `pulumi:"secretName"`
	// Timestamp when the registry was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// Whether to use custom images instead of default ones.
	UseCustomImages bool `pulumi:"useCustomImages"`
}

// GetInfrastructureV2ImageRegistryInput is an input type that accepts GetInfrastructureV2ImageRegistryArgs and GetInfrastructureV2ImageRegistryOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ImageRegistryInput` via:
//
//	GetInfrastructureV2ImageRegistryArgs{...}
type GetInfrastructureV2ImageRegistryInput interface {
	pulumi.Input

	ToGetInfrastructureV2ImageRegistryOutput() GetInfrastructureV2ImageRegistryOutput
	ToGetInfrastructureV2ImageRegistryOutputWithContext(context.Context) GetInfrastructureV2ImageRegistryOutput
}

type GetInfrastructureV2ImageRegistryArgs struct {
	// Timestamp when the registry was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Custom image configurations. Required when use*custom*images is true.
	CustomImages GetInfrastructureV2ImageRegistryCustomImageArrayInput `pulumi:"customImages"`
	// Scoped identifiers for the registry.
	Identifiers GetInfrastructureV2ImageRegistryIdentifierArrayInput `pulumi:"identifiers"`
	// ID of the infrastructure.
	InfraId pulumi.StringInput `pulumi:"infraId"`
	// Whether this is the default registry.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Whether override is allowed for this registry.
	IsOverrideAllowed pulumi.BoolInput `pulumi:"isOverrideAllowed"`
	// Whether the registry is private.
	IsPrivate pulumi.BoolInput `pulumi:"isPrivate"`
	// The account name for the container registry.
	RegistryAccount pulumi.StringInput `pulumi:"registryAccount"`
	// The container image registry server URL (e.g., docker.io, gcr.io).
	RegistryServer pulumi.StringInput `pulumi:"registryServer"`
	// Name of the Kubernetes secret containing registry credentials.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// Timestamp when the registry was last updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// Whether to use custom images instead of default ones.
	UseCustomImages pulumi.BoolInput `pulumi:"useCustomImages"`
}

func (GetInfrastructureV2ImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2ImageRegistry)(nil)).Elem()
}

func (i GetInfrastructureV2ImageRegistryArgs) ToGetInfrastructureV2ImageRegistryOutput() GetInfrastructureV2ImageRegistryOutput {
	return i.ToGetInfrastructureV2ImageRegistryOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ImageRegistryArgs) ToGetInfrastructureV2ImageRegistryOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ImageRegistryOutput)
}

// GetInfrastructureV2ImageRegistryArrayInput is an input type that accepts GetInfrastructureV2ImageRegistryArray and GetInfrastructureV2ImageRegistryArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ImageRegistryArrayInput` via:
//
//	GetInfrastructureV2ImageRegistryArray{ GetInfrastructureV2ImageRegistryArgs{...} }
type GetInfrastructureV2ImageRegistryArrayInput interface {
	pulumi.Input

	ToGetInfrastructureV2ImageRegistryArrayOutput() GetInfrastructureV2ImageRegistryArrayOutput
	ToGetInfrastructureV2ImageRegistryArrayOutputWithContext(context.Context) GetInfrastructureV2ImageRegistryArrayOutput
}

type GetInfrastructureV2ImageRegistryArray []GetInfrastructureV2ImageRegistryInput

func (GetInfrastructureV2ImageRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2ImageRegistry)(nil)).Elem()
}

func (i GetInfrastructureV2ImageRegistryArray) ToGetInfrastructureV2ImageRegistryArrayOutput() GetInfrastructureV2ImageRegistryArrayOutput {
	return i.ToGetInfrastructureV2ImageRegistryArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ImageRegistryArray) ToGetInfrastructureV2ImageRegistryArrayOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ImageRegistryArrayOutput)
}

type GetInfrastructureV2ImageRegistryOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2ImageRegistry)(nil)).Elem()
}

func (o GetInfrastructureV2ImageRegistryOutput) ToGetInfrastructureV2ImageRegistryOutput() GetInfrastructureV2ImageRegistryOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryOutput) ToGetInfrastructureV2ImageRegistryOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryOutput {
	return o
}

// Timestamp when the registry was created.
func (o GetInfrastructureV2ImageRegistryOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Custom image configurations. Required when use*custom*images is true.
func (o GetInfrastructureV2ImageRegistryOutput) CustomImages() GetInfrastructureV2ImageRegistryCustomImageArrayOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) []GetInfrastructureV2ImageRegistryCustomImage {
		return v.CustomImages
	}).(GetInfrastructureV2ImageRegistryCustomImageArrayOutput)
}

// Scoped identifiers for the registry.
func (o GetInfrastructureV2ImageRegistryOutput) Identifiers() GetInfrastructureV2ImageRegistryIdentifierArrayOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) []GetInfrastructureV2ImageRegistryIdentifier {
		return v.Identifiers
	}).(GetInfrastructureV2ImageRegistryIdentifierArrayOutput)
}

// ID of the infrastructure.
func (o GetInfrastructureV2ImageRegistryOutput) InfraId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) string { return v.InfraId }).(pulumi.StringOutput)
}

// Whether this is the default registry.
func (o GetInfrastructureV2ImageRegistryOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Whether override is allowed for this registry.
func (o GetInfrastructureV2ImageRegistryOutput) IsOverrideAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) bool { return v.IsOverrideAllowed }).(pulumi.BoolOutput)
}

// Whether the registry is private.
func (o GetInfrastructureV2ImageRegistryOutput) IsPrivate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) bool { return v.IsPrivate }).(pulumi.BoolOutput)
}

// The account name for the container registry.
func (o GetInfrastructureV2ImageRegistryOutput) RegistryAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) string { return v.RegistryAccount }).(pulumi.StringOutput)
}

// The container image registry server URL (e.g., docker.io, gcr.io).
func (o GetInfrastructureV2ImageRegistryOutput) RegistryServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) string { return v.RegistryServer }).(pulumi.StringOutput)
}

// Name of the Kubernetes secret containing registry credentials.
func (o GetInfrastructureV2ImageRegistryOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// Timestamp when the registry was last updated.
func (o GetInfrastructureV2ImageRegistryOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Whether to use custom images instead of default ones.
func (o GetInfrastructureV2ImageRegistryOutput) UseCustomImages() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistry) bool { return v.UseCustomImages }).(pulumi.BoolOutput)
}

type GetInfrastructureV2ImageRegistryArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ImageRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2ImageRegistry)(nil)).Elem()
}

func (o GetInfrastructureV2ImageRegistryArrayOutput) ToGetInfrastructureV2ImageRegistryArrayOutput() GetInfrastructureV2ImageRegistryArrayOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryArrayOutput) ToGetInfrastructureV2ImageRegistryArrayOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryArrayOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryArrayOutput) Index(i pulumi.IntInput) GetInfrastructureV2ImageRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureV2ImageRegistry {
		return vs[0].([]GetInfrastructureV2ImageRegistry)[vs[1].(int)]
	}).(GetInfrastructureV2ImageRegistryOutput)
}

type GetInfrastructureV2ImageRegistryCustomImage struct {
	// Custom image for ddcr.
	Ddcr string `pulumi:"ddcr"`
	// Custom image for ddcr-fault.
	DdcrFault string `pulumi:"ddcrFault"`
	// Custom image for ddcr-lib.
	DdcrLib string `pulumi:"ddcrLib"`
	// Custom image for log-watcher.
	LogWatcher string `pulumi:"logWatcher"`
}

// GetInfrastructureV2ImageRegistryCustomImageInput is an input type that accepts GetInfrastructureV2ImageRegistryCustomImageArgs and GetInfrastructureV2ImageRegistryCustomImageOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ImageRegistryCustomImageInput` via:
//
//	GetInfrastructureV2ImageRegistryCustomImageArgs{...}
type GetInfrastructureV2ImageRegistryCustomImageInput interface {
	pulumi.Input

	ToGetInfrastructureV2ImageRegistryCustomImageOutput() GetInfrastructureV2ImageRegistryCustomImageOutput
	ToGetInfrastructureV2ImageRegistryCustomImageOutputWithContext(context.Context) GetInfrastructureV2ImageRegistryCustomImageOutput
}

type GetInfrastructureV2ImageRegistryCustomImageArgs struct {
	// Custom image for ddcr.
	Ddcr pulumi.StringInput `pulumi:"ddcr"`
	// Custom image for ddcr-fault.
	DdcrFault pulumi.StringInput `pulumi:"ddcrFault"`
	// Custom image for ddcr-lib.
	DdcrLib pulumi.StringInput `pulumi:"ddcrLib"`
	// Custom image for log-watcher.
	LogWatcher pulumi.StringInput `pulumi:"logWatcher"`
}

func (GetInfrastructureV2ImageRegistryCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (i GetInfrastructureV2ImageRegistryCustomImageArgs) ToGetInfrastructureV2ImageRegistryCustomImageOutput() GetInfrastructureV2ImageRegistryCustomImageOutput {
	return i.ToGetInfrastructureV2ImageRegistryCustomImageOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ImageRegistryCustomImageArgs) ToGetInfrastructureV2ImageRegistryCustomImageOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ImageRegistryCustomImageOutput)
}

// GetInfrastructureV2ImageRegistryCustomImageArrayInput is an input type that accepts GetInfrastructureV2ImageRegistryCustomImageArray and GetInfrastructureV2ImageRegistryCustomImageArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ImageRegistryCustomImageArrayInput` via:
//
//	GetInfrastructureV2ImageRegistryCustomImageArray{ GetInfrastructureV2ImageRegistryCustomImageArgs{...} }
type GetInfrastructureV2ImageRegistryCustomImageArrayInput interface {
	pulumi.Input

	ToGetInfrastructureV2ImageRegistryCustomImageArrayOutput() GetInfrastructureV2ImageRegistryCustomImageArrayOutput
	ToGetInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(context.Context) GetInfrastructureV2ImageRegistryCustomImageArrayOutput
}

type GetInfrastructureV2ImageRegistryCustomImageArray []GetInfrastructureV2ImageRegistryCustomImageInput

func (GetInfrastructureV2ImageRegistryCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (i GetInfrastructureV2ImageRegistryCustomImageArray) ToGetInfrastructureV2ImageRegistryCustomImageArrayOutput() GetInfrastructureV2ImageRegistryCustomImageArrayOutput {
	return i.ToGetInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ImageRegistryCustomImageArray) ToGetInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ImageRegistryCustomImageArrayOutput)
}

type GetInfrastructureV2ImageRegistryCustomImageOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ImageRegistryCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (o GetInfrastructureV2ImageRegistryCustomImageOutput) ToGetInfrastructureV2ImageRegistryCustomImageOutput() GetInfrastructureV2ImageRegistryCustomImageOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryCustomImageOutput) ToGetInfrastructureV2ImageRegistryCustomImageOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryCustomImageOutput {
	return o
}

// Custom image for ddcr.
func (o GetInfrastructureV2ImageRegistryCustomImageOutput) Ddcr() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryCustomImage) string { return v.Ddcr }).(pulumi.StringOutput)
}

// Custom image for ddcr-fault.
func (o GetInfrastructureV2ImageRegistryCustomImageOutput) DdcrFault() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryCustomImage) string { return v.DdcrFault }).(pulumi.StringOutput)
}

// Custom image for ddcr-lib.
func (o GetInfrastructureV2ImageRegistryCustomImageOutput) DdcrLib() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryCustomImage) string { return v.DdcrLib }).(pulumi.StringOutput)
}

// Custom image for log-watcher.
func (o GetInfrastructureV2ImageRegistryCustomImageOutput) LogWatcher() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryCustomImage) string { return v.LogWatcher }).(pulumi.StringOutput)
}

type GetInfrastructureV2ImageRegistryCustomImageArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ImageRegistryCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2ImageRegistryCustomImage)(nil)).Elem()
}

func (o GetInfrastructureV2ImageRegistryCustomImageArrayOutput) ToGetInfrastructureV2ImageRegistryCustomImageArrayOutput() GetInfrastructureV2ImageRegistryCustomImageArrayOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryCustomImageArrayOutput) ToGetInfrastructureV2ImageRegistryCustomImageArrayOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryCustomImageArrayOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryCustomImageArrayOutput) Index(i pulumi.IntInput) GetInfrastructureV2ImageRegistryCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureV2ImageRegistryCustomImage {
		return vs[0].([]GetInfrastructureV2ImageRegistryCustomImage)[vs[1].(int)]
	}).(GetInfrastructureV2ImageRegistryCustomImageOutput)
}

type GetInfrastructureV2ImageRegistryIdentifier struct {
	// Harness account identifier.
	AccountIdentifier string `pulumi:"accountIdentifier"`
	// Harness organization identifier.
	OrgIdentifier string `pulumi:"orgIdentifier"`
	// Harness project identifier.
	ProjectIdentifier string `pulumi:"projectIdentifier"`
}

// GetInfrastructureV2ImageRegistryIdentifierInput is an input type that accepts GetInfrastructureV2ImageRegistryIdentifierArgs and GetInfrastructureV2ImageRegistryIdentifierOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ImageRegistryIdentifierInput` via:
//
//	GetInfrastructureV2ImageRegistryIdentifierArgs{...}
type GetInfrastructureV2ImageRegistryIdentifierInput interface {
	pulumi.Input

	ToGetInfrastructureV2ImageRegistryIdentifierOutput() GetInfrastructureV2ImageRegistryIdentifierOutput
	ToGetInfrastructureV2ImageRegistryIdentifierOutputWithContext(context.Context) GetInfrastructureV2ImageRegistryIdentifierOutput
}

type GetInfrastructureV2ImageRegistryIdentifierArgs struct {
	// Harness account identifier.
	AccountIdentifier pulumi.StringInput `pulumi:"accountIdentifier"`
	// Harness organization identifier.
	OrgIdentifier pulumi.StringInput `pulumi:"orgIdentifier"`
	// Harness project identifier.
	ProjectIdentifier pulumi.StringInput `pulumi:"projectIdentifier"`
}

func (GetInfrastructureV2ImageRegistryIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (i GetInfrastructureV2ImageRegistryIdentifierArgs) ToGetInfrastructureV2ImageRegistryIdentifierOutput() GetInfrastructureV2ImageRegistryIdentifierOutput {
	return i.ToGetInfrastructureV2ImageRegistryIdentifierOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ImageRegistryIdentifierArgs) ToGetInfrastructureV2ImageRegistryIdentifierOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ImageRegistryIdentifierOutput)
}

// GetInfrastructureV2ImageRegistryIdentifierArrayInput is an input type that accepts GetInfrastructureV2ImageRegistryIdentifierArray and GetInfrastructureV2ImageRegistryIdentifierArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ImageRegistryIdentifierArrayInput` via:
//
//	GetInfrastructureV2ImageRegistryIdentifierArray{ GetInfrastructureV2ImageRegistryIdentifierArgs{...} }
type GetInfrastructureV2ImageRegistryIdentifierArrayInput interface {
	pulumi.Input

	ToGetInfrastructureV2ImageRegistryIdentifierArrayOutput() GetInfrastructureV2ImageRegistryIdentifierArrayOutput
	ToGetInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(context.Context) GetInfrastructureV2ImageRegistryIdentifierArrayOutput
}

type GetInfrastructureV2ImageRegistryIdentifierArray []GetInfrastructureV2ImageRegistryIdentifierInput

func (GetInfrastructureV2ImageRegistryIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (i GetInfrastructureV2ImageRegistryIdentifierArray) ToGetInfrastructureV2ImageRegistryIdentifierArrayOutput() GetInfrastructureV2ImageRegistryIdentifierArrayOutput {
	return i.ToGetInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ImageRegistryIdentifierArray) ToGetInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ImageRegistryIdentifierArrayOutput)
}

type GetInfrastructureV2ImageRegistryIdentifierOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ImageRegistryIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (o GetInfrastructureV2ImageRegistryIdentifierOutput) ToGetInfrastructureV2ImageRegistryIdentifierOutput() GetInfrastructureV2ImageRegistryIdentifierOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryIdentifierOutput) ToGetInfrastructureV2ImageRegistryIdentifierOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryIdentifierOutput {
	return o
}

// Harness account identifier.
func (o GetInfrastructureV2ImageRegistryIdentifierOutput) AccountIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryIdentifier) string { return v.AccountIdentifier }).(pulumi.StringOutput)
}

// Harness organization identifier.
func (o GetInfrastructureV2ImageRegistryIdentifierOutput) OrgIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryIdentifier) string { return v.OrgIdentifier }).(pulumi.StringOutput)
}

// Harness project identifier.
func (o GetInfrastructureV2ImageRegistryIdentifierOutput) ProjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2ImageRegistryIdentifier) string { return v.ProjectIdentifier }).(pulumi.StringOutput)
}

type GetInfrastructureV2ImageRegistryIdentifierArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ImageRegistryIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2ImageRegistryIdentifier)(nil)).Elem()
}

func (o GetInfrastructureV2ImageRegistryIdentifierArrayOutput) ToGetInfrastructureV2ImageRegistryIdentifierArrayOutput() GetInfrastructureV2ImageRegistryIdentifierArrayOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryIdentifierArrayOutput) ToGetInfrastructureV2ImageRegistryIdentifierArrayOutputWithContext(ctx context.Context) GetInfrastructureV2ImageRegistryIdentifierArrayOutput {
	return o
}

func (o GetInfrastructureV2ImageRegistryIdentifierArrayOutput) Index(i pulumi.IntInput) GetInfrastructureV2ImageRegistryIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureV2ImageRegistryIdentifier {
		return vs[0].([]GetInfrastructureV2ImageRegistryIdentifier)[vs[1].(int)]
	}).(GetInfrastructureV2ImageRegistryIdentifierOutput)
}

type GetInfrastructureV2Mtls struct {
	// Path to the certificate file for mTLS
	CertPath *string `pulumi:"certPath"`
	// Path to the private key file for mTLS
	KeyPath *string `pulumi:"keyPath"`
	// Name of the Kubernetes secret containing mTLS certificates
	SecretName *string `pulumi:"secretName"`
	// URL for the mTLS endpoint
	Url *string `pulumi:"url"`
}

// GetInfrastructureV2MtlsInput is an input type that accepts GetInfrastructureV2MtlsArgs and GetInfrastructureV2MtlsOutput values.
// You can construct a concrete instance of `GetInfrastructureV2MtlsInput` via:
//
//	GetInfrastructureV2MtlsArgs{...}
type GetInfrastructureV2MtlsInput interface {
	pulumi.Input

	ToGetInfrastructureV2MtlsOutput() GetInfrastructureV2MtlsOutput
	ToGetInfrastructureV2MtlsOutputWithContext(context.Context) GetInfrastructureV2MtlsOutput
}

type GetInfrastructureV2MtlsArgs struct {
	// Path to the certificate file for mTLS
	CertPath pulumi.StringPtrInput `pulumi:"certPath"`
	// Path to the private key file for mTLS
	KeyPath pulumi.StringPtrInput `pulumi:"keyPath"`
	// Name of the Kubernetes secret containing mTLS certificates
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// URL for the mTLS endpoint
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GetInfrastructureV2MtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Mtls)(nil)).Elem()
}

func (i GetInfrastructureV2MtlsArgs) ToGetInfrastructureV2MtlsOutput() GetInfrastructureV2MtlsOutput {
	return i.ToGetInfrastructureV2MtlsOutputWithContext(context.Background())
}

func (i GetInfrastructureV2MtlsArgs) ToGetInfrastructureV2MtlsOutputWithContext(ctx context.Context) GetInfrastructureV2MtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2MtlsOutput)
}

func (i GetInfrastructureV2MtlsArgs) ToGetInfrastructureV2MtlsPtrOutput() GetInfrastructureV2MtlsPtrOutput {
	return i.ToGetInfrastructureV2MtlsPtrOutputWithContext(context.Background())
}

func (i GetInfrastructureV2MtlsArgs) ToGetInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) GetInfrastructureV2MtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2MtlsOutput).ToGetInfrastructureV2MtlsPtrOutputWithContext(ctx)
}

// GetInfrastructureV2MtlsPtrInput is an input type that accepts GetInfrastructureV2MtlsArgs, GetInfrastructureV2MtlsPtr and GetInfrastructureV2MtlsPtrOutput values.
// You can construct a concrete instance of `GetInfrastructureV2MtlsPtrInput` via:
//
//	        GetInfrastructureV2MtlsArgs{...}
//
//	or:
//
//	        nil
type GetInfrastructureV2MtlsPtrInput interface {
	pulumi.Input

	ToGetInfrastructureV2MtlsPtrOutput() GetInfrastructureV2MtlsPtrOutput
	ToGetInfrastructureV2MtlsPtrOutputWithContext(context.Context) GetInfrastructureV2MtlsPtrOutput
}

type getInfrastructureV2MtlsPtrType GetInfrastructureV2MtlsArgs

func GetInfrastructureV2MtlsPtr(v *GetInfrastructureV2MtlsArgs) GetInfrastructureV2MtlsPtrInput {
	return (*getInfrastructureV2MtlsPtrType)(v)
}

func (*getInfrastructureV2MtlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfrastructureV2Mtls)(nil)).Elem()
}

func (i *getInfrastructureV2MtlsPtrType) ToGetInfrastructureV2MtlsPtrOutput() GetInfrastructureV2MtlsPtrOutput {
	return i.ToGetInfrastructureV2MtlsPtrOutputWithContext(context.Background())
}

func (i *getInfrastructureV2MtlsPtrType) ToGetInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) GetInfrastructureV2MtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2MtlsPtrOutput)
}

type GetInfrastructureV2MtlsOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2MtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Mtls)(nil)).Elem()
}

func (o GetInfrastructureV2MtlsOutput) ToGetInfrastructureV2MtlsOutput() GetInfrastructureV2MtlsOutput {
	return o
}

func (o GetInfrastructureV2MtlsOutput) ToGetInfrastructureV2MtlsOutputWithContext(ctx context.Context) GetInfrastructureV2MtlsOutput {
	return o
}

func (o GetInfrastructureV2MtlsOutput) ToGetInfrastructureV2MtlsPtrOutput() GetInfrastructureV2MtlsPtrOutput {
	return o.ToGetInfrastructureV2MtlsPtrOutputWithContext(context.Background())
}

func (o GetInfrastructureV2MtlsOutput) ToGetInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) GetInfrastructureV2MtlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInfrastructureV2Mtls) *GetInfrastructureV2Mtls {
		return &v
	}).(GetInfrastructureV2MtlsPtrOutput)
}

// Path to the certificate file for mTLS
func (o GetInfrastructureV2MtlsOutput) CertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Mtls) *string { return v.CertPath }).(pulumi.StringPtrOutput)
}

// Path to the private key file for mTLS
func (o GetInfrastructureV2MtlsOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Mtls) *string { return v.KeyPath }).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes secret containing mTLS certificates
func (o GetInfrastructureV2MtlsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Mtls) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// URL for the mTLS endpoint
func (o GetInfrastructureV2MtlsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Mtls) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GetInfrastructureV2MtlsPtrOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2MtlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfrastructureV2Mtls)(nil)).Elem()
}

func (o GetInfrastructureV2MtlsPtrOutput) ToGetInfrastructureV2MtlsPtrOutput() GetInfrastructureV2MtlsPtrOutput {
	return o
}

func (o GetInfrastructureV2MtlsPtrOutput) ToGetInfrastructureV2MtlsPtrOutputWithContext(ctx context.Context) GetInfrastructureV2MtlsPtrOutput {
	return o
}

func (o GetInfrastructureV2MtlsPtrOutput) Elem() GetInfrastructureV2MtlsOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Mtls) GetInfrastructureV2Mtls {
		if v != nil {
			return *v
		}
		var ret GetInfrastructureV2Mtls
		return ret
	}).(GetInfrastructureV2MtlsOutput)
}

// Path to the certificate file for mTLS
func (o GetInfrastructureV2MtlsPtrOutput) CertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.CertPath
	}).(pulumi.StringPtrOutput)
}

// Path to the private key file for mTLS
func (o GetInfrastructureV2MtlsPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.KeyPath
	}).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes secret containing mTLS certificates
func (o GetInfrastructureV2MtlsPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// URL for the mTLS endpoint
func (o GetInfrastructureV2MtlsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Mtls) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type GetInfrastructureV2Proxy struct {
	// HTTP proxy URL.
	HttpProxy *string `pulumi:"httpProxy"`
	// HTTPS proxy URL.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// List of hosts that should not use proxy.
	NoProxy *string `pulumi:"noProxy"`
	// Proxy URL.
	Url string `pulumi:"url"`
}

// GetInfrastructureV2ProxyInput is an input type that accepts GetInfrastructureV2ProxyArgs and GetInfrastructureV2ProxyOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ProxyInput` via:
//
//	GetInfrastructureV2ProxyArgs{...}
type GetInfrastructureV2ProxyInput interface {
	pulumi.Input

	ToGetInfrastructureV2ProxyOutput() GetInfrastructureV2ProxyOutput
	ToGetInfrastructureV2ProxyOutputWithContext(context.Context) GetInfrastructureV2ProxyOutput
}

type GetInfrastructureV2ProxyArgs struct {
	// HTTP proxy URL.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// HTTPS proxy URL.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// List of hosts that should not use proxy.
	NoProxy pulumi.StringPtrInput `pulumi:"noProxy"`
	// Proxy URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetInfrastructureV2ProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Proxy)(nil)).Elem()
}

func (i GetInfrastructureV2ProxyArgs) ToGetInfrastructureV2ProxyOutput() GetInfrastructureV2ProxyOutput {
	return i.ToGetInfrastructureV2ProxyOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ProxyArgs) ToGetInfrastructureV2ProxyOutputWithContext(ctx context.Context) GetInfrastructureV2ProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ProxyOutput)
}

func (i GetInfrastructureV2ProxyArgs) ToGetInfrastructureV2ProxyPtrOutput() GetInfrastructureV2ProxyPtrOutput {
	return i.ToGetInfrastructureV2ProxyPtrOutputWithContext(context.Background())
}

func (i GetInfrastructureV2ProxyArgs) ToGetInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) GetInfrastructureV2ProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ProxyOutput).ToGetInfrastructureV2ProxyPtrOutputWithContext(ctx)
}

// GetInfrastructureV2ProxyPtrInput is an input type that accepts GetInfrastructureV2ProxyArgs, GetInfrastructureV2ProxyPtr and GetInfrastructureV2ProxyPtrOutput values.
// You can construct a concrete instance of `GetInfrastructureV2ProxyPtrInput` via:
//
//	        GetInfrastructureV2ProxyArgs{...}
//
//	or:
//
//	        nil
type GetInfrastructureV2ProxyPtrInput interface {
	pulumi.Input

	ToGetInfrastructureV2ProxyPtrOutput() GetInfrastructureV2ProxyPtrOutput
	ToGetInfrastructureV2ProxyPtrOutputWithContext(context.Context) GetInfrastructureV2ProxyPtrOutput
}

type getInfrastructureV2ProxyPtrType GetInfrastructureV2ProxyArgs

func GetInfrastructureV2ProxyPtr(v *GetInfrastructureV2ProxyArgs) GetInfrastructureV2ProxyPtrInput {
	return (*getInfrastructureV2ProxyPtrType)(v)
}

func (*getInfrastructureV2ProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfrastructureV2Proxy)(nil)).Elem()
}

func (i *getInfrastructureV2ProxyPtrType) ToGetInfrastructureV2ProxyPtrOutput() GetInfrastructureV2ProxyPtrOutput {
	return i.ToGetInfrastructureV2ProxyPtrOutputWithContext(context.Background())
}

func (i *getInfrastructureV2ProxyPtrType) ToGetInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) GetInfrastructureV2ProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2ProxyPtrOutput)
}

type GetInfrastructureV2ProxyOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Proxy)(nil)).Elem()
}

func (o GetInfrastructureV2ProxyOutput) ToGetInfrastructureV2ProxyOutput() GetInfrastructureV2ProxyOutput {
	return o
}

func (o GetInfrastructureV2ProxyOutput) ToGetInfrastructureV2ProxyOutputWithContext(ctx context.Context) GetInfrastructureV2ProxyOutput {
	return o
}

func (o GetInfrastructureV2ProxyOutput) ToGetInfrastructureV2ProxyPtrOutput() GetInfrastructureV2ProxyPtrOutput {
	return o.ToGetInfrastructureV2ProxyPtrOutputWithContext(context.Background())
}

func (o GetInfrastructureV2ProxyOutput) ToGetInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) GetInfrastructureV2ProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInfrastructureV2Proxy) *GetInfrastructureV2Proxy {
		return &v
	}).(GetInfrastructureV2ProxyPtrOutput)
}

// HTTP proxy URL.
func (o GetInfrastructureV2ProxyOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Proxy) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// HTTPS proxy URL.
func (o GetInfrastructureV2ProxyOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Proxy) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// List of hosts that should not use proxy.
func (o GetInfrastructureV2ProxyOutput) NoProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Proxy) *string { return v.NoProxy }).(pulumi.StringPtrOutput)
}

// Proxy URL.
func (o GetInfrastructureV2ProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2Proxy) string { return v.Url }).(pulumi.StringOutput)
}

type GetInfrastructureV2ProxyPtrOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2ProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInfrastructureV2Proxy)(nil)).Elem()
}

func (o GetInfrastructureV2ProxyPtrOutput) ToGetInfrastructureV2ProxyPtrOutput() GetInfrastructureV2ProxyPtrOutput {
	return o
}

func (o GetInfrastructureV2ProxyPtrOutput) ToGetInfrastructureV2ProxyPtrOutputWithContext(ctx context.Context) GetInfrastructureV2ProxyPtrOutput {
	return o
}

func (o GetInfrastructureV2ProxyPtrOutput) Elem() GetInfrastructureV2ProxyOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Proxy) GetInfrastructureV2Proxy {
		if v != nil {
			return *v
		}
		var ret GetInfrastructureV2Proxy
		return ret
	}).(GetInfrastructureV2ProxyOutput)
}

// HTTP proxy URL.
func (o GetInfrastructureV2ProxyPtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// HTTPS proxy URL.
func (o GetInfrastructureV2ProxyPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// List of hosts that should not use proxy.
func (o GetInfrastructureV2ProxyPtrOutput) NoProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringPtrOutput)
}

// Proxy URL.
func (o GetInfrastructureV2ProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInfrastructureV2Proxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetInfrastructureV2Toleration struct {
	// Effect indicates the taint effect to match. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists.
	Key string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
	Operator string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// GetInfrastructureV2TolerationInput is an input type that accepts GetInfrastructureV2TolerationArgs and GetInfrastructureV2TolerationOutput values.
// You can construct a concrete instance of `GetInfrastructureV2TolerationInput` via:
//
//	GetInfrastructureV2TolerationArgs{...}
type GetInfrastructureV2TolerationInput interface {
	pulumi.Input

	ToGetInfrastructureV2TolerationOutput() GetInfrastructureV2TolerationOutput
	ToGetInfrastructureV2TolerationOutputWithContext(context.Context) GetInfrastructureV2TolerationOutput
}

type GetInfrastructureV2TolerationArgs struct {
	// Effect indicates the taint effect to match. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists.
	Key pulumi.StringInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
	Operator pulumi.StringInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetInfrastructureV2TolerationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Toleration)(nil)).Elem()
}

func (i GetInfrastructureV2TolerationArgs) ToGetInfrastructureV2TolerationOutput() GetInfrastructureV2TolerationOutput {
	return i.ToGetInfrastructureV2TolerationOutputWithContext(context.Background())
}

func (i GetInfrastructureV2TolerationArgs) ToGetInfrastructureV2TolerationOutputWithContext(ctx context.Context) GetInfrastructureV2TolerationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2TolerationOutput)
}

// GetInfrastructureV2TolerationArrayInput is an input type that accepts GetInfrastructureV2TolerationArray and GetInfrastructureV2TolerationArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureV2TolerationArrayInput` via:
//
//	GetInfrastructureV2TolerationArray{ GetInfrastructureV2TolerationArgs{...} }
type GetInfrastructureV2TolerationArrayInput interface {
	pulumi.Input

	ToGetInfrastructureV2TolerationArrayOutput() GetInfrastructureV2TolerationArrayOutput
	ToGetInfrastructureV2TolerationArrayOutputWithContext(context.Context) GetInfrastructureV2TolerationArrayOutput
}

type GetInfrastructureV2TolerationArray []GetInfrastructureV2TolerationInput

func (GetInfrastructureV2TolerationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2Toleration)(nil)).Elem()
}

func (i GetInfrastructureV2TolerationArray) ToGetInfrastructureV2TolerationArrayOutput() GetInfrastructureV2TolerationArrayOutput {
	return i.ToGetInfrastructureV2TolerationArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureV2TolerationArray) ToGetInfrastructureV2TolerationArrayOutputWithContext(ctx context.Context) GetInfrastructureV2TolerationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2TolerationArrayOutput)
}

type GetInfrastructureV2TolerationOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2TolerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Toleration)(nil)).Elem()
}

func (o GetInfrastructureV2TolerationOutput) ToGetInfrastructureV2TolerationOutput() GetInfrastructureV2TolerationOutput {
	return o
}

func (o GetInfrastructureV2TolerationOutput) ToGetInfrastructureV2TolerationOutputWithContext(ctx context.Context) GetInfrastructureV2TolerationOutput {
	return o
}

// Effect indicates the taint effect to match. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o GetInfrastructureV2TolerationOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2Toleration) string { return v.Effect }).(pulumi.StringOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists.
func (o GetInfrastructureV2TolerationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2Toleration) string { return v.Key }).(pulumi.StringOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
func (o GetInfrastructureV2TolerationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2Toleration) string { return v.Operator }).(pulumi.StringOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o GetInfrastructureV2TolerationOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Toleration) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o GetInfrastructureV2TolerationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Toleration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetInfrastructureV2TolerationArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2TolerationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2Toleration)(nil)).Elem()
}

func (o GetInfrastructureV2TolerationArrayOutput) ToGetInfrastructureV2TolerationArrayOutput() GetInfrastructureV2TolerationArrayOutput {
	return o
}

func (o GetInfrastructureV2TolerationArrayOutput) ToGetInfrastructureV2TolerationArrayOutputWithContext(ctx context.Context) GetInfrastructureV2TolerationArrayOutput {
	return o
}

func (o GetInfrastructureV2TolerationArrayOutput) Index(i pulumi.IntInput) GetInfrastructureV2TolerationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureV2Toleration {
		return vs[0].([]GetInfrastructureV2Toleration)[vs[1].(int)]
	}).(GetInfrastructureV2TolerationOutput)
}

type GetInfrastructureV2Volume struct {
	// Name of the volume. Must be a DNS_LABEL and unique within the pod.
	Name string `pulumi:"name"`
	// Size limit of the volume. Example: '10Gi', '100Mi'
	SizeLimit *string `pulumi:"sizeLimit"`
}

// GetInfrastructureV2VolumeInput is an input type that accepts GetInfrastructureV2VolumeArgs and GetInfrastructureV2VolumeOutput values.
// You can construct a concrete instance of `GetInfrastructureV2VolumeInput` via:
//
//	GetInfrastructureV2VolumeArgs{...}
type GetInfrastructureV2VolumeInput interface {
	pulumi.Input

	ToGetInfrastructureV2VolumeOutput() GetInfrastructureV2VolumeOutput
	ToGetInfrastructureV2VolumeOutputWithContext(context.Context) GetInfrastructureV2VolumeOutput
}

type GetInfrastructureV2VolumeArgs struct {
	// Name of the volume. Must be a DNS_LABEL and unique within the pod.
	Name pulumi.StringInput `pulumi:"name"`
	// Size limit of the volume. Example: '10Gi', '100Mi'
	SizeLimit pulumi.StringPtrInput `pulumi:"sizeLimit"`
}

func (GetInfrastructureV2VolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Volume)(nil)).Elem()
}

func (i GetInfrastructureV2VolumeArgs) ToGetInfrastructureV2VolumeOutput() GetInfrastructureV2VolumeOutput {
	return i.ToGetInfrastructureV2VolumeOutputWithContext(context.Background())
}

func (i GetInfrastructureV2VolumeArgs) ToGetInfrastructureV2VolumeOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2VolumeOutput)
}

// GetInfrastructureV2VolumeArrayInput is an input type that accepts GetInfrastructureV2VolumeArray and GetInfrastructureV2VolumeArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureV2VolumeArrayInput` via:
//
//	GetInfrastructureV2VolumeArray{ GetInfrastructureV2VolumeArgs{...} }
type GetInfrastructureV2VolumeArrayInput interface {
	pulumi.Input

	ToGetInfrastructureV2VolumeArrayOutput() GetInfrastructureV2VolumeArrayOutput
	ToGetInfrastructureV2VolumeArrayOutputWithContext(context.Context) GetInfrastructureV2VolumeArrayOutput
}

type GetInfrastructureV2VolumeArray []GetInfrastructureV2VolumeInput

func (GetInfrastructureV2VolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2Volume)(nil)).Elem()
}

func (i GetInfrastructureV2VolumeArray) ToGetInfrastructureV2VolumeArrayOutput() GetInfrastructureV2VolumeArrayOutput {
	return i.ToGetInfrastructureV2VolumeArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureV2VolumeArray) ToGetInfrastructureV2VolumeArrayOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2VolumeArrayOutput)
}

type GetInfrastructureV2VolumeOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2Volume)(nil)).Elem()
}

func (o GetInfrastructureV2VolumeOutput) ToGetInfrastructureV2VolumeOutput() GetInfrastructureV2VolumeOutput {
	return o
}

func (o GetInfrastructureV2VolumeOutput) ToGetInfrastructureV2VolumeOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeOutput {
	return o
}

// Name of the volume. Must be a DNS_LABEL and unique within the pod.
func (o GetInfrastructureV2VolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2Volume) string { return v.Name }).(pulumi.StringOutput)
}

// Size limit of the volume. Example: '10Gi', '100Mi'
func (o GetInfrastructureV2VolumeOutput) SizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2Volume) *string { return v.SizeLimit }).(pulumi.StringPtrOutput)
}

type GetInfrastructureV2VolumeArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2VolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2Volume)(nil)).Elem()
}

func (o GetInfrastructureV2VolumeArrayOutput) ToGetInfrastructureV2VolumeArrayOutput() GetInfrastructureV2VolumeArrayOutput {
	return o
}

func (o GetInfrastructureV2VolumeArrayOutput) ToGetInfrastructureV2VolumeArrayOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeArrayOutput {
	return o
}

func (o GetInfrastructureV2VolumeArrayOutput) Index(i pulumi.IntInput) GetInfrastructureV2VolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureV2Volume {
		return vs[0].([]GetInfrastructureV2Volume)[vs[1].(int)]
	}).(GetInfrastructureV2VolumeOutput)
}

type GetInfrastructureV2VolumeMount struct {
	// Path within the container at which the volume should be mounted. Must not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise.
	ReadOnly *bool `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// GetInfrastructureV2VolumeMountInput is an input type that accepts GetInfrastructureV2VolumeMountArgs and GetInfrastructureV2VolumeMountOutput values.
// You can construct a concrete instance of `GetInfrastructureV2VolumeMountInput` via:
//
//	GetInfrastructureV2VolumeMountArgs{...}
type GetInfrastructureV2VolumeMountInput interface {
	pulumi.Input

	ToGetInfrastructureV2VolumeMountOutput() GetInfrastructureV2VolumeMountOutput
	ToGetInfrastructureV2VolumeMountOutputWithContext(context.Context) GetInfrastructureV2VolumeMountOutput
}

type GetInfrastructureV2VolumeMountArgs struct {
	// Path within the container at which the volume should be mounted. Must not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (GetInfrastructureV2VolumeMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2VolumeMount)(nil)).Elem()
}

func (i GetInfrastructureV2VolumeMountArgs) ToGetInfrastructureV2VolumeMountOutput() GetInfrastructureV2VolumeMountOutput {
	return i.ToGetInfrastructureV2VolumeMountOutputWithContext(context.Background())
}

func (i GetInfrastructureV2VolumeMountArgs) ToGetInfrastructureV2VolumeMountOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2VolumeMountOutput)
}

// GetInfrastructureV2VolumeMountArrayInput is an input type that accepts GetInfrastructureV2VolumeMountArray and GetInfrastructureV2VolumeMountArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureV2VolumeMountArrayInput` via:
//
//	GetInfrastructureV2VolumeMountArray{ GetInfrastructureV2VolumeMountArgs{...} }
type GetInfrastructureV2VolumeMountArrayInput interface {
	pulumi.Input

	ToGetInfrastructureV2VolumeMountArrayOutput() GetInfrastructureV2VolumeMountArrayOutput
	ToGetInfrastructureV2VolumeMountArrayOutputWithContext(context.Context) GetInfrastructureV2VolumeMountArrayOutput
}

type GetInfrastructureV2VolumeMountArray []GetInfrastructureV2VolumeMountInput

func (GetInfrastructureV2VolumeMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2VolumeMount)(nil)).Elem()
}

func (i GetInfrastructureV2VolumeMountArray) ToGetInfrastructureV2VolumeMountArrayOutput() GetInfrastructureV2VolumeMountArrayOutput {
	return i.ToGetInfrastructureV2VolumeMountArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureV2VolumeMountArray) ToGetInfrastructureV2VolumeMountArrayOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureV2VolumeMountArrayOutput)
}

type GetInfrastructureV2VolumeMountOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2VolumeMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureV2VolumeMount)(nil)).Elem()
}

func (o GetInfrastructureV2VolumeMountOutput) ToGetInfrastructureV2VolumeMountOutput() GetInfrastructureV2VolumeMountOutput {
	return o
}

func (o GetInfrastructureV2VolumeMountOutput) ToGetInfrastructureV2VolumeMountOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeMountOutput {
	return o
}

// Path within the container at which the volume should be mounted. Must not contain ':'.
func (o GetInfrastructureV2VolumeMountOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2VolumeMount) string { return v.MountPath }).(pulumi.StringOutput)
}

// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
func (o GetInfrastructureV2VolumeMountOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2VolumeMount) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o GetInfrastructureV2VolumeMountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureV2VolumeMount) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise.
func (o GetInfrastructureV2VolumeMountOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2VolumeMount) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
func (o GetInfrastructureV2VolumeMountOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2VolumeMount) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
func (o GetInfrastructureV2VolumeMountOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInfrastructureV2VolumeMount) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type GetInfrastructureV2VolumeMountArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureV2VolumeMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureV2VolumeMount)(nil)).Elem()
}

func (o GetInfrastructureV2VolumeMountArrayOutput) ToGetInfrastructureV2VolumeMountArrayOutput() GetInfrastructureV2VolumeMountArrayOutput {
	return o
}

func (o GetInfrastructureV2VolumeMountArrayOutput) ToGetInfrastructureV2VolumeMountArrayOutputWithContext(ctx context.Context) GetInfrastructureV2VolumeMountArrayOutput {
	return o
}

func (o GetInfrastructureV2VolumeMountArrayOutput) Index(i pulumi.IntInput) GetInfrastructureV2VolumeMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureV2VolumeMount {
		return vs[0].([]GetInfrastructureV2VolumeMount)[vs[1].(int)]
	}).(GetInfrastructureV2VolumeMountOutput)
}

type GetSecurityGovernanceConditionFaultSpec struct {
	// List of fault specifications
	Faults []GetSecurityGovernanceConditionFaultSpecFault `pulumi:"faults"`
	// Operator for the fault specification
	Operator string `pulumi:"operator"`
}

// GetSecurityGovernanceConditionFaultSpecInput is an input type that accepts GetSecurityGovernanceConditionFaultSpecArgs and GetSecurityGovernanceConditionFaultSpecOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionFaultSpecInput` via:
//
//	GetSecurityGovernanceConditionFaultSpecArgs{...}
type GetSecurityGovernanceConditionFaultSpecInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionFaultSpecOutput() GetSecurityGovernanceConditionFaultSpecOutput
	ToGetSecurityGovernanceConditionFaultSpecOutputWithContext(context.Context) GetSecurityGovernanceConditionFaultSpecOutput
}

type GetSecurityGovernanceConditionFaultSpecArgs struct {
	// List of fault specifications
	Faults GetSecurityGovernanceConditionFaultSpecFaultArrayInput `pulumi:"faults"`
	// Operator for the fault specification
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (GetSecurityGovernanceConditionFaultSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionFaultSpecArgs) ToGetSecurityGovernanceConditionFaultSpecOutput() GetSecurityGovernanceConditionFaultSpecOutput {
	return i.ToGetSecurityGovernanceConditionFaultSpecOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionFaultSpecArgs) ToGetSecurityGovernanceConditionFaultSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionFaultSpecOutput)
}

// GetSecurityGovernanceConditionFaultSpecArrayInput is an input type that accepts GetSecurityGovernanceConditionFaultSpecArray and GetSecurityGovernanceConditionFaultSpecArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionFaultSpecArrayInput` via:
//
//	GetSecurityGovernanceConditionFaultSpecArray{ GetSecurityGovernanceConditionFaultSpecArgs{...} }
type GetSecurityGovernanceConditionFaultSpecArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionFaultSpecArrayOutput() GetSecurityGovernanceConditionFaultSpecArrayOutput
	ToGetSecurityGovernanceConditionFaultSpecArrayOutputWithContext(context.Context) GetSecurityGovernanceConditionFaultSpecArrayOutput
}

type GetSecurityGovernanceConditionFaultSpecArray []GetSecurityGovernanceConditionFaultSpecInput

func (GetSecurityGovernanceConditionFaultSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionFaultSpecArray) ToGetSecurityGovernanceConditionFaultSpecArrayOutput() GetSecurityGovernanceConditionFaultSpecArrayOutput {
	return i.ToGetSecurityGovernanceConditionFaultSpecArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionFaultSpecArray) ToGetSecurityGovernanceConditionFaultSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionFaultSpecArrayOutput)
}

type GetSecurityGovernanceConditionFaultSpecOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionFaultSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionFaultSpecOutput) ToGetSecurityGovernanceConditionFaultSpecOutput() GetSecurityGovernanceConditionFaultSpecOutput {
	return o
}

func (o GetSecurityGovernanceConditionFaultSpecOutput) ToGetSecurityGovernanceConditionFaultSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecOutput {
	return o
}

// List of fault specifications
func (o GetSecurityGovernanceConditionFaultSpecOutput) Faults() GetSecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionFaultSpec) []GetSecurityGovernanceConditionFaultSpecFault {
		return v.Faults
	}).(GetSecurityGovernanceConditionFaultSpecFaultArrayOutput)
}

// Operator for the fault specification
func (o GetSecurityGovernanceConditionFaultSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionFaultSpec) string { return v.Operator }).(pulumi.StringOutput)
}

type GetSecurityGovernanceConditionFaultSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionFaultSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionFaultSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionFaultSpecArrayOutput) ToGetSecurityGovernanceConditionFaultSpecArrayOutput() GetSecurityGovernanceConditionFaultSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionFaultSpecArrayOutput) ToGetSecurityGovernanceConditionFaultSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionFaultSpecArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceConditionFaultSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceConditionFaultSpec {
		return vs[0].([]GetSecurityGovernanceConditionFaultSpec)[vs[1].(int)]
	}).(GetSecurityGovernanceConditionFaultSpecOutput)
}

type GetSecurityGovernanceConditionFaultSpecFault struct {
	// Type of the fault
	FaultType string `pulumi:"faultType"`
	// Name of the fault
	Name string `pulumi:"name"`
}

// GetSecurityGovernanceConditionFaultSpecFaultInput is an input type that accepts GetSecurityGovernanceConditionFaultSpecFaultArgs and GetSecurityGovernanceConditionFaultSpecFaultOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionFaultSpecFaultInput` via:
//
//	GetSecurityGovernanceConditionFaultSpecFaultArgs{...}
type GetSecurityGovernanceConditionFaultSpecFaultInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionFaultSpecFaultOutput() GetSecurityGovernanceConditionFaultSpecFaultOutput
	ToGetSecurityGovernanceConditionFaultSpecFaultOutputWithContext(context.Context) GetSecurityGovernanceConditionFaultSpecFaultOutput
}

type GetSecurityGovernanceConditionFaultSpecFaultArgs struct {
	// Type of the fault
	FaultType pulumi.StringInput `pulumi:"faultType"`
	// Name of the fault
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSecurityGovernanceConditionFaultSpecFaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionFaultSpecFaultArgs) ToGetSecurityGovernanceConditionFaultSpecFaultOutput() GetSecurityGovernanceConditionFaultSpecFaultOutput {
	return i.ToGetSecurityGovernanceConditionFaultSpecFaultOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionFaultSpecFaultArgs) ToGetSecurityGovernanceConditionFaultSpecFaultOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecFaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionFaultSpecFaultOutput)
}

// GetSecurityGovernanceConditionFaultSpecFaultArrayInput is an input type that accepts GetSecurityGovernanceConditionFaultSpecFaultArray and GetSecurityGovernanceConditionFaultSpecFaultArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionFaultSpecFaultArrayInput` via:
//
//	GetSecurityGovernanceConditionFaultSpecFaultArray{ GetSecurityGovernanceConditionFaultSpecFaultArgs{...} }
type GetSecurityGovernanceConditionFaultSpecFaultArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutput() GetSecurityGovernanceConditionFaultSpecFaultArrayOutput
	ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(context.Context) GetSecurityGovernanceConditionFaultSpecFaultArrayOutput
}

type GetSecurityGovernanceConditionFaultSpecFaultArray []GetSecurityGovernanceConditionFaultSpecFaultInput

func (GetSecurityGovernanceConditionFaultSpecFaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionFaultSpecFaultArray) ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutput() GetSecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return i.ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionFaultSpecFaultArray) ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionFaultSpecFaultArrayOutput)
}

type GetSecurityGovernanceConditionFaultSpecFaultOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionFaultSpecFaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionFaultSpecFaultOutput) ToGetSecurityGovernanceConditionFaultSpecFaultOutput() GetSecurityGovernanceConditionFaultSpecFaultOutput {
	return o
}

func (o GetSecurityGovernanceConditionFaultSpecFaultOutput) ToGetSecurityGovernanceConditionFaultSpecFaultOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecFaultOutput {
	return o
}

// Type of the fault
func (o GetSecurityGovernanceConditionFaultSpecFaultOutput) FaultType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionFaultSpecFault) string { return v.FaultType }).(pulumi.StringOutput)
}

// Name of the fault
func (o GetSecurityGovernanceConditionFaultSpecFaultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionFaultSpecFault) string { return v.Name }).(pulumi.StringOutput)
}

type GetSecurityGovernanceConditionFaultSpecFaultArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionFaultSpecFaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionFaultSpecFault)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionFaultSpecFaultArrayOutput) ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutput() GetSecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionFaultSpecFaultArrayOutput) ToGetSecurityGovernanceConditionFaultSpecFaultArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionFaultSpecFaultArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionFaultSpecFaultArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceConditionFaultSpecFaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceConditionFaultSpecFault {
		return vs[0].([]GetSecurityGovernanceConditionFaultSpecFault)[vs[1].(int)]
	}).(GetSecurityGovernanceConditionFaultSpecFaultOutput)
}

type GetSecurityGovernanceConditionK8sSpec struct {
	// Infrastructure specification
	InfraSpecs []GetSecurityGovernanceConditionK8sSpecInfraSpec `pulumi:"infraSpecs"`
}

// GetSecurityGovernanceConditionK8sSpecInput is an input type that accepts GetSecurityGovernanceConditionK8sSpecArgs and GetSecurityGovernanceConditionK8sSpecOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionK8sSpecInput` via:
//
//	GetSecurityGovernanceConditionK8sSpecArgs{...}
type GetSecurityGovernanceConditionK8sSpecInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionK8sSpecOutput() GetSecurityGovernanceConditionK8sSpecOutput
	ToGetSecurityGovernanceConditionK8sSpecOutputWithContext(context.Context) GetSecurityGovernanceConditionK8sSpecOutput
}

type GetSecurityGovernanceConditionK8sSpecArgs struct {
	// Infrastructure specification
	InfraSpecs GetSecurityGovernanceConditionK8sSpecInfraSpecArrayInput `pulumi:"infraSpecs"`
}

func (GetSecurityGovernanceConditionK8sSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionK8sSpecArgs) ToGetSecurityGovernanceConditionK8sSpecOutput() GetSecurityGovernanceConditionK8sSpecOutput {
	return i.ToGetSecurityGovernanceConditionK8sSpecOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionK8sSpecArgs) ToGetSecurityGovernanceConditionK8sSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionK8sSpecOutput)
}

// GetSecurityGovernanceConditionK8sSpecArrayInput is an input type that accepts GetSecurityGovernanceConditionK8sSpecArray and GetSecurityGovernanceConditionK8sSpecArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionK8sSpecArrayInput` via:
//
//	GetSecurityGovernanceConditionK8sSpecArray{ GetSecurityGovernanceConditionK8sSpecArgs{...} }
type GetSecurityGovernanceConditionK8sSpecArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionK8sSpecArrayOutput() GetSecurityGovernanceConditionK8sSpecArrayOutput
	ToGetSecurityGovernanceConditionK8sSpecArrayOutputWithContext(context.Context) GetSecurityGovernanceConditionK8sSpecArrayOutput
}

type GetSecurityGovernanceConditionK8sSpecArray []GetSecurityGovernanceConditionK8sSpecInput

func (GetSecurityGovernanceConditionK8sSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionK8sSpecArray) ToGetSecurityGovernanceConditionK8sSpecArrayOutput() GetSecurityGovernanceConditionK8sSpecArrayOutput {
	return i.ToGetSecurityGovernanceConditionK8sSpecArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionK8sSpecArray) ToGetSecurityGovernanceConditionK8sSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionK8sSpecArrayOutput)
}

type GetSecurityGovernanceConditionK8sSpecOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionK8sSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionK8sSpecOutput) ToGetSecurityGovernanceConditionK8sSpecOutput() GetSecurityGovernanceConditionK8sSpecOutput {
	return o
}

func (o GetSecurityGovernanceConditionK8sSpecOutput) ToGetSecurityGovernanceConditionK8sSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecOutput {
	return o
}

// Infrastructure specification
func (o GetSecurityGovernanceConditionK8sSpecOutput) InfraSpecs() GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionK8sSpec) []GetSecurityGovernanceConditionK8sSpecInfraSpec {
		return v.InfraSpecs
	}).(GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput)
}

type GetSecurityGovernanceConditionK8sSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionK8sSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionK8sSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionK8sSpecArrayOutput) ToGetSecurityGovernanceConditionK8sSpecArrayOutput() GetSecurityGovernanceConditionK8sSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionK8sSpecArrayOutput) ToGetSecurityGovernanceConditionK8sSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionK8sSpecArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceConditionK8sSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceConditionK8sSpec {
		return vs[0].([]GetSecurityGovernanceConditionK8sSpec)[vs[1].(int)]
	}).(GetSecurityGovernanceConditionK8sSpecOutput)
}

type GetSecurityGovernanceConditionK8sSpecInfraSpec struct {
	// List of infrastructure IDs
	InfraIds []string `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs
	Operator string `pulumi:"operator"`
}

// GetSecurityGovernanceConditionK8sSpecInfraSpecInput is an input type that accepts GetSecurityGovernanceConditionK8sSpecInfraSpecArgs and GetSecurityGovernanceConditionK8sSpecInfraSpecOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionK8sSpecInfraSpecInput` via:
//
//	GetSecurityGovernanceConditionK8sSpecInfraSpecArgs{...}
type GetSecurityGovernanceConditionK8sSpecInfraSpecInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutput() GetSecurityGovernanceConditionK8sSpecInfraSpecOutput
	ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(context.Context) GetSecurityGovernanceConditionK8sSpecInfraSpecOutput
}

type GetSecurityGovernanceConditionK8sSpecInfraSpecArgs struct {
	// List of infrastructure IDs
	InfraIds pulumi.StringArrayInput `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (GetSecurityGovernanceConditionK8sSpecInfraSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionK8sSpecInfraSpecArgs) ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutput() GetSecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return i.ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionK8sSpecInfraSpecArgs) ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionK8sSpecInfraSpecOutput)
}

// GetSecurityGovernanceConditionK8sSpecInfraSpecArrayInput is an input type that accepts GetSecurityGovernanceConditionK8sSpecInfraSpecArray and GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionK8sSpecInfraSpecArrayInput` via:
//
//	GetSecurityGovernanceConditionK8sSpecInfraSpecArray{ GetSecurityGovernanceConditionK8sSpecInfraSpecArgs{...} }
type GetSecurityGovernanceConditionK8sSpecInfraSpecArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput() GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput
	ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutputWithContext(context.Context) GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput
}

type GetSecurityGovernanceConditionK8sSpecInfraSpecArray []GetSecurityGovernanceConditionK8sSpecInfraSpecInput

func (GetSecurityGovernanceConditionK8sSpecInfraSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionK8sSpecInfraSpecArray) ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput() GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput {
	return i.ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionK8sSpecInfraSpecArray) ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput)
}

type GetSecurityGovernanceConditionK8sSpecInfraSpecOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionK8sSpecInfraSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionK8sSpecInfraSpecOutput) ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutput() GetSecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return o
}

func (o GetSecurityGovernanceConditionK8sSpecInfraSpecOutput) ToGetSecurityGovernanceConditionK8sSpecInfraSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return o
}

// List of infrastructure IDs
func (o GetSecurityGovernanceConditionK8sSpecInfraSpecOutput) InfraIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionK8sSpecInfraSpec) []string { return v.InfraIds }).(pulumi.StringArrayOutput)
}

// Operator for comparing infrastructure IDs
func (o GetSecurityGovernanceConditionK8sSpecInfraSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionK8sSpecInfraSpec) string { return v.Operator }).(pulumi.StringOutput)
}

type GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionK8sSpecInfraSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput) ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput() GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput) ToGetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceConditionK8sSpecInfraSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceConditionK8sSpecInfraSpec {
		return vs[0].([]GetSecurityGovernanceConditionK8sSpecInfraSpec)[vs[1].(int)]
	}).(GetSecurityGovernanceConditionK8sSpecInfraSpecOutput)
}

type GetSecurityGovernanceConditionMachineSpec struct {
	// Infrastructure specification
	InfraSpecs []GetSecurityGovernanceConditionMachineSpecInfraSpec `pulumi:"infraSpecs"`
}

// GetSecurityGovernanceConditionMachineSpecInput is an input type that accepts GetSecurityGovernanceConditionMachineSpecArgs and GetSecurityGovernanceConditionMachineSpecOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionMachineSpecInput` via:
//
//	GetSecurityGovernanceConditionMachineSpecArgs{...}
type GetSecurityGovernanceConditionMachineSpecInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionMachineSpecOutput() GetSecurityGovernanceConditionMachineSpecOutput
	ToGetSecurityGovernanceConditionMachineSpecOutputWithContext(context.Context) GetSecurityGovernanceConditionMachineSpecOutput
}

type GetSecurityGovernanceConditionMachineSpecArgs struct {
	// Infrastructure specification
	InfraSpecs GetSecurityGovernanceConditionMachineSpecInfraSpecArrayInput `pulumi:"infraSpecs"`
}

func (GetSecurityGovernanceConditionMachineSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionMachineSpecArgs) ToGetSecurityGovernanceConditionMachineSpecOutput() GetSecurityGovernanceConditionMachineSpecOutput {
	return i.ToGetSecurityGovernanceConditionMachineSpecOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionMachineSpecArgs) ToGetSecurityGovernanceConditionMachineSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionMachineSpecOutput)
}

// GetSecurityGovernanceConditionMachineSpecArrayInput is an input type that accepts GetSecurityGovernanceConditionMachineSpecArray and GetSecurityGovernanceConditionMachineSpecArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionMachineSpecArrayInput` via:
//
//	GetSecurityGovernanceConditionMachineSpecArray{ GetSecurityGovernanceConditionMachineSpecArgs{...} }
type GetSecurityGovernanceConditionMachineSpecArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionMachineSpecArrayOutput() GetSecurityGovernanceConditionMachineSpecArrayOutput
	ToGetSecurityGovernanceConditionMachineSpecArrayOutputWithContext(context.Context) GetSecurityGovernanceConditionMachineSpecArrayOutput
}

type GetSecurityGovernanceConditionMachineSpecArray []GetSecurityGovernanceConditionMachineSpecInput

func (GetSecurityGovernanceConditionMachineSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionMachineSpecArray) ToGetSecurityGovernanceConditionMachineSpecArrayOutput() GetSecurityGovernanceConditionMachineSpecArrayOutput {
	return i.ToGetSecurityGovernanceConditionMachineSpecArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionMachineSpecArray) ToGetSecurityGovernanceConditionMachineSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionMachineSpecArrayOutput)
}

type GetSecurityGovernanceConditionMachineSpecOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionMachineSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionMachineSpecOutput) ToGetSecurityGovernanceConditionMachineSpecOutput() GetSecurityGovernanceConditionMachineSpecOutput {
	return o
}

func (o GetSecurityGovernanceConditionMachineSpecOutput) ToGetSecurityGovernanceConditionMachineSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecOutput {
	return o
}

// Infrastructure specification
func (o GetSecurityGovernanceConditionMachineSpecOutput) InfraSpecs() GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionMachineSpec) []GetSecurityGovernanceConditionMachineSpecInfraSpec {
		return v.InfraSpecs
	}).(GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput)
}

type GetSecurityGovernanceConditionMachineSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionMachineSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionMachineSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionMachineSpecArrayOutput) ToGetSecurityGovernanceConditionMachineSpecArrayOutput() GetSecurityGovernanceConditionMachineSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionMachineSpecArrayOutput) ToGetSecurityGovernanceConditionMachineSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionMachineSpecArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceConditionMachineSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceConditionMachineSpec {
		return vs[0].([]GetSecurityGovernanceConditionMachineSpec)[vs[1].(int)]
	}).(GetSecurityGovernanceConditionMachineSpecOutput)
}

type GetSecurityGovernanceConditionMachineSpecInfraSpec struct {
	// List of infrastructure IDs
	InfraIds []string `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs
	Operator string `pulumi:"operator"`
}

// GetSecurityGovernanceConditionMachineSpecInfraSpecInput is an input type that accepts GetSecurityGovernanceConditionMachineSpecInfraSpecArgs and GetSecurityGovernanceConditionMachineSpecInfraSpecOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionMachineSpecInfraSpecInput` via:
//
//	GetSecurityGovernanceConditionMachineSpecInfraSpecArgs{...}
type GetSecurityGovernanceConditionMachineSpecInfraSpecInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutput() GetSecurityGovernanceConditionMachineSpecInfraSpecOutput
	ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(context.Context) GetSecurityGovernanceConditionMachineSpecInfraSpecOutput
}

type GetSecurityGovernanceConditionMachineSpecInfraSpecArgs struct {
	// List of infrastructure IDs
	InfraIds pulumi.StringArrayInput `pulumi:"infraIds"`
	// Operator for comparing infrastructure IDs
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (GetSecurityGovernanceConditionMachineSpecInfraSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionMachineSpecInfraSpecArgs) ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutput() GetSecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return i.ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionMachineSpecInfraSpecArgs) ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionMachineSpecInfraSpecOutput)
}

// GetSecurityGovernanceConditionMachineSpecInfraSpecArrayInput is an input type that accepts GetSecurityGovernanceConditionMachineSpecInfraSpecArray and GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceConditionMachineSpecInfraSpecArrayInput` via:
//
//	GetSecurityGovernanceConditionMachineSpecInfraSpecArray{ GetSecurityGovernanceConditionMachineSpecInfraSpecArgs{...} }
type GetSecurityGovernanceConditionMachineSpecInfraSpecArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput() GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput
	ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutputWithContext(context.Context) GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput
}

type GetSecurityGovernanceConditionMachineSpecInfraSpecArray []GetSecurityGovernanceConditionMachineSpecInfraSpecInput

func (GetSecurityGovernanceConditionMachineSpecInfraSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (i GetSecurityGovernanceConditionMachineSpecInfraSpecArray) ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput() GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput {
	return i.ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceConditionMachineSpecInfraSpecArray) ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput)
}

type GetSecurityGovernanceConditionMachineSpecInfraSpecOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionMachineSpecInfraSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionMachineSpecInfraSpecOutput) ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutput() GetSecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return o
}

func (o GetSecurityGovernanceConditionMachineSpecInfraSpecOutput) ToGetSecurityGovernanceConditionMachineSpecInfraSpecOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return o
}

// List of infrastructure IDs
func (o GetSecurityGovernanceConditionMachineSpecInfraSpecOutput) InfraIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionMachineSpecInfraSpec) []string { return v.InfraIds }).(pulumi.StringArrayOutput)
}

// Operator for comparing infrastructure IDs
func (o GetSecurityGovernanceConditionMachineSpecInfraSpecOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceConditionMachineSpecInfraSpec) string { return v.Operator }).(pulumi.StringOutput)
}

type GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceConditionMachineSpecInfraSpec)(nil)).Elem()
}

func (o GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput) ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput() GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput) ToGetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput {
	return o
}

func (o GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceConditionMachineSpecInfraSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceConditionMachineSpecInfraSpec {
		return vs[0].([]GetSecurityGovernanceConditionMachineSpecInfraSpec)[vs[1].(int)]
	}).(GetSecurityGovernanceConditionMachineSpecInfraSpecOutput)
}

type GetSecurityGovernanceRuleTimeWindow struct {
	// Duration of the time window (e.g., '30m', '2h').
	Duration string `pulumi:"duration"`
	// End time of the time window in milliseconds since epoch.
	EndTime int `pulumi:"endTime"`
	// Recurrence configuration for the time window.
	Recurrences []GetSecurityGovernanceRuleTimeWindowRecurrence `pulumi:"recurrences"`
	// Start time of the time window in milliseconds since epoch.
	StartTime int `pulumi:"startTime"`
	// Time zone for the time window.
	TimeZone string `pulumi:"timeZone"`
}

// GetSecurityGovernanceRuleTimeWindowInput is an input type that accepts GetSecurityGovernanceRuleTimeWindowArgs and GetSecurityGovernanceRuleTimeWindowOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceRuleTimeWindowInput` via:
//
//	GetSecurityGovernanceRuleTimeWindowArgs{...}
type GetSecurityGovernanceRuleTimeWindowInput interface {
	pulumi.Input

	ToGetSecurityGovernanceRuleTimeWindowOutput() GetSecurityGovernanceRuleTimeWindowOutput
	ToGetSecurityGovernanceRuleTimeWindowOutputWithContext(context.Context) GetSecurityGovernanceRuleTimeWindowOutput
}

type GetSecurityGovernanceRuleTimeWindowArgs struct {
	// Duration of the time window (e.g., '30m', '2h').
	Duration pulumi.StringInput `pulumi:"duration"`
	// End time of the time window in milliseconds since epoch.
	EndTime pulumi.IntInput `pulumi:"endTime"`
	// Recurrence configuration for the time window.
	Recurrences GetSecurityGovernanceRuleTimeWindowRecurrenceArrayInput `pulumi:"recurrences"`
	// Start time of the time window in milliseconds since epoch.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// Time zone for the time window.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetSecurityGovernanceRuleTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (i GetSecurityGovernanceRuleTimeWindowArgs) ToGetSecurityGovernanceRuleTimeWindowOutput() GetSecurityGovernanceRuleTimeWindowOutput {
	return i.ToGetSecurityGovernanceRuleTimeWindowOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceRuleTimeWindowArgs) ToGetSecurityGovernanceRuleTimeWindowOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceRuleTimeWindowOutput)
}

// GetSecurityGovernanceRuleTimeWindowArrayInput is an input type that accepts GetSecurityGovernanceRuleTimeWindowArray and GetSecurityGovernanceRuleTimeWindowArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceRuleTimeWindowArrayInput` via:
//
//	GetSecurityGovernanceRuleTimeWindowArray{ GetSecurityGovernanceRuleTimeWindowArgs{...} }
type GetSecurityGovernanceRuleTimeWindowArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceRuleTimeWindowArrayOutput() GetSecurityGovernanceRuleTimeWindowArrayOutput
	ToGetSecurityGovernanceRuleTimeWindowArrayOutputWithContext(context.Context) GetSecurityGovernanceRuleTimeWindowArrayOutput
}

type GetSecurityGovernanceRuleTimeWindowArray []GetSecurityGovernanceRuleTimeWindowInput

func (GetSecurityGovernanceRuleTimeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (i GetSecurityGovernanceRuleTimeWindowArray) ToGetSecurityGovernanceRuleTimeWindowArrayOutput() GetSecurityGovernanceRuleTimeWindowArrayOutput {
	return i.ToGetSecurityGovernanceRuleTimeWindowArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceRuleTimeWindowArray) ToGetSecurityGovernanceRuleTimeWindowArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceRuleTimeWindowArrayOutput)
}

type GetSecurityGovernanceRuleTimeWindowOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceRuleTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (o GetSecurityGovernanceRuleTimeWindowOutput) ToGetSecurityGovernanceRuleTimeWindowOutput() GetSecurityGovernanceRuleTimeWindowOutput {
	return o
}

func (o GetSecurityGovernanceRuleTimeWindowOutput) ToGetSecurityGovernanceRuleTimeWindowOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowOutput {
	return o
}

// Duration of the time window (e.g., '30m', '2h').
func (o GetSecurityGovernanceRuleTimeWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// End time of the time window in milliseconds since epoch.
func (o GetSecurityGovernanceRuleTimeWindowOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindow) int { return v.EndTime }).(pulumi.IntOutput)
}

// Recurrence configuration for the time window.
func (o GetSecurityGovernanceRuleTimeWindowOutput) Recurrences() GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindow) []GetSecurityGovernanceRuleTimeWindowRecurrence {
		return v.Recurrences
	}).(GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput)
}

// Start time of the time window in milliseconds since epoch.
func (o GetSecurityGovernanceRuleTimeWindowOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindow) int { return v.StartTime }).(pulumi.IntOutput)
}

// Time zone for the time window.
func (o GetSecurityGovernanceRuleTimeWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetSecurityGovernanceRuleTimeWindowArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceRuleTimeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceRuleTimeWindow)(nil)).Elem()
}

func (o GetSecurityGovernanceRuleTimeWindowArrayOutput) ToGetSecurityGovernanceRuleTimeWindowArrayOutput() GetSecurityGovernanceRuleTimeWindowArrayOutput {
	return o
}

func (o GetSecurityGovernanceRuleTimeWindowArrayOutput) ToGetSecurityGovernanceRuleTimeWindowArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowArrayOutput {
	return o
}

func (o GetSecurityGovernanceRuleTimeWindowArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceRuleTimeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceRuleTimeWindow {
		return vs[0].([]GetSecurityGovernanceRuleTimeWindow)[vs[1].(int)]
	}).(GetSecurityGovernanceRuleTimeWindowOutput)
}

type GetSecurityGovernanceRuleTimeWindowRecurrence struct {
	// Type of recurrence (e.g., 'Daily', 'Weekly', 'Monthly').
	Type string `pulumi:"type"`
	// Unix timestamp in milliseconds until when the recurrence should continue.
	Until int `pulumi:"until"`
	// Recurrence value (e.g., interval for daily recurrence).
	Value int `pulumi:"value"`
}

// GetSecurityGovernanceRuleTimeWindowRecurrenceInput is an input type that accepts GetSecurityGovernanceRuleTimeWindowRecurrenceArgs and GetSecurityGovernanceRuleTimeWindowRecurrenceOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceRuleTimeWindowRecurrenceInput` via:
//
//	GetSecurityGovernanceRuleTimeWindowRecurrenceArgs{...}
type GetSecurityGovernanceRuleTimeWindowRecurrenceInput interface {
	pulumi.Input

	ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutput() GetSecurityGovernanceRuleTimeWindowRecurrenceOutput
	ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(context.Context) GetSecurityGovernanceRuleTimeWindowRecurrenceOutput
}

type GetSecurityGovernanceRuleTimeWindowRecurrenceArgs struct {
	// Type of recurrence (e.g., 'Daily', 'Weekly', 'Monthly').
	Type pulumi.StringInput `pulumi:"type"`
	// Unix timestamp in milliseconds until when the recurrence should continue.
	Until pulumi.IntInput `pulumi:"until"`
	// Recurrence value (e.g., interval for daily recurrence).
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetSecurityGovernanceRuleTimeWindowRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (i GetSecurityGovernanceRuleTimeWindowRecurrenceArgs) ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutput() GetSecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return i.ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceRuleTimeWindowRecurrenceArgs) ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceRuleTimeWindowRecurrenceOutput)
}

// GetSecurityGovernanceRuleTimeWindowRecurrenceArrayInput is an input type that accepts GetSecurityGovernanceRuleTimeWindowRecurrenceArray and GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetSecurityGovernanceRuleTimeWindowRecurrenceArrayInput` via:
//
//	GetSecurityGovernanceRuleTimeWindowRecurrenceArray{ GetSecurityGovernanceRuleTimeWindowRecurrenceArgs{...} }
type GetSecurityGovernanceRuleTimeWindowRecurrenceArrayInput interface {
	pulumi.Input

	ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput() GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput
	ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutputWithContext(context.Context) GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput
}

type GetSecurityGovernanceRuleTimeWindowRecurrenceArray []GetSecurityGovernanceRuleTimeWindowRecurrenceInput

func (GetSecurityGovernanceRuleTimeWindowRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (i GetSecurityGovernanceRuleTimeWindowRecurrenceArray) ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput() GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput {
	return i.ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetSecurityGovernanceRuleTimeWindowRecurrenceArray) ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput)
}

type GetSecurityGovernanceRuleTimeWindowRecurrenceOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceRuleTimeWindowRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (o GetSecurityGovernanceRuleTimeWindowRecurrenceOutput) ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutput() GetSecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return o
}

func (o GetSecurityGovernanceRuleTimeWindowRecurrenceOutput) ToGetSecurityGovernanceRuleTimeWindowRecurrenceOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return o
}

// Type of recurrence (e.g., 'Daily', 'Weekly', 'Monthly').
func (o GetSecurityGovernanceRuleTimeWindowRecurrenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindowRecurrence) string { return v.Type }).(pulumi.StringOutput)
}

// Unix timestamp in milliseconds until when the recurrence should continue.
func (o GetSecurityGovernanceRuleTimeWindowRecurrenceOutput) Until() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindowRecurrence) int { return v.Until }).(pulumi.IntOutput)
}

// Recurrence value (e.g., interval for daily recurrence).
func (o GetSecurityGovernanceRuleTimeWindowRecurrenceOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGovernanceRuleTimeWindowRecurrence) int { return v.Value }).(pulumi.IntOutput)
}

type GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGovernanceRuleTimeWindowRecurrence)(nil)).Elem()
}

func (o GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput) ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput() GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput {
	return o
}

func (o GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput) ToGetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutputWithContext(ctx context.Context) GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput {
	return o
}

func (o GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput) Index(i pulumi.IntInput) GetSecurityGovernanceRuleTimeWindowRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGovernanceRuleTimeWindowRecurrence {
		return vs[0].([]GetSecurityGovernanceRuleTimeWindowRecurrence)[vs[1].(int)]
	}).(GetSecurityGovernanceRuleTimeWindowRecurrenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRegistryCustomImageInput)(nil)).Elem(), ImageRegistryCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRegistryCustomImageArrayInput)(nil)).Elem(), ImageRegistryCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2EnvInput)(nil)).Elem(), InfrastructureV2EnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2EnvArrayInput)(nil)).Elem(), InfrastructureV2EnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2IdentifierInput)(nil)).Elem(), InfrastructureV2IdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2IdentifierArrayInput)(nil)).Elem(), InfrastructureV2IdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ImageRegistryInput)(nil)).Elem(), InfrastructureV2ImageRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ImageRegistryArrayInput)(nil)).Elem(), InfrastructureV2ImageRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ImageRegistryCustomImageInput)(nil)).Elem(), InfrastructureV2ImageRegistryCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ImageRegistryCustomImageArrayInput)(nil)).Elem(), InfrastructureV2ImageRegistryCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ImageRegistryIdentifierInput)(nil)).Elem(), InfrastructureV2ImageRegistryIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ImageRegistryIdentifierArrayInput)(nil)).Elem(), InfrastructureV2ImageRegistryIdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2MtlsInput)(nil)).Elem(), InfrastructureV2MtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2MtlsPtrInput)(nil)).Elem(), InfrastructureV2MtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ProxyInput)(nil)).Elem(), InfrastructureV2ProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2ProxyPtrInput)(nil)).Elem(), InfrastructureV2ProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2TolerationInput)(nil)).Elem(), InfrastructureV2TolerationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2TolerationArrayInput)(nil)).Elem(), InfrastructureV2TolerationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2VolumeInput)(nil)).Elem(), InfrastructureV2VolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2VolumeArrayInput)(nil)).Elem(), InfrastructureV2VolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2VolumeMountInput)(nil)).Elem(), InfrastructureV2VolumeMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureV2VolumeMountArrayInput)(nil)).Elem(), InfrastructureV2VolumeMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionFaultSpecInput)(nil)).Elem(), SecurityGovernanceConditionFaultSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionFaultSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionFaultSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionFaultSpecFaultInput)(nil)).Elem(), SecurityGovernanceConditionFaultSpecFaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionFaultSpecFaultArrayInput)(nil)).Elem(), SecurityGovernanceConditionFaultSpecFaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpecInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecInfraSpecInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecInfraSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionK8sSpecInfraSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionK8sSpecInfraSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionMachineSpecInput)(nil)).Elem(), SecurityGovernanceConditionMachineSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionMachineSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionMachineSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionMachineSpecInfraSpecInput)(nil)).Elem(), SecurityGovernanceConditionMachineSpecInfraSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceConditionMachineSpecInfraSpecPtrInput)(nil)).Elem(), SecurityGovernanceConditionMachineSpecInfraSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceRuleTimeWindowInput)(nil)).Elem(), SecurityGovernanceRuleTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceRuleTimeWindowArrayInput)(nil)).Elem(), SecurityGovernanceRuleTimeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceRuleTimeWindowRecurrenceInput)(nil)).Elem(), SecurityGovernanceRuleTimeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGovernanceRuleTimeWindowRecurrencePtrInput)(nil)).Elem(), SecurityGovernanceRuleTimeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRegistryCustomImageInput)(nil)).Elem(), GetImageRegistryCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRegistryCustomImageArrayInput)(nil)).Elem(), GetImageRegistryCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ImageRegistryInput)(nil)).Elem(), GetInfrastructureV2ImageRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ImageRegistryArrayInput)(nil)).Elem(), GetInfrastructureV2ImageRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ImageRegistryCustomImageInput)(nil)).Elem(), GetInfrastructureV2ImageRegistryCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ImageRegistryCustomImageArrayInput)(nil)).Elem(), GetInfrastructureV2ImageRegistryCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ImageRegistryIdentifierInput)(nil)).Elem(), GetInfrastructureV2ImageRegistryIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ImageRegistryIdentifierArrayInput)(nil)).Elem(), GetInfrastructureV2ImageRegistryIdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2MtlsInput)(nil)).Elem(), GetInfrastructureV2MtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2MtlsPtrInput)(nil)).Elem(), GetInfrastructureV2MtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ProxyInput)(nil)).Elem(), GetInfrastructureV2ProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2ProxyPtrInput)(nil)).Elem(), GetInfrastructureV2ProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2TolerationInput)(nil)).Elem(), GetInfrastructureV2TolerationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2TolerationArrayInput)(nil)).Elem(), GetInfrastructureV2TolerationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2VolumeInput)(nil)).Elem(), GetInfrastructureV2VolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2VolumeArrayInput)(nil)).Elem(), GetInfrastructureV2VolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2VolumeMountInput)(nil)).Elem(), GetInfrastructureV2VolumeMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureV2VolumeMountArrayInput)(nil)).Elem(), GetInfrastructureV2VolumeMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpecInput)(nil)).Elem(), GetSecurityGovernanceConditionFaultSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpecArrayInput)(nil)).Elem(), GetSecurityGovernanceConditionFaultSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpecFaultInput)(nil)).Elem(), GetSecurityGovernanceConditionFaultSpecFaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionFaultSpecFaultArrayInput)(nil)).Elem(), GetSecurityGovernanceConditionFaultSpecFaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpecInput)(nil)).Elem(), GetSecurityGovernanceConditionK8sSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpecArrayInput)(nil)).Elem(), GetSecurityGovernanceConditionK8sSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpecInfraSpecInput)(nil)).Elem(), GetSecurityGovernanceConditionK8sSpecInfraSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionK8sSpecInfraSpecArrayInput)(nil)).Elem(), GetSecurityGovernanceConditionK8sSpecInfraSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpecInput)(nil)).Elem(), GetSecurityGovernanceConditionMachineSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpecArrayInput)(nil)).Elem(), GetSecurityGovernanceConditionMachineSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpecInfraSpecInput)(nil)).Elem(), GetSecurityGovernanceConditionMachineSpecInfraSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceConditionMachineSpecInfraSpecArrayInput)(nil)).Elem(), GetSecurityGovernanceConditionMachineSpecInfraSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindowInput)(nil)).Elem(), GetSecurityGovernanceRuleTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindowArrayInput)(nil)).Elem(), GetSecurityGovernanceRuleTimeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindowRecurrenceInput)(nil)).Elem(), GetSecurityGovernanceRuleTimeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGovernanceRuleTimeWindowRecurrenceArrayInput)(nil)).Elem(), GetSecurityGovernanceRuleTimeWindowRecurrenceArray{})
	pulumi.RegisterOutputType(ImageRegistryCustomImageOutput{})
	pulumi.RegisterOutputType(ImageRegistryCustomImageArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2EnvOutput{})
	pulumi.RegisterOutputType(InfrastructureV2EnvArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2IdentifierOutput{})
	pulumi.RegisterOutputType(InfrastructureV2IdentifierArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ImageRegistryOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ImageRegistryArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ImageRegistryCustomImageOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ImageRegistryCustomImageArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ImageRegistryIdentifierOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ImageRegistryIdentifierArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2MtlsOutput{})
	pulumi.RegisterOutputType(InfrastructureV2MtlsPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ProxyOutput{})
	pulumi.RegisterOutputType(InfrastructureV2ProxyPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureV2TolerationOutput{})
	pulumi.RegisterOutputType(InfrastructureV2TolerationArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2VolumeOutput{})
	pulumi.RegisterOutputType(InfrastructureV2VolumeArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureV2VolumeMountOutput{})
	pulumi.RegisterOutputType(InfrastructureV2VolumeMountArrayOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionFaultSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionFaultSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionFaultSpecFaultOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionFaultSpecFaultArrayOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecApplicationSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecApplicationSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArrayOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecInfraSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionK8sSpecInfraSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionMachineSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionMachineSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionMachineSpecInfraSpecOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceConditionMachineSpecInfraSpecPtrOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceRuleTimeWindowOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceRuleTimeWindowArrayOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceRuleTimeWindowRecurrenceOutput{})
	pulumi.RegisterOutputType(SecurityGovernanceRuleTimeWindowRecurrencePtrOutput{})
	pulumi.RegisterOutputType(GetImageRegistryCustomImageOutput{})
	pulumi.RegisterOutputType(GetImageRegistryCustomImageArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ImageRegistryOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ImageRegistryArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ImageRegistryCustomImageOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ImageRegistryCustomImageArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ImageRegistryIdentifierOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ImageRegistryIdentifierArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2MtlsOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2MtlsPtrOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ProxyOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2ProxyPtrOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2TolerationOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2TolerationArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2VolumeOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2VolumeArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2VolumeMountOutput{})
	pulumi.RegisterOutputType(GetInfrastructureV2VolumeMountArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionFaultSpecOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionFaultSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionFaultSpecFaultOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionFaultSpecFaultArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionK8sSpecOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionK8sSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionK8sSpecInfraSpecOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionK8sSpecInfraSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionMachineSpecOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionMachineSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionMachineSpecInfraSpecOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceConditionMachineSpecInfraSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceRuleTimeWindowOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceRuleTimeWindowArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceRuleTimeWindowRecurrenceOutput{})
	pulumi.RegisterOutputType(GetSecurityGovernanceRuleTimeWindowRecurrenceArrayOutput{})
}
