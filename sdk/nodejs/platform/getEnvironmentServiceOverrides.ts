// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for Harness environment service overrides.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const test = harness.platform.getEnvironmentServiceOverrides({
 *     orgId: "orgIdentifier",
 *     projectId: "projectIdentifier",
 *     envId: "environmentIdentifier",
 *     serviceId: "serviceIdentifier",
 * });
 * ```
 */
export function getEnvironmentServiceOverrides(args: GetEnvironmentServiceOverridesArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentServiceOverridesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getEnvironmentServiceOverrides:getEnvironmentServiceOverrides", {
        "envId": args.envId,
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "serviceId": args.serviceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironmentServiceOverrides.
 */
export interface GetEnvironmentServiceOverridesArgs {
    /**
     * The env Id associated with the overrides. To reference an environment at the organization scope, prefix 'org' to the expression: org.{env*id}. To reference an environment at the account scope, prefix 'account' to the expression: account.{env*id}).
     */
    envId: string;
    /**
     * identifier of the service overrides.
     */
    identifier?: string;
    /**
     * Unique identifier of the organization.
     */
    orgId?: string;
    /**
     * Unique identifier of the project.
     */
    projectId?: string;
    /**
     * The service Id associated with the overrides. To reference a service at the organization scope, prefix 'org' to the expression: org.{service*id}. To reference a service at the account scope, prefix 'account' to the expression: account.{service*id}).
     */
    serviceId?: string;
}

/**
 * A collection of values returned by getEnvironmentServiceOverrides.
 */
export interface GetEnvironmentServiceOverridesResult {
    /**
     * The env Id associated with the overrides. To reference an environment at the organization scope, prefix 'org' to the expression: org.{env*id}. To reference an environment at the account scope, prefix 'account' to the expression: account.{env*id}).
     */
    readonly envId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * identifier of the service overrides.
     */
    readonly identifier: string;
    /**
     * Unique identifier of the organization.
     */
    readonly orgId?: string;
    /**
     * Unique identifier of the project.
     */
    readonly projectId?: string;
    /**
     * The service Id associated with the overrides. To reference a service at the organization scope, prefix 'org' to the expression: org.{service*id}. To reference a service at the account scope, prefix 'account' to the expression: account.{service*id}).
     */
    readonly serviceId?: string;
    /**
     * Environment Service Overrides YAML
     */
    readonly yaml: string;
}
/**
 * Data source for Harness environment service overrides.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const test = harness.platform.getEnvironmentServiceOverrides({
 *     orgId: "orgIdentifier",
 *     projectId: "projectIdentifier",
 *     envId: "environmentIdentifier",
 *     serviceId: "serviceIdentifier",
 * });
 * ```
 */
export function getEnvironmentServiceOverridesOutput(args: GetEnvironmentServiceOverridesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEnvironmentServiceOverridesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getEnvironmentServiceOverrides:getEnvironmentServiceOverrides", {
        "envId": args.envId,
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "serviceId": args.serviceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironmentServiceOverrides.
 */
export interface GetEnvironmentServiceOverridesOutputArgs {
    /**
     * The env Id associated with the overrides. To reference an environment at the organization scope, prefix 'org' to the expression: org.{env*id}. To reference an environment at the account scope, prefix 'account' to the expression: account.{env*id}).
     */
    envId: pulumi.Input<string>;
    /**
     * identifier of the service overrides.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The service Id associated with the overrides. To reference a service at the organization scope, prefix 'org' to the expression: org.{service*id}. To reference a service at the account scope, prefix 'account' to the expression: account.{service*id}).
     */
    serviceId?: pulumi.Input<string>;
}
