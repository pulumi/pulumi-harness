// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Resource for creating an AWS Secret Manager connector.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Import account level aws secret manager connector
 *
 * ```sh
 * $ pulumi import harness:platform/awsSecretManagerConnector:AwsSecretManagerConnector example <connector_id>
 * ```
 *
 * Import org level aws secret manager connector
 *
 * ```sh
 * $ pulumi import harness:platform/awsSecretManagerConnector:AwsSecretManagerConnector example <ord_id>/<connector_id>
 * ```
 *
 * Import project level aws secret manager connector
 *
 * ```sh
 * $ pulumi import harness:platform/awsSecretManagerConnector:AwsSecretManagerConnector example <org_id>/<project_id>/<connector_id>
 * ```
 */
export class AwsSecretManagerConnector extends pulumi.CustomResource {
    /**
     * Get an existing AwsSecretManagerConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsSecretManagerConnectorState, opts?: pulumi.CustomResourceOptions): AwsSecretManagerConnector {
        return new AwsSecretManagerConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/awsSecretManagerConnector:AwsSecretManagerConnector';

    /**
     * Returns true if the given object is an instance of AwsSecretManagerConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsSecretManagerConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsSecretManagerConnector.__pulumiType;
    }

    /**
     * Credentials to connect to AWS.
     */
    declare public readonly credentials: pulumi.Output<outputs.platform.AwsSecretManagerConnectorCredentials>;
    /**
     * Use as Default Secrets Manager.
     */
    declare public readonly default: pulumi.Output<boolean | undefined>;
    /**
     * Tags to filter delegates for connection.
     */
    declare public readonly delegateSelectors: pulumi.Output<string[] | undefined>;
    /**
     * Description of the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Run the operation on the delegate or harness platform.
     */
    declare public readonly executeOnDelegate: pulumi.Output<boolean | undefined>;
    /**
     * Whether to force delete secret value or not.
     */
    declare public readonly forceDeleteWithoutRecovery: pulumi.Output<boolean | undefined>;
    /**
     * Unique identifier of the resource.
     */
    declare public readonly identifier: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Unique identifier of the organization.
     */
    declare public readonly orgId: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the project.
     */
    declare public readonly projectId: pulumi.Output<string | undefined>;
    /**
     * Recovery duration in days in AWS Secrets Manager.
     */
    declare public readonly recoveryWindowInDays: pulumi.Output<number | undefined>;
    /**
     * The AWS region where the AWS Secret Manager is.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * A prefix to be added to all secrets.
     */
    declare public readonly secretNamePrefix: pulumi.Output<string | undefined>;
    /**
     * Tags to associate with the resource.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * Whether to update secret value using putSecretValue action.
     */
    declare public readonly usePutSecret: pulumi.Output<boolean | undefined>;

    /**
     * Create a AwsSecretManagerConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsSecretManagerConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsSecretManagerConnectorArgs | AwsSecretManagerConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsSecretManagerConnectorState | undefined;
            resourceInputs["credentials"] = state?.credentials;
            resourceInputs["default"] = state?.default;
            resourceInputs["delegateSelectors"] = state?.delegateSelectors;
            resourceInputs["description"] = state?.description;
            resourceInputs["executeOnDelegate"] = state?.executeOnDelegate;
            resourceInputs["forceDeleteWithoutRecovery"] = state?.forceDeleteWithoutRecovery;
            resourceInputs["identifier"] = state?.identifier;
            resourceInputs["name"] = state?.name;
            resourceInputs["orgId"] = state?.orgId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["recoveryWindowInDays"] = state?.recoveryWindowInDays;
            resourceInputs["region"] = state?.region;
            resourceInputs["secretNamePrefix"] = state?.secretNamePrefix;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["usePutSecret"] = state?.usePutSecret;
        } else {
            const args = argsOrState as AwsSecretManagerConnectorArgs | undefined;
            if (args?.credentials === undefined && !opts.urn) {
                throw new Error("Missing required property 'credentials'");
            }
            if (args?.identifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["credentials"] = args?.credentials;
            resourceInputs["default"] = args?.default;
            resourceInputs["delegateSelectors"] = args?.delegateSelectors;
            resourceInputs["description"] = args?.description;
            resourceInputs["executeOnDelegate"] = args?.executeOnDelegate;
            resourceInputs["forceDeleteWithoutRecovery"] = args?.forceDeleteWithoutRecovery;
            resourceInputs["identifier"] = args?.identifier;
            resourceInputs["name"] = args?.name;
            resourceInputs["orgId"] = args?.orgId;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["recoveryWindowInDays"] = args?.recoveryWindowInDays;
            resourceInputs["region"] = args?.region;
            resourceInputs["secretNamePrefix"] = args?.secretNamePrefix;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["usePutSecret"] = args?.usePutSecret;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsSecretManagerConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsSecretManagerConnector resources.
 */
export interface AwsSecretManagerConnectorState {
    /**
     * Credentials to connect to AWS.
     */
    credentials?: pulumi.Input<inputs.platform.AwsSecretManagerConnectorCredentials>;
    /**
     * Use as Default Secrets Manager.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Tags to filter delegates for connection.
     */
    delegateSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Run the operation on the delegate or harness platform.
     */
    executeOnDelegate?: pulumi.Input<boolean>;
    /**
     * Whether to force delete secret value or not.
     */
    forceDeleteWithoutRecovery?: pulumi.Input<boolean>;
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Recovery duration in days in AWS Secrets Manager.
     */
    recoveryWindowInDays?: pulumi.Input<number>;
    /**
     * The AWS region where the AWS Secret Manager is.
     */
    region?: pulumi.Input<string>;
    /**
     * A prefix to be added to all secrets.
     */
    secretNamePrefix?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to update secret value using putSecretValue action.
     */
    usePutSecret?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AwsSecretManagerConnector resource.
 */
export interface AwsSecretManagerConnectorArgs {
    /**
     * Credentials to connect to AWS.
     */
    credentials: pulumi.Input<inputs.platform.AwsSecretManagerConnectorCredentials>;
    /**
     * Use as Default Secrets Manager.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Tags to filter delegates for connection.
     */
    delegateSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Run the operation on the delegate or harness platform.
     */
    executeOnDelegate?: pulumi.Input<boolean>;
    /**
     * Whether to force delete secret value or not.
     */
    forceDeleteWithoutRecovery?: pulumi.Input<boolean>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Recovery duration in days in AWS Secrets Manager.
     */
    recoveryWindowInDays?: pulumi.Input<number>;
    /**
     * The AWS region where the AWS Secret Manager is.
     */
    region: pulumi.Input<string>;
    /**
     * A prefix to be added to all secrets.
     */
    secretNamePrefix?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to update secret value using putSecretValue action.
     */
    usePutSecret?: pulumi.Input<boolean>;
}
