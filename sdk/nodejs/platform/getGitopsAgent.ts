// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Datasource for fetching a Harness GitOps Agent.
 */
export function getGitopsAgent(args: GetGitopsAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetGitopsAgentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getGitopsAgent:getGitopsAgent", {
        "accountId": args.accountId,
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "withCredentials": args.withCredentials,
    }, opts);
}

/**
 * A collection of arguments for invoking getGitopsAgent.
 */
export interface GetGitopsAgentArgs {
    /**
     * Account identifier of the GitOps agent.
     *
     * @deprecated This field is deprecated and will be removed in a future release.
     */
    accountId?: string;
    /**
     * Identifier of the GitOps agent.
     */
    identifier: string;
    /**
     * Organization identifier of the GitOps agent.
     */
    orgId?: string;
    /**
     * Project identifier of the GitOps agent.
     */
    projectId?: string;
    /**
     * Specify whether to retrieve the gitops agent's token. (The field agentToken will be populated only if the agent has never connected to Harness before). For retrieval of this information, the user associated to the token being used must have Gitops Agent Edit permissions
     */
    withCredentials?: boolean;
}

/**
 * A collection of values returned by getGitopsAgent.
 */
export interface GetGitopsAgentResult {
    /**
     * Account identifier of the GitOps agent.
     *
     * @deprecated This field is deprecated and will be removed in a future release.
     */
    readonly accountId: string;
    /**
     * Agent token to be used for authentication of the agent with Harness.
     */
    readonly agentToken: string;
    /**
     * Description of the GitOps agent.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifier of the GitOps agent.
     */
    readonly identifier: string;
    /**
     * This computed field specifies if the referenced agent ever successfully connected and was authenticated to harness. Note that this is different from whether the agent is currently connected. \n\nSet withCredentials to true to allow computing of this field.\n\n For retrieval of this information, the user associated to the token being used must have Gitops Agent Edit permissions
     */
    readonly isAuthenticated: boolean;
    /**
     * Metadata of the agent.
     */
    readonly metadatas: outputs.platform.GetGitopsAgentMetadata[];
    /**
     * Name of the GitOps agent.
     */
    readonly name: string;
    /**
     * The Operator to use for the Harness GitOps agent. Enum: "ARGO" "FLAMINGO"
     */
    readonly operator: string;
    /**
     * Organization identifier of the GitOps agent.
     */
    readonly orgId?: string;
    /**
     * Prefixed identifier of the GitOps agent. Agent identifier prefixed with scope of the agent
     */
    readonly prefixedIdentifier: string;
    /**
     * Project identifier of the GitOps agent.
     */
    readonly projectId?: string;
    /**
     * Tags for the GitOps agents. These can be used to search or filter the GitOps agents.
     */
    readonly tags: {[key: string]: string};
    /**
     * Default: "AGENT*TYPE*UNSET"
     * Enum: "AGENT*TYPE*UNSET" "CONNECTED*ARGO*PROVIDER" "MANAGED*ARGO*PROVIDER"
     */
    readonly type: string;
    /**
     * Specify whether to retrieve the gitops agent's token. (The field agentToken will be populated only if the agent has never connected to Harness before). For retrieval of this information, the user associated to the token being used must have Gitops Agent Edit permissions
     */
    readonly withCredentials?: boolean;
}
/**
 * Datasource for fetching a Harness GitOps Agent.
 */
export function getGitopsAgentOutput(args: GetGitopsAgentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGitopsAgentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getGitopsAgent:getGitopsAgent", {
        "accountId": args.accountId,
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "withCredentials": args.withCredentials,
    }, opts);
}

/**
 * A collection of arguments for invoking getGitopsAgent.
 */
export interface GetGitopsAgentOutputArgs {
    /**
     * Account identifier of the GitOps agent.
     *
     * @deprecated This field is deprecated and will be removed in a future release.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Identifier of the GitOps agent.
     */
    identifier: pulumi.Input<string>;
    /**
     * Organization identifier of the GitOps agent.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Project identifier of the GitOps agent.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Specify whether to retrieve the gitops agent's token. (The field agentToken will be populated only if the agent has never connected to Harness before). For retrieval of this information, the user associated to the token being used must have Gitops Agent Edit permissions
     */
    withCredentials?: pulumi.Input<boolean>;
}
