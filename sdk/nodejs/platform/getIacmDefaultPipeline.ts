// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for retrieving IACM default pipelines.
 */
export function getIacmDefaultPipeline(args: GetIacmDefaultPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetIacmDefaultPipelineResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getIacmDefaultPipeline:getIacmDefaultPipeline", {
        "operation": args.operation,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "provisionerType": args.provisionerType,
    }, opts);
}

/**
 * A collection of arguments for invoking getIacmDefaultPipeline.
 */
export interface GetIacmDefaultPipelineArgs {
    /**
     * The operation associated with this default.
     */
    operation: string;
    /**
     * Organization identifier of the organization the default pipelines resides in.
     */
    orgId: string;
    /**
     * Project identifier of the project the default pipelines resides in.
     */
    projectId: string;
    /**
     * The provisioner associated with this default.
     */
    provisionerType: string;
}

/**
 * A collection of values returned by getIacmDefaultPipeline.
 */
export interface GetIacmDefaultPipelineResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The operation associated with this default.
     */
    readonly operation: string;
    /**
     * Organization identifier of the organization the default pipelines resides in.
     */
    readonly orgId: string;
    /**
     * The pipeline associated with this default.
     */
    readonly pipeline: string;
    /**
     * Project identifier of the project the default pipelines resides in.
     */
    readonly projectId: string;
    /**
     * The provisioner associated with this default.
     */
    readonly provisionerType: string;
}
/**
 * Data source for retrieving IACM default pipelines.
 */
export function getIacmDefaultPipelineOutput(args: GetIacmDefaultPipelineOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIacmDefaultPipelineResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getIacmDefaultPipeline:getIacmDefaultPipeline", {
        "operation": args.operation,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "provisionerType": args.provisionerType,
    }, opts);
}

/**
 * A collection of arguments for invoking getIacmDefaultPipeline.
 */
export interface GetIacmDefaultPipelineOutputArgs {
    /**
     * The operation associated with this default.
     */
    operation: pulumi.Input<string>;
    /**
     * Organization identifier of the organization the default pipelines resides in.
     */
    orgId: pulumi.Input<string>;
    /**
     * Project identifier of the project the default pipelines resides in.
     */
    projectId: pulumi.Input<string>;
    /**
     * The provisioner associated with this default.
     */
    provisionerType: pulumi.Input<string>;
}
