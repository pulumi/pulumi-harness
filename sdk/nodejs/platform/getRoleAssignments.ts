// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = harness.platform.getRoleAssignments({
 *     identifier: "identifier",
 *     orgId: "org_id",
 *     projectId: "project_id",
 * });
 * ```
 */
export function getRoleAssignments(args: GetRoleAssignmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleAssignmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getRoleAssignments:getRoleAssignments", {
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoleAssignments.
 */
export interface GetRoleAssignmentsArgs {
    /**
     * Identifier for role assignment.
     */
    identifier: string;
    /**
     * Org identifier.
     */
    orgId?: string;
    /**
     * Project Identifier
     */
    projectId?: string;
}

/**
 * A collection of values returned by getRoleAssignments.
 */
export interface GetRoleAssignmentsResult {
    /**
     * The `disabled` attribute in the role assignment resource controls the status of the role assignment. Setting `disabled` to `false` activates the role and its permissions, enabling the assigned entity to perform allowed actions. Conversely, setting `disabled` to `true` deactivates the role, revoking the entity's permissions and action capabilities. Default value should be `false`.
     */
    readonly disabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifier for role assignment.
     */
    readonly identifier: string;
    /**
     * Specifies whether the role assignment is managed by Harness. Setting managed to `true` means that Harness will manage the lifecycle of the role assignment, including its creation, updates, and deletion. Conversely, setting it to `false` indicates that the role assignment is not managed by Harness, and thus Harness will not perform actions on it. Default value should be `false`.
     */
    readonly managed: boolean;
    /**
     * Org identifier.
     */
    readonly orgId?: string;
    /**
     * Principal.
     */
    readonly principals: outputs.platform.GetRoleAssignmentsPrincipal[];
    /**
     * Project Identifier
     */
    readonly projectId?: string;
    /**
     * Resource group identifier.
     */
    readonly resourceGroupIdentifier: string;
    /**
     * Role identifier.
     */
    readonly roleIdentifier: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = harness.platform.getRoleAssignments({
 *     identifier: "identifier",
 *     orgId: "org_id",
 *     projectId: "project_id",
 * });
 * ```
 */
export function getRoleAssignmentsOutput(args: GetRoleAssignmentsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoleAssignmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getRoleAssignments:getRoleAssignments", {
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoleAssignments.
 */
export interface GetRoleAssignmentsOutputArgs {
    /**
     * Identifier for role assignment.
     */
    identifier: pulumi.Input<string>;
    /**
     * Org identifier.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Project Identifier
     */
    projectId?: pulumi.Input<string>;
}
