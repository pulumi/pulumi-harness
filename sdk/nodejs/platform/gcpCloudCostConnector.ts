// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Resource for creating a GCP Cloud Cost connector in Harness.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const test = new harness.platform.GcpCloudCostConnector("test", {
 *     identifier: "identifier",
 *     name: "name",
 *     description: "test",
 *     tags: ["foo:bar"],
 *     featuresEnableds: [
 *         "BILLING",
 *         "VISIBILITY",
 *         "OPTIMIZATION",
 *         "GOVERNANCE",
 *     ],
 *     gcpProjectId: "gcp_project_id",
 *     serviceAccountEmail: "service_account_email",
 *     billingExportSpec: {
 *         dataSetId: "data_set_id",
 *         tableId: "table_id",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Import account level gcp cloud cost connector
 *
 * ```sh
 * $ pulumi import harness:platform/gcpCloudCostConnector:GcpCloudCostConnector example <connector_id>
 * ```
 *
 * Import org level gcp cloud cost connector
 *
 * ```sh
 * $ pulumi import harness:platform/gcpCloudCostConnector:GcpCloudCostConnector example <ord_id>/<connector_id>
 * ```
 *
 * Import project level gcp cloud cost connector
 *
 * ```sh
 * $ pulumi import harness:platform/gcpCloudCostConnector:GcpCloudCostConnector example <org_id>/<project_id>/<connector_id>
 * ```
 */
export class GcpCloudCostConnector extends pulumi.CustomResource {
    /**
     * Get an existing GcpCloudCostConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpCloudCostConnectorState, opts?: pulumi.CustomResourceOptions): GcpCloudCostConnector {
        return new GcpCloudCostConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/gcpCloudCostConnector:GcpCloudCostConnector';

    /**
     * Returns true if the given object is an instance of GcpCloudCostConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpCloudCostConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpCloudCostConnector.__pulumiType;
    }

    /**
     * Returns billing details.
     */
    declare public readonly billingExportSpec: pulumi.Output<outputs.platform.GcpCloudCostConnectorBillingExportSpec | undefined>;
    /**
     * Description of the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Indicates which features to enable among Billing, Optimization, Visibility and Governance.
     */
    declare public readonly featuresEnableds: pulumi.Output<string[]>;
    /**
     * GCP Project Id.
     */
    declare public readonly gcpProjectId: pulumi.Output<string>;
    /**
     * Unique identifier of the resource.
     */
    declare public readonly identifier: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Unique identifier of the organization.
     */
    declare public readonly orgId: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the project.
     */
    declare public readonly projectId: pulumi.Output<string | undefined>;
    /**
     * Email corresponding to the Service Account.
     */
    declare public readonly serviceAccountEmail: pulumi.Output<string>;
    /**
     * Tags to associate with the resource.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;

    /**
     * Create a GcpCloudCostConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpCloudCostConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpCloudCostConnectorArgs | GcpCloudCostConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpCloudCostConnectorState | undefined;
            resourceInputs["billingExportSpec"] = state?.billingExportSpec;
            resourceInputs["description"] = state?.description;
            resourceInputs["featuresEnableds"] = state?.featuresEnableds;
            resourceInputs["gcpProjectId"] = state?.gcpProjectId;
            resourceInputs["identifier"] = state?.identifier;
            resourceInputs["name"] = state?.name;
            resourceInputs["orgId"] = state?.orgId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["serviceAccountEmail"] = state?.serviceAccountEmail;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as GcpCloudCostConnectorArgs | undefined;
            if (args?.featuresEnableds === undefined && !opts.urn) {
                throw new Error("Missing required property 'featuresEnableds'");
            }
            if (args?.gcpProjectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'gcpProjectId'");
            }
            if (args?.identifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if (args?.serviceAccountEmail === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountEmail'");
            }
            resourceInputs["billingExportSpec"] = args?.billingExportSpec;
            resourceInputs["description"] = args?.description;
            resourceInputs["featuresEnableds"] = args?.featuresEnableds;
            resourceInputs["gcpProjectId"] = args?.gcpProjectId;
            resourceInputs["identifier"] = args?.identifier;
            resourceInputs["name"] = args?.name;
            resourceInputs["orgId"] = args?.orgId;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["serviceAccountEmail"] = args?.serviceAccountEmail;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpCloudCostConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpCloudCostConnector resources.
 */
export interface GcpCloudCostConnectorState {
    /**
     * Returns billing details.
     */
    billingExportSpec?: pulumi.Input<inputs.platform.GcpCloudCostConnectorBillingExportSpec>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates which features to enable among Billing, Optimization, Visibility and Governance.
     */
    featuresEnableds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * GCP Project Id.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Email corresponding to the Service Account.
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a GcpCloudCostConnector resource.
 */
export interface GcpCloudCostConnectorArgs {
    /**
     * Returns billing details.
     */
    billingExportSpec?: pulumi.Input<inputs.platform.GcpCloudCostConnectorBillingExportSpec>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates which features to enable among Billing, Optimization, Visibility and Governance.
     */
    featuresEnableds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * GCP Project Id.
     */
    gcpProjectId: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Email corresponding to the Service Account.
     */
    serviceAccountEmail: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
