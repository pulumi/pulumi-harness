// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Resource for managing Harness Notification Channels.
 */
export class CentralNotificationChannel extends pulumi.CustomResource {
    /**
     * Get an existing CentralNotificationChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CentralNotificationChannelState, opts?: pulumi.CustomResourceOptions): CentralNotificationChannel {
        return new CentralNotificationChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/centralNotificationChannel:CentralNotificationChannel';

    /**
     * Returns true if the given object is an instance of CentralNotificationChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CentralNotificationChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CentralNotificationChannel.__pulumiType;
    }

    /**
     * Account identifier associated with this notification channel.
     */
    public /*out*/ readonly account!: pulumi.Output<string>;
    public readonly channel!: pulumi.Output<outputs.platform.CentralNotificationChannelChannel>;
    /**
     * Timestamp when the notification channel was created.
     */
    public /*out*/ readonly created!: pulumi.Output<number>;
    public readonly identifier!: pulumi.Output<string>;
    /**
     * Timestamp when the notification channel was last modified.
     */
    public /*out*/ readonly lastModified!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly notificationChannelType!: pulumi.Output<string>;
    public readonly org!: pulumi.Output<string | undefined>;
    public readonly project!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string | undefined>;

    /**
     * Create a CentralNotificationChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CentralNotificationChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CentralNotificationChannelArgs | CentralNotificationChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CentralNotificationChannelState | undefined;
            resourceInputs["account"] = state ? state.account : undefined;
            resourceInputs["channel"] = state ? state.channel : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationChannelType"] = state ? state.notificationChannelType : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as CentralNotificationChannelArgs | undefined;
            if ((!args || args.channel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channel'");
            }
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.notificationChannelType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationChannelType'");
            }
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notificationChannelType"] = args ? args.notificationChannelType : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["account"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CentralNotificationChannel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CentralNotificationChannel resources.
 */
export interface CentralNotificationChannelState {
    /**
     * Account identifier associated with this notification channel.
     */
    account?: pulumi.Input<string>;
    channel?: pulumi.Input<inputs.platform.CentralNotificationChannelChannel>;
    /**
     * Timestamp when the notification channel was created.
     */
    created?: pulumi.Input<number>;
    identifier?: pulumi.Input<string>;
    /**
     * Timestamp when the notification channel was last modified.
     */
    lastModified?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    notificationChannelType?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CentralNotificationChannel resource.
 */
export interface CentralNotificationChannelArgs {
    channel: pulumi.Input<inputs.platform.CentralNotificationChannelChannel>;
    identifier: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notificationChannelType: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
