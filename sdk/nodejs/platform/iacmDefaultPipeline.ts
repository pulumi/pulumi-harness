// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for managing IAC default pipelines
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = new harness.platform.IacmDefaultPipeline("example", {
 *     orgId: test.id,
 *     projectId: testHarnessPlatformProject.id,
 *     provisionerType: "terraform",
 *     operation: "plan",
 *     pipeline: "pipeline1",
 * });
 * ```
 */
export class IacmDefaultPipeline extends pulumi.CustomResource {
    /**
     * Get an existing IacmDefaultPipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IacmDefaultPipelineState, opts?: pulumi.CustomResourceOptions): IacmDefaultPipeline {
        return new IacmDefaultPipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/iacmDefaultPipeline:IacmDefaultPipeline';

    /**
     * Returns true if the given object is an instance of IacmDefaultPipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IacmDefaultPipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IacmDefaultPipeline.__pulumiType;
    }

    /**
     * The operation associated with this default.
     */
    declare public readonly operation: pulumi.Output<string>;
    /**
     * Organization identifier of the organization the default pipelines resides in.
     */
    declare public readonly orgId: pulumi.Output<string>;
    /**
     * The pipeline associated with this default.
     */
    declare public readonly pipeline: pulumi.Output<string>;
    /**
     * Project identifier of the project the default pipelines resides in.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The provisioner associated with this default.
     */
    declare public readonly provisionerType: pulumi.Output<string>;

    /**
     * Create a IacmDefaultPipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IacmDefaultPipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IacmDefaultPipelineArgs | IacmDefaultPipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IacmDefaultPipelineState | undefined;
            resourceInputs["operation"] = state?.operation;
            resourceInputs["orgId"] = state?.orgId;
            resourceInputs["pipeline"] = state?.pipeline;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["provisionerType"] = state?.provisionerType;
        } else {
            const args = argsOrState as IacmDefaultPipelineArgs | undefined;
            if (args?.operation === undefined && !opts.urn) {
                throw new Error("Missing required property 'operation'");
            }
            if (args?.orgId === undefined && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if (args?.pipeline === undefined && !opts.urn) {
                throw new Error("Missing required property 'pipeline'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.provisionerType === undefined && !opts.urn) {
                throw new Error("Missing required property 'provisionerType'");
            }
            resourceInputs["operation"] = args?.operation;
            resourceInputs["orgId"] = args?.orgId;
            resourceInputs["pipeline"] = args?.pipeline;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["provisionerType"] = args?.provisionerType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IacmDefaultPipeline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IacmDefaultPipeline resources.
 */
export interface IacmDefaultPipelineState {
    /**
     * The operation associated with this default.
     */
    operation?: pulumi.Input<string>;
    /**
     * Organization identifier of the organization the default pipelines resides in.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The pipeline associated with this default.
     */
    pipeline?: pulumi.Input<string>;
    /**
     * Project identifier of the project the default pipelines resides in.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The provisioner associated with this default.
     */
    provisionerType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IacmDefaultPipeline resource.
 */
export interface IacmDefaultPipelineArgs {
    /**
     * The operation associated with this default.
     */
    operation: pulumi.Input<string>;
    /**
     * Organization identifier of the organization the default pipelines resides in.
     */
    orgId: pulumi.Input<string>;
    /**
     * The pipeline associated with this default.
     */
    pipeline: pulumi.Input<string>;
    /**
     * Project identifier of the project the default pipelines resides in.
     */
    projectId: pulumi.Input<string>;
    /**
     * The provisioner associated with this default.
     */
    provisionerType: pulumi.Input<string>;
}
