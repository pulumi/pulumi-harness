// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Datasource for looking up GCP KMS connector.
 */
export function getConnectorGcpKms(args: GetConnectorGcpKmsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorGcpKmsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getConnectorGcpKms:getConnectorGcpKms", {
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorGcpKms.
 */
export interface GetConnectorGcpKmsArgs {
    /**
     * Unique identifier of the resource.
     */
    identifier: string;
    /**
     * Name of the resource.
     */
    name?: string;
    /**
     * Unique identifier of the organization.
     */
    orgId?: string;
    /**
     * Unique identifier of the project.
     */
    projectId?: string;
}

/**
 * A collection of values returned by getConnectorGcpKms.
 */
export interface GetConnectorGcpKmsResult {
    /**
     * Set this flag to set this secret manager as default secret manager.
     */
    readonly default: boolean;
    /**
     * Description of the resource.
     */
    readonly description: string;
    /**
     * Enable this flag to execute on Delegate.
     */
    readonly executeOnDelegate: boolean;
    /**
     * The project ID of the GCP KMS.
     */
    readonly gcpProjectId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the resource.
     */
    readonly identifier: string;
    /**
     * The key name of the GCP KMS.
     */
    readonly keyName: string;
    /**
     * The key ring of the GCP KMS.
     */
    readonly keyRing: string;
    /**
     * Manual credential configuration.
     */
    readonly manuals: outputs.platform.GetConnectorGcpKmsManual[];
    /**
     * Name of the resource.
     */
    readonly name?: string;
    /**
     * Authentication using harness oidc.
     */
    readonly oidcAuthentications: outputs.platform.GetConnectorGcpKmsOidcAuthentication[];
    /**
     * Unique identifier of the organization.
     */
    readonly orgId?: string;
    /**
     * Unique identifier of the project.
     */
    readonly projectId?: string;
    /**
     * The region of the GCP KMS.
     */
    readonly region: string;
    /**
     * Tags to associate with the resource.
     */
    readonly tags: string[];
}
/**
 * Datasource for looking up GCP KMS connector.
 */
export function getConnectorGcpKmsOutput(args: GetConnectorGcpKmsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectorGcpKmsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getConnectorGcpKms:getConnectorGcpKms", {
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorGcpKms.
 */
export interface GetConnectorGcpKmsOutputArgs {
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
}
