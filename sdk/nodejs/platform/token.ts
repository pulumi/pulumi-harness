// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * Import account level token
 *
 * ```sh
 * $ pulumi import harness:platform/token:Token harness_platform_token <parent_id>/<apikey_id>/<apikey_type>/<token_id>
 * ```
 *
 * Import org level token
 *
 * ```sh
 * $ pulumi import harness:platform/token:Token harness_platform_token <org_id>/<parent_id>/<apikey_id>/<apikey_type>/<token_id>
 * ```
 *
 * Import project level token
 *
 * ```sh
 * $ pulumi import harness:platform/token:Token harness_platform_token <org_id>/<project_id>/<parent_id>/<apikey_id>/<apikey_type>/<token_id>
 * ```
 */
export class Token extends pulumi.CustomResource {
    /**
     * Get an existing Token resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TokenState, opts?: pulumi.CustomResourceOptions): Token {
        return new Token(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/token:Token';

    /**
     * Returns true if the given object is an instance of Token.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Token {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Token.__pulumiType;
    }

    /**
     * Account Identifier for the Entity
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Identifier of the API Key
     */
    public readonly apikeyId!: pulumi.Output<string>;
    /**
     * Type of the API Key
     */
    public readonly apikeyType!: pulumi.Output<string>;
    /**
     * Description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Email Id of the user who created the Token
     */
    public readonly email!: pulumi.Output<string | undefined>;
    /**
     * Encoded password of the Token
     */
    public readonly encodedPassword!: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the resource.
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Unique identifier of the organization.
     */
    public readonly orgId!: pulumi.Output<string | undefined>;
    /**
     * Parent Entity Identifier of the API Key
     */
    public readonly parentId!: pulumi.Output<string>;
    /**
     * Unique identifier of the project.
     */
    public readonly projectId!: pulumi.Output<string | undefined>;
    /**
     * Scheduled expiry time in milliseconds
     */
    public readonly scheduledExpireTime!: pulumi.Output<number>;
    /**
     * Tags to associate with the resource.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the user who created the Token
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * Boolean value to indicate if Token is valid or not.
     */
    public readonly valid!: pulumi.Output<boolean>;
    /**
     * This is the time from which the Token is valid. The time is in milliseconds
     */
    public readonly validFrom!: pulumi.Output<number>;
    /**
     * This is the time till which the Token is valid. The time is in milliseconds
     */
    public readonly validTo!: pulumi.Output<number>;
    /**
     * Value of the Token
     */
    public /*out*/ readonly value!: pulumi.Output<string>;

    /**
     * Create a Token resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TokenArgs | TokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TokenState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["apikeyId"] = state ? state.apikeyId : undefined;
            resourceInputs["apikeyType"] = state ? state.apikeyType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["encodedPassword"] = state ? state.encodedPassword : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["scheduledExpireTime"] = state ? state.scheduledExpireTime : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["valid"] = state ? state.valid : undefined;
            resourceInputs["validFrom"] = state ? state.validFrom : undefined;
            resourceInputs["validTo"] = state ? state.validTo : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as TokenArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.apikeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apikeyId'");
            }
            if ((!args || args.apikeyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apikeyType'");
            }
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.parentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["apikeyId"] = args ? args.apikeyId : undefined;
            resourceInputs["apikeyType"] = args ? args.apikeyType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["encodedPassword"] = args ? args.encodedPassword : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["scheduledExpireTime"] = args ? args.scheduledExpireTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["valid"] = args ? args.valid : undefined;
            resourceInputs["validFrom"] = args ? args.validFrom : undefined;
            resourceInputs["validTo"] = args ? args.validTo : undefined;
            resourceInputs["value"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["value"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Token.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Token resources.
 */
export interface TokenState {
    /**
     * Account Identifier for the Entity
     */
    accountId?: pulumi.Input<string>;
    /**
     * Identifier of the API Key
     */
    apikeyId?: pulumi.Input<string>;
    /**
     * Type of the API Key
     */
    apikeyType?: pulumi.Input<string>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Email Id of the user who created the Token
     */
    email?: pulumi.Input<string>;
    /**
     * Encoded password of the Token
     */
    encodedPassword?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Parent Entity Identifier of the API Key
     */
    parentId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Scheduled expiry time in milliseconds
     */
    scheduledExpireTime?: pulumi.Input<number>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the user who created the Token
     */
    username?: pulumi.Input<string>;
    /**
     * Boolean value to indicate if Token is valid or not.
     */
    valid?: pulumi.Input<boolean>;
    /**
     * This is the time from which the Token is valid. The time is in milliseconds
     */
    validFrom?: pulumi.Input<number>;
    /**
     * This is the time till which the Token is valid. The time is in milliseconds
     */
    validTo?: pulumi.Input<number>;
    /**
     * Value of the Token
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Token resource.
 */
export interface TokenArgs {
    /**
     * Account Identifier for the Entity
     */
    accountId: pulumi.Input<string>;
    /**
     * Identifier of the API Key
     */
    apikeyId: pulumi.Input<string>;
    /**
     * Type of the API Key
     */
    apikeyType: pulumi.Input<string>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Email Id of the user who created the Token
     */
    email?: pulumi.Input<string>;
    /**
     * Encoded password of the Token
     */
    encodedPassword?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Parent Entity Identifier of the API Key
     */
    parentId: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Scheduled expiry time in milliseconds
     */
    scheduledExpireTime?: pulumi.Input<number>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the user who created the Token
     */
    username?: pulumi.Input<string>;
    /**
     * Boolean value to indicate if Token is valid or not.
     */
    valid?: pulumi.Input<boolean>;
    /**
     * This is the time from which the Token is valid. The time is in milliseconds
     */
    validFrom?: pulumi.Input<number>;
    /**
     * This is the time till which the Token is valid. The time is in milliseconds
     */
    validTo?: pulumi.Input<number>;
}
