// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for retrieving a Harness trigger.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = harness.platform.getTriggers({
 *     identifier: "identifier",
 *     orgId: "org_id",
 *     projectId: "project_id",
 *     targetId: "pipeline_id",
 * });
 * ```
 */
export function getTriggers(args: GetTriggersArgs, opts?: pulumi.InvokeOptions): Promise<GetTriggersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getTriggers:getTriggers", {
        "identifier": args.identifier,
        "ignoreError": args.ignoreError,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTriggers.
 */
export interface GetTriggersArgs {
    /**
     * Unique identifier of the resource.
     */
    identifier?: string;
    /**
     * ignore error default false
     */
    ignoreError?: boolean;
    /**
     * Name of the resource.
     */
    name?: string;
    /**
     * Unique identifier of the organization.
     */
    orgId: string;
    /**
     * Unique identifier of the project.
     */
    projectId: string;
    /**
     * Identifier of the target pipeline
     */
    targetId: string;
}

/**
 * A collection of values returned by getTriggers.
 */
export interface GetTriggersResult {
    /**
     * Description of the resource.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the resource.
     */
    readonly identifier?: string;
    /**
     * ignore error default false
     */
    readonly ignoreError?: boolean;
    /**
     * Name of the resource.
     */
    readonly name?: string;
    /**
     * Unique identifier of the organization.
     */
    readonly orgId: string;
    /**
     * Unique identifier of the project.
     */
    readonly projectId: string;
    /**
     * Tags to associate with the resource.
     */
    readonly tags: string[];
    /**
     * Identifier of the target pipeline
     */
    readonly targetId: string;
    /**
     * trigger yaml
     */
    readonly yaml: string;
}
/**
 * Data source for retrieving a Harness trigger.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = harness.platform.getTriggers({
 *     identifier: "identifier",
 *     orgId: "org_id",
 *     projectId: "project_id",
 *     targetId: "pipeline_id",
 * });
 * ```
 */
export function getTriggersOutput(args: GetTriggersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTriggersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getTriggers:getTriggers", {
        "identifier": args.identifier,
        "ignoreError": args.ignoreError,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTriggers.
 */
export interface GetTriggersOutputArgs {
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * ignore error default false
     */
    ignoreError?: pulumi.Input<boolean>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Identifier of the target pipeline
     */
    targetId: pulumi.Input<string>;
}
