// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source for retrieving a Harness Artifact registry
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const test = harness.platform.getHarRegistry({
 *     identifier: "test_registry",
 *     spaceRef: "accountId/orgId/projectId",
 * });
 * ```
 */
export function getHarRegistry(args: GetHarRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetHarRegistryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getHarRegistry:getHarRegistry", {
        "allowedPatterns": args.allowedPatterns,
        "blockedPatterns": args.blockedPatterns,
        "configs": args.configs,
        "description": args.description,
        "identifier": args.identifier,
        "packageType": args.packageType,
        "parentRef": args.parentRef,
        "spaceRef": args.spaceRef,
    }, opts);
}

/**
 * A collection of arguments for invoking getHarRegistry.
 */
export interface GetHarRegistryArgs {
    allowedPatterns?: string[];
    blockedPatterns?: string[];
    configs?: inputs.platform.GetHarRegistryConfig[];
    description?: string;
    /**
     * Unique identifier of the resource.
     */
    identifier: string;
    packageType?: string;
    parentRef?: string;
    /**
     * Reference of the space.
     */
    spaceRef: string;
}

/**
 * A collection of values returned by getHarRegistry.
 */
export interface GetHarRegistryResult {
    readonly allowedPatterns?: string[];
    readonly blockedPatterns?: string[];
    readonly configs?: outputs.platform.GetHarRegistryConfig[];
    readonly createdAt: string;
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the resource.
     */
    readonly identifier: string;
    readonly packageType?: string;
    readonly parentRef?: string;
    /**
     * Reference of the space.
     */
    readonly spaceRef: string;
    readonly url: string;
}
/**
 * Data Source for retrieving a Harness Artifact registry
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const test = harness.platform.getHarRegistry({
 *     identifier: "test_registry",
 *     spaceRef: "accountId/orgId/projectId",
 * });
 * ```
 */
export function getHarRegistryOutput(args: GetHarRegistryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetHarRegistryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getHarRegistry:getHarRegistry", {
        "allowedPatterns": args.allowedPatterns,
        "blockedPatterns": args.blockedPatterns,
        "configs": args.configs,
        "description": args.description,
        "identifier": args.identifier,
        "packageType": args.packageType,
        "parentRef": args.parentRef,
        "spaceRef": args.spaceRef,
    }, opts);
}

/**
 * A collection of arguments for invoking getHarRegistry.
 */
export interface GetHarRegistryOutputArgs {
    allowedPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    blockedPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    configs?: pulumi.Input<pulumi.Input<inputs.platform.GetHarRegistryConfigArgs>[]>;
    description?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    packageType?: pulumi.Input<string>;
    parentRef?: pulumi.Input<string>;
    /**
     * Reference of the space.
     */
    spaceRef: pulumi.Input<string>;
}
