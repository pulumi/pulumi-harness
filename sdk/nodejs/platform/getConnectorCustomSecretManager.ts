// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = harness.platform.getConnectorCustomSecretManager({
 *     identifier: "identifier",
 * });
 * ```
 */
export function getConnectorCustomSecretManager(args: GetConnectorCustomSecretManagerArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorCustomSecretManagerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getConnectorCustomSecretManager:getConnectorCustomSecretManager", {
        "delegateSelectors": args.delegateSelectors,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorCustomSecretManager.
 */
export interface GetConnectorCustomSecretManagerArgs {
    /**
     * Tags to filter delegates for connection.
     */
    delegateSelectors?: string[];
    /**
     * : Unique identifier of the resource.
     */
    identifier: string;
    /**
     * : Name of the resource.
     */
    name?: string;
    orgId?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getConnectorCustomSecretManager.
 */
export interface GetConnectorCustomSecretManagerResult {
    /**
     * Tags to filter delegates for connection.
     */
    readonly delegateSelectors?: string[];
    /**
     * : A brief description of what the resource does or is used for.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * : Unique identifier of the resource.
     */
    readonly identifier: string;
    /**
     * : Name of the resource.
     */
    readonly name?: string;
    /**
     * : Specifies whether the secrets manager runs on a Harness delegate.
     */
    readonly onDelegate: boolean;
    readonly orgId?: string;
    readonly projectId?: string;
    /**
     * : Reference to the Harness secret containing SSH credentials for the target host. Required if `onDelegate` is set to false.
     */
    readonly sshSecretRef: string;
    /**
     * : Tags to associate with the resource.
     */
    readonly tags: string[];
    /**
     * : Host address where secrets will be managed. Required if `onDelegate` is set to false.
     */
    readonly targetHost: string;
    readonly templateInputs: outputs.platform.GetConnectorCustomSecretManagerTemplateInput[];
    /**
     * : Reference to the template used for managing secrets.
     */
    readonly templateRef: string;
    /**
     * : Timeout in seconds for secrets management operations.
     */
    readonly timeout: number;
    /**
     * : Type of the custom secrets manager, typically set to `CustomSecretManager`.
     */
    readonly type: string;
    /**
     * : Version identifier of the secrets management template.
     */
    readonly versionLabel: string;
    /**
     * : Directory path on the target host where secrets management tasks are performed. Required if `onDelegate` is set to false.
     */
    readonly workingDirectory: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const example = harness.platform.getConnectorCustomSecretManager({
 *     identifier: "identifier",
 * });
 * ```
 */
export function getConnectorCustomSecretManagerOutput(args: GetConnectorCustomSecretManagerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectorCustomSecretManagerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getConnectorCustomSecretManager:getConnectorCustomSecretManager", {
        "delegateSelectors": args.delegateSelectors,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorCustomSecretManager.
 */
export interface GetConnectorCustomSecretManagerOutputArgs {
    /**
     * Tags to filter delegates for connection.
     */
    delegateSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * : Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * : Name of the resource.
     */
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
