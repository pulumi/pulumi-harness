// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for creating a Harness pipeline.
 */
export function getGitxWebhook(args: GetGitxWebhookArgs, opts?: pulumi.InvokeOptions): Promise<GetGitxWebhookResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getGitxWebhook:getGitxWebhook", {
        "description": args.description,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getGitxWebhook.
 */
export interface GetGitxWebhookArgs {
    /**
     * Description of the resource.
     */
    description?: string;
    /**
     * Unique identifier of the resource.
     */
    identifier: string;
    /**
     * Name of the resource.
     */
    name: string;
    /**
     * Unique identifier of the organization.
     */
    orgId?: string;
    /**
     * Unique identifier of the project.
     */
    projectId?: string;
    /**
     * Tags to associate with the resource. These should match the tag value passed in the YAML; if this parameter is null or not passed, the tags specified in YAML should also be null.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getGitxWebhook.
 */
export interface GetGitxWebhookResult {
    /**
     * Description of the resource.
     */
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the resource.
     */
    readonly identifier: string;
    /**
     * Name of the resource.
     */
    readonly name: string;
    /**
     * Unique identifier of the organization.
     */
    readonly orgId?: string;
    /**
     * Unique identifier of the project.
     */
    readonly projectId?: string;
    /**
     * Tags to associate with the resource. These should match the tag value passed in the YAML; if this parameter is null or not passed, the tags specified in YAML should also be null.
     */
    readonly tags?: string[];
}
/**
 * Resource for creating a Harness pipeline.
 */
export function getGitxWebhookOutput(args: GetGitxWebhookOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGitxWebhookResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getGitxWebhook:getGitxWebhook", {
        "description": args.description,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getGitxWebhook.
 */
export interface GetGitxWebhookOutputArgs {
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource. These should match the tag value passed in the YAML; if this parameter is null or not passed, the tags specified in YAML should also be null.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
