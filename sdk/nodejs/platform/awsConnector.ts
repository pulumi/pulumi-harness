// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Resource for creating an AWS connector.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Import account level aws connector
 *
 * ```sh
 * $ pulumi import harness:platform/awsConnector:AwsConnector example <connector_id>
 * ```
 *
 * Import organization level aws connector
 *
 * ```sh
 * $ pulumi import harness:platform/awsConnector:AwsConnector example <organization_id>/<connector_id>
 * ```
 *
 * Import project level aws connector
 *
 * ```sh
 * $ pulumi import harness:platform/awsConnector:AwsConnector example <organization_id>/<project_id>/<connector_id>
 * ```
 */
export class AwsConnector extends pulumi.CustomResource {
    /**
     * Get an existing AwsConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsConnectorState, opts?: pulumi.CustomResourceOptions): AwsConnector {
        return new AwsConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/awsConnector:AwsConnector';

    /**
     * Returns true if the given object is an instance of AwsConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsConnector.__pulumiType;
    }

    /**
     * Select this option if you want to use one AWS account for the connection, but you want to deploy or build in a different AWS account. In this scenario, the AWS account used for AWS access in Credentials will assume the IAM role you specify in Cross-account role ARN setting. This option uses the AWS Security Token Service (STS) feature.
     */
    declare public readonly crossAccountAccess: pulumi.Output<outputs.platform.AwsConnectorCrossAccountAccess | undefined>;
    /**
     * Description of the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Equal Jitter BackOff Strategy.
     */
    declare public readonly equalJitterBackoffStrategy: pulumi.Output<outputs.platform.AwsConnectorEqualJitterBackoffStrategy | undefined>;
    /**
     * Enable this flag to execute on Delegate
     */
    declare public readonly executeOnDelegate: pulumi.Output<boolean | undefined>;
    /**
     * Fixed Delay BackOff Strategy.
     */
    declare public readonly fixedDelayBackoffStrategy: pulumi.Output<outputs.platform.AwsConnectorFixedDelayBackoffStrategy | undefined>;
    /**
     * Enable this flag for force deletion of connector
     */
    declare public readonly forceDelete: pulumi.Output<boolean>;
    /**
     * Full Jitter BackOff Strategy.
     */
    declare public readonly fullJitterBackoffStrategy: pulumi.Output<outputs.platform.AwsConnectorFullJitterBackoffStrategy | undefined>;
    /**
     * Unique identifier of the resource.
     */
    declare public readonly identifier: pulumi.Output<string>;
    /**
     * Inherit credentials from the delegate.
     */
    declare public readonly inheritFromDelegate: pulumi.Output<outputs.platform.AwsConnectorInheritFromDelegate | undefined>;
    /**
     * Use IAM role for service accounts.
     */
    declare public readonly irsa: pulumi.Output<outputs.platform.AwsConnectorIrsa | undefined>;
    /**
     * Use IAM role for service accounts.
     */
    declare public readonly manual: pulumi.Output<outputs.platform.AwsConnectorManual | undefined>;
    /**
     * Name of the resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Authentication using harness oidc.
     */
    declare public readonly oidcAuthentication: pulumi.Output<outputs.platform.AwsConnectorOidcAuthentication | undefined>;
    /**
     * Unique identifier of the organization.
     */
    declare public readonly orgId: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the project.
     */
    declare public readonly projectId: pulumi.Output<string | undefined>;
    /**
     * Tags to associate with the resource.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;

    /**
     * Create a AwsConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsConnectorArgs | AwsConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsConnectorState | undefined;
            resourceInputs["crossAccountAccess"] = state?.crossAccountAccess;
            resourceInputs["description"] = state?.description;
            resourceInputs["equalJitterBackoffStrategy"] = state?.equalJitterBackoffStrategy;
            resourceInputs["executeOnDelegate"] = state?.executeOnDelegate;
            resourceInputs["fixedDelayBackoffStrategy"] = state?.fixedDelayBackoffStrategy;
            resourceInputs["forceDelete"] = state?.forceDelete;
            resourceInputs["fullJitterBackoffStrategy"] = state?.fullJitterBackoffStrategy;
            resourceInputs["identifier"] = state?.identifier;
            resourceInputs["inheritFromDelegate"] = state?.inheritFromDelegate;
            resourceInputs["irsa"] = state?.irsa;
            resourceInputs["manual"] = state?.manual;
            resourceInputs["name"] = state?.name;
            resourceInputs["oidcAuthentication"] = state?.oidcAuthentication;
            resourceInputs["orgId"] = state?.orgId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as AwsConnectorArgs | undefined;
            if (args?.identifier === undefined && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            resourceInputs["crossAccountAccess"] = args?.crossAccountAccess;
            resourceInputs["description"] = args?.description;
            resourceInputs["equalJitterBackoffStrategy"] = args?.equalJitterBackoffStrategy;
            resourceInputs["executeOnDelegate"] = args?.executeOnDelegate;
            resourceInputs["fixedDelayBackoffStrategy"] = args?.fixedDelayBackoffStrategy;
            resourceInputs["forceDelete"] = args?.forceDelete;
            resourceInputs["fullJitterBackoffStrategy"] = args?.fullJitterBackoffStrategy;
            resourceInputs["identifier"] = args?.identifier;
            resourceInputs["inheritFromDelegate"] = args?.inheritFromDelegate;
            resourceInputs["irsa"] = args?.irsa;
            resourceInputs["manual"] = args?.manual;
            resourceInputs["name"] = args?.name;
            resourceInputs["oidcAuthentication"] = args?.oidcAuthentication;
            resourceInputs["orgId"] = args?.orgId;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsConnector resources.
 */
export interface AwsConnectorState {
    /**
     * Select this option if you want to use one AWS account for the connection, but you want to deploy or build in a different AWS account. In this scenario, the AWS account used for AWS access in Credentials will assume the IAM role you specify in Cross-account role ARN setting. This option uses the AWS Security Token Service (STS) feature.
     */
    crossAccountAccess?: pulumi.Input<inputs.platform.AwsConnectorCrossAccountAccess>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Equal Jitter BackOff Strategy.
     */
    equalJitterBackoffStrategy?: pulumi.Input<inputs.platform.AwsConnectorEqualJitterBackoffStrategy>;
    /**
     * Enable this flag to execute on Delegate
     */
    executeOnDelegate?: pulumi.Input<boolean>;
    /**
     * Fixed Delay BackOff Strategy.
     */
    fixedDelayBackoffStrategy?: pulumi.Input<inputs.platform.AwsConnectorFixedDelayBackoffStrategy>;
    /**
     * Enable this flag for force deletion of connector
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * Full Jitter BackOff Strategy.
     */
    fullJitterBackoffStrategy?: pulumi.Input<inputs.platform.AwsConnectorFullJitterBackoffStrategy>;
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Inherit credentials from the delegate.
     */
    inheritFromDelegate?: pulumi.Input<inputs.platform.AwsConnectorInheritFromDelegate>;
    /**
     * Use IAM role for service accounts.
     */
    irsa?: pulumi.Input<inputs.platform.AwsConnectorIrsa>;
    /**
     * Use IAM role for service accounts.
     */
    manual?: pulumi.Input<inputs.platform.AwsConnectorManual>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Authentication using harness oidc.
     */
    oidcAuthentication?: pulumi.Input<inputs.platform.AwsConnectorOidcAuthentication>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AwsConnector resource.
 */
export interface AwsConnectorArgs {
    /**
     * Select this option if you want to use one AWS account for the connection, but you want to deploy or build in a different AWS account. In this scenario, the AWS account used for AWS access in Credentials will assume the IAM role you specify in Cross-account role ARN setting. This option uses the AWS Security Token Service (STS) feature.
     */
    crossAccountAccess?: pulumi.Input<inputs.platform.AwsConnectorCrossAccountAccess>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Equal Jitter BackOff Strategy.
     */
    equalJitterBackoffStrategy?: pulumi.Input<inputs.platform.AwsConnectorEqualJitterBackoffStrategy>;
    /**
     * Enable this flag to execute on Delegate
     */
    executeOnDelegate?: pulumi.Input<boolean>;
    /**
     * Fixed Delay BackOff Strategy.
     */
    fixedDelayBackoffStrategy?: pulumi.Input<inputs.platform.AwsConnectorFixedDelayBackoffStrategy>;
    /**
     * Enable this flag for force deletion of connector
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * Full Jitter BackOff Strategy.
     */
    fullJitterBackoffStrategy?: pulumi.Input<inputs.platform.AwsConnectorFullJitterBackoffStrategy>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Inherit credentials from the delegate.
     */
    inheritFromDelegate?: pulumi.Input<inputs.platform.AwsConnectorInheritFromDelegate>;
    /**
     * Use IAM role for service accounts.
     */
    irsa?: pulumi.Input<inputs.platform.AwsConnectorIrsa>;
    /**
     * Use IAM role for service accounts.
     */
    manual?: pulumi.Input<inputs.platform.AwsConnectorManual>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Authentication using harness oidc.
     */
    oidcAuthentication?: pulumi.Input<inputs.platform.AwsConnectorOidcAuthentication>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
