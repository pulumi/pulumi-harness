// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data source for retrieving a Notification Rule.
 */
export function getPipelineCentralNotificationRule(args: GetPipelineCentralNotificationRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineCentralNotificationRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:platform/getPipelineCentralNotificationRule:getPipelineCentralNotificationRule", {
        "customNotificationTemplateRef": args.customNotificationTemplateRef,
        "identifier": args.identifier,
        "name": args.name,
        "notificationChannelRefs": args.notificationChannelRefs,
        "notificationConditions": args.notificationConditions,
        "org": args.org,
        "project": args.project,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineCentralNotificationRule.
 */
export interface GetPipelineCentralNotificationRuleArgs {
    customNotificationTemplateRef?: inputs.platform.GetPipelineCentralNotificationRuleCustomNotificationTemplateRef;
    /**
     * Identifier of the Notification Rule.
     */
    identifier: string;
    name: string;
    notificationChannelRefs?: string[];
    notificationConditions?: inputs.platform.GetPipelineCentralNotificationRuleNotificationCondition[];
    /**
     * Identifier of the organization in which the Notification Rule is configured.
     */
    org?: string;
    /**
     * Identifier of the project in which the Notification Rule is configured.
     */
    project?: string;
    status?: string;
}

/**
 * A collection of values returned by getPipelineCentralNotificationRule.
 */
export interface GetPipelineCentralNotificationRuleResult {
    /**
     * Account identifier associated with this notification channel.
     */
    readonly account: string;
    /**
     * Timestamp when the notification rule was created.
     */
    readonly created: number;
    readonly customNotificationTemplateRef?: outputs.platform.GetPipelineCentralNotificationRuleCustomNotificationTemplateRef;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifier of the Notification Rule.
     */
    readonly identifier: string;
    /**
     * Timestamp when the notification rule was last modified.
     */
    readonly lastModified: number;
    readonly name: string;
    readonly notificationChannelRefs?: string[];
    readonly notificationConditions?: outputs.platform.GetPipelineCentralNotificationRuleNotificationCondition[];
    /**
     * Identifier of the organization in which the Notification Rule is configured.
     */
    readonly org?: string;
    /**
     * Identifier of the project in which the Notification Rule is configured.
     */
    readonly project?: string;
    readonly status?: string;
}
/**
 * Data source for retrieving a Notification Rule.
 */
export function getPipelineCentralNotificationRuleOutput(args: GetPipelineCentralNotificationRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelineCentralNotificationRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:platform/getPipelineCentralNotificationRule:getPipelineCentralNotificationRule", {
        "customNotificationTemplateRef": args.customNotificationTemplateRef,
        "identifier": args.identifier,
        "name": args.name,
        "notificationChannelRefs": args.notificationChannelRefs,
        "notificationConditions": args.notificationConditions,
        "org": args.org,
        "project": args.project,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineCentralNotificationRule.
 */
export interface GetPipelineCentralNotificationRuleOutputArgs {
    customNotificationTemplateRef?: pulumi.Input<inputs.platform.GetPipelineCentralNotificationRuleCustomNotificationTemplateRefArgs>;
    /**
     * Identifier of the Notification Rule.
     */
    identifier: pulumi.Input<string>;
    name: pulumi.Input<string>;
    notificationChannelRefs?: pulumi.Input<pulumi.Input<string>[]>;
    notificationConditions?: pulumi.Input<pulumi.Input<inputs.platform.GetPipelineCentralNotificationRuleNotificationConditionArgs>[]>;
    /**
     * Identifier of the organization in which the Notification Rule is configured.
     */
    org?: pulumi.Input<string>;
    /**
     * Identifier of the project in which the Notification Rule is configured.
     */
    project?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
