// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data source for retrieving service discovery settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * // Data source to fetch service discovery setting by name
 * const example = harness.service.getDiscoverySetting({
 *     orgIdentifier: "<org_identifier>",
 *     projectIdentifier: "<project_identifier>",
 * });
 * ```
 */
export function getDiscoverySetting(args?: GetDiscoverySettingArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoverySettingResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:service/getDiscoverySetting:getDiscoverySetting", {
        "correlationId": args.correlationId,
        "orgIdentifier": args.orgIdentifier,
        "projectIdentifier": args.projectIdentifier,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoverySetting.
 */
export interface GetDiscoverySettingArgs {
    /**
     * Correlation ID for the request.
     */
    correlationId?: string;
    /**
     * The organization identifier.
     */
    orgIdentifier?: string;
    /**
     * The project identifier.
     */
    projectIdentifier?: string;
}

/**
 * A collection of values returned by getDiscoverySetting.
 */
export interface GetDiscoverySettingResult {
    /**
     * Correlation ID for the request.
     */
    readonly correlationId?: string;
    /**
     * Timestamp when the setting was created.
     */
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Image registry configuration.
     */
    readonly imageRegistries: outputs.service.GetDiscoverySettingImageRegistry[];
    /**
     * The organization identifier.
     */
    readonly orgIdentifier?: string;
    /**
     * The project identifier.
     */
    readonly projectIdentifier?: string;
    /**
     * Timestamp when the setting was last updated.
     */
    readonly updatedAt: string;
}
/**
 * Data source for retrieving service discovery settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * // Data source to fetch service discovery setting by name
 * const example = harness.service.getDiscoverySetting({
 *     orgIdentifier: "<org_identifier>",
 *     projectIdentifier: "<project_identifier>",
 * });
 * ```
 */
export function getDiscoverySettingOutput(args?: GetDiscoverySettingOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDiscoverySettingResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:service/getDiscoverySetting:getDiscoverySetting", {
        "correlationId": args.correlationId,
        "orgIdentifier": args.orgIdentifier,
        "projectIdentifier": args.projectIdentifier,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoverySetting.
 */
export interface GetDiscoverySettingOutputArgs {
    /**
     * Correlation ID for the request.
     */
    correlationId?: pulumi.Input<string>;
    /**
     * The organization identifier.
     */
    orgIdentifier?: pulumi.Input<string>;
    /**
     * The project identifier.
     */
    projectIdentifier?: pulumi.Input<string>;
}
