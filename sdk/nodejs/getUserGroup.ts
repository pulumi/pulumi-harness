// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Data source for retrieving a Harness user group
 */
export function getUserGroup(args?: GetUserGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetUserGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getUserGroup:getUserGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserGroup.
 */
export interface GetUserGroupArgs {
    /**
     * Unique identifier of the user group
     */
    id?: string;
    /**
     * The name of the user group.
     */
    name?: string;
}

/**
 * A collection of values returned by getUserGroup.
 */
export interface GetUserGroupResult {
    /**
     * Unique identifier of the user group
     */
    readonly id?: string;
    /**
     * The name of the user group.
     */
    readonly name?: string;
}
/**
 * Data source for retrieving a Harness user group
 */
export function getUserGroupOutput(args?: GetUserGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserGroupResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:index/getUserGroup:getUserGroup", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserGroup.
 */
export interface GetUserGroupOutputArgs {
    /**
     * Unique identifier of the user group
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the user group.
     */
    name?: pulumi.Input<string>;
}
