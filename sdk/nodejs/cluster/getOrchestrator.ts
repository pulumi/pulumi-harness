// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for retrieving a Harness ClusterOrchestrator.
 */
export function getOrchestrator(args: GetOrchestratorArgs, opts?: pulumi.InvokeOptions): Promise<GetOrchestratorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:cluster/getOrchestrator:getOrchestrator", {
        "clusterEndpoint": args.clusterEndpoint,
        "k8sConnectorId": args.k8sConnectorId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrchestrator.
 */
export interface GetOrchestratorArgs {
    /**
     * Endpoint of the k8s cluster being onboarded under the orchestrator
     */
    clusterEndpoint: string;
    /**
     * ID of the Harness Kubernetes Connector Being used
     */
    k8sConnectorId?: string;
    /**
     * Name of the Orchestrator
     */
    name: string;
}

/**
 * A collection of values returned by getOrchestrator.
 */
export interface GetOrchestratorResult {
    /**
     * Endpoint of the k8s cluster being onboarded under the orchestrator
     */
    readonly clusterEndpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * ID of the Harness Kubernetes Connector Being used
     */
    readonly k8sConnectorId?: string;
    /**
     * Name of the Orchestrator
     */
    readonly name: string;
}
/**
 * Data source for retrieving a Harness ClusterOrchestrator.
 */
export function getOrchestratorOutput(args: GetOrchestratorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrchestratorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:cluster/getOrchestrator:getOrchestrator", {
        "clusterEndpoint": args.clusterEndpoint,
        "k8sConnectorId": args.k8sConnectorId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrchestrator.
 */
export interface GetOrchestratorOutputArgs {
    /**
     * Endpoint of the k8s cluster being onboarded under the orchestrator
     */
    clusterEndpoint: pulumi.Input<string>;
    /**
     * ID of the Harness Kubernetes Connector Being used
     */
    k8sConnectorId?: pulumi.Input<string>;
    /**
     * Name of the Orchestrator
     */
    name: pulumi.Input<string>;
}
