// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for creating an AWS application load balancer
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harness from "@pulumi/harness";
 *
 * const test = new harness.autostopping.AwsAlb("test", {
 *     name: "name",
 *     cloudConnectorId: "cloud_connector_id",
 *     hostName: "host_name",
 *     region: "region",
 *     vpc: "vpc",
 *     securityGroups: [
 *         "sg1",
 *         "sg2",
 *     ],
 *     route53HostedZoneId: "/hostedzone/zone_id",
 *     deleteCloudResourcesOnDestroy: true,
 * });
 * const harnessAlb = new harness.autostopping.AwsAlb("harness_alb", {
 *     name: "harness_alb",
 *     cloudConnectorId: "cloud_connector_id",
 *     hostName: "host.name",
 *     albArn: "arn:aws:elasticloadbalancing:region:aws_account_id:loadbalancer/app/harness_alb/id",
 *     region: "region",
 *     vpc: "vpc",
 *     securityGroups: ["sg-0"],
 *     route53HostedZoneId: "/hostedzone/zone_id",
 *     deleteCloudResourcesOnDestroy: false,
 * });
 * ```
 */
export class AwsAlb extends pulumi.CustomResource {
    /**
     * Get an existing AwsAlb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsAlbState, opts?: pulumi.CustomResourceOptions): AwsAlb {
        return new AwsAlb(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:autostopping/awsAlb:AwsAlb';

    /**
     * Returns true if the given object is an instance of AwsAlb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsAlb {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsAlb.__pulumiType;
    }

    /**
     * Arn of AWS ALB to be imported. Required only for importing existing ALB
     */
    declare public readonly albArn: pulumi.Output<string | undefined>;
    declare public readonly certificateId: pulumi.Output<string | undefined>;
    /**
     * Id of the cloud connector
     */
    declare public readonly cloudConnectorId: pulumi.Output<string>;
    declare public readonly deleteCloudResourcesOnDestroy: pulumi.Output<boolean>;
    /**
     * Hostname for the proxy
     */
    declare public readonly hostName: pulumi.Output<string>;
    /**
     * Unique identifier of the resource
     */
    declare public /*out*/ readonly identifier: pulumi.Output<string>;
    /**
     * Name of the proxy
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Region in which cloud resources are hosted
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Route 53 hosted zone id
     */
    declare public readonly route53HostedZoneId: pulumi.Output<string | undefined>;
    /**
     * Security Group to define the security rules that determine the inbound and outbound traffic
     */
    declare public readonly securityGroups: pulumi.Output<string[] | undefined>;
    /**
     * VPC in which cloud resources are hosted
     */
    declare public readonly vpc: pulumi.Output<string>;

    /**
     * Create a AwsAlb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsAlbArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsAlbArgs | AwsAlbState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsAlbState | undefined;
            resourceInputs["albArn"] = state?.albArn;
            resourceInputs["certificateId"] = state?.certificateId;
            resourceInputs["cloudConnectorId"] = state?.cloudConnectorId;
            resourceInputs["deleteCloudResourcesOnDestroy"] = state?.deleteCloudResourcesOnDestroy;
            resourceInputs["hostName"] = state?.hostName;
            resourceInputs["identifier"] = state?.identifier;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["route53HostedZoneId"] = state?.route53HostedZoneId;
            resourceInputs["securityGroups"] = state?.securityGroups;
            resourceInputs["vpc"] = state?.vpc;
        } else {
            const args = argsOrState as AwsAlbArgs | undefined;
            if (args?.cloudConnectorId === undefined && !opts.urn) {
                throw new Error("Missing required property 'cloudConnectorId'");
            }
            if (args?.deleteCloudResourcesOnDestroy === undefined && !opts.urn) {
                throw new Error("Missing required property 'deleteCloudResourcesOnDestroy'");
            }
            if (args?.hostName === undefined && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if (args?.vpc === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpc'");
            }
            resourceInputs["albArn"] = args?.albArn;
            resourceInputs["certificateId"] = args?.certificateId;
            resourceInputs["cloudConnectorId"] = args?.cloudConnectorId;
            resourceInputs["deleteCloudResourcesOnDestroy"] = args?.deleteCloudResourcesOnDestroy;
            resourceInputs["hostName"] = args?.hostName;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["route53HostedZoneId"] = args?.route53HostedZoneId;
            resourceInputs["securityGroups"] = args?.securityGroups;
            resourceInputs["vpc"] = args?.vpc;
            resourceInputs["identifier"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsAlb.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsAlb resources.
 */
export interface AwsAlbState {
    /**
     * Arn of AWS ALB to be imported. Required only for importing existing ALB
     */
    albArn?: pulumi.Input<string>;
    certificateId?: pulumi.Input<string>;
    /**
     * Id of the cloud connector
     */
    cloudConnectorId?: pulumi.Input<string>;
    deleteCloudResourcesOnDestroy?: pulumi.Input<boolean>;
    /**
     * Hostname for the proxy
     */
    hostName?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the proxy
     */
    name?: pulumi.Input<string>;
    /**
     * Region in which cloud resources are hosted
     */
    region?: pulumi.Input<string>;
    /**
     * Route 53 hosted zone id
     */
    route53HostedZoneId?: pulumi.Input<string>;
    /**
     * Security Group to define the security rules that determine the inbound and outbound traffic
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC in which cloud resources are hosted
     */
    vpc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsAlb resource.
 */
export interface AwsAlbArgs {
    /**
     * Arn of AWS ALB to be imported. Required only for importing existing ALB
     */
    albArn?: pulumi.Input<string>;
    certificateId?: pulumi.Input<string>;
    /**
     * Id of the cloud connector
     */
    cloudConnectorId: pulumi.Input<string>;
    deleteCloudResourcesOnDestroy: pulumi.Input<boolean>;
    /**
     * Hostname for the proxy
     */
    hostName: pulumi.Input<string>;
    /**
     * Name of the proxy
     */
    name?: pulumi.Input<string>;
    /**
     * Region in which cloud resources are hosted
     */
    region: pulumi.Input<string>;
    /**
     * Route 53 hosted zone id
     */
    route53HostedZoneId?: pulumi.Input<string>;
    /**
     * Security Group to define the security rules that determine the inbound and outbound traffic
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC in which cloud resources are hosted
     */
    vpc: pulumi.Input<string>;
}
