// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Datasource for looking up a rule.
 */
export function getRuleSet(args: GetRuleSetArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleSetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:governance/getRuleSet:getRuleSet", {
        "ruleSetId": args.ruleSetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleSet.
 */
export interface GetRuleSetArgs {
    /**
     * Id of rule set.
     */
    ruleSetId: string;
}

/**
 * A collection of values returned by getRuleSet.
 */
export interface GetRuleSetResult {
    /**
     * The cloud provider for the rule set.
     */
    readonly cloudProvider: string;
    /**
     * Description for rule set.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the rule set.
     */
    readonly name: string;
    /**
     * List of target regions.
     */
    readonly ruleIds: string[];
    /**
     * Id of rule set.
     */
    readonly ruleSetId: string;
}
/**
 * Datasource for looking up a rule.
 */
export function getRuleSetOutput(args: GetRuleSetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRuleSetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harness:governance/getRuleSet:getRuleSet", {
        "ruleSetId": args.ruleSetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuleSet.
 */
export interface GetRuleSetOutputArgs {
    /**
     * Id of rule set.
     */
    ruleSetId: pulumi.Input<string>;
}
