// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SecurityGovernanceConditionFaultSpecFault {
    /**
     * @return Type of the fault (FAULT or FAULT_GROUP)
     * 
     */
    private String faultType;
    /**
     * @return Name of the fault
     * 
     */
    private String name;

    private SecurityGovernanceConditionFaultSpecFault() {}
    /**
     * @return Type of the fault (FAULT or FAULT_GROUP)
     * 
     */
    public String faultType() {
        return this.faultType;
    }
    /**
     * @return Name of the fault
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGovernanceConditionFaultSpecFault defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String faultType;
        private String name;
        public Builder() {}
        public Builder(SecurityGovernanceConditionFaultSpecFault defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.faultType = defaults.faultType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder faultType(String faultType) {
            if (faultType == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceConditionFaultSpecFault", "faultType");
            }
            this.faultType = faultType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceConditionFaultSpecFault", "name");
            }
            this.name = name;
            return this;
        }
        public SecurityGovernanceConditionFaultSpecFault build() {
            final var _resultValue = new SecurityGovernanceConditionFaultSpecFault();
            _resultValue.faultType = faultType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
