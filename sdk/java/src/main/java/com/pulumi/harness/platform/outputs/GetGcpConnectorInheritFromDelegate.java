// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGcpConnectorInheritFromDelegate {
    /**
     * @return The delegates to inherit the credentials from.
     * 
     */
    private List<String> delegateSelectors;

    private GetGcpConnectorInheritFromDelegate() {}
    /**
     * @return The delegates to inherit the credentials from.
     * 
     */
    public List<String> delegateSelectors() {
        return this.delegateSelectors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGcpConnectorInheritFromDelegate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> delegateSelectors;
        public Builder() {}
        public Builder(GetGcpConnectorInheritFromDelegate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delegateSelectors = defaults.delegateSelectors;
        }

        @CustomType.Setter
        public Builder delegateSelectors(List<String> delegateSelectors) {
            if (delegateSelectors == null) {
              throw new MissingRequiredPropertyException("GetGcpConnectorInheritFromDelegate", "delegateSelectors");
            }
            this.delegateSelectors = delegateSelectors;
            return this;
        }
        public Builder delegateSelectors(String... delegateSelectors) {
            return delegateSelectors(List.of(delegateSelectors));
        }
        public GetGcpConnectorInheritFromDelegate build() {
            final var _resultValue = new GetGcpConnectorInheritFromDelegate();
            _resultValue.delegateSelectors = delegateSelectors;
            return _resultValue;
        }
    }
}
