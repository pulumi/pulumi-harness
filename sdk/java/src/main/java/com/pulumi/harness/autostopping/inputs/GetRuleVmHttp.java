// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.inputs.GetRuleVmHttpHealth;
import com.pulumi.harness.autostopping.inputs.GetRuleVmHttpRouting;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuleVmHttp extends com.pulumi.resources.InvokeArgs {

    public static final GetRuleVmHttp Empty = new GetRuleVmHttp();

    /**
     * Health Check Details
     * 
     */
    @Import(name="healths")
    private @Nullable List<GetRuleVmHttpHealth> healths;

    /**
     * @return Health Check Details
     * 
     */
    public Optional<List<GetRuleVmHttpHealth>> healths() {
        return Optional.ofNullable(this.healths);
    }

    /**
     * Id of the proxy
     * 
     */
    @Import(name="proxyId", required=true)
    private String proxyId;

    /**
     * @return Id of the proxy
     * 
     */
    public String proxyId() {
        return this.proxyId;
    }

    /**
     * Routing configuration used to access the instances
     * 
     */
    @Import(name="routings")
    private @Nullable List<GetRuleVmHttpRouting> routings;

    /**
     * @return Routing configuration used to access the instances
     * 
     */
    public Optional<List<GetRuleVmHttpRouting>> routings() {
        return Optional.ofNullable(this.routings);
    }

    private GetRuleVmHttp() {}

    private GetRuleVmHttp(GetRuleVmHttp $) {
        this.healths = $.healths;
        this.proxyId = $.proxyId;
        this.routings = $.routings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuleVmHttp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuleVmHttp $;

        public Builder() {
            $ = new GetRuleVmHttp();
        }

        public Builder(GetRuleVmHttp defaults) {
            $ = new GetRuleVmHttp(Objects.requireNonNull(defaults));
        }

        /**
         * @param healths Health Check Details
         * 
         * @return builder
         * 
         */
        public Builder healths(@Nullable List<GetRuleVmHttpHealth> healths) {
            $.healths = healths;
            return this;
        }

        /**
         * @param healths Health Check Details
         * 
         * @return builder
         * 
         */
        public Builder healths(GetRuleVmHttpHealth... healths) {
            return healths(List.of(healths));
        }

        /**
         * @param proxyId Id of the proxy
         * 
         * @return builder
         * 
         */
        public Builder proxyId(String proxyId) {
            $.proxyId = proxyId;
            return this;
        }

        /**
         * @param routings Routing configuration used to access the instances
         * 
         * @return builder
         * 
         */
        public Builder routings(@Nullable List<GetRuleVmHttpRouting> routings) {
            $.routings = routings;
            return this;
        }

        /**
         * @param routings Routing configuration used to access the instances
         * 
         * @return builder
         * 
         */
        public Builder routings(GetRuleVmHttpRouting... routings) {
            return routings(List.of(routings));
        }

        public GetRuleVmHttp build() {
            if ($.proxyId == null) {
                throw new MissingRequiredPropertyException("GetRuleVmHttp", "proxyId");
            }
            return $;
        }
    }

}
