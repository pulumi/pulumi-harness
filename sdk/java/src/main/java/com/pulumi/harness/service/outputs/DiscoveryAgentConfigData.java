// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.service.outputs.DiscoveryAgentConfigDataCron;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DiscoveryAgentConfigData {
    /**
     * @return List of namespaces to exclude from discovery.
     * 
     */
    private @Nullable List<String> blacklistedNamespaces;
    /**
     * @return Collection window in minutes.
     * 
     */
    private @Nullable Integer collectionWindowInMin;
    /**
     * @return Cron schedule for data collection.
     * 
     */
    private @Nullable List<DiscoveryAgentConfigDataCron> crons;
    /**
     * @return Whether to enable batch resources.
     * 
     */
    private @Nullable Boolean enableBatchResources;
    /**
     * @return Whether to enable node agent.
     * 
     */
    private @Nullable Boolean enableNodeAgent;
    /**
     * @return Whether to enable orphaned pod detection.
     * 
     */
    private @Nullable Boolean enableOrphanedPod;
    /**
     * @return Namespace selector for the agent.
     * 
     */
    private @Nullable String namespaceSelector;
    /**
     * @return Node selector for the node agent.
     * 
     */
    private @Nullable String nodeAgentSelector;
    /**
     * @return List of namespaces to observe.
     * 
     */
    private @Nullable List<String> observedNamespaces;

    private DiscoveryAgentConfigData() {}
    /**
     * @return List of namespaces to exclude from discovery.
     * 
     */
    public List<String> blacklistedNamespaces() {
        return this.blacklistedNamespaces == null ? List.of() : this.blacklistedNamespaces;
    }
    /**
     * @return Collection window in minutes.
     * 
     */
    public Optional<Integer> collectionWindowInMin() {
        return Optional.ofNullable(this.collectionWindowInMin);
    }
    /**
     * @return Cron schedule for data collection.
     * 
     */
    public List<DiscoveryAgentConfigDataCron> crons() {
        return this.crons == null ? List.of() : this.crons;
    }
    /**
     * @return Whether to enable batch resources.
     * 
     */
    public Optional<Boolean> enableBatchResources() {
        return Optional.ofNullable(this.enableBatchResources);
    }
    /**
     * @return Whether to enable node agent.
     * 
     */
    public Optional<Boolean> enableNodeAgent() {
        return Optional.ofNullable(this.enableNodeAgent);
    }
    /**
     * @return Whether to enable orphaned pod detection.
     * 
     */
    public Optional<Boolean> enableOrphanedPod() {
        return Optional.ofNullable(this.enableOrphanedPod);
    }
    /**
     * @return Namespace selector for the agent.
     * 
     */
    public Optional<String> namespaceSelector() {
        return Optional.ofNullable(this.namespaceSelector);
    }
    /**
     * @return Node selector for the node agent.
     * 
     */
    public Optional<String> nodeAgentSelector() {
        return Optional.ofNullable(this.nodeAgentSelector);
    }
    /**
     * @return List of namespaces to observe.
     * 
     */
    public List<String> observedNamespaces() {
        return this.observedNamespaces == null ? List.of() : this.observedNamespaces;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiscoveryAgentConfigData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> blacklistedNamespaces;
        private @Nullable Integer collectionWindowInMin;
        private @Nullable List<DiscoveryAgentConfigDataCron> crons;
        private @Nullable Boolean enableBatchResources;
        private @Nullable Boolean enableNodeAgent;
        private @Nullable Boolean enableOrphanedPod;
        private @Nullable String namespaceSelector;
        private @Nullable String nodeAgentSelector;
        private @Nullable List<String> observedNamespaces;
        public Builder() {}
        public Builder(DiscoveryAgentConfigData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blacklistedNamespaces = defaults.blacklistedNamespaces;
    	      this.collectionWindowInMin = defaults.collectionWindowInMin;
    	      this.crons = defaults.crons;
    	      this.enableBatchResources = defaults.enableBatchResources;
    	      this.enableNodeAgent = defaults.enableNodeAgent;
    	      this.enableOrphanedPod = defaults.enableOrphanedPod;
    	      this.namespaceSelector = defaults.namespaceSelector;
    	      this.nodeAgentSelector = defaults.nodeAgentSelector;
    	      this.observedNamespaces = defaults.observedNamespaces;
        }

        @CustomType.Setter
        public Builder blacklistedNamespaces(@Nullable List<String> blacklistedNamespaces) {

            this.blacklistedNamespaces = blacklistedNamespaces;
            return this;
        }
        public Builder blacklistedNamespaces(String... blacklistedNamespaces) {
            return blacklistedNamespaces(List.of(blacklistedNamespaces));
        }
        @CustomType.Setter
        public Builder collectionWindowInMin(@Nullable Integer collectionWindowInMin) {

            this.collectionWindowInMin = collectionWindowInMin;
            return this;
        }
        @CustomType.Setter
        public Builder crons(@Nullable List<DiscoveryAgentConfigDataCron> crons) {

            this.crons = crons;
            return this;
        }
        public Builder crons(DiscoveryAgentConfigDataCron... crons) {
            return crons(List.of(crons));
        }
        @CustomType.Setter
        public Builder enableBatchResources(@Nullable Boolean enableBatchResources) {

            this.enableBatchResources = enableBatchResources;
            return this;
        }
        @CustomType.Setter
        public Builder enableNodeAgent(@Nullable Boolean enableNodeAgent) {

            this.enableNodeAgent = enableNodeAgent;
            return this;
        }
        @CustomType.Setter
        public Builder enableOrphanedPod(@Nullable Boolean enableOrphanedPod) {

            this.enableOrphanedPod = enableOrphanedPod;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceSelector(@Nullable String namespaceSelector) {

            this.namespaceSelector = namespaceSelector;
            return this;
        }
        @CustomType.Setter
        public Builder nodeAgentSelector(@Nullable String nodeAgentSelector) {

            this.nodeAgentSelector = nodeAgentSelector;
            return this;
        }
        @CustomType.Setter
        public Builder observedNamespaces(@Nullable List<String> observedNamespaces) {

            this.observedNamespaces = observedNamespaces;
            return this;
        }
        public Builder observedNamespaces(String... observedNamespaces) {
            return observedNamespaces(List.of(observedNamespaces));
        }
        public DiscoveryAgentConfigData build() {
            final var _resultValue = new DiscoveryAgentConfigData();
            _resultValue.blacklistedNamespaces = blacklistedNamespaces;
            _resultValue.collectionWindowInMin = collectionWindowInMin;
            _resultValue.crons = crons;
            _resultValue.enableBatchResources = enableBatchResources;
            _resultValue.enableNodeAgent = enableNodeAgent;
            _resultValue.enableOrphanedPod = enableOrphanedPod;
            _resultValue.namespaceSelector = namespaceSelector;
            _resultValue.nodeAgentSelector = nodeAgentSelector;
            _resultValue.observedNamespaces = observedNamespaces;
            return _resultValue;
        }
    }
}
