// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class InfrastructureDefinitionAzureWebapp {
    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    private String cloudProviderName;
    /**
     * @return The name of the resource group.
     * 
     */
    private String resourceGroup;
    /**
     * @return The unique id of the azure subscription.
     * 
     */
    private String subscriptionId;

    private InfrastructureDefinitionAzureWebapp() {}
    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    public String cloudProviderName() {
        return this.cloudProviderName;
    }
    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }
    /**
     * @return The unique id of the azure subscription.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InfrastructureDefinitionAzureWebapp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudProviderName;
        private String resourceGroup;
        private String subscriptionId;
        public Builder() {}
        public Builder(InfrastructureDefinitionAzureWebapp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudProviderName = defaults.cloudProviderName;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.subscriptionId = defaults.subscriptionId;
        }

        @CustomType.Setter
        public Builder cloudProviderName(String cloudProviderName) {
            if (cloudProviderName == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureWebapp", "cloudProviderName");
            }
            this.cloudProviderName = cloudProviderName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(String resourceGroup) {
            if (resourceGroup == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureWebapp", "resourceGroup");
            }
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureWebapp", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        public InfrastructureDefinitionAzureWebapp build() {
            final var _resultValue = new InfrastructureDefinitionAzureWebapp();
            _resultValue.cloudProviderName = cloudProviderName;
            _resultValue.resourceGroup = resourceGroup;
            _resultValue.subscriptionId = subscriptionId;
            return _resultValue;
        }
    }
}
