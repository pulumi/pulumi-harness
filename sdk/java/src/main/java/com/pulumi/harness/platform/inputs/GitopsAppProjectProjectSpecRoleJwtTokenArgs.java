// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitopsAppProjectProjectSpecRoleJwtTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsAppProjectProjectSpecRoleJwtTokenArgs Empty = new GitopsAppProjectProjectSpecRoleJwtTokenArgs();

    /**
     * Expiration time of the JWT token.
     * 
     */
    @Import(name="exp")
    private @Nullable Output<String> exp;

    /**
     * @return Expiration time of the JWT token.
     * 
     */
    public Optional<Output<String>> exp() {
        return Optional.ofNullable(this.exp);
    }

    /**
     * Issued At time of the JWT token.
     * 
     */
    @Import(name="iat")
    private @Nullable Output<String> iat;

    /**
     * @return Issued At time of the JWT token.
     * 
     */
    public Optional<Output<String>> iat() {
        return Optional.ofNullable(this.iat);
    }

    /**
     * ID of the JWT token.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return ID of the JWT token.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    private GitopsAppProjectProjectSpecRoleJwtTokenArgs() {}

    private GitopsAppProjectProjectSpecRoleJwtTokenArgs(GitopsAppProjectProjectSpecRoleJwtTokenArgs $) {
        this.exp = $.exp;
        this.iat = $.iat;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsAppProjectProjectSpecRoleJwtTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsAppProjectProjectSpecRoleJwtTokenArgs $;

        public Builder() {
            $ = new GitopsAppProjectProjectSpecRoleJwtTokenArgs();
        }

        public Builder(GitopsAppProjectProjectSpecRoleJwtTokenArgs defaults) {
            $ = new GitopsAppProjectProjectSpecRoleJwtTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exp Expiration time of the JWT token.
         * 
         * @return builder
         * 
         */
        public Builder exp(@Nullable Output<String> exp) {
            $.exp = exp;
            return this;
        }

        /**
         * @param exp Expiration time of the JWT token.
         * 
         * @return builder
         * 
         */
        public Builder exp(String exp) {
            return exp(Output.of(exp));
        }

        /**
         * @param iat Issued At time of the JWT token.
         * 
         * @return builder
         * 
         */
        public Builder iat(@Nullable Output<String> iat) {
            $.iat = iat;
            return this;
        }

        /**
         * @param iat Issued At time of the JWT token.
         * 
         * @return builder
         * 
         */
        public Builder iat(String iat) {
            return iat(Output.of(iat));
        }

        /**
         * @param id ID of the JWT token.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the JWT token.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public GitopsAppProjectProjectSpecRoleJwtTokenArgs build() {
            return $;
        }
    }

}
