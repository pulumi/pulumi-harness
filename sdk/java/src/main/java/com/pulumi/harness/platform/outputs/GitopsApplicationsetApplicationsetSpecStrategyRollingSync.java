// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GitopsApplicationsetApplicationsetSpecStrategyRollingSync {
    /**
     * @return Configuration used to define which applications to include in each stage of the rolling sync. All Applications in each group must become Healthy before the ApplicationSet controller will proceed to update the next group of Applications.
     * 
     */
    private List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep> steps;

    private GitopsApplicationsetApplicationsetSpecStrategyRollingSync() {}
    /**
     * @return Configuration used to define which applications to include in each stage of the rolling sync. All Applications in each group must become Healthy before the ApplicationSet controller will proceed to update the next group of Applications.
     * 
     */
    public List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep> steps() {
        return this.steps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsApplicationsetApplicationsetSpecStrategyRollingSync defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep> steps;
        public Builder() {}
        public Builder(GitopsApplicationsetApplicationsetSpecStrategyRollingSync defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.steps = defaults.steps;
        }

        @CustomType.Setter
        public Builder steps(List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep> steps) {
            if (steps == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecStrategyRollingSync", "steps");
            }
            this.steps = steps;
            return this;
        }
        public Builder steps(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStep... steps) {
            return steps(List.of(steps));
        }
        public GitopsApplicationsetApplicationsetSpecStrategyRollingSync build() {
            final var _resultValue = new GitopsApplicationsetApplicationsetSpecStrategyRollingSync();
            _resultValue.steps = steps;
            return _resultValue;
        }
    }
}
