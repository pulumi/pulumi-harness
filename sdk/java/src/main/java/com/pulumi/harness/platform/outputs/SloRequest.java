// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.SloRequestNotificationRuleRef;
import com.pulumi.harness.platform.outputs.SloRequestSloTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SloRequest {
    /**
     * @return Description for the SLO.
     * 
     */
    private @Nullable String description;
    /**
     * @return Name for the SLO.
     * 
     */
    private String name;
    /**
     * @return Notification rule references for the SLO.
     * 
     */
    private @Nullable List<SloRequestNotificationRuleRef> notificationRuleRefs;
    /**
     * @return SLO Target specification.
     * 
     */
    private SloRequestSloTarget sloTarget;
    /**
     * @return Specification of the SLO.
     * 
     */
    private String spec;
    /**
     * @return Tags for the SLO. comma-separated key value string pairs.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return Type of the SLO.
     * 
     */
    private String type;
    /**
     * @return User journey reference list for the SLO.
     * 
     */
    private List<String> userJourneyRefs;

    private SloRequest() {}
    /**
     * @return Description for the SLO.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Name for the SLO.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Notification rule references for the SLO.
     * 
     */
    public List<SloRequestNotificationRuleRef> notificationRuleRefs() {
        return this.notificationRuleRefs == null ? List.of() : this.notificationRuleRefs;
    }
    /**
     * @return SLO Target specification.
     * 
     */
    public SloRequestSloTarget sloTarget() {
        return this.sloTarget;
    }
    /**
     * @return Specification of the SLO.
     * 
     */
    public String spec() {
        return this.spec;
    }
    /**
     * @return Tags for the SLO. comma-separated key value string pairs.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Type of the SLO.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return User journey reference list for the SLO.
     * 
     */
    public List<String> userJourneyRefs() {
        return this.userJourneyRefs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SloRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private String name;
        private @Nullable List<SloRequestNotificationRuleRef> notificationRuleRefs;
        private SloRequestSloTarget sloTarget;
        private String spec;
        private @Nullable List<String> tags;
        private String type;
        private List<String> userJourneyRefs;
        public Builder() {}
        public Builder(SloRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.notificationRuleRefs = defaults.notificationRuleRefs;
    	      this.sloTarget = defaults.sloTarget;
    	      this.spec = defaults.spec;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userJourneyRefs = defaults.userJourneyRefs;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("SloRequest", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notificationRuleRefs(@Nullable List<SloRequestNotificationRuleRef> notificationRuleRefs) {

            this.notificationRuleRefs = notificationRuleRefs;
            return this;
        }
        public Builder notificationRuleRefs(SloRequestNotificationRuleRef... notificationRuleRefs) {
            return notificationRuleRefs(List.of(notificationRuleRefs));
        }
        @CustomType.Setter
        public Builder sloTarget(SloRequestSloTarget sloTarget) {
            if (sloTarget == null) {
              throw new MissingRequiredPropertyException("SloRequest", "sloTarget");
            }
            this.sloTarget = sloTarget;
            return this;
        }
        @CustomType.Setter
        public Builder spec(String spec) {
            if (spec == null) {
              throw new MissingRequiredPropertyException("SloRequest", "spec");
            }
            this.spec = spec;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SloRequest", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder userJourneyRefs(List<String> userJourneyRefs) {
            if (userJourneyRefs == null) {
              throw new MissingRequiredPropertyException("SloRequest", "userJourneyRefs");
            }
            this.userJourneyRefs = userJourneyRefs;
            return this;
        }
        public Builder userJourneyRefs(String... userJourneyRefs) {
            return userJourneyRefs(List.of(userJourneyRefs));
        }
        public SloRequest build() {
            final var _resultValue = new SloRequest();
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.notificationRuleRefs = notificationRuleRefs;
            _resultValue.sloTarget = sloTarget;
            _resultValue.spec = spec;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.userJourneyRefs = userJourneyRefs;
            return _resultValue;
        }
    }
}
