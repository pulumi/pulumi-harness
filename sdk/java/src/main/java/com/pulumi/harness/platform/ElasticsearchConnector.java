// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.ElasticsearchConnectorArgs;
import com.pulumi.harness.platform.inputs.ElasticsearchConnectorState;
import com.pulumi.harness.platform.outputs.ElasticsearchConnectorApiToken;
import com.pulumi.harness.platform.outputs.ElasticsearchConnectorNoAuthentication;
import com.pulumi.harness.platform.outputs.ElasticsearchConnectorUsernamePassword;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating an ElasticSearch connector.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.ElasticsearchConnector;
 * import com.pulumi.harness.platform.ElasticsearchConnectorArgs;
 * import com.pulumi.harness.platform.inputs.ElasticsearchConnectorApiTokenArgs;
 * import com.pulumi.harness.platform.inputs.ElasticsearchConnectorUsernamePasswordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Authentication mechanism as api token
 *         var token = new ElasticsearchConnector("token", ElasticsearchConnectorArgs.builder()
 *             .identifier("identifier")
 *             .name("name")
 *             .description("test")
 *             .tags("foo:bar")
 *             .url("http://elk6.dev.harness.io:9200/")
 *             .delegateSelectors("harness-delegate")
 *             .apiToken(ElasticsearchConnectorApiTokenArgs.builder()
 *                 .clientId("client_id")
 *                 .clientSecretRef("account.secret_id")
 *                 .build())
 *             .build());
 * 
 *         // Authentication mechanism as username and password
 *         var test = new ElasticsearchConnector("test", ElasticsearchConnectorArgs.builder()
 *             .identifier("identifier")
 *             .name("name")
 *             .description("test")
 *             .tags("foo:bar")
 *             .url("http://elk6.dev.harness.io:9200/")
 *             .delegateSelectors("harness-delegate")
 *             .usernamePassword(ElasticsearchConnectorUsernamePasswordArgs.builder()
 *                 .username("username")
 *                 .passwordRef("account.secret_id")
 *                 .build())
 *             .build());
 * 
 *         // Authentication mechanism without authentication
 *         var noAuthentication = new ElasticsearchConnector("noAuthentication", ElasticsearchConnectorArgs.builder()
 *             .identifier("identifier")
 *             .name("name")
 *             .description("test")
 *             .tags("foo:bar")
 *             .url("http://elk6.dev.harness.io:9200/")
 *             .delegateSelectors("harness-delegate")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Import account level elasticsearch connector
 * 
 * ```sh
 * $ pulumi import harness:platform/elasticsearchConnector:ElasticsearchConnector example &lt;connector_id&gt;
 * ```
 * 
 * Import org level elasticsearch connector
 * 
 * ```sh
 * $ pulumi import harness:platform/elasticsearchConnector:ElasticsearchConnector example &lt;ord_id&gt;/&lt;connector_id&gt;
 * ```
 * 
 * Import project level elasticsearch connector
 * 
 * ```sh
 * $ pulumi import harness:platform/elasticsearchConnector:ElasticsearchConnector example &lt;org_id&gt;/&lt;project_id&gt;/&lt;connector_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/elasticsearchConnector:ElasticsearchConnector")
public class ElasticsearchConnector extends com.pulumi.resources.CustomResource {
    /**
     * Authenticate to ElasticSearch using api token.
     * 
     */
    @Export(name="apiToken", refs={ElasticsearchConnectorApiToken.class}, tree="[0]")
    private Output</* @Nullable */ ElasticsearchConnectorApiToken> apiToken;

    /**
     * @return Authenticate to ElasticSearch using api token.
     * 
     */
    public Output<Optional<ElasticsearchConnectorApiToken>> apiToken() {
        return Codegen.optional(this.apiToken);
    }
    /**
     * Tags to filter delegates for connection.
     * 
     */
    @Export(name="delegateSelectors", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> delegateSelectors;

    /**
     * @return Tags to filter delegates for connection.
     * 
     */
    public Output<Optional<List<String>>> delegateSelectors() {
        return Codegen.optional(this.delegateSelectors);
    }
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * No Authentication to ElasticSearch
     * 
     */
    @Export(name="noAuthentication", refs={ElasticsearchConnectorNoAuthentication.class}, tree="[0]")
    private Output</* @Nullable */ ElasticsearchConnectorNoAuthentication> noAuthentication;

    /**
     * @return No Authentication to ElasticSearch
     * 
     */
    public Output<Optional<ElasticsearchConnectorNoAuthentication>> noAuthentication() {
        return Codegen.optional(this.noAuthentication);
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Tags to associate with the resource.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * URL of the elasticsearch
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return URL of the elasticsearch
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * Authenticate to ElasticSearch using username and password.
     * 
     */
    @Export(name="usernamePassword", refs={ElasticsearchConnectorUsernamePassword.class}, tree="[0]")
    private Output</* @Nullable */ ElasticsearchConnectorUsernamePassword> usernamePassword;

    /**
     * @return Authenticate to ElasticSearch using username and password.
     * 
     */
    public Output<Optional<ElasticsearchConnectorUsernamePassword>> usernamePassword() {
        return Codegen.optional(this.usernamePassword);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ElasticsearchConnector(java.lang.String name) {
        this(name, ElasticsearchConnectorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ElasticsearchConnector(java.lang.String name, ElasticsearchConnectorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ElasticsearchConnector(java.lang.String name, ElasticsearchConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/elasticsearchConnector:ElasticsearchConnector", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ElasticsearchConnector(java.lang.String name, Output<java.lang.String> id, @Nullable ElasticsearchConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/elasticsearchConnector:ElasticsearchConnector", name, state, makeResourceOptions(options, id), false);
    }

    private static ElasticsearchConnectorArgs makeArgs(ElasticsearchConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ElasticsearchConnectorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ElasticsearchConnector get(java.lang.String name, Output<java.lang.String> id, @Nullable ElasticsearchConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ElasticsearchConnector(name, id, state, options);
    }
}
