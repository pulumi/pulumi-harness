// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecGeneratorArgs;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifferenceArgs;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecStrategyArgs;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecSyncPolicyArgs;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecTemplateArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitopsApplicationsetApplicationsetSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsApplicationsetApplicationsetSpecArgs Empty = new GitopsApplicationsetApplicationsetSpecArgs();

    /**
     * Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
     * 
     */
    @Import(name="generators", required=true)
    private Output<List<GitopsApplicationsetApplicationsetSpecGeneratorArgs>> generators;

    /**
     * @return Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
     * 
     */
    public Output<List<GitopsApplicationsetApplicationsetSpecGeneratorArgs>> generators() {
        return this.generators;
    }

    /**
     * Enable Go templating for the template field.
     * 
     */
    @Import(name="goTemplate")
    private @Nullable Output<Boolean> goTemplate;

    /**
     * @return Enable Go templating for the template field.
     * 
     */
    public Optional<Output<Boolean>> goTemplate() {
        return Optional.ofNullable(this.goTemplate);
    }

    /**
     * Application Set ignoreApplicationDifferences
     * 
     */
    @Import(name="ignoreApplicationDifferences")
    private @Nullable Output<List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifferenceArgs>> ignoreApplicationDifferences;

    /**
     * @return Application Set ignoreApplicationDifferences
     * 
     */
    public Optional<Output<List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifferenceArgs>>> ignoreApplicationDifferences() {
        return Optional.ofNullable(this.ignoreApplicationDifferences);
    }

    /**
     * [Progressive Sync](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/) strategy
     * 
     */
    @Import(name="strategy")
    private @Nullable Output<GitopsApplicationsetApplicationsetSpecStrategyArgs> strategy;

    /**
     * @return [Progressive Sync](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/) strategy
     * 
     */
    public Optional<Output<GitopsApplicationsetApplicationsetSpecStrategyArgs>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    /**
     * Application Set sync policy
     * 
     */
    @Import(name="syncPolicy")
    private @Nullable Output<GitopsApplicationsetApplicationsetSpecSyncPolicyArgs> syncPolicy;

    /**
     * @return Application Set sync policy
     * 
     */
    public Optional<Output<GitopsApplicationsetApplicationsetSpecSyncPolicyArgs>> syncPolicy() {
        return Optional.ofNullable(this.syncPolicy);
    }

    /**
     * Application Set template. The template fields of the ApplicationSet spec are used to generate Gitops Applications.
     * 
     */
    @Import(name="template", required=true)
    private Output<GitopsApplicationsetApplicationsetSpecTemplateArgs> template;

    /**
     * @return Application Set template. The template fields of the ApplicationSet spec are used to generate Gitops Applications.
     * 
     */
    public Output<GitopsApplicationsetApplicationsetSpecTemplateArgs> template() {
        return this.template;
    }

    private GitopsApplicationsetApplicationsetSpecArgs() {}

    private GitopsApplicationsetApplicationsetSpecArgs(GitopsApplicationsetApplicationsetSpecArgs $) {
        this.generators = $.generators;
        this.goTemplate = $.goTemplate;
        this.ignoreApplicationDifferences = $.ignoreApplicationDifferences;
        this.strategy = $.strategy;
        this.syncPolicy = $.syncPolicy;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsApplicationsetApplicationsetSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsApplicationsetApplicationsetSpecArgs $;

        public Builder() {
            $ = new GitopsApplicationsetApplicationsetSpecArgs();
        }

        public Builder(GitopsApplicationsetApplicationsetSpecArgs defaults) {
            $ = new GitopsApplicationsetApplicationsetSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param generators Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
         * 
         * @return builder
         * 
         */
        public Builder generators(Output<List<GitopsApplicationsetApplicationsetSpecGeneratorArgs>> generators) {
            $.generators = generators;
            return this;
        }

        /**
         * @param generators Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
         * 
         * @return builder
         * 
         */
        public Builder generators(List<GitopsApplicationsetApplicationsetSpecGeneratorArgs> generators) {
            return generators(Output.of(generators));
        }

        /**
         * @param generators Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
         * 
         * @return builder
         * 
         */
        public Builder generators(GitopsApplicationsetApplicationsetSpecGeneratorArgs... generators) {
            return generators(List.of(generators));
        }

        /**
         * @param goTemplate Enable Go templating for the template field.
         * 
         * @return builder
         * 
         */
        public Builder goTemplate(@Nullable Output<Boolean> goTemplate) {
            $.goTemplate = goTemplate;
            return this;
        }

        /**
         * @param goTemplate Enable Go templating for the template field.
         * 
         * @return builder
         * 
         */
        public Builder goTemplate(Boolean goTemplate) {
            return goTemplate(Output.of(goTemplate));
        }

        /**
         * @param ignoreApplicationDifferences Application Set ignoreApplicationDifferences
         * 
         * @return builder
         * 
         */
        public Builder ignoreApplicationDifferences(@Nullable Output<List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifferenceArgs>> ignoreApplicationDifferences) {
            $.ignoreApplicationDifferences = ignoreApplicationDifferences;
            return this;
        }

        /**
         * @param ignoreApplicationDifferences Application Set ignoreApplicationDifferences
         * 
         * @return builder
         * 
         */
        public Builder ignoreApplicationDifferences(List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifferenceArgs> ignoreApplicationDifferences) {
            return ignoreApplicationDifferences(Output.of(ignoreApplicationDifferences));
        }

        /**
         * @param ignoreApplicationDifferences Application Set ignoreApplicationDifferences
         * 
         * @return builder
         * 
         */
        public Builder ignoreApplicationDifferences(GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifferenceArgs... ignoreApplicationDifferences) {
            return ignoreApplicationDifferences(List.of(ignoreApplicationDifferences));
        }

        /**
         * @param strategy [Progressive Sync](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/) strategy
         * 
         * @return builder
         * 
         */
        public Builder strategy(@Nullable Output<GitopsApplicationsetApplicationsetSpecStrategyArgs> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy [Progressive Sync](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/) strategy
         * 
         * @return builder
         * 
         */
        public Builder strategy(GitopsApplicationsetApplicationsetSpecStrategyArgs strategy) {
            return strategy(Output.of(strategy));
        }

        /**
         * @param syncPolicy Application Set sync policy
         * 
         * @return builder
         * 
         */
        public Builder syncPolicy(@Nullable Output<GitopsApplicationsetApplicationsetSpecSyncPolicyArgs> syncPolicy) {
            $.syncPolicy = syncPolicy;
            return this;
        }

        /**
         * @param syncPolicy Application Set sync policy
         * 
         * @return builder
         * 
         */
        public Builder syncPolicy(GitopsApplicationsetApplicationsetSpecSyncPolicyArgs syncPolicy) {
            return syncPolicy(Output.of(syncPolicy));
        }

        /**
         * @param template Application Set template. The template fields of the ApplicationSet spec are used to generate Gitops Applications.
         * 
         * @return builder
         * 
         */
        public Builder template(Output<GitopsApplicationsetApplicationsetSpecTemplateArgs> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template Application Set template. The template fields of the ApplicationSet spec are used to generate Gitops Applications.
         * 
         * @return builder
         * 
         */
        public Builder template(GitopsApplicationsetApplicationsetSpecTemplateArgs template) {
            return template(Output.of(template));
        }

        public GitopsApplicationsetApplicationsetSpecArgs build() {
            if ($.generators == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecArgs", "generators");
            }
            if ($.template == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecArgs", "template");
            }
            return $;
        }
    }

}
