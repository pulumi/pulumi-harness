// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.DefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs Empty = new DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs();

    /**
     * List of notification events like PIPELINE_START
     * 
     */
    @Import(name="notificationEvents", required=true)
    private Output<List<String>> notificationEvents;

    /**
     * @return List of notification events like PIPELINE_START
     * 
     */
    public Output<List<String>> notificationEvents() {
        return this.notificationEvents;
    }

    /**
     * Template reference configuration
     * 
     */
    @Import(name="template", required=true)
    private Output<DefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs> template;

    /**
     * @return Template reference configuration
     * 
     */
    public Output<DefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs> template() {
        return this.template;
    }

    private DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs() {}

    private DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs(DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs $) {
        this.notificationEvents = $.notificationEvents;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs $;

        public Builder() {
            $ = new DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs();
        }

        public Builder(DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs defaults) {
            $ = new DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationEvents List of notification events like PIPELINE_START
         * 
         * @return builder
         * 
         */
        public Builder notificationEvents(Output<List<String>> notificationEvents) {
            $.notificationEvents = notificationEvents;
            return this;
        }

        /**
         * @param notificationEvents List of notification events like PIPELINE_START
         * 
         * @return builder
         * 
         */
        public Builder notificationEvents(List<String> notificationEvents) {
            return notificationEvents(Output.of(notificationEvents));
        }

        /**
         * @param notificationEvents List of notification events like PIPELINE_START
         * 
         * @return builder
         * 
         */
        public Builder notificationEvents(String... notificationEvents) {
            return notificationEvents(List.of(notificationEvents));
        }

        /**
         * @param template Template reference configuration
         * 
         * @return builder
         * 
         */
        public Builder template(Output<DefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template Template reference configuration
         * 
         * @return builder
         * 
         */
        public Builder template(DefaultNotificationTemplateSetEventTemplateConfigurationSetTemplateArgs template) {
            return template(Output.of(template));
        }

        public DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs build() {
            if ($.notificationEvents == null) {
                throw new MissingRequiredPropertyException("DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs", "notificationEvents");
            }
            if ($.template == null) {
                throw new MissingRequiredPropertyException("DefaultNotificationTemplateSetEventTemplateConfigurationSetArgs", "template");
            }
            return $;
        }
    }

}
