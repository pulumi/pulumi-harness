// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDiscoveryAgentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDiscoveryAgentArgs Empty = new GetDiscoveryAgentArgs();

    /**
     * The environment identifier of the agent. This is a required field.
     * 
     */
    @Import(name="environmentIdentifier", required=true)
    private Output<String> environmentIdentifier;

    /**
     * @return The environment identifier of the agent. This is a required field.
     * 
     */
    public Output<String> environmentIdentifier() {
        return this.environmentIdentifier;
    }

    /**
     * The unique identity of the agent. Either this or &#39;name&#39; must be provided.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<String> identity;

    /**
     * @return The unique identity of the agent. Either this or &#39;name&#39; must be provided.
     * 
     */
    public Optional<Output<String>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The name of the agent. Either this or &#39;identity&#39; must be provided.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the agent. Either this or &#39;identity&#39; must be provided.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    @Import(name="orgIdentifier")
    private @Nullable Output<String> orgIdentifier;

    /**
     * @return The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    public Optional<Output<String>> orgIdentifier() {
        return Optional.ofNullable(this.orgIdentifier);
    }

    /**
     * The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    @Import(name="projectIdentifier")
    private @Nullable Output<String> projectIdentifier;

    /**
     * @return The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    public Optional<Output<String>> projectIdentifier() {
        return Optional.ofNullable(this.projectIdentifier);
    }

    private GetDiscoveryAgentArgs() {}

    private GetDiscoveryAgentArgs(GetDiscoveryAgentArgs $) {
        this.environmentIdentifier = $.environmentIdentifier;
        this.identity = $.identity;
        this.name = $.name;
        this.orgIdentifier = $.orgIdentifier;
        this.projectIdentifier = $.projectIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDiscoveryAgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDiscoveryAgentArgs $;

        public Builder() {
            $ = new GetDiscoveryAgentArgs();
        }

        public Builder(GetDiscoveryAgentArgs defaults) {
            $ = new GetDiscoveryAgentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentIdentifier The environment identifier of the agent. This is a required field.
         * 
         * @return builder
         * 
         */
        public Builder environmentIdentifier(Output<String> environmentIdentifier) {
            $.environmentIdentifier = environmentIdentifier;
            return this;
        }

        /**
         * @param environmentIdentifier The environment identifier of the agent. This is a required field.
         * 
         * @return builder
         * 
         */
        public Builder environmentIdentifier(String environmentIdentifier) {
            return environmentIdentifier(Output.of(environmentIdentifier));
        }

        /**
         * @param identity The unique identity of the agent. Either this or &#39;name&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<String> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity The unique identity of the agent. Either this or &#39;name&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder identity(String identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param name The name of the agent. Either this or &#39;identity&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the agent. Either this or &#39;identity&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgIdentifier The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(@Nullable Output<String> orgIdentifier) {
            $.orgIdentifier = orgIdentifier;
            return this;
        }

        /**
         * @param orgIdentifier The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(String orgIdentifier) {
            return orgIdentifier(Output.of(orgIdentifier));
        }

        /**
         * @param projectIdentifier The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(@Nullable Output<String> projectIdentifier) {
            $.projectIdentifier = projectIdentifier;
            return this;
        }

        /**
         * @param projectIdentifier The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(String projectIdentifier) {
            return projectIdentifier(Output.of(projectIdentifier));
        }

        public GetDiscoveryAgentArgs build() {
            if ($.environmentIdentifier == null) {
                throw new MissingRequiredPropertyException("GetDiscoveryAgentArgs", "environmentIdentifier");
            }
            return $;
        }
    }

}
