// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceDirectory;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceHelm;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceKustomize;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourcePlugin;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSource {
    /**
     * @return Helm chart name. Must be specified for applications sourced from a Helm repo.
     * 
     */
    private @Nullable String chart;
    /**
     * @return Path/directory specific options.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceDirectory directory;
    /**
     * @return Helm specific options.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceHelm helm;
    /**
     * @return Kustomize specific options.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceKustomize kustomize;
    /**
     * @return Directory path within the repository. Only valid for applications sourced from Git.
     * 
     */
    private @Nullable String path;
    /**
     * @return Config management plugin specific options.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourcePlugin plugin;
    /**
     * @return Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
     * 
     */
    private @Nullable String ref;
    /**
     * @return URL to the repository (Git or Helm) that contains the application manifests.
     * 
     */
    private @Nullable String repoUrl;
    /**
     * @return Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart&#39;s version.
     * 
     */
    private @Nullable String targetRevision;

    private GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSource() {}
    /**
     * @return Helm chart name. Must be specified for applications sourced from a Helm repo.
     * 
     */
    public Optional<String> chart() {
        return Optional.ofNullable(this.chart);
    }
    /**
     * @return Path/directory specific options.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceDirectory> directory() {
        return Optional.ofNullable(this.directory);
    }
    /**
     * @return Helm specific options.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceHelm> helm() {
        return Optional.ofNullable(this.helm);
    }
    /**
     * @return Kustomize specific options.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceKustomize> kustomize() {
        return Optional.ofNullable(this.kustomize);
    }
    /**
     * @return Directory path within the repository. Only valid for applications sourced from Git.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Config management plugin specific options.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourcePlugin> plugin() {
        return Optional.ofNullable(this.plugin);
    }
    /**
     * @return Reference to another `source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `ref` with `path` and/or `chart`.
     * 
     */
    public Optional<String> ref() {
        return Optional.ofNullable(this.ref);
    }
    /**
     * @return URL to the repository (Git or Helm) that contains the application manifests.
     * 
     */
    public Optional<String> repoUrl() {
        return Optional.ofNullable(this.repoUrl);
    }
    /**
     * @return Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart&#39;s version.
     * 
     */
    public Optional<String> targetRevision() {
        return Optional.ofNullable(this.targetRevision);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String chart;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceDirectory directory;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceHelm helm;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceKustomize kustomize;
        private @Nullable String path;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourcePlugin plugin;
        private @Nullable String ref;
        private @Nullable String repoUrl;
        private @Nullable String targetRevision;
        public Builder() {}
        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chart = defaults.chart;
    	      this.directory = defaults.directory;
    	      this.helm = defaults.helm;
    	      this.kustomize = defaults.kustomize;
    	      this.path = defaults.path;
    	      this.plugin = defaults.plugin;
    	      this.ref = defaults.ref;
    	      this.repoUrl = defaults.repoUrl;
    	      this.targetRevision = defaults.targetRevision;
        }

        @CustomType.Setter
        public Builder chart(@Nullable String chart) {

            this.chart = chart;
            return this;
        }
        @CustomType.Setter
        public Builder directory(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceDirectory directory) {

            this.directory = directory;
            return this;
        }
        @CustomType.Setter
        public Builder helm(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceHelm helm) {

            this.helm = helm;
            return this;
        }
        @CustomType.Setter
        public Builder kustomize(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourceKustomize kustomize) {

            this.kustomize = kustomize;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder plugin(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSourcePlugin plugin) {

            this.plugin = plugin;
            return this;
        }
        @CustomType.Setter
        public Builder ref(@Nullable String ref) {

            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder repoUrl(@Nullable String repoUrl) {

            this.repoUrl = repoUrl;
            return this;
        }
        @CustomType.Setter
        public Builder targetRevision(@Nullable String targetRevision) {

            this.targetRevision = targetRevision;
            return this;
        }
        public GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSource build() {
            final var _resultValue = new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorClusterTemplateSpecSource();
            _resultValue.chart = chart;
            _resultValue.directory = directory;
            _resultValue.helm = helm;
            _resultValue.kustomize = kustomize;
            _resultValue.path = path;
            _resultValue.plugin = plugin;
            _resultValue.ref = ref;
            _resultValue.repoUrl = repoUrl;
            _resultValue.targetRevision = targetRevision;
            return _resultValue;
        }
    }
}
