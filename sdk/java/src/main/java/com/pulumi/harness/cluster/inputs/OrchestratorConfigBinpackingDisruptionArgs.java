// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cluster.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.cluster.inputs.OrchestratorConfigBinpackingDisruptionBudgetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrchestratorConfigBinpackingDisruptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrchestratorConfigBinpackingDisruptionArgs Empty = new OrchestratorConfigBinpackingDisruptionArgs();

    /**
     * Budgets for disruption
     * 
     */
    @Import(name="budgets")
    private @Nullable Output<List<OrchestratorConfigBinpackingDisruptionBudgetArgs>> budgets;

    /**
     * @return Budgets for disruption
     * 
     */
    public Optional<Output<List<OrchestratorConfigBinpackingDisruptionBudgetArgs>>> budgets() {
        return Optional.ofNullable(this.budgets);
    }

    /**
     * Criteria for considering a nodes for disruption
     * 
     */
    @Import(name="criteria")
    private @Nullable Output<String> criteria;

    /**
     * @return Criteria for considering a nodes for disruption
     * 
     */
    public Optional<Output<String>> criteria() {
        return Optional.ofNullable(this.criteria);
    }

    /**
     * Deletion delay
     * 
     */
    @Import(name="delay")
    private @Nullable Output<String> delay;

    /**
     * @return Deletion delay
     * 
     */
    public Optional<Output<String>> delay() {
        return Optional.ofNullable(this.delay);
    }

    private OrchestratorConfigBinpackingDisruptionArgs() {}

    private OrchestratorConfigBinpackingDisruptionArgs(OrchestratorConfigBinpackingDisruptionArgs $) {
        this.budgets = $.budgets;
        this.criteria = $.criteria;
        this.delay = $.delay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrchestratorConfigBinpackingDisruptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrchestratorConfigBinpackingDisruptionArgs $;

        public Builder() {
            $ = new OrchestratorConfigBinpackingDisruptionArgs();
        }

        public Builder(OrchestratorConfigBinpackingDisruptionArgs defaults) {
            $ = new OrchestratorConfigBinpackingDisruptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param budgets Budgets for disruption
         * 
         * @return builder
         * 
         */
        public Builder budgets(@Nullable Output<List<OrchestratorConfigBinpackingDisruptionBudgetArgs>> budgets) {
            $.budgets = budgets;
            return this;
        }

        /**
         * @param budgets Budgets for disruption
         * 
         * @return builder
         * 
         */
        public Builder budgets(List<OrchestratorConfigBinpackingDisruptionBudgetArgs> budgets) {
            return budgets(Output.of(budgets));
        }

        /**
         * @param budgets Budgets for disruption
         * 
         * @return builder
         * 
         */
        public Builder budgets(OrchestratorConfigBinpackingDisruptionBudgetArgs... budgets) {
            return budgets(List.of(budgets));
        }

        /**
         * @param criteria Criteria for considering a nodes for disruption
         * 
         * @return builder
         * 
         */
        public Builder criteria(@Nullable Output<String> criteria) {
            $.criteria = criteria;
            return this;
        }

        /**
         * @param criteria Criteria for considering a nodes for disruption
         * 
         * @return builder
         * 
         */
        public Builder criteria(String criteria) {
            return criteria(Output.of(criteria));
        }

        /**
         * @param delay Deletion delay
         * 
         * @return builder
         * 
         */
        public Builder delay(@Nullable Output<String> delay) {
            $.delay = delay;
            return this;
        }

        /**
         * @param delay Deletion delay
         * 
         * @return builder
         * 
         */
        public Builder delay(String delay) {
            return delay(Output.of(delay));
        }

        public OrchestratorConfigBinpackingDisruptionArgs build() {
            return $;
        }
    }

}
