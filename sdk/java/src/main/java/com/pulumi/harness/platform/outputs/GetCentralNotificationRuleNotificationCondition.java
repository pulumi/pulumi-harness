// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetCentralNotificationRuleNotificationConditionNotificationEventConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCentralNotificationRuleNotificationCondition {
    private String conditionName;
    private List<GetCentralNotificationRuleNotificationConditionNotificationEventConfig> notificationEventConfigs;

    private GetCentralNotificationRuleNotificationCondition() {}
    public String conditionName() {
        return this.conditionName;
    }
    public List<GetCentralNotificationRuleNotificationConditionNotificationEventConfig> notificationEventConfigs() {
        return this.notificationEventConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCentralNotificationRuleNotificationCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String conditionName;
        private List<GetCentralNotificationRuleNotificationConditionNotificationEventConfig> notificationEventConfigs;
        public Builder() {}
        public Builder(GetCentralNotificationRuleNotificationCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditionName = defaults.conditionName;
    	      this.notificationEventConfigs = defaults.notificationEventConfigs;
        }

        @CustomType.Setter
        public Builder conditionName(String conditionName) {
            if (conditionName == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleNotificationCondition", "conditionName");
            }
            this.conditionName = conditionName;
            return this;
        }
        @CustomType.Setter
        public Builder notificationEventConfigs(List<GetCentralNotificationRuleNotificationConditionNotificationEventConfig> notificationEventConfigs) {
            if (notificationEventConfigs == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleNotificationCondition", "notificationEventConfigs");
            }
            this.notificationEventConfigs = notificationEventConfigs;
            return this;
        }
        public Builder notificationEventConfigs(GetCentralNotificationRuleNotificationConditionNotificationEventConfig... notificationEventConfigs) {
            return notificationEventConfigs(List.of(notificationEventConfigs));
        }
        public GetCentralNotificationRuleNotificationCondition build() {
            final var _resultValue = new GetCentralNotificationRuleNotificationCondition();
            _resultValue.conditionName = conditionName;
            _resultValue.notificationEventConfigs = notificationEventConfigs;
            return _resultValue;
        }
    }
}
