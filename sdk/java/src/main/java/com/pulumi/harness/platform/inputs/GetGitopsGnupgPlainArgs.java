// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GetGitopsGnupgRequest;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsGnupgPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsGnupgPlainArgs Empty = new GetGitopsGnupgPlainArgs();

    /**
     * Account Identifier for the GnuPG Key.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    @Import(name="accountId")
    private @Nullable String accountId;

    /**
     * @return Account Identifier for the GnuPG Key.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Agent identifier for the GnuPG Key.
     * 
     */
    @Import(name="agentId", required=true)
    private String agentId;

    /**
     * @return Agent identifier for the GnuPG Key.
     * 
     */
    public String agentId() {
        return this.agentId;
    }

    /**
     * Identifier for the GnuPG Key.
     * 
     */
    @Import(name="identifier", required=true)
    private String identifier;

    /**
     * @return Identifier for the GnuPG Key.
     * 
     */
    public String identifier() {
        return this.identifier;
    }

    /**
     * Organization Identifier for the GnuPG Key.
     * 
     */
    @Import(name="orgId")
    private @Nullable String orgId;

    /**
     * @return Organization Identifier for the GnuPG Key.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Project Identifier for the GnuPG Key.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return Project Identifier for the GnuPG Key.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * GnuPGPublicKey is a representation of a GnuPG public key
     * 
     */
    @Import(name="requests")
    private @Nullable List<GetGitopsGnupgRequest> requests;

    /**
     * @return GnuPGPublicKey is a representation of a GnuPG public key
     * 
     */
    public Optional<List<GetGitopsGnupgRequest>> requests() {
        return Optional.ofNullable(this.requests);
    }

    private GetGitopsGnupgPlainArgs() {}

    private GetGitopsGnupgPlainArgs(GetGitopsGnupgPlainArgs $) {
        this.accountId = $.accountId;
        this.agentId = $.agentId;
        this.identifier = $.identifier;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.requests = $.requests;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsGnupgPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsGnupgPlainArgs $;

        public Builder() {
            $ = new GetGitopsGnupgPlainArgs();
        }

        public Builder(GetGitopsGnupgPlainArgs defaults) {
            $ = new GetGitopsGnupgPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is deprecated and will be removed in a future release.
         * 
         */
        @Deprecated /* This field is deprecated and will be removed in a future release. */
        public Builder accountId(@Nullable String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param agentId Agent identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param identifier Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param orgId Organization Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param projectId Project Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param requests GnuPGPublicKey is a representation of a GnuPG public key
         * 
         * @return builder
         * 
         */
        public Builder requests(@Nullable List<GetGitopsGnupgRequest> requests) {
            $.requests = requests;
            return this;
        }

        /**
         * @param requests GnuPGPublicKey is a representation of a GnuPG public key
         * 
         * @return builder
         * 
         */
        public Builder requests(GetGitopsGnupgRequest... requests) {
            return requests(List.of(requests));
        }

        public GetGitopsGnupgPlainArgs build() {
            if ($.agentId == null) {
                throw new MissingRequiredPropertyException("GetGitopsGnupgPlainArgs", "agentId");
            }
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("GetGitopsGnupgPlainArgs", "identifier");
            }
            return $;
        }
    }

}
