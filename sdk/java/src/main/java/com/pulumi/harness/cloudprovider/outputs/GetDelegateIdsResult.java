// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDelegateIdsResult {
    /**
     * @return A list of delegate ID&#39;s matching the specified search criteria.
     * 
     */
    private List<String> delegateIds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the delegate to query for.
     * 
     */
    private @Nullable String name;
    /**
     * @return The status of the delegate to query for. Valid values are DELETED, ENABLED, WAITING*FOR*APPROVAL
     * 
     */
    private @Nullable String status;
    /**
     * @return The type of the delegate to query for. Valid values are DOCKER, ECS, HELM*DELEGATE, KUBERNETES, SHELL*SCRIPT
     * 
     */
    private @Nullable String type;

    private GetDelegateIdsResult() {}
    /**
     * @return A list of delegate ID&#39;s matching the specified search criteria.
     * 
     */
    public List<String> delegateIds() {
        return this.delegateIds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the delegate to query for.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The status of the delegate to query for. Valid values are DELETED, ENABLED, WAITING*FOR*APPROVAL
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The type of the delegate to query for. Valid values are DOCKER, ECS, HELM*DELEGATE, KUBERNETES, SHELL*SCRIPT
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegateIdsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> delegateIds;
        private String id;
        private @Nullable String name;
        private @Nullable String status;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetDelegateIdsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delegateIds = defaults.delegateIds;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder delegateIds(List<String> delegateIds) {
            if (delegateIds == null) {
              throw new MissingRequiredPropertyException("GetDelegateIdsResult", "delegateIds");
            }
            this.delegateIds = delegateIds;
            return this;
        }
        public Builder delegateIds(String... delegateIds) {
            return delegateIds(List.of(delegateIds));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDelegateIdsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetDelegateIdsResult build() {
            final var _resultValue = new GetDelegateIdsResult();
            _resultValue.delegateIds = delegateIds;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.status = status;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
