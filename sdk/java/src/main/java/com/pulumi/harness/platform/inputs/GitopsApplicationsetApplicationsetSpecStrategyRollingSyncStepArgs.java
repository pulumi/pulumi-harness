// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs Empty = new GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs();

    /**
     * A list of label selector requirements. The requirements are ANDed.
     * 
     */
    @Import(name="matchExpressions")
    private @Nullable Output<List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs>> matchExpressions;

    /**
     * @return A list of label selector requirements. The requirements are ANDed.
     * 
     */
    public Optional<Output<List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs>>> matchExpressions() {
        return Optional.ofNullable(this.matchExpressions);
    }

    /**
     * Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for &gt;0%). Default is 100%, unbounded.
     * 
     */
    @Import(name="maxUpdate")
    private @Nullable Output<String> maxUpdate;

    /**
     * @return Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for &gt;0%). Default is 100%, unbounded.
     * 
     */
    public Optional<Output<String>> maxUpdate() {
        return Optional.ofNullable(this.maxUpdate);
    }

    private GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs() {}

    private GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs $) {
        this.matchExpressions = $.matchExpressions;
        this.maxUpdate = $.maxUpdate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs $;

        public Builder() {
            $ = new GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs();
        }

        public Builder(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs defaults) {
            $ = new GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchExpressions A list of label selector requirements. The requirements are ANDed.
         * 
         * @return builder
         * 
         */
        public Builder matchExpressions(@Nullable Output<List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs>> matchExpressions) {
            $.matchExpressions = matchExpressions;
            return this;
        }

        /**
         * @param matchExpressions A list of label selector requirements. The requirements are ANDed.
         * 
         * @return builder
         * 
         */
        public Builder matchExpressions(List<GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs> matchExpressions) {
            return matchExpressions(Output.of(matchExpressions));
        }

        /**
         * @param matchExpressions A list of label selector requirements. The requirements are ANDed.
         * 
         * @return builder
         * 
         */
        public Builder matchExpressions(GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepMatchExpressionArgs... matchExpressions) {
            return matchExpressions(List.of(matchExpressions));
        }

        /**
         * @param maxUpdate Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for &gt;0%). Default is 100%, unbounded.
         * 
         * @return builder
         * 
         */
        public Builder maxUpdate(@Nullable Output<String> maxUpdate) {
            $.maxUpdate = maxUpdate;
            return this;
        }

        /**
         * @param maxUpdate Maximum number of simultaneous Application updates in a group. Supports both integer and percentage string values (rounds down, but floored at 1 Application for &gt;0%). Default is 100%, unbounded.
         * 
         * @return builder
         * 
         */
        public Builder maxUpdate(String maxUpdate) {
            return maxUpdate(Output.of(maxUpdate));
        }

        public GitopsApplicationsetApplicationsetSpecStrategyRollingSyncStepArgs build() {
            return $;
        }
    }

}
