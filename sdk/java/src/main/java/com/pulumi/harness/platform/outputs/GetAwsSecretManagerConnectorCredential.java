// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetAwsSecretManagerConnectorCredentialAssumeRole;
import com.pulumi.harness.platform.outputs.GetAwsSecretManagerConnectorCredentialManual;
import com.pulumi.harness.platform.outputs.GetAwsSecretManagerConnectorCredentialOidcAuthentication;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAwsSecretManagerConnectorCredential {
    /**
     * @return Connect using STS assume role.
     * 
     */
    private List<GetAwsSecretManagerConnectorCredentialAssumeRole> assumeRoles;
    /**
     * @return Inherit the credentials from from the delegate.
     * 
     */
    private Boolean inheritFromDelegate;
    /**
     * @return Specify the AWS key and secret used for authenticating.
     * 
     */
    private List<GetAwsSecretManagerConnectorCredentialManual> manuals;
    /**
     * @return Authentication using OIDC.
     * 
     */
    private List<GetAwsSecretManagerConnectorCredentialOidcAuthentication> oidcAuthentications;

    private GetAwsSecretManagerConnectorCredential() {}
    /**
     * @return Connect using STS assume role.
     * 
     */
    public List<GetAwsSecretManagerConnectorCredentialAssumeRole> assumeRoles() {
        return this.assumeRoles;
    }
    /**
     * @return Inherit the credentials from from the delegate.
     * 
     */
    public Boolean inheritFromDelegate() {
        return this.inheritFromDelegate;
    }
    /**
     * @return Specify the AWS key and secret used for authenticating.
     * 
     */
    public List<GetAwsSecretManagerConnectorCredentialManual> manuals() {
        return this.manuals;
    }
    /**
     * @return Authentication using OIDC.
     * 
     */
    public List<GetAwsSecretManagerConnectorCredentialOidcAuthentication> oidcAuthentications() {
        return this.oidcAuthentications;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAwsSecretManagerConnectorCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAwsSecretManagerConnectorCredentialAssumeRole> assumeRoles;
        private Boolean inheritFromDelegate;
        private List<GetAwsSecretManagerConnectorCredentialManual> manuals;
        private List<GetAwsSecretManagerConnectorCredentialOidcAuthentication> oidcAuthentications;
        public Builder() {}
        public Builder(GetAwsSecretManagerConnectorCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assumeRoles = defaults.assumeRoles;
    	      this.inheritFromDelegate = defaults.inheritFromDelegate;
    	      this.manuals = defaults.manuals;
    	      this.oidcAuthentications = defaults.oidcAuthentications;
        }

        @CustomType.Setter
        public Builder assumeRoles(List<GetAwsSecretManagerConnectorCredentialAssumeRole> assumeRoles) {
            if (assumeRoles == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredential", "assumeRoles");
            }
            this.assumeRoles = assumeRoles;
            return this;
        }
        public Builder assumeRoles(GetAwsSecretManagerConnectorCredentialAssumeRole... assumeRoles) {
            return assumeRoles(List.of(assumeRoles));
        }
        @CustomType.Setter
        public Builder inheritFromDelegate(Boolean inheritFromDelegate) {
            if (inheritFromDelegate == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredential", "inheritFromDelegate");
            }
            this.inheritFromDelegate = inheritFromDelegate;
            return this;
        }
        @CustomType.Setter
        public Builder manuals(List<GetAwsSecretManagerConnectorCredentialManual> manuals) {
            if (manuals == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredential", "manuals");
            }
            this.manuals = manuals;
            return this;
        }
        public Builder manuals(GetAwsSecretManagerConnectorCredentialManual... manuals) {
            return manuals(List.of(manuals));
        }
        @CustomType.Setter
        public Builder oidcAuthentications(List<GetAwsSecretManagerConnectorCredentialOidcAuthentication> oidcAuthentications) {
            if (oidcAuthentications == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredential", "oidcAuthentications");
            }
            this.oidcAuthentications = oidcAuthentications;
            return this;
        }
        public Builder oidcAuthentications(GetAwsSecretManagerConnectorCredentialOidcAuthentication... oidcAuthentications) {
            return oidcAuthentications(List.of(oidcAuthentications));
        }
        public GetAwsSecretManagerConnectorCredential build() {
            final var _resultValue = new GetAwsSecretManagerConnectorCredential();
            _resultValue.assumeRoles = assumeRoles;
            _resultValue.inheritFromDelegate = inheritFromDelegate;
            _resultValue.manuals = manuals;
            _resultValue.oidcAuthentications = oidcAuthentications;
            return _resultValue;
        }
    }
}
