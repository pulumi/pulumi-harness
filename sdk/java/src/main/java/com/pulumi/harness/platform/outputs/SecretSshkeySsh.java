// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.SecretSshkeySshSshPasswordCredential;
import com.pulumi.harness.platform.outputs.SecretSshkeySshSshkeyPathCredential;
import com.pulumi.harness.platform.outputs.SecretSshkeySshSshkeyReferenceCredential;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecretSshkeySsh {
    /**
     * @return This specifies SSH credential type as Password, KeyPath or KeyReference
     * 
     */
    private String credentialType;
    /**
     * @return SSH credential of type keyReference
     * 
     */
    private @Nullable SecretSshkeySshSshPasswordCredential sshPasswordCredential;
    /**
     * @return SSH credential of type keyPath
     * 
     */
    private @Nullable SecretSshkeySshSshkeyPathCredential sshkeyPathCredential;
    /**
     * @return SSH credential of type keyReference
     * 
     */
    private @Nullable SecretSshkeySshSshkeyReferenceCredential sshkeyReferenceCredential;

    private SecretSshkeySsh() {}
    /**
     * @return This specifies SSH credential type as Password, KeyPath or KeyReference
     * 
     */
    public String credentialType() {
        return this.credentialType;
    }
    /**
     * @return SSH credential of type keyReference
     * 
     */
    public Optional<SecretSshkeySshSshPasswordCredential> sshPasswordCredential() {
        return Optional.ofNullable(this.sshPasswordCredential);
    }
    /**
     * @return SSH credential of type keyPath
     * 
     */
    public Optional<SecretSshkeySshSshkeyPathCredential> sshkeyPathCredential() {
        return Optional.ofNullable(this.sshkeyPathCredential);
    }
    /**
     * @return SSH credential of type keyReference
     * 
     */
    public Optional<SecretSshkeySshSshkeyReferenceCredential> sshkeyReferenceCredential() {
        return Optional.ofNullable(this.sshkeyReferenceCredential);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretSshkeySsh defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String credentialType;
        private @Nullable SecretSshkeySshSshPasswordCredential sshPasswordCredential;
        private @Nullable SecretSshkeySshSshkeyPathCredential sshkeyPathCredential;
        private @Nullable SecretSshkeySshSshkeyReferenceCredential sshkeyReferenceCredential;
        public Builder() {}
        public Builder(SecretSshkeySsh defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialType = defaults.credentialType;
    	      this.sshPasswordCredential = defaults.sshPasswordCredential;
    	      this.sshkeyPathCredential = defaults.sshkeyPathCredential;
    	      this.sshkeyReferenceCredential = defaults.sshkeyReferenceCredential;
        }

        @CustomType.Setter
        public Builder credentialType(String credentialType) {
            if (credentialType == null) {
              throw new MissingRequiredPropertyException("SecretSshkeySsh", "credentialType");
            }
            this.credentialType = credentialType;
            return this;
        }
        @CustomType.Setter
        public Builder sshPasswordCredential(@Nullable SecretSshkeySshSshPasswordCredential sshPasswordCredential) {

            this.sshPasswordCredential = sshPasswordCredential;
            return this;
        }
        @CustomType.Setter
        public Builder sshkeyPathCredential(@Nullable SecretSshkeySshSshkeyPathCredential sshkeyPathCredential) {

            this.sshkeyPathCredential = sshkeyPathCredential;
            return this;
        }
        @CustomType.Setter
        public Builder sshkeyReferenceCredential(@Nullable SecretSshkeySshSshkeyReferenceCredential sshkeyReferenceCredential) {

            this.sshkeyReferenceCredential = sshkeyReferenceCredential;
            return this;
        }
        public SecretSshkeySsh build() {
            final var _resultValue = new SecretSshkeySsh();
            _resultValue.credentialType = credentialType;
            _resultValue.sshPasswordCredential = sshPasswordCredential;
            _resultValue.sshkeyPathCredential = sshkeyPathCredential;
            _resultValue.sshkeyReferenceCredential = sshkeyReferenceCredential;
            return _resultValue;
        }
    }
}
