// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.GitopsApplicationsetArgs;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetState;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationset;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing a Harness Gitops Applicationset. Please note this resource is in an alpha/experimental state and is subject to change.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.GitopsApplicationset;
 * import com.pulumi.harness.platform.GitopsApplicationsetArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetMetadataArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecTemplateArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecTemplateSpecArgs;
 * import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testFixed = new GitopsApplicationset("testFixed", GitopsApplicationsetArgs.builder()
 *             .orgId("default")
 *             .projectId("projectId")
 *             .agentId("account.agentuseast1")
 *             .upsert(true)
 *             .applicationset(GitopsApplicationsetApplicationsetArgs.builder()
 *                 .metadata(GitopsApplicationsetApplicationsetMetadataArgs.builder()
 *                     .name("tf-appset")
 *                     .namespace("argocd")
 *                     .build())
 *                 .spec(GitopsApplicationsetApplicationsetSpecArgs.builder()
 *                     .goTemplate(true)
 *                     .generators(GitopsApplicationsetApplicationsetSpecGeneratorArgs.builder()
 *                         .clusters(GitopsApplicationsetApplicationsetSpecGeneratorClusterArgs.builder()
 *                             .enabled(true)
 *                             .build())
 *                         .build())
 *                     .template(GitopsApplicationsetApplicationsetSpecTemplateArgs.builder()
 *                         .metadata(GitopsApplicationsetApplicationsetSpecTemplateMetadataArgs.builder()
 *                             .name("{{.name}}-guestbook")
 *                             .labels(Map.ofEntries(
 *                                 Map.entry("env", "dev"),
 *                                 Map.entry("harness.io/serviceRef", "svc1")
 *                             ))
 *                             .build())
 *                         .spec(GitopsApplicationsetApplicationsetSpecTemplateSpecArgs.builder()
 *                             .project("default")
 *                             .sources(GitopsApplicationsetApplicationsetSpecTemplateSpecSourceArgs.builder()
 *                                 .repoUrl("https://github.com/argoproj/argocd-example-apps.git")
 *                                 .path("helm-guestbook")
 *                                 .targetRevision("HEAD")
 *                                 .build())
 *                             .destination(GitopsApplicationsetApplicationsetSpecTemplateSpecDestinationArgs.builder()
 *                                 .server("{{.url}}")
 *                                 .namespace("app-ns-{{.name}}")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="harness:platform/gitopsApplicationset:GitopsApplicationset")
public class GitopsApplicationset extends com.pulumi.resources.CustomResource {
    /**
     * Agent identifier of the GitOps applicationset.
     * 
     */
    @Export(name="agentId", refs={String.class}, tree="[0]")
    private Output<String> agentId;

    /**
     * @return Agent identifier of the GitOps applicationset.
     * 
     */
    public Output<String> agentId() {
        return this.agentId;
    }
    /**
     * Definition of the GitOps applicationset resource.
     * 
     */
    @Export(name="applicationset", refs={GitopsApplicationsetApplicationset.class}, tree="[0]")
    private Output<GitopsApplicationsetApplicationset> applicationset;

    /**
     * @return Definition of the GitOps applicationset resource.
     * 
     */
    public Output<GitopsApplicationsetApplicationset> applicationset() {
        return this.applicationset;
    }
    /**
     * Identifier of the GitOps applicationset. This is a unique identifier for the applicationset generated automatically.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Identifier of the GitOps applicationset. This is a unique identifier for the applicationset generated automatically.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Organization identifier of the GitOps applicationset.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return Organization identifier of the GitOps applicationset.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Project identifier of the GitOps applicationset.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return Project identifier of the GitOps applicationset.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Indicates if the GitOps application should be updated if existing and inserted if not.
     * 
     */
    @Export(name="upsert", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> upsert;

    /**
     * @return Indicates if the GitOps application should be updated if existing and inserted if not.
     * 
     */
    public Output<Optional<Boolean>> upsert() {
        return Codegen.optional(this.upsert);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GitopsApplicationset(java.lang.String name) {
        this(name, GitopsApplicationsetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GitopsApplicationset(java.lang.String name, GitopsApplicationsetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GitopsApplicationset(java.lang.String name, GitopsApplicationsetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/gitopsApplicationset:GitopsApplicationset", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GitopsApplicationset(java.lang.String name, Output<java.lang.String> id, @Nullable GitopsApplicationsetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/gitopsApplicationset:GitopsApplicationset", name, state, makeResourceOptions(options, id), false);
    }

    private static GitopsApplicationsetArgs makeArgs(GitopsApplicationsetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GitopsApplicationsetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GitopsApplicationset get(java.lang.String name, Output<java.lang.String> id, @Nullable GitopsApplicationsetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GitopsApplicationset(name, id, state, options);
    }
}
