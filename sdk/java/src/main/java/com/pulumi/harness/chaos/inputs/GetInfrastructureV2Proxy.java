// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInfrastructureV2Proxy extends com.pulumi.resources.InvokeArgs {

    public static final GetInfrastructureV2Proxy Empty = new GetInfrastructureV2Proxy();

    /**
     * HTTP proxy URL.
     * 
     */
    @Import(name="httpProxy")
    private @Nullable String httpProxy;

    /**
     * @return HTTP proxy URL.
     * 
     */
    public Optional<String> httpProxy() {
        return Optional.ofNullable(this.httpProxy);
    }

    /**
     * HTTPS proxy URL.
     * 
     */
    @Import(name="httpsProxy")
    private @Nullable String httpsProxy;

    /**
     * @return HTTPS proxy URL.
     * 
     */
    public Optional<String> httpsProxy() {
        return Optional.ofNullable(this.httpsProxy);
    }

    /**
     * List of hosts that should not use proxy.
     * 
     */
    @Import(name="noProxy")
    private @Nullable String noProxy;

    /**
     * @return List of hosts that should not use proxy.
     * 
     */
    public Optional<String> noProxy() {
        return Optional.ofNullable(this.noProxy);
    }

    /**
     * Proxy URL.
     * 
     */
    @Import(name="url", required=true)
    private String url;

    /**
     * @return Proxy URL.
     * 
     */
    public String url() {
        return this.url;
    }

    private GetInfrastructureV2Proxy() {}

    private GetInfrastructureV2Proxy(GetInfrastructureV2Proxy $) {
        this.httpProxy = $.httpProxy;
        this.httpsProxy = $.httpsProxy;
        this.noProxy = $.noProxy;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInfrastructureV2Proxy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInfrastructureV2Proxy $;

        public Builder() {
            $ = new GetInfrastructureV2Proxy();
        }

        public Builder(GetInfrastructureV2Proxy defaults) {
            $ = new GetInfrastructureV2Proxy(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpProxy HTTP proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder httpProxy(@Nullable String httpProxy) {
            $.httpProxy = httpProxy;
            return this;
        }

        /**
         * @param httpsProxy HTTPS proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxy(@Nullable String httpsProxy) {
            $.httpsProxy = httpsProxy;
            return this;
        }

        /**
         * @param noProxy List of hosts that should not use proxy.
         * 
         * @return builder
         * 
         */
        public Builder noProxy(@Nullable String noProxy) {
            $.noProxy = noProxy;
            return this;
        }

        /**
         * @param url Proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public GetInfrastructureV2Proxy build() {
            if ($.url == null) {
                throw new MissingRequiredPropertyException("GetInfrastructureV2Proxy", "url");
            }
            return $;
        }
    }

}
