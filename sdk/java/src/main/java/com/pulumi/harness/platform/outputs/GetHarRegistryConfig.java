// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetHarRegistryConfigAuth;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHarRegistryConfig {
    /**
     * @return Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
     * 
     */
    private @Nullable String authType;
    /**
     * @return Authentication configuration for UPSTREAM registry type
     * 
     */
    private @Nullable List<GetHarRegistryConfigAuth> auths;
    /**
     * @return Upstream source
     * 
     */
    private @Nullable String source;
    /**
     * @return Type of registry (VIRTUAL or UPSTREAM)
     * 
     */
    private String type;
    /**
     * @return List of upstream proxies for VIRTUAL registry type
     * 
     */
    private @Nullable List<String> upstreamProxies;
    /**
     * @return URL of the upstream (required if type=UPSTREAM &amp; package_type=HELM)
     * 
     */
    private @Nullable String url;

    private GetHarRegistryConfig() {}
    /**
     * @return Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
     * 
     */
    public Optional<String> authType() {
        return Optional.ofNullable(this.authType);
    }
    /**
     * @return Authentication configuration for UPSTREAM registry type
     * 
     */
    public List<GetHarRegistryConfigAuth> auths() {
        return this.auths == null ? List.of() : this.auths;
    }
    /**
     * @return Upstream source
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return Type of registry (VIRTUAL or UPSTREAM)
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return List of upstream proxies for VIRTUAL registry type
     * 
     */
    public List<String> upstreamProxies() {
        return this.upstreamProxies == null ? List.of() : this.upstreamProxies;
    }
    /**
     * @return URL of the upstream (required if type=UPSTREAM &amp; package_type=HELM)
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHarRegistryConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authType;
        private @Nullable List<GetHarRegistryConfigAuth> auths;
        private @Nullable String source;
        private String type;
        private @Nullable List<String> upstreamProxies;
        private @Nullable String url;
        public Builder() {}
        public Builder(GetHarRegistryConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.auths = defaults.auths;
    	      this.source = defaults.source;
    	      this.type = defaults.type;
    	      this.upstreamProxies = defaults.upstreamProxies;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder authType(@Nullable String authType) {

            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder auths(@Nullable List<GetHarRegistryConfigAuth> auths) {

            this.auths = auths;
            return this;
        }
        public Builder auths(GetHarRegistryConfigAuth... auths) {
            return auths(List.of(auths));
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetHarRegistryConfig", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder upstreamProxies(@Nullable List<String> upstreamProxies) {

            this.upstreamProxies = upstreamProxies;
            return this;
        }
        public Builder upstreamProxies(String... upstreamProxies) {
            return upstreamProxies(List.of(upstreamProxies));
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        public GetHarRegistryConfig build() {
            final var _resultValue = new GetHarRegistryConfig();
            _resultValue.authType = authType;
            _resultValue.auths = auths;
            _resultValue.source = source;
            _resultValue.type = type;
            _resultValue.upstreamProxies = upstreamProxies;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
