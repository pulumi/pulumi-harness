// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.inputs.GetRuleVmFilterTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuleVmFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetRuleVmFilter Empty = new GetRuleVmFilter();

    /**
     * Regions of instances that needs to be managed using the AutoStopping rules
     * 
     */
    @Import(name="regions")
    private @Nullable List<String> regions;

    /**
     * @return Regions of instances that needs to be managed using the AutoStopping rules
     * 
     */
    public Optional<List<String>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * Tags of instances that needs to be managed using the AutoStopping rules
     * 
     */
    @Import(name="tags")
    private @Nullable List<GetRuleVmFilterTag> tags;

    /**
     * @return Tags of instances that needs to be managed using the AutoStopping rules
     * 
     */
    public Optional<List<GetRuleVmFilterTag>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Ids of instances that needs to be managed using the AutoStopping rules
     * 
     */
    @Import(name="vmIds", required=true)
    private List<String> vmIds;

    /**
     * @return Ids of instances that needs to be managed using the AutoStopping rules
     * 
     */
    public List<String> vmIds() {
        return this.vmIds;
    }

    /**
     * Zones of instances that needs to be managed using the AutoStopping rules
     * 
     */
    @Import(name="zones")
    private @Nullable List<String> zones;

    /**
     * @return Zones of instances that needs to be managed using the AutoStopping rules
     * 
     */
    public Optional<List<String>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private GetRuleVmFilter() {}

    private GetRuleVmFilter(GetRuleVmFilter $) {
        this.regions = $.regions;
        this.tags = $.tags;
        this.vmIds = $.vmIds;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuleVmFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuleVmFilter $;

        public Builder() {
            $ = new GetRuleVmFilter();
        }

        public Builder(GetRuleVmFilter defaults) {
            $ = new GetRuleVmFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param regions Regions of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable List<String> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions Regions of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param tags Tags of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<GetRuleVmFilterTag> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder tags(GetRuleVmFilterTag... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param vmIds Ids of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder vmIds(List<String> vmIds) {
            $.vmIds = vmIds;
            return this;
        }

        /**
         * @param vmIds Ids of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder vmIds(String... vmIds) {
            return vmIds(List.of(vmIds));
        }

        /**
         * @param zones Zones of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable List<String> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones Zones of instances that needs to be managed using the AutoStopping rules
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public GetRuleVmFilter build() {
            if ($.vmIds == null) {
                throw new MissingRequiredPropertyException("GetRuleVmFilter", "vmIds");
            }
            return $;
        }
    }

}
