// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEnvironmentGroupArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentGroupArgs Empty = new GetEnvironmentGroupArgs();

    /**
     * Color of the environment group.
     * 
     */
    @Import(name="color")
    private @Nullable Output<String> color;

    /**
     * @return Color of the environment group.
     * 
     */
    public Optional<Output<String>> color() {
        return Optional.ofNullable(this.color);
    }

    /**
     * identifier of the environment group.
     * 
     */
    @Import(name="identifier", required=true)
    private Output<String> identifier;

    /**
     * @return identifier of the environment group.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }

    /**
     * org_id of the environment group.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return org_id of the environment group.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * project_id of the environment group.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return project_id of the environment group.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private GetEnvironmentGroupArgs() {}

    private GetEnvironmentGroupArgs(GetEnvironmentGroupArgs $) {
        this.color = $.color;
        this.identifier = $.identifier;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentGroupArgs $;

        public Builder() {
            $ = new GetEnvironmentGroupArgs();
        }

        public Builder(GetEnvironmentGroupArgs defaults) {
            $ = new GetEnvironmentGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param color Color of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder color(@Nullable Output<String> color) {
            $.color = color;
            return this;
        }

        /**
         * @param color Color of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder color(String color) {
            return color(Output.of(color));
        }

        /**
         * @param identifier identifier of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier identifier of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param orgId org_id of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId org_id of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param projectId project_id of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId project_id of the environment group.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public GetEnvironmentGroupArgs build() {
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentGroupArgs", "identifier");
            }
            return $;
        }
    }

}
