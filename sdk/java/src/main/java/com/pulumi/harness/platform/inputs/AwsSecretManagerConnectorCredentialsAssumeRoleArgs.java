// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsSecretManagerConnectorCredentialsAssumeRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsSecretManagerConnectorCredentialsAssumeRoleArgs Empty = new AwsSecretManagerConnectorCredentialsAssumeRoleArgs();

    /**
     * The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
     * 
     */
    @Import(name="duration", required=true)
    private Output<Integer> duration;

    /**
     * @return The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
     * 
     */
    public Output<Integer> duration() {
        return this.duration;
    }

    /**
     * If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * The ARN of the role to assume.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the role to assume.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private AwsSecretManagerConnectorCredentialsAssumeRoleArgs() {}

    private AwsSecretManagerConnectorCredentialsAssumeRoleArgs(AwsSecretManagerConnectorCredentialsAssumeRoleArgs $) {
        this.duration = $.duration;
        this.externalId = $.externalId;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsSecretManagerConnectorCredentialsAssumeRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsSecretManagerConnectorCredentialsAssumeRoleArgs $;

        public Builder() {
            $ = new AwsSecretManagerConnectorCredentialsAssumeRoleArgs();
        }

        public Builder(AwsSecretManagerConnectorCredentialsAssumeRoleArgs defaults) {
            $ = new AwsSecretManagerConnectorCredentialsAssumeRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param duration The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
         * 
         * @return builder
         * 
         */
        public Builder duration(Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
         * 
         * @return builder
         * 
         */
        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param externalId If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param roleArn The ARN of the role to assume.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the role to assume.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public AwsSecretManagerConnectorCredentialsAssumeRoleArgs build() {
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("AwsSecretManagerConnectorCredentialsAssumeRoleArgs", "duration");
            }
            if ($.roleArn == null) {
                throw new MissingRequiredPropertyException("AwsSecretManagerConnectorCredentialsAssumeRoleArgs", "roleArn");
            }
            return $;
        }
    }

}
