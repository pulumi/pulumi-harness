// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetDefaultNotificationTemplateSetEventTemplateConfigurationSet;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDefaultNotificationTemplateSetResult {
    /**
     * @return Timestamp when the notification rule was created.
     * 
     */
    private Integer created;
    /**
     * @return Description for Default Notification Template Set
     * 
     */
    private @Nullable String description;
    /**
     * @return Set of event-template configurations
     * 
     */
    private List<GetDefaultNotificationTemplateSetEventTemplateConfigurationSet> eventTemplateConfigurationSets;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Identifier of Default Notification Template Set
     * 
     */
    private String identifier;
    /**
     * @return Timestamp when the notification rule was last modified.
     * 
     */
    private Integer lastModified;
    /**
     * @return Name of Default Notification Template Set
     * 
     */
    private String name;
    /**
     * @return Type of channel (e.g. SLACK, EMAIL, etc.)
     * 
     */
    private String notificationChannelType;
    /**
     * @return Type of the entity (e.g. PIPELINE, SERVICE, etc.)
     * 
     */
    private String notificationEntity;
    /**
     * @return Key-value tags
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetDefaultNotificationTemplateSetResult() {}
    /**
     * @return Timestamp when the notification rule was created.
     * 
     */
    public Integer created() {
        return this.created;
    }
    /**
     * @return Description for Default Notification Template Set
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Set of event-template configurations
     * 
     */
    public List<GetDefaultNotificationTemplateSetEventTemplateConfigurationSet> eventTemplateConfigurationSets() {
        return this.eventTemplateConfigurationSets;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Identifier of Default Notification Template Set
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Timestamp when the notification rule was last modified.
     * 
     */
    public Integer lastModified() {
        return this.lastModified;
    }
    /**
     * @return Name of Default Notification Template Set
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Type of channel (e.g. SLACK, EMAIL, etc.)
     * 
     */
    public String notificationChannelType() {
        return this.notificationChannelType;
    }
    /**
     * @return Type of the entity (e.g. PIPELINE, SERVICE, etc.)
     * 
     */
    public String notificationEntity() {
        return this.notificationEntity;
    }
    /**
     * @return Key-value tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefaultNotificationTemplateSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer created;
        private @Nullable String description;
        private List<GetDefaultNotificationTemplateSetEventTemplateConfigurationSet> eventTemplateConfigurationSets;
        private String id;
        private String identifier;
        private Integer lastModified;
        private String name;
        private String notificationChannelType;
        private String notificationEntity;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetDefaultNotificationTemplateSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.description = defaults.description;
    	      this.eventTemplateConfigurationSets = defaults.eventTemplateConfigurationSets;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.notificationChannelType = defaults.notificationChannelType;
    	      this.notificationEntity = defaults.notificationEntity;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder created(Integer created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder eventTemplateConfigurationSets(List<GetDefaultNotificationTemplateSetEventTemplateConfigurationSet> eventTemplateConfigurationSets) {
            if (eventTemplateConfigurationSets == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "eventTemplateConfigurationSets");
            }
            this.eventTemplateConfigurationSets = eventTemplateConfigurationSets;
            return this;
        }
        public Builder eventTemplateConfigurationSets(GetDefaultNotificationTemplateSetEventTemplateConfigurationSet... eventTemplateConfigurationSets) {
            return eventTemplateConfigurationSets(List.of(eventTemplateConfigurationSets));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(Integer lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notificationChannelType(String notificationChannelType) {
            if (notificationChannelType == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "notificationChannelType");
            }
            this.notificationChannelType = notificationChannelType;
            return this;
        }
        @CustomType.Setter
        public Builder notificationEntity(String notificationEntity) {
            if (notificationEntity == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetResult", "notificationEntity");
            }
            this.notificationEntity = notificationEntity;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        public GetDefaultNotificationTemplateSetResult build() {
            final var _resultValue = new GetDefaultNotificationTemplateSetResult();
            _resultValue.created = created;
            _resultValue.description = description;
            _resultValue.eventTemplateConfigurationSets = eventTemplateConfigurationSets;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.notificationChannelType = notificationChannelType;
            _resultValue.notificationEntity = notificationEntity;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
