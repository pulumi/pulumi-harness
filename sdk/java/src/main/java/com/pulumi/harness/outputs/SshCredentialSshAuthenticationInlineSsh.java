// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SshCredentialSshAuthenticationInlineSsh {
    /**
     * @return The id of the encrypted secret to use
     * 
     */
    private @Nullable String passphraseSecretId;
    /**
     * @return The id of the secret containing the SSH key
     * 
     */
    private String sshKeyFileId;

    private SshCredentialSshAuthenticationInlineSsh() {}
    /**
     * @return The id of the encrypted secret to use
     * 
     */
    public Optional<String> passphraseSecretId() {
        return Optional.ofNullable(this.passphraseSecretId);
    }
    /**
     * @return The id of the secret containing the SSH key
     * 
     */
    public String sshKeyFileId() {
        return this.sshKeyFileId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SshCredentialSshAuthenticationInlineSsh defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String passphraseSecretId;
        private String sshKeyFileId;
        public Builder() {}
        public Builder(SshCredentialSshAuthenticationInlineSsh defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passphraseSecretId = defaults.passphraseSecretId;
    	      this.sshKeyFileId = defaults.sshKeyFileId;
        }

        @CustomType.Setter
        public Builder passphraseSecretId(@Nullable String passphraseSecretId) {

            this.passphraseSecretId = passphraseSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder sshKeyFileId(String sshKeyFileId) {
            if (sshKeyFileId == null) {
              throw new MissingRequiredPropertyException("SshCredentialSshAuthenticationInlineSsh", "sshKeyFileId");
            }
            this.sshKeyFileId = sshKeyFileId;
            return this;
        }
        public SshCredentialSshAuthenticationInlineSsh build() {
            final var _resultValue = new SshCredentialSshAuthenticationInlineSsh();
            _resultValue.passphraseSecretId = passphraseSecretId;
            _resultValue.sshKeyFileId = sshKeyFileId;
            return _resultValue;
        }
    }
}
