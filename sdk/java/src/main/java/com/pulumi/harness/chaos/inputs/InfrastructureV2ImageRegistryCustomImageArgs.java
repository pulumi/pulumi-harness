// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfrastructureV2ImageRegistryCustomImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureV2ImageRegistryCustomImageArgs Empty = new InfrastructureV2ImageRegistryCustomImageArgs();

    /**
     * Custom image for ddcr.
     * 
     */
    @Import(name="ddcr")
    private @Nullable Output<String> ddcr;

    /**
     * @return Custom image for ddcr.
     * 
     */
    public Optional<Output<String>> ddcr() {
        return Optional.ofNullable(this.ddcr);
    }

    /**
     * Custom image for ddcr-fault.
     * 
     */
    @Import(name="ddcrFault")
    private @Nullable Output<String> ddcrFault;

    /**
     * @return Custom image for ddcr-fault.
     * 
     */
    public Optional<Output<String>> ddcrFault() {
        return Optional.ofNullable(this.ddcrFault);
    }

    /**
     * Custom image for ddcr-lib.
     * 
     */
    @Import(name="ddcrLib")
    private @Nullable Output<String> ddcrLib;

    /**
     * @return Custom image for ddcr-lib.
     * 
     */
    public Optional<Output<String>> ddcrLib() {
        return Optional.ofNullable(this.ddcrLib);
    }

    /**
     * Custom image for log-watcher.
     * 
     */
    @Import(name="logWatcher")
    private @Nullable Output<String> logWatcher;

    /**
     * @return Custom image for log-watcher.
     * 
     */
    public Optional<Output<String>> logWatcher() {
        return Optional.ofNullable(this.logWatcher);
    }

    private InfrastructureV2ImageRegistryCustomImageArgs() {}

    private InfrastructureV2ImageRegistryCustomImageArgs(InfrastructureV2ImageRegistryCustomImageArgs $) {
        this.ddcr = $.ddcr;
        this.ddcrFault = $.ddcrFault;
        this.ddcrLib = $.ddcrLib;
        this.logWatcher = $.logWatcher;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureV2ImageRegistryCustomImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureV2ImageRegistryCustomImageArgs $;

        public Builder() {
            $ = new InfrastructureV2ImageRegistryCustomImageArgs();
        }

        public Builder(InfrastructureV2ImageRegistryCustomImageArgs defaults) {
            $ = new InfrastructureV2ImageRegistryCustomImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ddcr Custom image for ddcr.
         * 
         * @return builder
         * 
         */
        public Builder ddcr(@Nullable Output<String> ddcr) {
            $.ddcr = ddcr;
            return this;
        }

        /**
         * @param ddcr Custom image for ddcr.
         * 
         * @return builder
         * 
         */
        public Builder ddcr(String ddcr) {
            return ddcr(Output.of(ddcr));
        }

        /**
         * @param ddcrFault Custom image for ddcr-fault.
         * 
         * @return builder
         * 
         */
        public Builder ddcrFault(@Nullable Output<String> ddcrFault) {
            $.ddcrFault = ddcrFault;
            return this;
        }

        /**
         * @param ddcrFault Custom image for ddcr-fault.
         * 
         * @return builder
         * 
         */
        public Builder ddcrFault(String ddcrFault) {
            return ddcrFault(Output.of(ddcrFault));
        }

        /**
         * @param ddcrLib Custom image for ddcr-lib.
         * 
         * @return builder
         * 
         */
        public Builder ddcrLib(@Nullable Output<String> ddcrLib) {
            $.ddcrLib = ddcrLib;
            return this;
        }

        /**
         * @param ddcrLib Custom image for ddcr-lib.
         * 
         * @return builder
         * 
         */
        public Builder ddcrLib(String ddcrLib) {
            return ddcrLib(Output.of(ddcrLib));
        }

        /**
         * @param logWatcher Custom image for log-watcher.
         * 
         * @return builder
         * 
         */
        public Builder logWatcher(@Nullable Output<String> logWatcher) {
            $.logWatcher = logWatcher;
            return this;
        }

        /**
         * @param logWatcher Custom image for log-watcher.
         * 
         * @return builder
         * 
         */
        public Builder logWatcher(String logWatcher) {
            return logWatcher(Output.of(logWatcher));
        }

        public InfrastructureV2ImageRegistryCustomImageArgs build() {
            return $;
        }
    }

}
