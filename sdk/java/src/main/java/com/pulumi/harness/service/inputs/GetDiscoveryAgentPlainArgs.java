// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDiscoveryAgentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDiscoveryAgentPlainArgs Empty = new GetDiscoveryAgentPlainArgs();

    /**
     * The environment identifier of the agent. This is a required field.
     * 
     */
    @Import(name="environmentIdentifier", required=true)
    private String environmentIdentifier;

    /**
     * @return The environment identifier of the agent. This is a required field.
     * 
     */
    public String environmentIdentifier() {
        return this.environmentIdentifier;
    }

    /**
     * The unique identity of the agent. Either this or &#39;name&#39; must be provided.
     * 
     */
    @Import(name="identity")
    private @Nullable String identity;

    /**
     * @return The unique identity of the agent. Either this or &#39;name&#39; must be provided.
     * 
     */
    public Optional<String> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The name of the agent. Either this or &#39;identity&#39; must be provided.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the agent. Either this or &#39;identity&#39; must be provided.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    @Import(name="orgIdentifier")
    private @Nullable String orgIdentifier;

    /**
     * @return The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    public Optional<String> orgIdentifier() {
        return Optional.ofNullable(this.orgIdentifier);
    }

    /**
     * The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    @Import(name="projectIdentifier")
    private @Nullable String projectIdentifier;

    /**
     * @return The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
     * 
     */
    public Optional<String> projectIdentifier() {
        return Optional.ofNullable(this.projectIdentifier);
    }

    private GetDiscoveryAgentPlainArgs() {}

    private GetDiscoveryAgentPlainArgs(GetDiscoveryAgentPlainArgs $) {
        this.environmentIdentifier = $.environmentIdentifier;
        this.identity = $.identity;
        this.name = $.name;
        this.orgIdentifier = $.orgIdentifier;
        this.projectIdentifier = $.projectIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDiscoveryAgentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDiscoveryAgentPlainArgs $;

        public Builder() {
            $ = new GetDiscoveryAgentPlainArgs();
        }

        public Builder(GetDiscoveryAgentPlainArgs defaults) {
            $ = new GetDiscoveryAgentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentIdentifier The environment identifier of the agent. This is a required field.
         * 
         * @return builder
         * 
         */
        public Builder environmentIdentifier(String environmentIdentifier) {
            $.environmentIdentifier = environmentIdentifier;
            return this;
        }

        /**
         * @param identity The unique identity of the agent. Either this or &#39;name&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable String identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param name The name of the agent. Either this or &#39;identity&#39; must be provided.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param orgIdentifier The organization identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(@Nullable String orgIdentifier) {
            $.orgIdentifier = orgIdentifier;
            return this;
        }

        /**
         * @param projectIdentifier The project identifier of the agent (optional). Must be 1-64 characters and contain only alphanumeric characters, hyphens, or underscores.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(@Nullable String projectIdentifier) {
            $.projectIdentifier = projectIdentifier;
            return this;
        }

        public GetDiscoveryAgentPlainArgs build() {
            if ($.environmentIdentifier == null) {
                throw new MissingRequiredPropertyException("GetDiscoveryAgentPlainArgs", "environmentIdentifier");
            }
            return $;
        }
    }

}
