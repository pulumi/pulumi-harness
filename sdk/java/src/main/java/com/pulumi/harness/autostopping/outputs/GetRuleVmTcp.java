// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.outputs.GetRuleVmTcpForwardRule;
import com.pulumi.harness.autostopping.outputs.GetRuleVmTcpRdp;
import com.pulumi.harness.autostopping.outputs.GetRuleVmTcpSsh;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRuleVmTcp {
    /**
     * @return Additional tcp forwarding rules
     * 
     */
    private @Nullable List<GetRuleVmTcpForwardRule> forwardRules;
    /**
     * @return Id of the Proxy
     * 
     */
    private String proxyId;
    /**
     * @return RDP configuration
     * 
     */
    private @Nullable List<GetRuleVmTcpRdp> rdps;
    /**
     * @return SSH configuration
     * 
     */
    private @Nullable List<GetRuleVmTcpSsh> sshes;

    private GetRuleVmTcp() {}
    /**
     * @return Additional tcp forwarding rules
     * 
     */
    public List<GetRuleVmTcpForwardRule> forwardRules() {
        return this.forwardRules == null ? List.of() : this.forwardRules;
    }
    /**
     * @return Id of the Proxy
     * 
     */
    public String proxyId() {
        return this.proxyId;
    }
    /**
     * @return RDP configuration
     * 
     */
    public List<GetRuleVmTcpRdp> rdps() {
        return this.rdps == null ? List.of() : this.rdps;
    }
    /**
     * @return SSH configuration
     * 
     */
    public List<GetRuleVmTcpSsh> sshes() {
        return this.sshes == null ? List.of() : this.sshes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleVmTcp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetRuleVmTcpForwardRule> forwardRules;
        private String proxyId;
        private @Nullable List<GetRuleVmTcpRdp> rdps;
        private @Nullable List<GetRuleVmTcpSsh> sshes;
        public Builder() {}
        public Builder(GetRuleVmTcp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forwardRules = defaults.forwardRules;
    	      this.proxyId = defaults.proxyId;
    	      this.rdps = defaults.rdps;
    	      this.sshes = defaults.sshes;
        }

        @CustomType.Setter
        public Builder forwardRules(@Nullable List<GetRuleVmTcpForwardRule> forwardRules) {

            this.forwardRules = forwardRules;
            return this;
        }
        public Builder forwardRules(GetRuleVmTcpForwardRule... forwardRules) {
            return forwardRules(List.of(forwardRules));
        }
        @CustomType.Setter
        public Builder proxyId(String proxyId) {
            if (proxyId == null) {
              throw new MissingRequiredPropertyException("GetRuleVmTcp", "proxyId");
            }
            this.proxyId = proxyId;
            return this;
        }
        @CustomType.Setter
        public Builder rdps(@Nullable List<GetRuleVmTcpRdp> rdps) {

            this.rdps = rdps;
            return this;
        }
        public Builder rdps(GetRuleVmTcpRdp... rdps) {
            return rdps(List.of(rdps));
        }
        @CustomType.Setter
        public Builder sshes(@Nullable List<GetRuleVmTcpSsh> sshes) {

            this.sshes = sshes;
            return this;
        }
        public Builder sshes(GetRuleVmTcpSsh... sshes) {
            return sshes(List.of(sshes));
        }
        public GetRuleVmTcp build() {
            final var _resultValue = new GetRuleVmTcp();
            _resultValue.forwardRules = forwardRules;
            _resultValue.proxyId = proxyId;
            _resultValue.rdps = rdps;
            _resultValue.sshes = sshes;
            return _resultValue;
        }
    }
}
