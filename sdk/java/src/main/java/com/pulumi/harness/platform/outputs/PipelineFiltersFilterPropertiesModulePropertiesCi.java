// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineFiltersFilterPropertiesModulePropertiesCi {
    /**
     * @return Branch which was used while building.
     * 
     */
    private @Nullable String branch;
    /**
     * @return Build type of the pipeline. Possible values: branch.
     * 
     */
    private @Nullable String buildType;
    /**
     * @return CI execution info for the pipeline.
     * 
     */
    private @Nullable PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo ciExecutionInfo;
    /**
     * @return name of the repository used in the pipeline.
     * 
     */
    private @Nullable String repoNames;
    /**
     * @return Tags to associate with the CI pipeline resource.
     * 
     */
    private @Nullable String tag;

    private PipelineFiltersFilterPropertiesModulePropertiesCi() {}
    /**
     * @return Branch which was used while building.
     * 
     */
    public Optional<String> branch() {
        return Optional.ofNullable(this.branch);
    }
    /**
     * @return Build type of the pipeline. Possible values: branch.
     * 
     */
    public Optional<String> buildType() {
        return Optional.ofNullable(this.buildType);
    }
    /**
     * @return CI execution info for the pipeline.
     * 
     */
    public Optional<PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo> ciExecutionInfo() {
        return Optional.ofNullable(this.ciExecutionInfo);
    }
    /**
     * @return name of the repository used in the pipeline.
     * 
     */
    public Optional<String> repoNames() {
        return Optional.ofNullable(this.repoNames);
    }
    /**
     * @return Tags to associate with the CI pipeline resource.
     * 
     */
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineFiltersFilterPropertiesModulePropertiesCi defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String branch;
        private @Nullable String buildType;
        private @Nullable PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo ciExecutionInfo;
        private @Nullable String repoNames;
        private @Nullable String tag;
        public Builder() {}
        public Builder(PipelineFiltersFilterPropertiesModulePropertiesCi defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.buildType = defaults.buildType;
    	      this.ciExecutionInfo = defaults.ciExecutionInfo;
    	      this.repoNames = defaults.repoNames;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder branch(@Nullable String branch) {

            this.branch = branch;
            return this;
        }
        @CustomType.Setter
        public Builder buildType(@Nullable String buildType) {

            this.buildType = buildType;
            return this;
        }
        @CustomType.Setter
        public Builder ciExecutionInfo(@Nullable PipelineFiltersFilterPropertiesModulePropertiesCiCiExecutionInfo ciExecutionInfo) {

            this.ciExecutionInfo = ciExecutionInfo;
            return this;
        }
        @CustomType.Setter
        public Builder repoNames(@Nullable String repoNames) {

            this.repoNames = repoNames;
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {

            this.tag = tag;
            return this;
        }
        public PipelineFiltersFilterPropertiesModulePropertiesCi build() {
            final var _resultValue = new PipelineFiltersFilterPropertiesModulePropertiesCi();
            _resultValue.branch = branch;
            _resultValue.buildType = buildType;
            _resultValue.ciExecutionInfo = ciExecutionInfo;
            _resultValue.repoNames = repoNames;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
