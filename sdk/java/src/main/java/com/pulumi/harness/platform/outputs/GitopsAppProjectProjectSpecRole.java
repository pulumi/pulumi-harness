// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GitopsAppProjectProjectSpecRoleJwtToken;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GitopsAppProjectProjectSpecRole {
    /**
     * @return Description of the role.
     * 
     */
    private String description;
    /**
     * @return Groups associated with the role.
     * 
     */
    private @Nullable List<String> groups;
    /**
     * @return JWT tokens associated with the role.
     * 
     */
    private @Nullable List<GitopsAppProjectProjectSpecRoleJwtToken> jwtTokens;
    /**
     * @return Name of the role.
     * 
     */
    private String name;
    /**
     * @return Policies associated with the role. These are argo RBAC policies and may not necessarily reflect in harness.
     * 
     */
    private @Nullable List<String> policies;

    private GitopsAppProjectProjectSpecRole() {}
    /**
     * @return Description of the role.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Groups associated with the role.
     * 
     */
    public List<String> groups() {
        return this.groups == null ? List.of() : this.groups;
    }
    /**
     * @return JWT tokens associated with the role.
     * 
     */
    public List<GitopsAppProjectProjectSpecRoleJwtToken> jwtTokens() {
        return this.jwtTokens == null ? List.of() : this.jwtTokens;
    }
    /**
     * @return Name of the role.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Policies associated with the role. These are argo RBAC policies and may not necessarily reflect in harness.
     * 
     */
    public List<String> policies() {
        return this.policies == null ? List.of() : this.policies;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsAppProjectProjectSpecRole defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private @Nullable List<String> groups;
        private @Nullable List<GitopsAppProjectProjectSpecRoleJwtToken> jwtTokens;
        private String name;
        private @Nullable List<String> policies;
        public Builder() {}
        public Builder(GitopsAppProjectProjectSpecRole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.groups = defaults.groups;
    	      this.jwtTokens = defaults.jwtTokens;
    	      this.name = defaults.name;
    	      this.policies = defaults.policies;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GitopsAppProjectProjectSpecRole", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groups(@Nullable List<String> groups) {

            this.groups = groups;
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder jwtTokens(@Nullable List<GitopsAppProjectProjectSpecRoleJwtToken> jwtTokens) {

            this.jwtTokens = jwtTokens;
            return this;
        }
        public Builder jwtTokens(GitopsAppProjectProjectSpecRoleJwtToken... jwtTokens) {
            return jwtTokens(List.of(jwtTokens));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GitopsAppProjectProjectSpecRole", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policies(@Nullable List<String> policies) {

            this.policies = policies;
            return this;
        }
        public Builder policies(String... policies) {
            return policies(List.of(policies));
        }
        public GitopsAppProjectProjectSpecRole build() {
            final var _resultValue = new GitopsAppProjectProjectSpecRole();
            _resultValue.description = description;
            _resultValue.groups = groups;
            _resultValue.jwtTokens = jwtTokens;
            _resultValue.name = name;
            _resultValue.policies = policies;
            return _resultValue;
        }
    }
}
