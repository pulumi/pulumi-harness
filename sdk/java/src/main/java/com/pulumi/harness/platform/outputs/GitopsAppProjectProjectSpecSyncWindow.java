// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitopsAppProjectProjectSpecSyncWindow {
    /**
     * @return Applications associated with synchronization window.
     * 
     */
    private @Nullable List<String> applications;
    /**
     * @return Clusters associated with synchronization window.
     * 
     */
    private @Nullable List<String> clusters;
    /**
     * @return Duration of synchronization window.
     * 
     */
    private @Nullable String duration;
    /**
     * @return Kind of synchronization window.
     * 
     */
    private @Nullable String kind;
    /**
     * @return Whether manual synchronization is enabled.
     * 
     */
    private @Nullable Boolean manualSync;
    /**
     * @return Namespaces associated with synchronization window.
     * 
     */
    private @Nullable List<String> namespaces;
    /**
     * @return Schedule of synchronization window.
     * 
     */
    private @Nullable String schedule;
    /**
     * @return Time zone of synchronization window.
     * 
     */
    private @Nullable String timeZone;

    private GitopsAppProjectProjectSpecSyncWindow() {}
    /**
     * @return Applications associated with synchronization window.
     * 
     */
    public List<String> applications() {
        return this.applications == null ? List.of() : this.applications;
    }
    /**
     * @return Clusters associated with synchronization window.
     * 
     */
    public List<String> clusters() {
        return this.clusters == null ? List.of() : this.clusters;
    }
    /**
     * @return Duration of synchronization window.
     * 
     */
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return Kind of synchronization window.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return Whether manual synchronization is enabled.
     * 
     */
    public Optional<Boolean> manualSync() {
        return Optional.ofNullable(this.manualSync);
    }
    /**
     * @return Namespaces associated with synchronization window.
     * 
     */
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    /**
     * @return Schedule of synchronization window.
     * 
     */
    public Optional<String> schedule() {
        return Optional.ofNullable(this.schedule);
    }
    /**
     * @return Time zone of synchronization window.
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsAppProjectProjectSpecSyncWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> applications;
        private @Nullable List<String> clusters;
        private @Nullable String duration;
        private @Nullable String kind;
        private @Nullable Boolean manualSync;
        private @Nullable List<String> namespaces;
        private @Nullable String schedule;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(GitopsAppProjectProjectSpecSyncWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applications = defaults.applications;
    	      this.clusters = defaults.clusters;
    	      this.duration = defaults.duration;
    	      this.kind = defaults.kind;
    	      this.manualSync = defaults.manualSync;
    	      this.namespaces = defaults.namespaces;
    	      this.schedule = defaults.schedule;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder applications(@Nullable List<String> applications) {

            this.applications = applications;
            return this;
        }
        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }
        @CustomType.Setter
        public Builder clusters(@Nullable List<String> clusters) {

            this.clusters = clusters;
            return this;
        }
        public Builder clusters(String... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder duration(@Nullable String duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {

            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder manualSync(@Nullable Boolean manualSync) {

            this.manualSync = manualSync;
            return this;
        }
        @CustomType.Setter
        public Builder namespaces(@Nullable List<String> namespaces) {

            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder schedule(@Nullable String schedule) {

            this.schedule = schedule;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {

            this.timeZone = timeZone;
            return this;
        }
        public GitopsAppProjectProjectSpecSyncWindow build() {
            final var _resultValue = new GitopsAppProjectProjectSpecSyncWindow();
            _resultValue.applications = applications;
            _resultValue.clusters = clusters;
            _resultValue.duration = duration;
            _resultValue.kind = kind;
            _resultValue.manualSync = manualSync;
            _resultValue.namespaces = namespaces;
            _resultValue.schedule = schedule;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
