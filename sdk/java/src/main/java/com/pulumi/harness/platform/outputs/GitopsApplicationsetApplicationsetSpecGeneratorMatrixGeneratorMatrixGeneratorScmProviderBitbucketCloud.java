// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRef;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud {
    /**
     * @return Scan all branches instead of just the default branch.
     * 
     */
    private @Nullable Boolean allBranches;
    /**
     * @return The app password to use for the user. See: https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRef appPasswordRef;
    /**
     * @return Bitbucket workspace to scan.
     * 
     */
    private String owner;
    /**
     * @return Bitbucket user to use when authenticating. Should have a &#34;member&#34; role to be able to read all repositories and branches.
     * 
     */
    private String user;

    private GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud() {}
    /**
     * @return Scan all branches instead of just the default branch.
     * 
     */
    public Optional<Boolean> allBranches() {
        return Optional.ofNullable(this.allBranches);
    }
    /**
     * @return The app password to use for the user. See: https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRef> appPasswordRef() {
        return Optional.ofNullable(this.appPasswordRef);
    }
    /**
     * @return Bitbucket workspace to scan.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Bitbucket user to use when authenticating. Should have a &#34;member&#34; role to be able to read all repositories and branches.
     * 
     */
    public String user() {
        return this.user;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allBranches;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRef appPasswordRef;
        private String owner;
        private String user;
        public Builder() {}
        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allBranches = defaults.allBranches;
    	      this.appPasswordRef = defaults.appPasswordRef;
    	      this.owner = defaults.owner;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder allBranches(@Nullable Boolean allBranches) {

            this.allBranches = allBranches;
            return this;
        }
        @CustomType.Setter
        public Builder appPasswordRef(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRef appPasswordRef) {

            this.appPasswordRef = appPasswordRef;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder user(String user) {
            if (user == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud", "user");
            }
            this.user = user;
            return this;
        }
        public GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud build() {
            final var _resultValue = new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorScmProviderBitbucketCloud();
            _resultValue.allBranches = allBranches;
            _resultValue.appPasswordRef = appPasswordRef;
            _resultValue.owner = owner;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
