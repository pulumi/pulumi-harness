// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs Empty = new GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs();

    @Import(name="notificationEntity", required=true)
    private Output<String> notificationEntity;

    public Output<String> notificationEntity() {
        return this.notificationEntity;
    }

    @Import(name="notificationEvent", required=true)
    private Output<String> notificationEvent;

    public Output<String> notificationEvent() {
        return this.notificationEvent;
    }

    @Import(name="notificationEventData")
    private @Nullable Output<Map<String,String>> notificationEventData;

    public Optional<Output<Map<String,String>>> notificationEventData() {
        return Optional.ofNullable(this.notificationEventData);
    }

    private GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs() {}

    private GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs(GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs $) {
        this.notificationEntity = $.notificationEntity;
        this.notificationEvent = $.notificationEvent;
        this.notificationEventData = $.notificationEventData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs $;

        public Builder() {
            $ = new GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs();
        }

        public Builder(GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs defaults) {
            $ = new GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder notificationEntity(Output<String> notificationEntity) {
            $.notificationEntity = notificationEntity;
            return this;
        }

        public Builder notificationEntity(String notificationEntity) {
            return notificationEntity(Output.of(notificationEntity));
        }

        public Builder notificationEvent(Output<String> notificationEvent) {
            $.notificationEvent = notificationEvent;
            return this;
        }

        public Builder notificationEvent(String notificationEvent) {
            return notificationEvent(Output.of(notificationEvent));
        }

        public Builder notificationEventData(@Nullable Output<Map<String,String>> notificationEventData) {
            $.notificationEventData = notificationEventData;
            return this;
        }

        public Builder notificationEventData(Map<String,String> notificationEventData) {
            return notificationEventData(Output.of(notificationEventData));
        }

        public GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs build() {
            if ($.notificationEntity == null) {
                throw new MissingRequiredPropertyException("GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs", "notificationEntity");
            }
            if ($.notificationEvent == null) {
                throw new MissingRequiredPropertyException("GetCentralNotificationRuleNotificationConditionNotificationEventConfigArgs", "notificationEvent");
            }
            return $;
        }
    }

}
