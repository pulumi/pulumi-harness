// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.CentralNotificationRuleCustomNotificationTemplateRefArgs;
import com.pulumi.harness.platform.inputs.CentralNotificationRuleNotificationConditionArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CentralNotificationRuleState extends com.pulumi.resources.ResourceArgs {

    public static final CentralNotificationRuleState Empty = new CentralNotificationRuleState();

    /**
     * Account identifier associated with this notification channel.
     * 
     */
    @Import(name="account")
    private @Nullable Output<String> account;

    /**
     * @return Account identifier associated with this notification channel.
     * 
     */
    public Optional<Output<String>> account() {
        return Optional.ofNullable(this.account);
    }

    /**
     * Timestamp when the notification rule was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<Integer> created;

    /**
     * @return Timestamp when the notification rule was created.
     * 
     */
    public Optional<Output<Integer>> created() {
        return Optional.ofNullable(this.created);
    }

    @Import(name="customNotificationTemplateRef")
    private @Nullable Output<CentralNotificationRuleCustomNotificationTemplateRefArgs> customNotificationTemplateRef;

    public Optional<Output<CentralNotificationRuleCustomNotificationTemplateRefArgs>> customNotificationTemplateRef() {
        return Optional.ofNullable(this.customNotificationTemplateRef);
    }

    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Timestamp when the notification rule was last modified.
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<Integer> lastModified;

    /**
     * @return Timestamp when the notification rule was last modified.
     * 
     */
    public Optional<Output<Integer>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationChannelRefs")
    private @Nullable Output<List<String>> notificationChannelRefs;

    public Optional<Output<List<String>>> notificationChannelRefs() {
        return Optional.ofNullable(this.notificationChannelRefs);
    }

    @Import(name="notificationConditions")
    private @Nullable Output<List<CentralNotificationRuleNotificationConditionArgs>> notificationConditions;

    public Optional<Output<List<CentralNotificationRuleNotificationConditionArgs>>> notificationConditions() {
        return Optional.ofNullable(this.notificationConditions);
    }

    @Import(name="org")
    private @Nullable Output<String> org;

    public Optional<Output<String>> org() {
        return Optional.ofNullable(this.org);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private CentralNotificationRuleState() {}

    private CentralNotificationRuleState(CentralNotificationRuleState $) {
        this.account = $.account;
        this.created = $.created;
        this.customNotificationTemplateRef = $.customNotificationTemplateRef;
        this.identifier = $.identifier;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.notificationChannelRefs = $.notificationChannelRefs;
        this.notificationConditions = $.notificationConditions;
        this.org = $.org;
        this.project = $.project;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CentralNotificationRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CentralNotificationRuleState $;

        public Builder() {
            $ = new CentralNotificationRuleState();
        }

        public Builder(CentralNotificationRuleState defaults) {
            $ = new CentralNotificationRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param account Account identifier associated with this notification channel.
         * 
         * @return builder
         * 
         */
        public Builder account(@Nullable Output<String> account) {
            $.account = account;
            return this;
        }

        /**
         * @param account Account identifier associated with this notification channel.
         * 
         * @return builder
         * 
         */
        public Builder account(String account) {
            return account(Output.of(account));
        }

        /**
         * @param created Timestamp when the notification rule was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<Integer> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created Timestamp when the notification rule was created.
         * 
         * @return builder
         * 
         */
        public Builder created(Integer created) {
            return created(Output.of(created));
        }

        public Builder customNotificationTemplateRef(@Nullable Output<CentralNotificationRuleCustomNotificationTemplateRefArgs> customNotificationTemplateRef) {
            $.customNotificationTemplateRef = customNotificationTemplateRef;
            return this;
        }

        public Builder customNotificationTemplateRef(CentralNotificationRuleCustomNotificationTemplateRefArgs customNotificationTemplateRef) {
            return customNotificationTemplateRef(Output.of(customNotificationTemplateRef));
        }

        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param lastModified Timestamp when the notification rule was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<Integer> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified Timestamp when the notification rule was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(Integer lastModified) {
            return lastModified(Output.of(lastModified));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationChannelRefs(@Nullable Output<List<String>> notificationChannelRefs) {
            $.notificationChannelRefs = notificationChannelRefs;
            return this;
        }

        public Builder notificationChannelRefs(List<String> notificationChannelRefs) {
            return notificationChannelRefs(Output.of(notificationChannelRefs));
        }

        public Builder notificationChannelRefs(String... notificationChannelRefs) {
            return notificationChannelRefs(List.of(notificationChannelRefs));
        }

        public Builder notificationConditions(@Nullable Output<List<CentralNotificationRuleNotificationConditionArgs>> notificationConditions) {
            $.notificationConditions = notificationConditions;
            return this;
        }

        public Builder notificationConditions(List<CentralNotificationRuleNotificationConditionArgs> notificationConditions) {
            return notificationConditions(Output.of(notificationConditions));
        }

        public Builder notificationConditions(CentralNotificationRuleNotificationConditionArgs... notificationConditions) {
            return notificationConditions(List.of(notificationConditions));
        }

        public Builder org(@Nullable Output<String> org) {
            $.org = org;
            return this;
        }

        public Builder org(String org) {
            return org(Output.of(org));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public CentralNotificationRuleState build() {
            return $;
        }
    }

}
