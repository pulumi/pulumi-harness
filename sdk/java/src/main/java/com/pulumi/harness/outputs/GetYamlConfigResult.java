// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetYamlConfigResult {
    /**
     * @return Unique identifier of the application. This is not required for account level resources (i.e. cloud providers, connectors, etc.).
     * 
     */
    private @Nullable String appId;
    /**
     * @return Content of the yaml file.
     * 
     */
    private String content;
    /**
     * @return Unique identifier of the yaml resource.
     * 
     */
    private String id;
    /**
     * @return Name of the yaml resource.
     * 
     */
    private String name;
    /**
     * @return Path to the yaml file.
     * 
     */
    private String path;

    private GetYamlConfigResult() {}
    /**
     * @return Unique identifier of the application. This is not required for account level resources (i.e. cloud providers, connectors, etc.).
     * 
     */
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }
    /**
     * @return Content of the yaml file.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return Unique identifier of the yaml resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the yaml resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Path to the yaml file.
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetYamlConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String appId;
        private String content;
        private String id;
        private String name;
        private String path;
        public Builder() {}
        public Builder(GetYamlConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.content = defaults.content;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder appId(@Nullable String appId) {

            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetYamlConfigResult", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetYamlConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetYamlConfigResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetYamlConfigResult", "path");
            }
            this.path = path;
            return this;
        }
        public GetYamlConfigResult build() {
            final var _resultValue = new GetYamlConfigResult();
            _resultValue.appId = appId;
            _resultValue.content = content;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
