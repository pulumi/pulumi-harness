// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceNowConnectorAuthAdf {
    /**
     * @return asdf URL.
     * 
     */
    private String adfsUrl;
    /**
     * @return Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    private String certificateRef;
    /**
     * @return Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    private String clientIdRef;
    /**
     * @return Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    private String privateKeyRef;
    /**
     * @return Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    private String resourceIdRef;

    private GetServiceNowConnectorAuthAdf() {}
    /**
     * @return asdf URL.
     * 
     */
    public String adfsUrl() {
        return this.adfsUrl;
    }
    /**
     * @return Reference to a secret containing the certificate to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public String certificateRef() {
        return this.certificateRef;
    }
    /**
     * @return Reference to a secret containing the clientIdRef to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public String clientIdRef() {
        return this.clientIdRef;
    }
    /**
     * @return Reference to a secret containing the privateKeyRef to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public String privateKeyRef() {
        return this.privateKeyRef;
    }
    /**
     * @return Reference to a secret containing the resourceIdRef to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public String resourceIdRef() {
        return this.resourceIdRef;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceNowConnectorAuthAdf defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adfsUrl;
        private String certificateRef;
        private String clientIdRef;
        private String privateKeyRef;
        private String resourceIdRef;
        public Builder() {}
        public Builder(GetServiceNowConnectorAuthAdf defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adfsUrl = defaults.adfsUrl;
    	      this.certificateRef = defaults.certificateRef;
    	      this.clientIdRef = defaults.clientIdRef;
    	      this.privateKeyRef = defaults.privateKeyRef;
    	      this.resourceIdRef = defaults.resourceIdRef;
        }

        @CustomType.Setter
        public Builder adfsUrl(String adfsUrl) {
            if (adfsUrl == null) {
              throw new MissingRequiredPropertyException("GetServiceNowConnectorAuthAdf", "adfsUrl");
            }
            this.adfsUrl = adfsUrl;
            return this;
        }
        @CustomType.Setter
        public Builder certificateRef(String certificateRef) {
            if (certificateRef == null) {
              throw new MissingRequiredPropertyException("GetServiceNowConnectorAuthAdf", "certificateRef");
            }
            this.certificateRef = certificateRef;
            return this;
        }
        @CustomType.Setter
        public Builder clientIdRef(String clientIdRef) {
            if (clientIdRef == null) {
              throw new MissingRequiredPropertyException("GetServiceNowConnectorAuthAdf", "clientIdRef");
            }
            this.clientIdRef = clientIdRef;
            return this;
        }
        @CustomType.Setter
        public Builder privateKeyRef(String privateKeyRef) {
            if (privateKeyRef == null) {
              throw new MissingRequiredPropertyException("GetServiceNowConnectorAuthAdf", "privateKeyRef");
            }
            this.privateKeyRef = privateKeyRef;
            return this;
        }
        @CustomType.Setter
        public Builder resourceIdRef(String resourceIdRef) {
            if (resourceIdRef == null) {
              throw new MissingRequiredPropertyException("GetServiceNowConnectorAuthAdf", "resourceIdRef");
            }
            this.resourceIdRef = resourceIdRef;
            return this;
        }
        public GetServiceNowConnectorAuthAdf build() {
            final var _resultValue = new GetServiceNowConnectorAuthAdf();
            _resultValue.adfsUrl = adfsUrl;
            _resultValue.certificateRef = certificateRef;
            _resultValue.clientIdRef = clientIdRef;
            _resultValue.privateKeyRef = privateKeyRef;
            _resultValue.resourceIdRef = resourceIdRef;
            return _resultValue;
        }
    }
}
