// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.chaos.inputs.SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGovernanceConditionK8sSpecApplicationSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGovernanceConditionK8sSpecApplicationSpecArgs Empty = new SecurityGovernanceConditionK8sSpecApplicationSpecArgs();

    /**
     * Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * List of workloads to include/exclude
     * 
     */
    @Import(name="workloads")
    private @Nullable Output<List<SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs>> workloads;

    /**
     * @return List of workloads to include/exclude
     * 
     */
    public Optional<Output<List<SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs>>> workloads() {
        return Optional.ofNullable(this.workloads);
    }

    private SecurityGovernanceConditionK8sSpecApplicationSpecArgs() {}

    private SecurityGovernanceConditionK8sSpecApplicationSpecArgs(SecurityGovernanceConditionK8sSpecApplicationSpecArgs $) {
        this.operator = $.operator;
        this.workloads = $.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGovernanceConditionK8sSpecApplicationSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGovernanceConditionK8sSpecApplicationSpecArgs $;

        public Builder() {
            $ = new SecurityGovernanceConditionK8sSpecApplicationSpecArgs();
        }

        public Builder(SecurityGovernanceConditionK8sSpecApplicationSpecArgs defaults) {
            $ = new SecurityGovernanceConditionK8sSpecApplicationSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param operator Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Operator for application matching (EQUAL*TO or NOT*EQUAL_TO)
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param workloads List of workloads to include/exclude
         * 
         * @return builder
         * 
         */
        public Builder workloads(@Nullable Output<List<SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs>> workloads) {
            $.workloads = workloads;
            return this;
        }

        /**
         * @param workloads List of workloads to include/exclude
         * 
         * @return builder
         * 
         */
        public Builder workloads(List<SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs> workloads) {
            return workloads(Output.of(workloads));
        }

        /**
         * @param workloads List of workloads to include/exclude
         * 
         * @return builder
         * 
         */
        public Builder workloads(SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadArgs... workloads) {
            return workloads(List.of(workloads));
        }

        public SecurityGovernanceConditionK8sSpecApplicationSpecArgs build() {
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("SecurityGovernanceConditionK8sSpecApplicationSpecArgs", "operator");
            }
            return $;
        }
    }

}
