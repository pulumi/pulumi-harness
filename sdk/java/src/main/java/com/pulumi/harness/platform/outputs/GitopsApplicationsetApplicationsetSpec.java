// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGenerator;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifference;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecStrategy;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecSyncPolicy;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecTemplate;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitopsApplicationsetApplicationsetSpec {
    /**
     * @return Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
     * 
     */
    private List<GitopsApplicationsetApplicationsetSpecGenerator> generators;
    /**
     * @return Enable Go templating for the template field.
     * 
     */
    private @Nullable Boolean goTemplate;
    /**
     * @return Optional list of go templating options, see https://pkg.go.dev/text/template#Template.Optional. This is only relevant if `goTemplate` is true
     * 
     */
    private @Nullable List<String> goTemplateOptions;
    /**
     * @return Application Set ignoreApplicationDifferences
     * 
     */
    private @Nullable List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifference> ignoreApplicationDifferences;
    /**
     * @return [Progressive Sync](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/) strategy
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecStrategy strategy;
    /**
     * @return Application Set sync policy
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecSyncPolicy syncPolicy;
    /**
     * @return Application Set template. The template fields of the ApplicationSet spec are used to generate Gitops Applications.
     * 
     */
    private GitopsApplicationsetApplicationsetSpecTemplate template;

    private GitopsApplicationsetApplicationsetSpec() {}
    /**
     * @return Application set generators are responsible for generation of params, which are then rendered into the template: fields of the ApplicationSet resource.
     * 
     */
    public List<GitopsApplicationsetApplicationsetSpecGenerator> generators() {
        return this.generators;
    }
    /**
     * @return Enable Go templating for the template field.
     * 
     */
    public Optional<Boolean> goTemplate() {
        return Optional.ofNullable(this.goTemplate);
    }
    /**
     * @return Optional list of go templating options, see https://pkg.go.dev/text/template#Template.Optional. This is only relevant if `goTemplate` is true
     * 
     */
    public List<String> goTemplateOptions() {
        return this.goTemplateOptions == null ? List.of() : this.goTemplateOptions;
    }
    /**
     * @return Application Set ignoreApplicationDifferences
     * 
     */
    public List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifference> ignoreApplicationDifferences() {
        return this.ignoreApplicationDifferences == null ? List.of() : this.ignoreApplicationDifferences;
    }
    /**
     * @return [Progressive Sync](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/) strategy
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecStrategy> strategy() {
        return Optional.ofNullable(this.strategy);
    }
    /**
     * @return Application Set sync policy
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecSyncPolicy> syncPolicy() {
        return Optional.ofNullable(this.syncPolicy);
    }
    /**
     * @return Application Set template. The template fields of the ApplicationSet spec are used to generate Gitops Applications.
     * 
     */
    public GitopsApplicationsetApplicationsetSpecTemplate template() {
        return this.template;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsApplicationsetApplicationsetSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GitopsApplicationsetApplicationsetSpecGenerator> generators;
        private @Nullable Boolean goTemplate;
        private @Nullable List<String> goTemplateOptions;
        private @Nullable List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifference> ignoreApplicationDifferences;
        private @Nullable GitopsApplicationsetApplicationsetSpecStrategy strategy;
        private @Nullable GitopsApplicationsetApplicationsetSpecSyncPolicy syncPolicy;
        private GitopsApplicationsetApplicationsetSpecTemplate template;
        public Builder() {}
        public Builder(GitopsApplicationsetApplicationsetSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.generators = defaults.generators;
    	      this.goTemplate = defaults.goTemplate;
    	      this.goTemplateOptions = defaults.goTemplateOptions;
    	      this.ignoreApplicationDifferences = defaults.ignoreApplicationDifferences;
    	      this.strategy = defaults.strategy;
    	      this.syncPolicy = defaults.syncPolicy;
    	      this.template = defaults.template;
        }

        @CustomType.Setter
        public Builder generators(List<GitopsApplicationsetApplicationsetSpecGenerator> generators) {
            if (generators == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpec", "generators");
            }
            this.generators = generators;
            return this;
        }
        public Builder generators(GitopsApplicationsetApplicationsetSpecGenerator... generators) {
            return generators(List.of(generators));
        }
        @CustomType.Setter
        public Builder goTemplate(@Nullable Boolean goTemplate) {

            this.goTemplate = goTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder goTemplateOptions(@Nullable List<String> goTemplateOptions) {

            this.goTemplateOptions = goTemplateOptions;
            return this;
        }
        public Builder goTemplateOptions(String... goTemplateOptions) {
            return goTemplateOptions(List.of(goTemplateOptions));
        }
        @CustomType.Setter
        public Builder ignoreApplicationDifferences(@Nullable List<GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifference> ignoreApplicationDifferences) {

            this.ignoreApplicationDifferences = ignoreApplicationDifferences;
            return this;
        }
        public Builder ignoreApplicationDifferences(GitopsApplicationsetApplicationsetSpecIgnoreApplicationDifference... ignoreApplicationDifferences) {
            return ignoreApplicationDifferences(List.of(ignoreApplicationDifferences));
        }
        @CustomType.Setter
        public Builder strategy(@Nullable GitopsApplicationsetApplicationsetSpecStrategy strategy) {

            this.strategy = strategy;
            return this;
        }
        @CustomType.Setter
        public Builder syncPolicy(@Nullable GitopsApplicationsetApplicationsetSpecSyncPolicy syncPolicy) {

            this.syncPolicy = syncPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder template(GitopsApplicationsetApplicationsetSpecTemplate template) {
            if (template == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpec", "template");
            }
            this.template = template;
            return this;
        }
        public GitopsApplicationsetApplicationsetSpec build() {
            final var _resultValue = new GitopsApplicationsetApplicationsetSpec();
            _resultValue.generators = generators;
            _resultValue.goTemplate = goTemplate;
            _resultValue.goTemplateOptions = goTemplateOptions;
            _resultValue.ignoreApplicationDifferences = ignoreApplicationDifferences;
            _resultValue.strategy = strategy;
            _resultValue.syncPolicy = syncPolicy;
            _resultValue.template = template;
            return _resultValue;
        }
    }
}
