// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.governance.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRuleSetResult {
    /**
     * @return The cloud provider for the rule set.
     * 
     */
    private String cloudProvider;
    /**
     * @return Description for rule set.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Name of the rule set.
     * 
     */
    private String name;
    /**
     * @return List of target regions.
     * 
     */
    private List<String> ruleIds;
    /**
     * @return Id of rule set.
     * 
     */
    private String ruleSetId;

    private GetRuleSetResult() {}
    /**
     * @return The cloud provider for the rule set.
     * 
     */
    public String cloudProvider() {
        return this.cloudProvider;
    }
    /**
     * @return Description for rule set.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the rule set.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of target regions.
     * 
     */
    public List<String> ruleIds() {
        return this.ruleIds;
    }
    /**
     * @return Id of rule set.
     * 
     */
    public String ruleSetId() {
        return this.ruleSetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudProvider;
        private String description;
        private String id;
        private String name;
        private List<String> ruleIds;
        private String ruleSetId;
        public Builder() {}
        public Builder(GetRuleSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudProvider = defaults.cloudProvider;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ruleIds = defaults.ruleIds;
    	      this.ruleSetId = defaults.ruleSetId;
        }

        @CustomType.Setter
        public Builder cloudProvider(String cloudProvider) {
            if (cloudProvider == null) {
              throw new MissingRequiredPropertyException("GetRuleSetResult", "cloudProvider");
            }
            this.cloudProvider = cloudProvider;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRuleSetResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRuleSetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRuleSetResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ruleIds(List<String> ruleIds) {
            if (ruleIds == null) {
              throw new MissingRequiredPropertyException("GetRuleSetResult", "ruleIds");
            }
            this.ruleIds = ruleIds;
            return this;
        }
        public Builder ruleIds(String... ruleIds) {
            return ruleIds(List.of(ruleIds));
        }
        @CustomType.Setter
        public Builder ruleSetId(String ruleSetId) {
            if (ruleSetId == null) {
              throw new MissingRequiredPropertyException("GetRuleSetResult", "ruleSetId");
            }
            this.ruleSetId = ruleSetId;
            return this;
        }
        public GetRuleSetResult build() {
            final var _resultValue = new GetRuleSetResult();
            _resultValue.cloudProvider = cloudProvider;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ruleIds = ruleIds;
            _resultValue.ruleSetId = ruleSetId;
            return _resultValue;
        }
    }
}
