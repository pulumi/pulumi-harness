// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TemplateTemplateImportRequest {
    /**
     * @return Description of the template.
     * 
     */
    private @Nullable String templateDescription;
    /**
     * @return Name of the template.
     * 
     */
    private @Nullable String templateName;
    /**
     * @return Version of the template.
     * 
     */
    private @Nullable String templateVersion;

    private TemplateTemplateImportRequest() {}
    /**
     * @return Description of the template.
     * 
     */
    public Optional<String> templateDescription() {
        return Optional.ofNullable(this.templateDescription);
    }
    /**
     * @return Name of the template.
     * 
     */
    public Optional<String> templateName() {
        return Optional.ofNullable(this.templateName);
    }
    /**
     * @return Version of the template.
     * 
     */
    public Optional<String> templateVersion() {
        return Optional.ofNullable(this.templateVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateTemplateImportRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String templateDescription;
        private @Nullable String templateName;
        private @Nullable String templateVersion;
        public Builder() {}
        public Builder(TemplateTemplateImportRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.templateDescription = defaults.templateDescription;
    	      this.templateName = defaults.templateName;
    	      this.templateVersion = defaults.templateVersion;
        }

        @CustomType.Setter
        public Builder templateDescription(@Nullable String templateDescription) {

            this.templateDescription = templateDescription;
            return this;
        }
        @CustomType.Setter
        public Builder templateName(@Nullable String templateName) {

            this.templateName = templateName;
            return this;
        }
        @CustomType.Setter
        public Builder templateVersion(@Nullable String templateVersion) {

            this.templateVersion = templateVersion;
            return this;
        }
        public TemplateTemplateImportRequest build() {
            final var _resultValue = new TemplateTemplateImportRequest();
            _resultValue.templateDescription = templateDescription;
            _resultValue.templateName = templateName;
            _resultValue.templateVersion = templateVersion;
            return _resultValue;
        }
    }
}
