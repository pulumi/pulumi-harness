// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.inputs.GetApplicationArgs;
import com.pulumi.harness.inputs.GetApplicationPlainArgs;
import com.pulumi.harness.inputs.GetChaosInfrastructureArgs;
import com.pulumi.harness.inputs.GetChaosInfrastructurePlainArgs;
import com.pulumi.harness.inputs.GetCurrentAccountArgs;
import com.pulumi.harness.inputs.GetCurrentAccountPlainArgs;
import com.pulumi.harness.inputs.GetDelegateArgs;
import com.pulumi.harness.inputs.GetDelegatePlainArgs;
import com.pulumi.harness.inputs.GetEncryptedTextArgs;
import com.pulumi.harness.inputs.GetEncryptedTextPlainArgs;
import com.pulumi.harness.inputs.GetEnvironmentArgs;
import com.pulumi.harness.inputs.GetEnvironmentPlainArgs;
import com.pulumi.harness.inputs.GetGitConnectorArgs;
import com.pulumi.harness.inputs.GetGitConnectorPlainArgs;
import com.pulumi.harness.inputs.GetSecretManagerArgs;
import com.pulumi.harness.inputs.GetSecretManagerPlainArgs;
import com.pulumi.harness.inputs.GetServiceArgs;
import com.pulumi.harness.inputs.GetServicePlainArgs;
import com.pulumi.harness.inputs.GetSshCredentialArgs;
import com.pulumi.harness.inputs.GetSshCredentialPlainArgs;
import com.pulumi.harness.inputs.GetSsoProviderArgs;
import com.pulumi.harness.inputs.GetSsoProviderPlainArgs;
import com.pulumi.harness.inputs.GetTriggerArgs;
import com.pulumi.harness.inputs.GetTriggerPlainArgs;
import com.pulumi.harness.inputs.GetUserArgs;
import com.pulumi.harness.inputs.GetUserGroupArgs;
import com.pulumi.harness.inputs.GetUserGroupPlainArgs;
import com.pulumi.harness.inputs.GetUserPlainArgs;
import com.pulumi.harness.inputs.GetYamlConfigArgs;
import com.pulumi.harness.inputs.GetYamlConfigPlainArgs;
import com.pulumi.harness.outputs.GetApplicationResult;
import com.pulumi.harness.outputs.GetChaosInfrastructureResult;
import com.pulumi.harness.outputs.GetCurrentAccountResult;
import com.pulumi.harness.outputs.GetDelegateResult;
import com.pulumi.harness.outputs.GetEncryptedTextResult;
import com.pulumi.harness.outputs.GetEnvironmentResult;
import com.pulumi.harness.outputs.GetGitConnectorResult;
import com.pulumi.harness.outputs.GetSecretManagerResult;
import com.pulumi.harness.outputs.GetServiceResult;
import com.pulumi.harness.outputs.GetSshCredentialResult;
import com.pulumi.harness.outputs.GetSsoProviderResult;
import com.pulumi.harness.outputs.GetTriggerResult;
import com.pulumi.harness.outputs.GetUserGroupResult;
import com.pulumi.harness.outputs.GetUserResult;
import com.pulumi.harness.outputs.GetYamlConfigResult;
import java.util.concurrent.CompletableFuture;

public final class HarnessFunctions {
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetApplicationResult> getApplication() {
        return getApplication(GetApplicationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetApplicationResult> getApplicationPlain() {
        return getApplicationPlain(GetApplicationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetApplicationResult> getApplication(GetApplicationArgs args) {
        return getApplication(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetApplicationResult> getApplicationPlain(GetApplicationPlainArgs args) {
        return getApplicationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetApplicationResult> getApplication(GetApplicationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getApplication:getApplication", TypeShape.of(GetApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetApplicationResult> getApplication(GetApplicationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getApplication:getApplication", TypeShape.of(GetApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetApplicationResult> getApplicationPlain(GetApplicationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getApplication:getApplication", TypeShape.of(GetApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a chaos infrastructure.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetChaosInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getChaosInfrastructure(GetChaosInfrastructureArgs.builder()
     *             .identifier("identifier")
     *             .orgId("org_id")
     *             .projectId("project_id")
     *             .environmentId("env_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetChaosInfrastructureResult> getChaosInfrastructure(GetChaosInfrastructureArgs args) {
        return getChaosInfrastructure(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a chaos infrastructure.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetChaosInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getChaosInfrastructure(GetChaosInfrastructureArgs.builder()
     *             .identifier("identifier")
     *             .orgId("org_id")
     *             .projectId("project_id")
     *             .environmentId("env_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetChaosInfrastructureResult> getChaosInfrastructurePlain(GetChaosInfrastructurePlainArgs args) {
        return getChaosInfrastructurePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a chaos infrastructure.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetChaosInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getChaosInfrastructure(GetChaosInfrastructureArgs.builder()
     *             .identifier("identifier")
     *             .orgId("org_id")
     *             .projectId("project_id")
     *             .environmentId("env_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetChaosInfrastructureResult> getChaosInfrastructure(GetChaosInfrastructureArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getChaosInfrastructure:getChaosInfrastructure", TypeShape.of(GetChaosInfrastructureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a chaos infrastructure.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetChaosInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getChaosInfrastructure(GetChaosInfrastructureArgs.builder()
     *             .identifier("identifier")
     *             .orgId("org_id")
     *             .projectId("project_id")
     *             .environmentId("env_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetChaosInfrastructureResult> getChaosInfrastructure(GetChaosInfrastructureArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getChaosInfrastructure:getChaosInfrastructure", TypeShape.of(GetChaosInfrastructureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a chaos infrastructure.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetChaosInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getChaosInfrastructure(GetChaosInfrastructureArgs.builder()
     *             .identifier("identifier")
     *             .orgId("org_id")
     *             .projectId("project_id")
     *             .environmentId("env_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetChaosInfrastructureResult> getChaosInfrastructurePlain(GetChaosInfrastructurePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getChaosInfrastructure:getChaosInfrastructure", TypeShape.of(GetChaosInfrastructureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount() {
        return getCurrentAccount(GetCurrentAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static CompletableFuture<GetCurrentAccountResult> getCurrentAccountPlain() {
        return getCurrentAccountPlain(GetCurrentAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount(GetCurrentAccountArgs args) {
        return getCurrentAccount(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static CompletableFuture<GetCurrentAccountResult> getCurrentAccountPlain(GetCurrentAccountPlainArgs args) {
        return getCurrentAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount(GetCurrentAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getCurrentAccount:getCurrentAccount", TypeShape.of(GetCurrentAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount(GetCurrentAccountArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getCurrentAccount:getCurrentAccount", TypeShape.of(GetCurrentAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving information about the current Harness account
     * 
     */
    public static CompletableFuture<GetCurrentAccountResult> getCurrentAccountPlain(GetCurrentAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getCurrentAccount:getCurrentAccount", TypeShape.of(GetCurrentAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDelegateResult> getDelegate() {
        return getDelegate(GetDelegateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDelegateResult> getDelegatePlain() {
        return getDelegatePlain(GetDelegatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDelegateResult> getDelegate(GetDelegateArgs args) {
        return getDelegate(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDelegateResult> getDelegatePlain(GetDelegatePlainArgs args) {
        return getDelegatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDelegateResult> getDelegate(GetDelegateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getDelegate:getDelegate", TypeShape.of(GetDelegateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetDelegateResult> getDelegate(GetDelegateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getDelegate:getDelegate", TypeShape.of(GetDelegateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness delegate. If more than one delegate matches the query the first one will be returned.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetDelegateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HarnessFunctions.getDelegate(GetDelegateArgs.builder()
     *             .name("harness-delegate")
     *             .type("KUBERNETES")
     *             .status("ENABLED")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetDelegateResult> getDelegatePlain(GetDelegatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getDelegate:getDelegate", TypeShape.of(GetDelegateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetEncryptedTextResult> getEncryptedText() {
        return getEncryptedText(GetEncryptedTextArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetEncryptedTextResult> getEncryptedTextPlain() {
        return getEncryptedTextPlain(GetEncryptedTextPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetEncryptedTextResult> getEncryptedText(GetEncryptedTextArgs args) {
        return getEncryptedText(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetEncryptedTextResult> getEncryptedTextPlain(GetEncryptedTextPlainArgs args) {
        return getEncryptedTextPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetEncryptedTextResult> getEncryptedText(GetEncryptedTextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getEncryptedText:getEncryptedText", TypeShape.of(GetEncryptedTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetEncryptedTextResult> getEncryptedText(GetEncryptedTextArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getEncryptedText:getEncryptedText", TypeShape.of(GetEncryptedTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetEncryptedTextResult> getEncryptedTextPlain(GetEncryptedTextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getEncryptedText:getEncryptedText", TypeShape.of(GetEncryptedTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args) {
        return getEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args) {
        return getEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector() {
        return getGitConnector(GetGitConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetGitConnectorResult> getGitConnectorPlain() {
        return getGitConnectorPlain(GetGitConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector(GetGitConnectorArgs args) {
        return getGitConnector(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetGitConnectorResult> getGitConnectorPlain(GetGitConnectorPlainArgs args) {
        return getGitConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector(GetGitConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getGitConnector:getGitConnector", TypeShape.of(GetGitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector(GetGitConnectorArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getGitConnector:getGitConnector", TypeShape.of(GetGitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness application
     * 
     */
    public static CompletableFuture<GetGitConnectorResult> getGitConnectorPlain(GetGitConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getGitConnector:getGitConnector", TypeShape.of(GetGitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static Output<GetSecretManagerResult> getSecretManager() {
        return getSecretManager(GetSecretManagerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static CompletableFuture<GetSecretManagerResult> getSecretManagerPlain() {
        return getSecretManagerPlain(GetSecretManagerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static Output<GetSecretManagerResult> getSecretManager(GetSecretManagerArgs args) {
        return getSecretManager(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static CompletableFuture<GetSecretManagerResult> getSecretManagerPlain(GetSecretManagerPlainArgs args) {
        return getSecretManagerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static Output<GetSecretManagerResult> getSecretManager(GetSecretManagerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getSecretManager:getSecretManager", TypeShape.of(GetSecretManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static Output<GetSecretManagerResult> getSecretManager(GetSecretManagerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getSecretManager:getSecretManager", TypeShape.of(GetSecretManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness secret manager
     * 
     */
    public static CompletableFuture<GetSecretManagerResult> getSecretManagerPlain(GetSecretManagerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getSecretManager:getSecretManager", TypeShape.of(GetSecretManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static Output<GetSshCredentialResult> getSshCredential() {
        return getSshCredential(GetSshCredentialArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static CompletableFuture<GetSshCredentialResult> getSshCredentialPlain() {
        return getSshCredentialPlain(GetSshCredentialPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static Output<GetSshCredentialResult> getSshCredential(GetSshCredentialArgs args) {
        return getSshCredential(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static CompletableFuture<GetSshCredentialResult> getSshCredentialPlain(GetSshCredentialPlainArgs args) {
        return getSshCredentialPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static Output<GetSshCredentialResult> getSshCredential(GetSshCredentialArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getSshCredential:getSshCredential", TypeShape.of(GetSshCredentialResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static Output<GetSshCredentialResult> getSshCredential(GetSshCredentialArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getSshCredential:getSshCredential", TypeShape.of(GetSshCredentialResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving an SSH credential.
     * 
     */
    public static CompletableFuture<GetSshCredentialResult> getSshCredentialPlain(GetSshCredentialPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getSshCredential:getSshCredential", TypeShape.of(GetSshCredentialResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static Output<GetSsoProviderResult> getSsoProvider() {
        return getSsoProvider(GetSsoProviderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static CompletableFuture<GetSsoProviderResult> getSsoProviderPlain() {
        return getSsoProviderPlain(GetSsoProviderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static Output<GetSsoProviderResult> getSsoProvider(GetSsoProviderArgs args) {
        return getSsoProvider(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static CompletableFuture<GetSsoProviderResult> getSsoProviderPlain(GetSsoProviderPlainArgs args) {
        return getSsoProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static Output<GetSsoProviderResult> getSsoProvider(GetSsoProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getSsoProvider:getSsoProvider", TypeShape.of(GetSsoProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static Output<GetSsoProviderResult> getSsoProvider(GetSsoProviderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getSsoProvider:getSsoProvider", TypeShape.of(GetSsoProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving an SSO providers
     * 
     */
    public static CompletableFuture<GetSsoProviderResult> getSsoProviderPlain(GetSsoProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getSsoProvider:getSsoProvider", TypeShape.of(GetSsoProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTriggerResult> getTrigger() {
        return getTrigger(GetTriggerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTriggerResult> getTriggerPlain() {
        return getTriggerPlain(GetTriggerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTriggerResult> getTrigger(GetTriggerArgs args) {
        return getTrigger(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTriggerResult> getTriggerPlain(GetTriggerPlainArgs args) {
        return getTriggerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTriggerResult> getTrigger(GetTriggerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getTrigger:getTrigger", TypeShape.of(GetTriggerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetTriggerResult> getTrigger(GetTriggerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getTrigger:getTrigger", TypeShape.of(GetTriggerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.HarnessFunctions;
     * import com.pulumi.harness.inputs.GetTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleByName = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .appId("app_id")
     *             .name("name")
     *             .build());
     * 
     *         final var exampleById = HarnessFunctions.getTrigger(GetTriggerArgs.builder()
     *             .id("trigger_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetTriggerResult> getTriggerPlain(GetTriggerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getTrigger:getTrigger", TypeShape.of(GetTriggerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static Output<GetUserResult> getUser() {
        return getUser(GetUserArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain() {
        return getUserPlain(GetUserPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness user
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup() {
        return getUserGroup(GetUserGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static CompletableFuture<GetUserGroupResult> getUserGroupPlain() {
        return getUserGroupPlain(GetUserGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup(GetUserGroupArgs args) {
        return getUserGroup(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static CompletableFuture<GetUserGroupResult> getUserGroupPlain(GetUserGroupPlainArgs args) {
        return getUserGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup(GetUserGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getUserGroup:getUserGroup", TypeShape.of(GetUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup(GetUserGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getUserGroup:getUserGroup", TypeShape.of(GetUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness user group
     * 
     */
    public static CompletableFuture<GetUserGroupResult> getUserGroupPlain(GetUserGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getUserGroup:getUserGroup", TypeShape.of(GetUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a yaml config.
     * 
     */
    public static Output<GetYamlConfigResult> getYamlConfig(GetYamlConfigArgs args) {
        return getYamlConfig(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a yaml config.
     * 
     */
    public static CompletableFuture<GetYamlConfigResult> getYamlConfigPlain(GetYamlConfigPlainArgs args) {
        return getYamlConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a yaml config.
     * 
     */
    public static Output<GetYamlConfigResult> getYamlConfig(GetYamlConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:index/getYamlConfig:getYamlConfig", TypeShape.of(GetYamlConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a yaml config.
     * 
     */
    public static Output<GetYamlConfigResult> getYamlConfig(GetYamlConfigArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:index/getYamlConfig:getYamlConfig", TypeShape.of(GetYamlConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a yaml config.
     * 
     */
    public static CompletableFuture<GetYamlConfigResult> getYamlConfigPlain(GetYamlConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:index/getYamlConfig:getYamlConfig", TypeShape.of(GetYamlConfigResult.class), args, Utilities.withVersion(options));
    }
}
