// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GitOpsGnupgRequestArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitOpsGnupgState extends com.pulumi.resources.ResourceArgs {

    public static final GitOpsGnupgState Empty = new GitOpsGnupgState();

    /**
     * Account Identifier for the GnuPG Key.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Account Identifier for the GnuPG Key.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Agent identifier for the GnuPG Key.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return Agent identifier for the GnuPG Key.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * Identifier for the GnuPG Key.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Identifier for the GnuPG Key.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Organization Identifier for the GnuPG Key.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return Organization Identifier for the GnuPG Key.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Project Identifier for the GnuPG Key.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Project Identifier for the GnuPG Key.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * GnuPGPublicKey is a representation of a GnuPG public key
     * 
     */
    @Import(name="requests")
    private @Nullable Output<List<GitOpsGnupgRequestArgs>> requests;

    /**
     * @return GnuPGPublicKey is a representation of a GnuPG public key
     * 
     */
    public Optional<Output<List<GitOpsGnupgRequestArgs>>> requests() {
        return Optional.ofNullable(this.requests);
    }

    private GitOpsGnupgState() {}

    private GitOpsGnupgState(GitOpsGnupgState $) {
        this.accountId = $.accountId;
        this.agentId = $.agentId;
        this.identifier = $.identifier;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.requests = $.requests;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitOpsGnupgState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitOpsGnupgState $;

        public Builder() {
            $ = new GitOpsGnupgState();
        }

        public Builder(GitOpsGnupgState defaults) {
            $ = new GitOpsGnupgState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is deprecated and will be removed in a future release.
         * 
         */
        @Deprecated /* This field is deprecated and will be removed in a future release. */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is deprecated and will be removed in a future release.
         * 
         */
        @Deprecated /* This field is deprecated and will be removed in a future release. */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param agentId Agent identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId Agent identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param identifier Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param orgId Organization Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Organization Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param projectId Project Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project Identifier for the GnuPG Key.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param requests GnuPGPublicKey is a representation of a GnuPG public key
         * 
         * @return builder
         * 
         */
        public Builder requests(@Nullable Output<List<GitOpsGnupgRequestArgs>> requests) {
            $.requests = requests;
            return this;
        }

        /**
         * @param requests GnuPGPublicKey is a representation of a GnuPG public key
         * 
         * @return builder
         * 
         */
        public Builder requests(List<GitOpsGnupgRequestArgs> requests) {
            return requests(Output.of(requests));
        }

        /**
         * @param requests GnuPGPublicKey is a representation of a GnuPG public key
         * 
         * @return builder
         * 
         */
        public Builder requests(GitOpsGnupgRequestArgs... requests) {
            return requests(List.of(requests));
        }

        public GitOpsGnupgState build() {
            return $;
        }
    }

}
