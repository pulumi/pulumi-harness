// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerBasicAuthArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs Empty = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs();

    /**
     * The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest.
     * 
     */
    @Import(name="api", required=true)
    private Output<String> api;

    /**
     * @return The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest.
     * 
     */
    public Output<String> api() {
        return this.api;
    }

    /**
     * Credentials for Basic auth.
     * 
     */
    @Import(name="basicAuth")
    private @Nullable Output<GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerBasicAuthArgs> basicAuth;

    /**
     * @return Credentials for Basic auth.
     * 
     */
    public Optional<Output<GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerBasicAuthArgs>> basicAuth() {
        return Optional.ofNullable(this.basicAuth);
    }

    /**
     * Project to scan.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return Project to scan.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * Repo name to scan.
     * 
     */
    @Import(name="repo", required=true)
    private Output<String> repo;

    /**
     * @return Repo name to scan.
     * 
     */
    public Output<String> repo() {
        return this.repo;
    }

    private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs() {}

    private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs $) {
        this.api = $.api;
        this.basicAuth = $.basicAuth;
        this.project = $.project;
        this.repo = $.repo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs $;

        public Builder() {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs();
        }

        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs defaults) {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param api The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest.
         * 
         * @return builder
         * 
         */
        public Builder api(Output<String> api) {
            $.api = api;
            return this;
        }

        /**
         * @param api The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest.
         * 
         * @return builder
         * 
         */
        public Builder api(String api) {
            return api(Output.of(api));
        }

        /**
         * @param basicAuth Credentials for Basic auth.
         * 
         * @return builder
         * 
         */
        public Builder basicAuth(@Nullable Output<GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerBasicAuthArgs> basicAuth) {
            $.basicAuth = basicAuth;
            return this;
        }

        /**
         * @param basicAuth Credentials for Basic auth.
         * 
         * @return builder
         * 
         */
        public Builder basicAuth(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerBasicAuthArgs basicAuth) {
            return basicAuth(Output.of(basicAuth));
        }

        /**
         * @param project Project to scan.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Project to scan.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param repo Repo name to scan.
         * 
         * @return builder
         * 
         */
        public Builder repo(Output<String> repo) {
            $.repo = repo;
            return this;
        }

        /**
         * @param repo Repo name to scan.
         * 
         * @return builder
         * 
         */
        public Builder repo(String repo) {
            return repo(Output.of(repo));
        }

        public GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs build() {
            if ($.api == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs", "api");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs", "project");
            }
            if ($.repo == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorPullRequestBitbucketServerArgs", "repo");
            }
            return $;
        }
    }

}
