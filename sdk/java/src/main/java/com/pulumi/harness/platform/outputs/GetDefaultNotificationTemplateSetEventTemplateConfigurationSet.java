// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDefaultNotificationTemplateSetEventTemplateConfigurationSet {
    /**
     * @return List of notification events like PIPELINE_START
     * 
     */
    private List<String> notificationEvents;
    /**
     * @return Template reference configuration
     * 
     */
    private GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template;

    private GetDefaultNotificationTemplateSetEventTemplateConfigurationSet() {}
    /**
     * @return List of notification events like PIPELINE_START
     * 
     */
    public List<String> notificationEvents() {
        return this.notificationEvents;
    }
    /**
     * @return Template reference configuration
     * 
     */
    public GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template() {
        return this.template;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefaultNotificationTemplateSetEventTemplateConfigurationSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> notificationEvents;
        private GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template;
        public Builder() {}
        public Builder(GetDefaultNotificationTemplateSetEventTemplateConfigurationSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notificationEvents = defaults.notificationEvents;
    	      this.template = defaults.template;
        }

        @CustomType.Setter
        public Builder notificationEvents(List<String> notificationEvents) {
            if (notificationEvents == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetEventTemplateConfigurationSet", "notificationEvents");
            }
            this.notificationEvents = notificationEvents;
            return this;
        }
        public Builder notificationEvents(String... notificationEvents) {
            return notificationEvents(List.of(notificationEvents));
        }
        @CustomType.Setter
        public Builder template(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template) {
            if (template == null) {
              throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetEventTemplateConfigurationSet", "template");
            }
            this.template = template;
            return this;
        }
        public GetDefaultNotificationTemplateSetEventTemplateConfigurationSet build() {
            final var _resultValue = new GetDefaultNotificationTemplateSetEventTemplateConfigurationSet();
            _resultValue.notificationEvents = notificationEvents;
            _resultValue.template = template;
            return _resultValue;
        }
    }
}
