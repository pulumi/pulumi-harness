// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs Empty = new SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs();

    /**
     * Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * List of service accounts to include/exclude
     * 
     */
    @Import(name="serviceAccounts", required=true)
    private Output<List<String>> serviceAccounts;

    /**
     * @return List of service accounts to include/exclude
     * 
     */
    public Output<List<String>> serviceAccounts() {
        return this.serviceAccounts;
    }

    private SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs() {}

    private SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs $) {
        this.operator = $.operator;
        this.serviceAccounts = $.serviceAccounts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs $;

        public Builder() {
            $ = new SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs();
        }

        public Builder(SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs defaults) {
            $ = new SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param operator Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Operator for service account matching (EQUAL*TO or NOT*EQUAL_TO)
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param serviceAccounts List of service accounts to include/exclude
         * 
         * @return builder
         * 
         */
        public Builder serviceAccounts(Output<List<String>> serviceAccounts) {
            $.serviceAccounts = serviceAccounts;
            return this;
        }

        /**
         * @param serviceAccounts List of service accounts to include/exclude
         * 
         * @return builder
         * 
         */
        public Builder serviceAccounts(List<String> serviceAccounts) {
            return serviceAccounts(Output.of(serviceAccounts));
        }

        /**
         * @param serviceAccounts List of service accounts to include/exclude
         * 
         * @return builder
         * 
         */
        public Builder serviceAccounts(String... serviceAccounts) {
            return serviceAccounts(List.of(serviceAccounts));
        }

        public SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs build() {
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs", "operator");
            }
            if ($.serviceAccounts == null) {
                throw new MissingRequiredPropertyException("SecurityGovernanceConditionK8sSpecChaosServiceAccountSpecArgs", "serviceAccounts");
            }
            return $;
        }
    }

}
