// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetInfraVariableSetConnectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetInfraVariableSetConnectorArgs Empty = new GetInfraVariableSetConnectorArgs();

    /**
     * Connector Ref is the reference to the connector
     * 
     */
    @Import(name="connectorRef", required=true)
    private Output<String> connectorRef;

    /**
     * @return Connector Ref is the reference to the connector
     * 
     */
    public Output<String> connectorRef() {
        return this.connectorRef;
    }

    /**
     * Type is the connector type of the connector. Supported types: aws, azure, gcp
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type is the connector type of the connector. Supported types: aws, azure, gcp
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetInfraVariableSetConnectorArgs() {}

    private GetInfraVariableSetConnectorArgs(GetInfraVariableSetConnectorArgs $) {
        this.connectorRef = $.connectorRef;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInfraVariableSetConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInfraVariableSetConnectorArgs $;

        public Builder() {
            $ = new GetInfraVariableSetConnectorArgs();
        }

        public Builder(GetInfraVariableSetConnectorArgs defaults) {
            $ = new GetInfraVariableSetConnectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorRef Connector Ref is the reference to the connector
         * 
         * @return builder
         * 
         */
        public Builder connectorRef(Output<String> connectorRef) {
            $.connectorRef = connectorRef;
            return this;
        }

        /**
         * @param connectorRef Connector Ref is the reference to the connector
         * 
         * @return builder
         * 
         */
        public Builder connectorRef(String connectorRef) {
            return connectorRef(Output.of(connectorRef));
        }

        /**
         * @param type Type is the connector type of the connector. Supported types: aws, azure, gcp
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type is the connector type of the connector. Supported types: aws, azure, gcp
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetInfraVariableSetConnectorArgs build() {
            if ($.connectorRef == null) {
                throw new MissingRequiredPropertyException("GetInfraVariableSetConnectorArgs", "connectorRef");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetInfraVariableSetConnectorArgs", "type");
            }
            return $;
        }
    }

}
