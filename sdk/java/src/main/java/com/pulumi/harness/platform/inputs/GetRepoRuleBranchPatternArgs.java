// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRepoRuleBranchPatternArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRepoRuleBranchPatternArgs Empty = new GetRepoRuleBranchPatternArgs();

    /**
     * Should rule apply to default branch of the repository.
     * 
     */
    @Import(name="defaultBranch")
    private @Nullable Output<Boolean> defaultBranch;

    /**
     * @return Should rule apply to default branch of the repository.
     * 
     */
    public Optional<Output<Boolean>> defaultBranch() {
        return Optional.ofNullable(this.defaultBranch);
    }

    /**
     * Globstar branch patterns on which rules will NOT be applied.
     * 
     */
    @Import(name="excludes")
    private @Nullable Output<List<String>> excludes;

    /**
     * @return Globstar branch patterns on which rules will NOT be applied.
     * 
     */
    public Optional<Output<List<String>>> excludes() {
        return Optional.ofNullable(this.excludes);
    }

    /**
     * Globstar branch patterns on which rules will be applied.
     * 
     */
    @Import(name="includes")
    private @Nullable Output<List<String>> includes;

    /**
     * @return Globstar branch patterns on which rules will be applied.
     * 
     */
    public Optional<Output<List<String>>> includes() {
        return Optional.ofNullable(this.includes);
    }

    private GetRepoRuleBranchPatternArgs() {}

    private GetRepoRuleBranchPatternArgs(GetRepoRuleBranchPatternArgs $) {
        this.defaultBranch = $.defaultBranch;
        this.excludes = $.excludes;
        this.includes = $.includes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepoRuleBranchPatternArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepoRuleBranchPatternArgs $;

        public Builder() {
            $ = new GetRepoRuleBranchPatternArgs();
        }

        public Builder(GetRepoRuleBranchPatternArgs defaults) {
            $ = new GetRepoRuleBranchPatternArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultBranch Should rule apply to default branch of the repository.
         * 
         * @return builder
         * 
         */
        public Builder defaultBranch(@Nullable Output<Boolean> defaultBranch) {
            $.defaultBranch = defaultBranch;
            return this;
        }

        /**
         * @param defaultBranch Should rule apply to default branch of the repository.
         * 
         * @return builder
         * 
         */
        public Builder defaultBranch(Boolean defaultBranch) {
            return defaultBranch(Output.of(defaultBranch));
        }

        /**
         * @param excludes Globstar branch patterns on which rules will NOT be applied.
         * 
         * @return builder
         * 
         */
        public Builder excludes(@Nullable Output<List<String>> excludes) {
            $.excludes = excludes;
            return this;
        }

        /**
         * @param excludes Globstar branch patterns on which rules will NOT be applied.
         * 
         * @return builder
         * 
         */
        public Builder excludes(List<String> excludes) {
            return excludes(Output.of(excludes));
        }

        /**
         * @param excludes Globstar branch patterns on which rules will NOT be applied.
         * 
         * @return builder
         * 
         */
        public Builder excludes(String... excludes) {
            return excludes(List.of(excludes));
        }

        /**
         * @param includes Globstar branch patterns on which rules will be applied.
         * 
         * @return builder
         * 
         */
        public Builder includes(@Nullable Output<List<String>> includes) {
            $.includes = includes;
            return this;
        }

        /**
         * @param includes Globstar branch patterns on which rules will be applied.
         * 
         * @return builder
         * 
         */
        public Builder includes(List<String> includes) {
            return includes(Output.of(includes));
        }

        /**
         * @param includes Globstar branch patterns on which rules will be applied.
         * 
         * @return builder
         * 
         */
        public Builder includes(String... includes) {
            return includes(List.of(includes));
        }

        public GetRepoRuleBranchPatternArgs build() {
            return $;
        }
    }

}
