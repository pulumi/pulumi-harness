// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IacmDefaultPipelineState extends com.pulumi.resources.ResourceArgs {

    public static final IacmDefaultPipelineState Empty = new IacmDefaultPipelineState();

    /**
     * The operation associated with this default.
     * 
     */
    @Import(name="operation")
    private @Nullable Output<String> operation;

    /**
     * @return The operation associated with this default.
     * 
     */
    public Optional<Output<String>> operation() {
        return Optional.ofNullable(this.operation);
    }

    /**
     * Organization identifier of the organization the default pipelines resides in.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return Organization identifier of the organization the default pipelines resides in.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * The pipeline associated with this default.
     * 
     */
    @Import(name="pipeline")
    private @Nullable Output<String> pipeline;

    /**
     * @return The pipeline associated with this default.
     * 
     */
    public Optional<Output<String>> pipeline() {
        return Optional.ofNullable(this.pipeline);
    }

    /**
     * Project identifier of the project the default pipelines resides in.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Project identifier of the project the default pipelines resides in.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The provisioner associated with this default.
     * 
     */
    @Import(name="provisionerType")
    private @Nullable Output<String> provisionerType;

    /**
     * @return The provisioner associated with this default.
     * 
     */
    public Optional<Output<String>> provisionerType() {
        return Optional.ofNullable(this.provisionerType);
    }

    private IacmDefaultPipelineState() {}

    private IacmDefaultPipelineState(IacmDefaultPipelineState $) {
        this.operation = $.operation;
        this.orgId = $.orgId;
        this.pipeline = $.pipeline;
        this.projectId = $.projectId;
        this.provisionerType = $.provisionerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IacmDefaultPipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IacmDefaultPipelineState $;

        public Builder() {
            $ = new IacmDefaultPipelineState();
        }

        public Builder(IacmDefaultPipelineState defaults) {
            $ = new IacmDefaultPipelineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param operation The operation associated with this default.
         * 
         * @return builder
         * 
         */
        public Builder operation(@Nullable Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation The operation associated with this default.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param orgId Organization identifier of the organization the default pipelines resides in.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Organization identifier of the organization the default pipelines resides in.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param pipeline The pipeline associated with this default.
         * 
         * @return builder
         * 
         */
        public Builder pipeline(@Nullable Output<String> pipeline) {
            $.pipeline = pipeline;
            return this;
        }

        /**
         * @param pipeline The pipeline associated with this default.
         * 
         * @return builder
         * 
         */
        public Builder pipeline(String pipeline) {
            return pipeline(Output.of(pipeline));
        }

        /**
         * @param projectId Project identifier of the project the default pipelines resides in.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project identifier of the project the default pipelines resides in.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param provisionerType The provisioner associated with this default.
         * 
         * @return builder
         * 
         */
        public Builder provisionerType(@Nullable Output<String> provisionerType) {
            $.provisionerType = provisionerType;
            return this;
        }

        /**
         * @param provisionerType The provisioner associated with this default.
         * 
         * @return builder
         * 
         */
        public Builder provisionerType(String provisionerType) {
            return provisionerType(Output.of(provisionerType));
        }

        public IacmDefaultPipelineState build() {
            return $;
        }
    }

}
