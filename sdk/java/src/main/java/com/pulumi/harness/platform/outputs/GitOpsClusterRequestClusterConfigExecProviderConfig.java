// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitOpsClusterRequestClusterConfigExecProviderConfig {
    /**
     * @return Preferred input version of the ExecInfo.
     * 
     */
    private @Nullable String apiVersion;
    /**
     * @return Arguments to pass to the command when executing it.
     * 
     */
    private @Nullable List<String> args;
    /**
     * @return Command to execute.
     * 
     */
    private @Nullable String command;
    /**
     * @return Additional environment variables to expose to the process.
     * 
     */
    private @Nullable Map<String,String> env;
    /**
     * @return Message displayed when the executable is not found.
     * 
     */
    private @Nullable String installHint;

    private GitOpsClusterRequestClusterConfigExecProviderConfig() {}
    /**
     * @return Preferred input version of the ExecInfo.
     * 
     */
    public Optional<String> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }
    /**
     * @return Arguments to pass to the command when executing it.
     * 
     */
    public List<String> args() {
        return this.args == null ? List.of() : this.args;
    }
    /**
     * @return Command to execute.
     * 
     */
    public Optional<String> command() {
        return Optional.ofNullable(this.command);
    }
    /**
     * @return Additional environment variables to expose to the process.
     * 
     */
    public Map<String,String> env() {
        return this.env == null ? Map.of() : this.env;
    }
    /**
     * @return Message displayed when the executable is not found.
     * 
     */
    public Optional<String> installHint() {
        return Optional.ofNullable(this.installHint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitOpsClusterRequestClusterConfigExecProviderConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiVersion;
        private @Nullable List<String> args;
        private @Nullable String command;
        private @Nullable Map<String,String> env;
        private @Nullable String installHint;
        public Builder() {}
        public Builder(GitOpsClusterRequestClusterConfigExecProviderConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.args = defaults.args;
    	      this.command = defaults.command;
    	      this.env = defaults.env;
    	      this.installHint = defaults.installHint;
        }

        @CustomType.Setter
        public Builder apiVersion(@Nullable String apiVersion) {

            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder args(@Nullable List<String> args) {

            this.args = args;
            return this;
        }
        public Builder args(String... args) {
            return args(List.of(args));
        }
        @CustomType.Setter
        public Builder command(@Nullable String command) {

            this.command = command;
            return this;
        }
        @CustomType.Setter
        public Builder env(@Nullable Map<String,String> env) {

            this.env = env;
            return this;
        }
        @CustomType.Setter
        public Builder installHint(@Nullable String installHint) {

            this.installHint = installHint;
            return this;
        }
        public GitOpsClusterRequestClusterConfigExecProviderConfig build() {
            final var _resultValue = new GitOpsClusterRequestClusterConfigExecProviderConfig();
            _resultValue.apiVersion = apiVersion;
            _resultValue.args = args;
            _resultValue.command = command;
            _resultValue.env = env;
            _resultValue.installHint = installHint;
            return _resultValue;
        }
    }
}
