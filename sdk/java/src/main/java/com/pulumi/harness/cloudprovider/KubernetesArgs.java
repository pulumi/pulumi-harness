// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationArgs;
import com.pulumi.harness.cloudprovider.inputs.KubernetesUsageScopeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesArgs Empty = new KubernetesArgs();

    /**
     * Authentication configuration for the Kubernetes cluster
     * 
     */
    @Import(name="authentication", required=true)
    private Output<KubernetesAuthenticationArgs> authentication;

    /**
     * @return Authentication configuration for the Kubernetes cluster
     * 
     */
    public Output<KubernetesAuthenticationArgs> authentication() {
        return this.authentication;
    }

    /**
     * The name of the cloud provider.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the cloud provider.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Skip validation of Kubernetes configuration.
     * 
     */
    @Import(name="skipValidation")
    private @Nullable Output<Boolean> skipValidation;

    /**
     * @return Skip validation of Kubernetes configuration.
     * 
     */
    public Optional<Output<Boolean>> skipValidation() {
        return Optional.ofNullable(this.skipValidation);
    }

    /**
     * This block is used for scoping the resource to a specific set of applications or environments.
     * 
     */
    @Import(name="usageScopes")
    private @Nullable Output<List<KubernetesUsageScopeArgs>> usageScopes;

    /**
     * @return This block is used for scoping the resource to a specific set of applications or environments.
     * 
     */
    public Optional<Output<List<KubernetesUsageScopeArgs>>> usageScopes() {
        return Optional.ofNullable(this.usageScopes);
    }

    private KubernetesArgs() {}

    private KubernetesArgs(KubernetesArgs $) {
        this.authentication = $.authentication;
        this.name = $.name;
        this.skipValidation = $.skipValidation;
        this.usageScopes = $.usageScopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesArgs $;

        public Builder() {
            $ = new KubernetesArgs();
        }

        public Builder(KubernetesArgs defaults) {
            $ = new KubernetesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authentication Authentication configuration for the Kubernetes cluster
         * 
         * @return builder
         * 
         */
        public Builder authentication(Output<KubernetesAuthenticationArgs> authentication) {
            $.authentication = authentication;
            return this;
        }

        /**
         * @param authentication Authentication configuration for the Kubernetes cluster
         * 
         * @return builder
         * 
         */
        public Builder authentication(KubernetesAuthenticationArgs authentication) {
            return authentication(Output.of(authentication));
        }

        /**
         * @param name The name of the cloud provider.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cloud provider.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param skipValidation Skip validation of Kubernetes configuration.
         * 
         * @return builder
         * 
         */
        public Builder skipValidation(@Nullable Output<Boolean> skipValidation) {
            $.skipValidation = skipValidation;
            return this;
        }

        /**
         * @param skipValidation Skip validation of Kubernetes configuration.
         * 
         * @return builder
         * 
         */
        public Builder skipValidation(Boolean skipValidation) {
            return skipValidation(Output.of(skipValidation));
        }

        /**
         * @param usageScopes This block is used for scoping the resource to a specific set of applications or environments.
         * 
         * @return builder
         * 
         */
        public Builder usageScopes(@Nullable Output<List<KubernetesUsageScopeArgs>> usageScopes) {
            $.usageScopes = usageScopes;
            return this;
        }

        /**
         * @param usageScopes This block is used for scoping the resource to a specific set of applications or environments.
         * 
         * @return builder
         * 
         */
        public Builder usageScopes(List<KubernetesUsageScopeArgs> usageScopes) {
            return usageScopes(Output.of(usageScopes));
        }

        /**
         * @param usageScopes This block is used for scoping the resource to a specific set of applications or environments.
         * 
         * @return builder
         * 
         */
        public Builder usageScopes(KubernetesUsageScopeArgs... usageScopes) {
            return usageScopes(List.of(usageScopes));
        }

        public KubernetesArgs build() {
            if ($.authentication == null) {
                throw new MissingRequiredPropertyException("KubernetesArgs", "authentication");
            }
            return $;
        }
    }

}
