// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecurityGovernanceRuleTimeWindowRecurrence {
    /**
     * @return Type of recurrence (e.g., &#39;Daily&#39;, &#39;Weekly&#39;, &#39;Monthly&#39;).
     * 
     */
    private String type;
    /**
     * @return Unix timestamp in milliseconds until when the recurrence should continue.
     * 
     */
    private Integer until;
    /**
     * @return Recurrence value (e.g., interval for daily recurrence).
     * 
     */
    private Integer value;

    private GetSecurityGovernanceRuleTimeWindowRecurrence() {}
    /**
     * @return Type of recurrence (e.g., &#39;Daily&#39;, &#39;Weekly&#39;, &#39;Monthly&#39;).
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Unix timestamp in milliseconds until when the recurrence should continue.
     * 
     */
    public Integer until() {
        return this.until;
    }
    /**
     * @return Recurrence value (e.g., interval for daily recurrence).
     * 
     */
    public Integer value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityGovernanceRuleTimeWindowRecurrence defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String type;
        private Integer until;
        private Integer value;
        public Builder() {}
        public Builder(GetSecurityGovernanceRuleTimeWindowRecurrence defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.until = defaults.until;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetSecurityGovernanceRuleTimeWindowRecurrence", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder until(Integer until) {
            if (until == null) {
              throw new MissingRequiredPropertyException("GetSecurityGovernanceRuleTimeWindowRecurrence", "until");
            }
            this.until = until;
            return this;
        }
        @CustomType.Setter
        public Builder value(Integer value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetSecurityGovernanceRuleTimeWindowRecurrence", "value");
            }
            this.value = value;
            return this;
        }
        public GetSecurityGovernanceRuleTimeWindowRecurrence build() {
            final var _resultValue = new GetSecurityGovernanceRuleTimeWindowRecurrence();
            _resultValue.type = type;
            _resultValue.until = until;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
