// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetGitopsClusterRequestCluster;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGitopsClusterRequest {
    /**
     * @return GitOps cluster details.
     * 
     */
    private @Nullable List<GetGitopsClusterRequestCluster> clusters;
    /**
     * @return Tags for the GitOps cluster. These can be used to search or filter the GitOps agents.
     * 
     */
    private List<String> tags;
    /**
     * @return Fields which are updated.
     * 
     */
    private @Nullable List<String> updatedFields;
    /**
     * @return Indicates if the GitOps cluster should be updated if existing and inserted if not.
     * 
     */
    private @Nullable Boolean upsert;

    private GetGitopsClusterRequest() {}
    /**
     * @return GitOps cluster details.
     * 
     */
    public List<GetGitopsClusterRequestCluster> clusters() {
        return this.clusters == null ? List.of() : this.clusters;
    }
    /**
     * @return Tags for the GitOps cluster. These can be used to search or filter the GitOps agents.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return Fields which are updated.
     * 
     */
    public List<String> updatedFields() {
        return this.updatedFields == null ? List.of() : this.updatedFields;
    }
    /**
     * @return Indicates if the GitOps cluster should be updated if existing and inserted if not.
     * 
     */
    public Optional<Boolean> upsert() {
        return Optional.ofNullable(this.upsert);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGitopsClusterRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetGitopsClusterRequestCluster> clusters;
        private List<String> tags;
        private @Nullable List<String> updatedFields;
        private @Nullable Boolean upsert;
        public Builder() {}
        public Builder(GetGitopsClusterRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusters = defaults.clusters;
    	      this.tags = defaults.tags;
    	      this.updatedFields = defaults.updatedFields;
    	      this.upsert = defaults.upsert;
        }

        @CustomType.Setter
        public Builder clusters(@Nullable List<GetGitopsClusterRequestCluster> clusters) {

            this.clusters = clusters;
            return this;
        }
        public Builder clusters(GetGitopsClusterRequestCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetGitopsClusterRequest", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedFields(@Nullable List<String> updatedFields) {

            this.updatedFields = updatedFields;
            return this;
        }
        public Builder updatedFields(String... updatedFields) {
            return updatedFields(List.of(updatedFields));
        }
        @CustomType.Setter
        public Builder upsert(@Nullable Boolean upsert) {

            this.upsert = upsert;
            return this;
        }
        public GetGitopsClusterRequest build() {
            final var _resultValue = new GetGitopsClusterRequest();
            _resultValue.clusters = clusters;
            _resultValue.tags = tags;
            _resultValue.updatedFields = updatedFields;
            _resultValue.upsert = upsert;
            return _resultValue;
        }
    }
}
