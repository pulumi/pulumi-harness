// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityGovernanceRuleTimeWindowRecurrence {
    private String type;
    private Integer until;
    private @Nullable Integer value;

    private SecurityGovernanceRuleTimeWindowRecurrence() {}
    public String type() {
        return this.type;
    }
    public Integer until() {
        return this.until;
    }
    public Optional<Integer> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGovernanceRuleTimeWindowRecurrence defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String type;
        private Integer until;
        private @Nullable Integer value;
        public Builder() {}
        public Builder(SecurityGovernanceRuleTimeWindowRecurrence defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.until = defaults.until;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceRuleTimeWindowRecurrence", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder until(Integer until) {
            if (until == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceRuleTimeWindowRecurrence", "until");
            }
            this.until = until;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable Integer value) {

            this.value = value;
            return this;
        }
        public SecurityGovernanceRuleTimeWindowRecurrence build() {
            final var _resultValue = new SecurityGovernanceRuleTimeWindowRecurrence();
            _resultValue.type = type;
            _resultValue.until = until;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
