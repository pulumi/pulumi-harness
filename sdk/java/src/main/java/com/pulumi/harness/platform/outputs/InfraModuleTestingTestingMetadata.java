// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InfraModuleTestingTestingMetadata {
    /**
     * @return Account is the internal customer account ID
     * 
     */
    private @Nullable String account;
    /**
     * @return Organization identifier
     * 
     */
    private @Nullable String org;
    /**
     * @return Pipelines where the testing is enabled
     * 
     */
    private @Nullable List<String> pipelines;
    /**
     * @return Project identifier
     * 
     */
    private @Nullable String project;
    /**
     * @return Provider connector for testing purposes
     * 
     */
    private @Nullable String providerConnector;
    /**
     * @return Provisioner type for testing purposes
     * 
     */
    private @Nullable String provisionerType;
    /**
     * @return Provisioner version for testing purposes
     * 
     */
    private @Nullable String provisionerVersion;
    /**
     * @return Release pipeline
     * 
     */
    private @Nullable String releasePipeline;

    private InfraModuleTestingTestingMetadata() {}
    /**
     * @return Account is the internal customer account ID
     * 
     */
    public Optional<String> account() {
        return Optional.ofNullable(this.account);
    }
    /**
     * @return Organization identifier
     * 
     */
    public Optional<String> org() {
        return Optional.ofNullable(this.org);
    }
    /**
     * @return Pipelines where the testing is enabled
     * 
     */
    public List<String> pipelines() {
        return this.pipelines == null ? List.of() : this.pipelines;
    }
    /**
     * @return Project identifier
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return Provider connector for testing purposes
     * 
     */
    public Optional<String> providerConnector() {
        return Optional.ofNullable(this.providerConnector);
    }
    /**
     * @return Provisioner type for testing purposes
     * 
     */
    public Optional<String> provisionerType() {
        return Optional.ofNullable(this.provisionerType);
    }
    /**
     * @return Provisioner version for testing purposes
     * 
     */
    public Optional<String> provisionerVersion() {
        return Optional.ofNullable(this.provisionerVersion);
    }
    /**
     * @return Release pipeline
     * 
     */
    public Optional<String> releasePipeline() {
        return Optional.ofNullable(this.releasePipeline);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InfraModuleTestingTestingMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String account;
        private @Nullable String org;
        private @Nullable List<String> pipelines;
        private @Nullable String project;
        private @Nullable String providerConnector;
        private @Nullable String provisionerType;
        private @Nullable String provisionerVersion;
        private @Nullable String releasePipeline;
        public Builder() {}
        public Builder(InfraModuleTestingTestingMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.account = defaults.account;
    	      this.org = defaults.org;
    	      this.pipelines = defaults.pipelines;
    	      this.project = defaults.project;
    	      this.providerConnector = defaults.providerConnector;
    	      this.provisionerType = defaults.provisionerType;
    	      this.provisionerVersion = defaults.provisionerVersion;
    	      this.releasePipeline = defaults.releasePipeline;
        }

        @CustomType.Setter
        public Builder account(@Nullable String account) {

            this.account = account;
            return this;
        }
        @CustomType.Setter
        public Builder org(@Nullable String org) {

            this.org = org;
            return this;
        }
        @CustomType.Setter
        public Builder pipelines(@Nullable List<String> pipelines) {

            this.pipelines = pipelines;
            return this;
        }
        public Builder pipelines(String... pipelines) {
            return pipelines(List.of(pipelines));
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder providerConnector(@Nullable String providerConnector) {

            this.providerConnector = providerConnector;
            return this;
        }
        @CustomType.Setter
        public Builder provisionerType(@Nullable String provisionerType) {

            this.provisionerType = provisionerType;
            return this;
        }
        @CustomType.Setter
        public Builder provisionerVersion(@Nullable String provisionerVersion) {

            this.provisionerVersion = provisionerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder releasePipeline(@Nullable String releasePipeline) {

            this.releasePipeline = releasePipeline;
            return this;
        }
        public InfraModuleTestingTestingMetadata build() {
            final var _resultValue = new InfraModuleTestingTestingMetadata();
            _resultValue.account = account;
            _resultValue.org = org;
            _resultValue.pipelines = pipelines;
            _resultValue.project = project;
            _resultValue.providerConnector = providerConnector;
            _resultValue.provisionerType = provisionerType;
            _resultValue.provisionerVersion = provisionerVersion;
            _resultValue.releasePipeline = releasePipeline;
            return _resultValue;
        }
    }
}
