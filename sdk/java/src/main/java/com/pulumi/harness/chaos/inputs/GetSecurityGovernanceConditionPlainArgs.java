// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityGovernanceConditionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityGovernanceConditionPlainArgs Empty = new GetSecurityGovernanceConditionPlainArgs();

    /**
     * The ID of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization ID of the security governance condition
     * 
     */
    @Import(name="orgId")
    private @Nullable String orgId;

    /**
     * @return The organization ID of the security governance condition
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * The project ID of the security governance condition
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return The project ID of the security governance condition
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private GetSecurityGovernanceConditionPlainArgs() {}

    private GetSecurityGovernanceConditionPlainArgs(GetSecurityGovernanceConditionPlainArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityGovernanceConditionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityGovernanceConditionPlainArgs $;

        public Builder() {
            $ = new GetSecurityGovernanceConditionPlainArgs();
        }

        public Builder(GetSecurityGovernanceConditionPlainArgs defaults) {
            $ = new GetSecurityGovernanceConditionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the security governance condition. Either `id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The name of the security governance condition. Either `id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param orgId The organization ID of the security governance condition
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param projectId The project ID of the security governance condition
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetSecurityGovernanceConditionPlainArgs build() {
            return $;
        }
    }

}
