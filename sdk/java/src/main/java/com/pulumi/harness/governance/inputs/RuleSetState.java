// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.governance.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleSetState extends com.pulumi.resources.ResourceArgs {

    public static final RuleSetState Empty = new RuleSetState();

    /**
     * The cloud provider for the rule set. It should be either AWS, AZURE or GCP.
     * 
     */
    @Import(name="cloudProvider")
    private @Nullable Output<String> cloudProvider;

    /**
     * @return The cloud provider for the rule set. It should be either AWS, AZURE or GCP.
     * 
     */
    public Optional<Output<String>> cloudProvider() {
        return Optional.ofNullable(this.cloudProvider);
    }

    /**
     * Description for rule set.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for rule set.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the rule set.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the rule set.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of rule IDs
     * 
     */
    @Import(name="ruleIds")
    private @Nullable Output<List<String>> ruleIds;

    /**
     * @return List of rule IDs
     * 
     */
    public Optional<Output<List<String>>> ruleIds() {
        return Optional.ofNullable(this.ruleIds);
    }

    /**
     * Id of the rule.
     * 
     */
    @Import(name="ruleSetId")
    private @Nullable Output<String> ruleSetId;

    /**
     * @return Id of the rule.
     * 
     */
    public Optional<Output<String>> ruleSetId() {
        return Optional.ofNullable(this.ruleSetId);
    }

    private RuleSetState() {}

    private RuleSetState(RuleSetState $) {
        this.cloudProvider = $.cloudProvider;
        this.description = $.description;
        this.name = $.name;
        this.ruleIds = $.ruleIds;
        this.ruleSetId = $.ruleSetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleSetState $;

        public Builder() {
            $ = new RuleSetState();
        }

        public Builder(RuleSetState defaults) {
            $ = new RuleSetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider The cloud provider for the rule set. It should be either AWS, AZURE or GCP.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(@Nullable Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider The cloud provider for the rule set. It should be either AWS, AZURE or GCP.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        /**
         * @param description Description for rule set.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for rule set.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the rule set.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the rule set.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ruleIds List of rule IDs
         * 
         * @return builder
         * 
         */
        public Builder ruleIds(@Nullable Output<List<String>> ruleIds) {
            $.ruleIds = ruleIds;
            return this;
        }

        /**
         * @param ruleIds List of rule IDs
         * 
         * @return builder
         * 
         */
        public Builder ruleIds(List<String> ruleIds) {
            return ruleIds(Output.of(ruleIds));
        }

        /**
         * @param ruleIds List of rule IDs
         * 
         * @return builder
         * 
         */
        public Builder ruleIds(String... ruleIds) {
            return ruleIds(List.of(ruleIds));
        }

        /**
         * @param ruleSetId Id of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleSetId(@Nullable Output<String> ruleSetId) {
            $.ruleSetId = ruleSetId;
            return this;
        }

        /**
         * @param ruleSetId Id of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleSetId(String ruleSetId) {
            return ruleSetId(Output.of(ruleSetId));
        }

        public RuleSetState build() {
            return $;
        }
    }

}
