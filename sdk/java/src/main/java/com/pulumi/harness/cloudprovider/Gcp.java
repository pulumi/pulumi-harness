// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.cloudprovider.GcpArgs;
import com.pulumi.harness.cloudprovider.inputs.GcpState;
import com.pulumi.harness.cloudprovider.outputs.GcpUsageScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a GCP cloud provider. This resource uses the config-as-code API&#39;s. When updating the `name` or `path` of this resource you should typically also set the `createBeforeDestroy = true` lifecycle setting.
 * 
 */
@ResourceType(type="harness:cloudprovider/gcp:Gcp")
public class Gcp extends com.pulumi.resources.CustomResource {
    /**
     * Delegate selectors to use for this provider.
     * 
     */
    @Export(name="delegateSelectors", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> delegateSelectors;

    /**
     * @return Delegate selectors to use for this provider.
     * 
     */
    public Output<Optional<List<String>>> delegateSelectors() {
        return Codegen.optional(this.delegateSelectors);
    }
    /**
     * The name of the cloud provider.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the cloud provider.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The id of the secret containing the GCP credentials
     * 
     */
    @Export(name="secretFileId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secretFileId;

    /**
     * @return The id of the secret containing the GCP credentials
     * 
     */
    public Output<Optional<String>> secretFileId() {
        return Codegen.optional(this.secretFileId);
    }
    /**
     * Skip validation of GCP configuration.
     * 
     */
    @Export(name="skipValidation", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> skipValidation;

    /**
     * @return Skip validation of GCP configuration.
     * 
     */
    public Output<Optional<Boolean>> skipValidation() {
        return Codegen.optional(this.skipValidation);
    }
    /**
     * This block is used for scoping the resource to a specific set of applications or environments.
     * 
     */
    @Export(name="usageScopes", refs={List.class,GcpUsageScope.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GcpUsageScope>> usageScopes;

    /**
     * @return This block is used for scoping the resource to a specific set of applications or environments.
     * 
     */
    public Output<Optional<List<GcpUsageScope>>> usageScopes() {
        return Codegen.optional(this.usageScopes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Gcp(java.lang.String name) {
        this(name, GcpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Gcp(java.lang.String name, @Nullable GcpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Gcp(java.lang.String name, @Nullable GcpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:cloudprovider/gcp:Gcp", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Gcp(java.lang.String name, Output<java.lang.String> id, @Nullable GcpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:cloudprovider/gcp:Gcp", name, state, makeResourceOptions(options, id), false);
    }

    private static GcpArgs makeArgs(@Nullable GcpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GcpArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Gcp get(java.lang.String name, Output<java.lang.String> id, @Nullable GcpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Gcp(name, id, state, options);
    }
}
