// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityGovernanceRulePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityGovernanceRulePlainArgs Empty = new GetSecurityGovernanceRulePlainArgs();

    /**
     * The ID of the rule.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the rule.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization identifier.
     * 
     */
    @Import(name="orgId", required=true)
    private String orgId;

    /**
     * @return The organization identifier.
     * 
     */
    public String orgId() {
        return this.orgId;
    }

    /**
     * The project identifier.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The project identifier.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetSecurityGovernanceRulePlainArgs() {}

    private GetSecurityGovernanceRulePlainArgs(GetSecurityGovernanceRulePlainArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityGovernanceRulePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityGovernanceRulePlainArgs $;

        public Builder() {
            $ = new GetSecurityGovernanceRulePlainArgs();
        }

        public Builder(GetSecurityGovernanceRulePlainArgs defaults) {
            $ = new GetSecurityGovernanceRulePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the rule.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param orgId The organization identifier.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param projectId The project identifier.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetSecurityGovernanceRulePlainArgs build() {
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetSecurityGovernanceRulePlainArgs", "orgId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetSecurityGovernanceRulePlainArgs", "projectId");
            }
            return $;
        }
    }

}
