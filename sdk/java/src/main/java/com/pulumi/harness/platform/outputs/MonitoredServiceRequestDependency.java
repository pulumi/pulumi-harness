// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredServiceRequestDependency {
    /**
     * @return Dependency metadata for the monitored service.
     * 
     */
    private @Nullable String dependencyMetadata;
    /**
     * @return Monitored service identifier of the dependency.
     * 
     */
    private String monitoredServiceIdentifier;
    /**
     * @return Type of the service dependency.
     * 
     */
    private String type;

    private MonitoredServiceRequestDependency() {}
    /**
     * @return Dependency metadata for the monitored service.
     * 
     */
    public Optional<String> dependencyMetadata() {
        return Optional.ofNullable(this.dependencyMetadata);
    }
    /**
     * @return Monitored service identifier of the dependency.
     * 
     */
    public String monitoredServiceIdentifier() {
        return this.monitoredServiceIdentifier;
    }
    /**
     * @return Type of the service dependency.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredServiceRequestDependency defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dependencyMetadata;
        private String monitoredServiceIdentifier;
        private String type;
        public Builder() {}
        public Builder(MonitoredServiceRequestDependency defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dependencyMetadata = defaults.dependencyMetadata;
    	      this.monitoredServiceIdentifier = defaults.monitoredServiceIdentifier;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dependencyMetadata(@Nullable String dependencyMetadata) {

            this.dependencyMetadata = dependencyMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder monitoredServiceIdentifier(String monitoredServiceIdentifier) {
            if (monitoredServiceIdentifier == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestDependency", "monitoredServiceIdentifier");
            }
            this.monitoredServiceIdentifier = monitoredServiceIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestDependency", "type");
            }
            this.type = type;
            return this;
        }
        public MonitoredServiceRequestDependency build() {
            final var _resultValue = new MonitoredServiceRequestDependency();
            _resultValue.dependencyMetadata = dependencyMetadata;
            _resultValue.monitoredServiceIdentifier = monitoredServiceIdentifier;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
