// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.TasConnectorCredentialsTasManualDetails;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TasConnectorCredentials {
    /**
     * @return Authenticate to Tas using manual details.
     * 
     */
    private TasConnectorCredentialsTasManualDetails tasManualDetails;
    /**
     * @return Type can be ManualConfig.
     * 
     */
    private String type;

    private TasConnectorCredentials() {}
    /**
     * @return Authenticate to Tas using manual details.
     * 
     */
    public TasConnectorCredentialsTasManualDetails tasManualDetails() {
        return this.tasManualDetails;
    }
    /**
     * @return Type can be ManualConfig.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TasConnectorCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private TasConnectorCredentialsTasManualDetails tasManualDetails;
        private String type;
        public Builder() {}
        public Builder(TasConnectorCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tasManualDetails = defaults.tasManualDetails;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder tasManualDetails(TasConnectorCredentialsTasManualDetails tasManualDetails) {
            if (tasManualDetails == null) {
              throw new MissingRequiredPropertyException("TasConnectorCredentials", "tasManualDetails");
            }
            this.tasManualDetails = tasManualDetails;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("TasConnectorCredentials", "type");
            }
            this.type = type;
            return this;
        }
        public TasConnectorCredentials build() {
            final var _resultValue = new TasConnectorCredentials();
            _resultValue.tasManualDetails = tasManualDetails;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
