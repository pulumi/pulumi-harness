// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.autostopping.AzureGatewayArgs;
import com.pulumi.harness.autostopping.inputs.AzureGatewayState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating an Azure Application Gateway
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.autostopping.AzureGateway;
 * import com.pulumi.harness.autostopping.AzureGatewayArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new AzureGateway("test", AzureGatewayArgs.builder()
 *             .name("name")
 *             .cloudConnectorId("cloud_connector_id")
 *             .hostName("host_name")
 *             .region("eastus2")
 *             .resourceGroup("resource_group")
 *             .subnetId("/subscriptions/subscription_id/resourceGroups/resource_group/providers/Microsoft.Network/virtualNetworks/virtual_network/subnets/subnet_id")
 *             .vpc("/subscriptions/subscription_id/resourceGroups/resource_group/providers/Microsoft.Network/virtualNetworks/virtual_network")
 *             .azureFuncRegion("westus2")
 *             .frontendIp("/subscriptions/subscription_id/resourceGroups/resource_group/providers/Microsoft.Network/publicIPAddresses/publicip")
 *             .skuSize("sku2")
 *             .deleteCloudResourcesOnDestroy(true)
 *             .build());
 * 
 *         var importTest = new AzureGateway("importTest", AzureGatewayArgs.builder()
 *             .name("import_test")
 *             .cloudConnectorId("cloud_connector_id")
 *             .hostName("host_name")
 *             .region("westus2")
 *             .resourceGroup("test_resource_group")
 *             .appGatewayId("/subscriptions/subscription_id/resourceGroups/test_resource_group/providers/Microsoft.Network/applicationGateways/TestAppGateway")
 *             .certificateId("/subscriptions/subscription_id/resourceGroups/test_resource_group/providers/Microsoft.Network/applicationGateways/TestAppGateway/sslCertificates/certificate_name")
 *             .azureFuncRegion("westus2")
 *             .vpc("/subscriptions/subscription_id/resourceGroups/test_resource_group/providers/Microsoft.Network/virtualNetworks/test_resource_group_vnet")
 *             .deleteCloudResourcesOnDestroy(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="harness:autostopping/azureGateway:AzureGateway")
public class AzureGateway extends com.pulumi.resources.CustomResource {
    /**
     * ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
     * 
     */
    @Export(name="appGatewayId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appGatewayId;

    /**
     * @return ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
     * 
     */
    public Output<Optional<String>> appGatewayId() {
        return Codegen.optional(this.appGatewayId);
    }
    /**
     * Region in which azure cloud function will be provisioned
     * 
     */
    @Export(name="azureFuncRegion", refs={String.class}, tree="[0]")
    private Output<String> azureFuncRegion;

    /**
     * @return Region in which azure cloud function will be provisioned
     * 
     */
    public Output<String> azureFuncRegion() {
        return this.azureFuncRegion;
    }
    /**
     * ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
     * 
     */
    @Export(name="certificateId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificateId;

    /**
     * @return ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
     * 
     */
    public Output<Optional<String>> certificateId() {
        return Codegen.optional(this.certificateId);
    }
    /**
     * Id of the cloud connector
     * 
     */
    @Export(name="cloudConnectorId", refs={String.class}, tree="[0]")
    private Output<String> cloudConnectorId;

    /**
     * @return Id of the cloud connector
     * 
     */
    public Output<String> cloudConnectorId() {
        return this.cloudConnectorId;
    }
    @Export(name="deleteCloudResourcesOnDestroy", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deleteCloudResourcesOnDestroy;

    public Output<Boolean> deleteCloudResourcesOnDestroy() {
        return this.deleteCloudResourcesOnDestroy;
    }
    /**
     * ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
     * 
     */
    @Export(name="frontendIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> frontendIp;

    /**
     * @return ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
     * 
     */
    public Output<Optional<String>> frontendIp() {
        return Codegen.optional(this.frontendIp);
    }
    /**
     * Hostname for the proxy
     * 
     */
    @Export(name="hostName", refs={String.class}, tree="[0]")
    private Output<String> hostName;

    /**
     * @return Hostname for the proxy
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }
    /**
     * Unique identifier of the resource
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the proxy
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the proxy
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Region in which cloud resources are hosted
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region in which cloud resources are hosted
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Resource group in which cloud resources are hosted
     * 
     */
    @Export(name="resourceGroup", refs={String.class}, tree="[0]")
    private Output<String> resourceGroup;

    /**
     * @return Resource group in which cloud resources are hosted
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }
    /**
     * Size of machine used for the gateway. Required only for creating new AppGateway
     * 
     */
    @Export(name="skuSize", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> skuSize;

    /**
     * @return Size of machine used for the gateway. Required only for creating new AppGateway
     * 
     */
    public Output<Optional<String>> skuSize() {
        return Codegen.optional(this.skuSize);
    }
    /**
     * Subnet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subnetId;

    /**
     * @return Subnet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    public Output<Optional<String>> subnetId() {
        return Codegen.optional(this.subnetId);
    }
    /**
     * VNet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    @Export(name="vpc", refs={String.class}, tree="[0]")
    private Output<String> vpc;

    /**
     * @return VNet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    public Output<String> vpc() {
        return this.vpc;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AzureGateway(java.lang.String name) {
        this(name, AzureGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AzureGateway(java.lang.String name, AzureGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AzureGateway(java.lang.String name, AzureGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:autostopping/azureGateway:AzureGateway", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AzureGateway(java.lang.String name, Output<java.lang.String> id, @Nullable AzureGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:autostopping/azureGateway:AzureGateway", name, state, makeResourceOptions(options, id), false);
    }

    private static AzureGatewayArgs makeArgs(AzureGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AzureGatewayArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AzureGateway get(java.lang.String name, Output<java.lang.String> id, @Nullable AzureGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AzureGateway(name, id, state, options);
    }
}
