// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.GitOpsAgentArgs;
import com.pulumi.harness.platform.inputs.GitOpsAgentState;
import com.pulumi.harness.platform.outputs.GitOpsAgentMetadata;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing a Harness GitOps Agent.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.GitOpsAgent;
 * import com.pulumi.harness.platform.GitOpsAgentArgs;
 * import com.pulumi.harness.platform.inputs.GitOpsAgentMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new GitOpsAgent("example", GitOpsAgentArgs.builder()
 *             .identifier("identifier")
 *             .accountId("account_id")
 *             .projectId("project_id")
 *             .orgId("org_id")
 *             .name("name")
 *             .type("MANAGED_ARGO_PROVIDER")
 *             .metadatas(GitOpsAgentMetadataArgs.builder()
 *                 .namespace("namespace")
 *                 .highAvailability(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Import an Account level Gitops Agent
 * 
 * ```sh
 * $ pulumi import harness:platform/gitOpsAgent:GitOpsAgent example &lt;agent_id&gt;
 * ```
 * 
 * Import an Org level Gitops Agent
 * 
 * ```sh
 * $ pulumi import harness:platform/gitOpsAgent:GitOpsAgent example &lt;organization_id&gt;/&lt;agent_id&gt;
 * ```
 * 
 * Import a Project level Gitops Agent
 * 
 * ```sh
 * $ pulumi import harness:platform/gitOpsAgent:GitOpsAgent example &lt;organization_id&gt;/&lt;project_id&gt;/&lt;agent_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/gitOpsAgent:GitOpsAgent")
public class GitOpsAgent extends com.pulumi.resources.CustomResource {
    /**
     * Account identifier of the GitOps agent.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Account identifier of the GitOps agent.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Agent token to be used for authentication of the agent with Harness.
     * 
     */
    @Export(name="agentToken", refs={String.class}, tree="[0]")
    private Output<String> agentToken;

    /**
     * @return Agent token to be used for authentication of the agent with Harness.
     * 
     */
    public Output<String> agentToken() {
        return this.agentToken;
    }
    /**
     * Description of the GitOps agent.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the GitOps agent.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Identifier of the GitOps agent.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Identifier of the GitOps agent.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Metadata of the agent.
     * 
     */
    @Export(name="metadatas", refs={List.class,GitOpsAgentMetadata.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GitOpsAgentMetadata>> metadatas;

    /**
     * @return Metadata of the agent.
     * 
     */
    public Output<Optional<List<GitOpsAgentMetadata>>> metadatas() {
        return Codegen.optional(this.metadatas);
    }
    /**
     * Name of the GitOps agent.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the GitOps agent.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Operator to use for the Harness GitOps agent. Enum: &#34;ARGO&#34; &#34;FLAMINGO&#34;
     * 
     */
    @Export(name="operator", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> operator;

    /**
     * @return The Operator to use for the Harness GitOps agent. Enum: &#34;ARGO&#34; &#34;FLAMINGO&#34;
     * 
     */
    public Output<Optional<String>> operator() {
        return Codegen.optional(this.operator);
    }
    /**
     * Organization identifier of the GitOps agent.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Organization identifier of the GitOps agent.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Prefixed identifier of the GitOps agent. Agent identifier prefixed with scope of the agent
     * 
     */
    @Export(name="prefixedIdentifier", refs={String.class}, tree="[0]")
    private Output<String> prefixedIdentifier;

    /**
     * @return Prefixed identifier of the GitOps agent. Agent identifier prefixed with scope of the agent
     * 
     */
    public Output<String> prefixedIdentifier() {
        return this.prefixedIdentifier;
    }
    /**
     * Project identifier of the GitOps agent.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Project identifier of the GitOps agent.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Tags for the GitOps agents. These can be used to search or filter the GitOps agents.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Tags for the GitOps agents. These can be used to search or filter the GitOps agents.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Default: &#34;AGENT*TYPE*UNSET&#34;
     * Enum: &#34;AGENT*TYPE*UNSET&#34; &#34;CONNECTED*ARGO*PROVIDER&#34; &#34;MANAGED*ARGO*PROVIDER&#34;
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Default: &#34;AGENT*TYPE*UNSET&#34;
     * Enum: &#34;AGENT*TYPE*UNSET&#34; &#34;CONNECTED*ARGO*PROVIDER&#34; &#34;MANAGED*ARGO*PROVIDER&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GitOpsAgent(java.lang.String name) {
        this(name, GitOpsAgentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GitOpsAgent(java.lang.String name, GitOpsAgentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GitOpsAgent(java.lang.String name, GitOpsAgentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/gitOpsAgent:GitOpsAgent", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GitOpsAgent(java.lang.String name, Output<java.lang.String> id, @Nullable GitOpsAgentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/gitOpsAgent:GitOpsAgent", name, state, makeResourceOptions(options, id), false);
    }

    private static GitOpsAgentArgs makeArgs(GitOpsAgentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GitOpsAgentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GitOpsAgent get(java.lang.String name, Output<java.lang.String> id, @Nullable GitOpsAgentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GitOpsAgent(name, id, state, options);
    }
}
