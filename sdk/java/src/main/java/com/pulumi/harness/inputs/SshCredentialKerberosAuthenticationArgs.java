// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.inputs.SshCredentialKerberosAuthenticationTgtGenerationMethodArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SshCredentialKerberosAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SshCredentialKerberosAuthenticationArgs Empty = new SshCredentialKerberosAuthenticationArgs();

    /**
     * Port to use for Kerberos authentication
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return Port to use for Kerberos authentication
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * Name of the principal for authentication
     * 
     */
    @Import(name="principal", required=true)
    private Output<String> principal;

    /**
     * @return Name of the principal for authentication
     * 
     */
    public Output<String> principal() {
        return this.principal;
    }

    /**
     * Realm associated with the Kerberos authentication
     * 
     */
    @Import(name="realm", required=true)
    private Output<String> realm;

    /**
     * @return Realm associated with the Kerberos authentication
     * 
     */
    public Output<String> realm() {
        return this.realm;
    }

    /**
     * TGT generation method
     * 
     */
    @Import(name="tgtGenerationMethod")
    private @Nullable Output<SshCredentialKerberosAuthenticationTgtGenerationMethodArgs> tgtGenerationMethod;

    /**
     * @return TGT generation method
     * 
     */
    public Optional<Output<SshCredentialKerberosAuthenticationTgtGenerationMethodArgs>> tgtGenerationMethod() {
        return Optional.ofNullable(this.tgtGenerationMethod);
    }

    private SshCredentialKerberosAuthenticationArgs() {}

    private SshCredentialKerberosAuthenticationArgs(SshCredentialKerberosAuthenticationArgs $) {
        this.port = $.port;
        this.principal = $.principal;
        this.realm = $.realm;
        this.tgtGenerationMethod = $.tgtGenerationMethod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SshCredentialKerberosAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SshCredentialKerberosAuthenticationArgs $;

        public Builder() {
            $ = new SshCredentialKerberosAuthenticationArgs();
        }

        public Builder(SshCredentialKerberosAuthenticationArgs defaults) {
            $ = new SshCredentialKerberosAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port Port to use for Kerberos authentication
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port to use for Kerberos authentication
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param principal Name of the principal for authentication
         * 
         * @return builder
         * 
         */
        public Builder principal(Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal Name of the principal for authentication
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param realm Realm associated with the Kerberos authentication
         * 
         * @return builder
         * 
         */
        public Builder realm(Output<String> realm) {
            $.realm = realm;
            return this;
        }

        /**
         * @param realm Realm associated with the Kerberos authentication
         * 
         * @return builder
         * 
         */
        public Builder realm(String realm) {
            return realm(Output.of(realm));
        }

        /**
         * @param tgtGenerationMethod TGT generation method
         * 
         * @return builder
         * 
         */
        public Builder tgtGenerationMethod(@Nullable Output<SshCredentialKerberosAuthenticationTgtGenerationMethodArgs> tgtGenerationMethod) {
            $.tgtGenerationMethod = tgtGenerationMethod;
            return this;
        }

        /**
         * @param tgtGenerationMethod TGT generation method
         * 
         * @return builder
         * 
         */
        public Builder tgtGenerationMethod(SshCredentialKerberosAuthenticationTgtGenerationMethodArgs tgtGenerationMethod) {
            return tgtGenerationMethod(Output.of(tgtGenerationMethod));
        }

        public SshCredentialKerberosAuthenticationArgs build() {
            if ($.port == null) {
                throw new MissingRequiredPropertyException("SshCredentialKerberosAuthenticationArgs", "port");
            }
            if ($.principal == null) {
                throw new MissingRequiredPropertyException("SshCredentialKerberosAuthenticationArgs", "principal");
            }
            if ($.realm == null) {
                throw new MissingRequiredPropertyException("SshCredentialKerberosAuthenticationArgs", "realm");
            }
            return $;
        }
    }

}
