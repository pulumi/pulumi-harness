// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InfrastructureDefinitionAzureWebappArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureDefinitionAzureWebappArgs Empty = new InfrastructureDefinitionAzureWebappArgs();

    /**
     * The name of the cloud provider to connect with.
     * 
     */
    @Import(name="cloudProviderName", required=true)
    private Output<String> cloudProviderName;

    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    public Output<String> cloudProviderName() {
        return this.cloudProviderName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroup", required=true)
    private Output<String> resourceGroup;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * The unique id of the azure subscription.
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return The unique id of the azure subscription.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    private InfrastructureDefinitionAzureWebappArgs() {}

    private InfrastructureDefinitionAzureWebappArgs(InfrastructureDefinitionAzureWebappArgs $) {
        this.cloudProviderName = $.cloudProviderName;
        this.resourceGroup = $.resourceGroup;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureDefinitionAzureWebappArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureDefinitionAzureWebappArgs $;

        public Builder() {
            $ = new InfrastructureDefinitionAzureWebappArgs();
        }

        public Builder(InfrastructureDefinitionAzureWebappArgs defaults) {
            $ = new InfrastructureDefinitionAzureWebappArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProviderName The name of the cloud provider to connect with.
         * 
         * @return builder
         * 
         */
        public Builder cloudProviderName(Output<String> cloudProviderName) {
            $.cloudProviderName = cloudProviderName;
            return this;
        }

        /**
         * @param cloudProviderName The name of the cloud provider to connect with.
         * 
         * @return builder
         * 
         */
        public Builder cloudProviderName(String cloudProviderName) {
            return cloudProviderName(Output.of(cloudProviderName));
        }

        /**
         * @param resourceGroup The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param subscriptionId The unique id of the azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The unique id of the azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public InfrastructureDefinitionAzureWebappArgs build() {
            if ($.cloudProviderName == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureWebappArgs", "cloudProviderName");
            }
            if ($.resourceGroup == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureWebappArgs", "resourceGroup");
            }
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureWebappArgs", "subscriptionId");
            }
            return $;
        }
    }

}
