// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbSchemaChangelogScriptArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbSchemaChangelogScriptArgs Empty = new DbSchemaChangelogScriptArgs();

    /**
     * Script to clone changeSets
     * 
     */
    @Import(name="command")
    private @Nullable Output<String> command;

    /**
     * @return Script to clone changeSets
     * 
     */
    public Optional<Output<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * The fully-qualified name (FQN) of the image
     * 
     */
    @Import(name="image")
    private @Nullable Output<String> image;

    /**
     * @return The fully-qualified name (FQN) of the image
     * 
     */
    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * Path to changeLog file
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Path to changeLog file
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Type of the shell. For example Sh or Bash
     * 
     */
    @Import(name="shell")
    private @Nullable Output<String> shell;

    /**
     * @return Type of the shell. For example Sh or Bash
     * 
     */
    public Optional<Output<String>> shell() {
        return Optional.ofNullable(this.shell);
    }

    private DbSchemaChangelogScriptArgs() {}

    private DbSchemaChangelogScriptArgs(DbSchemaChangelogScriptArgs $) {
        this.command = $.command;
        this.image = $.image;
        this.location = $.location;
        this.shell = $.shell;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbSchemaChangelogScriptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbSchemaChangelogScriptArgs $;

        public Builder() {
            $ = new DbSchemaChangelogScriptArgs();
        }

        public Builder(DbSchemaChangelogScriptArgs defaults) {
            $ = new DbSchemaChangelogScriptArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param command Script to clone changeSets
         * 
         * @return builder
         * 
         */
        public Builder command(@Nullable Output<String> command) {
            $.command = command;
            return this;
        }

        /**
         * @param command Script to clone changeSets
         * 
         * @return builder
         * 
         */
        public Builder command(String command) {
            return command(Output.of(command));
        }

        /**
         * @param image The fully-qualified name (FQN) of the image
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image The fully-qualified name (FQN) of the image
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param location Path to changeLog file
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Path to changeLog file
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param shell Type of the shell. For example Sh or Bash
         * 
         * @return builder
         * 
         */
        public Builder shell(@Nullable Output<String> shell) {
            $.shell = shell;
            return this;
        }

        /**
         * @param shell Type of the shell. For example Sh or Bash
         * 
         * @return builder
         * 
         */
        public Builder shell(String shell) {
            return shell(Output.of(shell));
        }

        public DbSchemaChangelogScriptArgs build() {
            return $;
        }
    }

}
