// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsGnupgRequestPublickey extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsGnupgRequestPublickey Empty = new GetGitopsGnupgRequestPublickey();

    /**
     * Fingerprint is the fingerprint of the key
     * 
     */
    @Import(name="fingerprint")
    private @Nullable String fingerprint;

    /**
     * @return Fingerprint is the fingerprint of the key
     * 
     */
    public Optional<String> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * KeyData holds the raw key data, in base64 encoded format.
     * 
     */
    @Import(name="keyData")
    private @Nullable String keyData;

    /**
     * @return KeyData holds the raw key data, in base64 encoded format.
     * 
     */
    public Optional<String> keyData() {
        return Optional.ofNullable(this.keyData);
    }

    /**
     * KeyID specifies the key ID, in hexadecimal string format.
     * 
     */
    @Import(name="keyId")
    private @Nullable String keyId;

    /**
     * @return KeyID specifies the key ID, in hexadecimal string format.
     * 
     */
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }

    /**
     * Owner holds the owner identification, e.g. a name and e-mail address
     * 
     */
    @Import(name="owner")
    private @Nullable String owner;

    /**
     * @return Owner holds the owner identification, e.g. a name and e-mail address
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }

    /**
     * SubType holds the key&#39;s sub type
     * 
     */
    @Import(name="subType")
    private @Nullable String subType;

    /**
     * @return SubType holds the key&#39;s sub type
     * 
     */
    public Optional<String> subType() {
        return Optional.ofNullable(this.subType);
    }

    /**
     * Trust holds the level of trust assigned to this key
     * 
     */
    @Import(name="trust")
    private @Nullable String trust;

    /**
     * @return Trust holds the level of trust assigned to this key
     * 
     */
    public Optional<String> trust() {
        return Optional.ofNullable(this.trust);
    }

    private GetGitopsGnupgRequestPublickey() {}

    private GetGitopsGnupgRequestPublickey(GetGitopsGnupgRequestPublickey $) {
        this.fingerprint = $.fingerprint;
        this.keyData = $.keyData;
        this.keyId = $.keyId;
        this.owner = $.owner;
        this.subType = $.subType;
        this.trust = $.trust;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsGnupgRequestPublickey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsGnupgRequestPublickey $;

        public Builder() {
            $ = new GetGitopsGnupgRequestPublickey();
        }

        public Builder(GetGitopsGnupgRequestPublickey defaults) {
            $ = new GetGitopsGnupgRequestPublickey(Objects.requireNonNull(defaults));
        }

        /**
         * @param fingerprint Fingerprint is the fingerprint of the key
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable String fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param keyData KeyData holds the raw key data, in base64 encoded format.
         * 
         * @return builder
         * 
         */
        public Builder keyData(@Nullable String keyData) {
            $.keyData = keyData;
            return this;
        }

        /**
         * @param keyId KeyID specifies the key ID, in hexadecimal string format.
         * 
         * @return builder
         * 
         */
        public Builder keyId(@Nullable String keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param owner Owner holds the owner identification, e.g. a name and e-mail address
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable String owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param subType SubType holds the key&#39;s sub type
         * 
         * @return builder
         * 
         */
        public Builder subType(@Nullable String subType) {
            $.subType = subType;
            return this;
        }

        /**
         * @param trust Trust holds the level of trust assigned to this key
         * 
         * @return builder
         * 
         */
        public Builder trust(@Nullable String trust) {
            $.trust = trust;
            return this;
        }

        public GetGitopsGnupgRequestPublickey build() {
            return $;
        }
    }

}
