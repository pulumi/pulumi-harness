// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfrastructureV2MtlsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureV2MtlsArgs Empty = new InfrastructureV2MtlsArgs();

    /**
     * Path to the certificate file for mTLS
     * 
     */
    @Import(name="certPath")
    private @Nullable Output<String> certPath;

    /**
     * @return Path to the certificate file for mTLS
     * 
     */
    public Optional<Output<String>> certPath() {
        return Optional.ofNullable(this.certPath);
    }

    /**
     * Path to the private key file for mTLS
     * 
     */
    @Import(name="keyPath")
    private @Nullable Output<String> keyPath;

    /**
     * @return Path to the private key file for mTLS
     * 
     */
    public Optional<Output<String>> keyPath() {
        return Optional.ofNullable(this.keyPath);
    }

    /**
     * Name of the Kubernetes secret containing mTLS certificates
     * 
     */
    @Import(name="secretName")
    private @Nullable Output<String> secretName;

    /**
     * @return Name of the Kubernetes secret containing mTLS certificates
     * 
     */
    public Optional<Output<String>> secretName() {
        return Optional.ofNullable(this.secretName);
    }

    /**
     * URL for the mTLS endpoint
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return URL for the mTLS endpoint
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private InfrastructureV2MtlsArgs() {}

    private InfrastructureV2MtlsArgs(InfrastructureV2MtlsArgs $) {
        this.certPath = $.certPath;
        this.keyPath = $.keyPath;
        this.secretName = $.secretName;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureV2MtlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureV2MtlsArgs $;

        public Builder() {
            $ = new InfrastructureV2MtlsArgs();
        }

        public Builder(InfrastructureV2MtlsArgs defaults) {
            $ = new InfrastructureV2MtlsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certPath Path to the certificate file for mTLS
         * 
         * @return builder
         * 
         */
        public Builder certPath(@Nullable Output<String> certPath) {
            $.certPath = certPath;
            return this;
        }

        /**
         * @param certPath Path to the certificate file for mTLS
         * 
         * @return builder
         * 
         */
        public Builder certPath(String certPath) {
            return certPath(Output.of(certPath));
        }

        /**
         * @param keyPath Path to the private key file for mTLS
         * 
         * @return builder
         * 
         */
        public Builder keyPath(@Nullable Output<String> keyPath) {
            $.keyPath = keyPath;
            return this;
        }

        /**
         * @param keyPath Path to the private key file for mTLS
         * 
         * @return builder
         * 
         */
        public Builder keyPath(String keyPath) {
            return keyPath(Output.of(keyPath));
        }

        /**
         * @param secretName Name of the Kubernetes secret containing mTLS certificates
         * 
         * @return builder
         * 
         */
        public Builder secretName(@Nullable Output<String> secretName) {
            $.secretName = secretName;
            return this;
        }

        /**
         * @param secretName Name of the Kubernetes secret containing mTLS certificates
         * 
         * @return builder
         * 
         */
        public Builder secretName(String secretName) {
            return secretName(Output.of(secretName));
        }

        /**
         * @param url URL for the mTLS endpoint
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url URL for the mTLS endpoint
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public InfrastructureV2MtlsArgs build() {
            return $;
        }
    }

}
