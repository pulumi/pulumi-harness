// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PipelineCentralNotificationRuleNotificationConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineCentralNotificationRuleNotificationConditionArgs Empty = new PipelineCentralNotificationRuleNotificationConditionArgs();

    @Import(name="conditionName", required=true)
    private Output<String> conditionName;

    public Output<String> conditionName() {
        return this.conditionName;
    }

    @Import(name="notificationEventConfigs", required=true)
    private Output<List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs>> notificationEventConfigs;

    public Output<List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs>> notificationEventConfigs() {
        return this.notificationEventConfigs;
    }

    private PipelineCentralNotificationRuleNotificationConditionArgs() {}

    private PipelineCentralNotificationRuleNotificationConditionArgs(PipelineCentralNotificationRuleNotificationConditionArgs $) {
        this.conditionName = $.conditionName;
        this.notificationEventConfigs = $.notificationEventConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineCentralNotificationRuleNotificationConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineCentralNotificationRuleNotificationConditionArgs $;

        public Builder() {
            $ = new PipelineCentralNotificationRuleNotificationConditionArgs();
        }

        public Builder(PipelineCentralNotificationRuleNotificationConditionArgs defaults) {
            $ = new PipelineCentralNotificationRuleNotificationConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditionName(Output<String> conditionName) {
            $.conditionName = conditionName;
            return this;
        }

        public Builder conditionName(String conditionName) {
            return conditionName(Output.of(conditionName));
        }

        public Builder notificationEventConfigs(Output<List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs>> notificationEventConfigs) {
            $.notificationEventConfigs = notificationEventConfigs;
            return this;
        }

        public Builder notificationEventConfigs(List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs> notificationEventConfigs) {
            return notificationEventConfigs(Output.of(notificationEventConfigs));
        }

        public Builder notificationEventConfigs(PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs... notificationEventConfigs) {
            return notificationEventConfigs(List.of(notificationEventConfigs));
        }

        public PipelineCentralNotificationRuleNotificationConditionArgs build() {
            if ($.conditionName == null) {
                throw new MissingRequiredPropertyException("PipelineCentralNotificationRuleNotificationConditionArgs", "conditionName");
            }
            if ($.notificationEventConfigs == null) {
                throw new MissingRequiredPropertyException("PipelineCentralNotificationRuleNotificationConditionArgs", "notificationEventConfigs");
            }
            return $;
        }
    }

}
