// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InfrastructureDefinitionAzureVmss {
    /**
     * @return The type of authentication to use. Valid options are SSH*PUBLIC*KEY.
     * 
     */
    private String authType;
    /**
     * @return Base name.
     * 
     */
    private String baseName;
    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    private String cloudProviderName;
    /**
     * @return The type of deployment. Valid options are NATIVE_VMSS
     * 
     */
    private String deploymentType;
    /**
     * @return The name of the host connection attributes to use.
     * 
     */
    private @Nullable String hostConnectionAttrsName;
    /**
     * @return The name of the resource group.
     * 
     */
    private String resourceGroupName;
    /**
     * @return The unique id of the azure subscription.
     * 
     */
    private String subscriptionId;
    /**
     * @return The username to connect with.
     * 
     */
    private String username;

    private InfrastructureDefinitionAzureVmss() {}
    /**
     * @return The type of authentication to use. Valid options are SSH*PUBLIC*KEY.
     * 
     */
    public String authType() {
        return this.authType;
    }
    /**
     * @return Base name.
     * 
     */
    public String baseName() {
        return this.baseName;
    }
    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    public String cloudProviderName() {
        return this.cloudProviderName;
    }
    /**
     * @return The type of deployment. Valid options are NATIVE_VMSS
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return The name of the host connection attributes to use.
     * 
     */
    public Optional<String> hostConnectionAttrsName() {
        return Optional.ofNullable(this.hostConnectionAttrsName);
    }
    /**
     * @return The name of the resource group.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The unique id of the azure subscription.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return The username to connect with.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InfrastructureDefinitionAzureVmss defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authType;
        private String baseName;
        private String cloudProviderName;
        private String deploymentType;
        private @Nullable String hostConnectionAttrsName;
        private String resourceGroupName;
        private String subscriptionId;
        private String username;
        public Builder() {}
        public Builder(InfrastructureDefinitionAzureVmss defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.baseName = defaults.baseName;
    	      this.cloudProviderName = defaults.cloudProviderName;
    	      this.deploymentType = defaults.deploymentType;
    	      this.hostConnectionAttrsName = defaults.hostConnectionAttrsName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder authType(String authType) {
            if (authType == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "authType");
            }
            this.authType = authType;
            return this;
        }
        @CustomType.Setter
        public Builder baseName(String baseName) {
            if (baseName == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "baseName");
            }
            this.baseName = baseName;
            return this;
        }
        @CustomType.Setter
        public Builder cloudProviderName(String cloudProviderName) {
            if (cloudProviderName == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "cloudProviderName");
            }
            this.cloudProviderName = cloudProviderName;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            if (deploymentType == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "deploymentType");
            }
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder hostConnectionAttrsName(@Nullable String hostConnectionAttrsName) {

            this.hostConnectionAttrsName = hostConnectionAttrsName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("InfrastructureDefinitionAzureVmss", "username");
            }
            this.username = username;
            return this;
        }
        public InfrastructureDefinitionAzureVmss build() {
            final var _resultValue = new InfrastructureDefinitionAzureVmss();
            _resultValue.authType = authType;
            _resultValue.baseName = baseName;
            _resultValue.cloudProviderName = cloudProviderName;
            _resultValue.deploymentType = deploymentType;
            _resultValue.hostConnectionAttrsName = hostConnectionAttrsName;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
