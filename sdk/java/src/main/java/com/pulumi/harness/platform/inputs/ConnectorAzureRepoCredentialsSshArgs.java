// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ConnectorAzureRepoCredentialsSshArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorAzureRepoCredentialsSshArgs Empty = new ConnectorAzureRepoCredentialsSshArgs();

    /**
     * Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Import(name="sshKeyRef", required=true)
    private Output<String> sshKeyRef;

    /**
     * @return Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Output<String> sshKeyRef() {
        return this.sshKeyRef;
    }

    private ConnectorAzureRepoCredentialsSshArgs() {}

    private ConnectorAzureRepoCredentialsSshArgs(ConnectorAzureRepoCredentialsSshArgs $) {
        this.sshKeyRef = $.sshKeyRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorAzureRepoCredentialsSshArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorAzureRepoCredentialsSshArgs $;

        public Builder() {
            $ = new ConnectorAzureRepoCredentialsSshArgs();
        }

        public Builder(ConnectorAzureRepoCredentialsSshArgs defaults) {
            $ = new ConnectorAzureRepoCredentialsSshArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sshKeyRef Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder sshKeyRef(Output<String> sshKeyRef) {
            $.sshKeyRef = sshKeyRef;
            return this;
        }

        /**
         * @param sshKeyRef Reference to the Harness secret containing the ssh key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder sshKeyRef(String sshKeyRef) {
            return sshKeyRef(Output.of(sshKeyRef));
        }

        public ConnectorAzureRepoCredentialsSshArgs build() {
            if ($.sshKeyRef == null) {
                throw new MissingRequiredPropertyException("ConnectorAzureRepoCredentialsSshArgs", "sshKeyRef");
            }
            return $;
        }
    }

}
