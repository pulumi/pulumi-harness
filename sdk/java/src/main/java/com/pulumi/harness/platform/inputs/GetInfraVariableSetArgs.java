// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetConnectorArgs;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetEnvironmentVariableArgs;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetTerraformVariableArgs;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetTerraformVariableFileArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInfraVariableSetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInfraVariableSetArgs Empty = new GetInfraVariableSetArgs();

    /**
     * Provider connector configured on the variable set
     * 
     */
    @Import(name="connectors")
    private @Nullable Output<List<GetInfraVariableSetConnectorArgs>> connectors;

    /**
     * @return Provider connector configured on the variable set
     * 
     */
    public Optional<Output<List<GetInfraVariableSetConnectorArgs>>> connectors() {
        return Optional.ofNullable(this.connectors);
    }

    /**
     * Environment variables configured on the variable set
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<List<GetInfraVariableSetEnvironmentVariableArgs>> environmentVariables;

    /**
     * @return Environment variables configured on the variable set
     * 
     */
    public Optional<Output<List<GetInfraVariableSetEnvironmentVariableArgs>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Identifier of the Variable Set
     * 
     */
    @Import(name="identifier", required=true)
    private Output<String> identifier;

    /**
     * @return Identifier of the Variable Set
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }

    /**
     * Name of the Variable Set
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Variable Set
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Organization Identifier
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return Organization Identifier
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Project Identifier
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Project Identifier
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    @Import(name="terraformVariableFiles")
    private @Nullable Output<List<GetInfraVariableSetTerraformVariableFileArgs>> terraformVariableFiles;

    public Optional<Output<List<GetInfraVariableSetTerraformVariableFileArgs>>> terraformVariableFiles() {
        return Optional.ofNullable(this.terraformVariableFiles);
    }

    @Import(name="terraformVariables")
    private @Nullable Output<List<GetInfraVariableSetTerraformVariableArgs>> terraformVariables;

    public Optional<Output<List<GetInfraVariableSetTerraformVariableArgs>>> terraformVariables() {
        return Optional.ofNullable(this.terraformVariables);
    }

    private GetInfraVariableSetArgs() {}

    private GetInfraVariableSetArgs(GetInfraVariableSetArgs $) {
        this.connectors = $.connectors;
        this.environmentVariables = $.environmentVariables;
        this.identifier = $.identifier;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.terraformVariableFiles = $.terraformVariableFiles;
        this.terraformVariables = $.terraformVariables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInfraVariableSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInfraVariableSetArgs $;

        public Builder() {
            $ = new GetInfraVariableSetArgs();
        }

        public Builder(GetInfraVariableSetArgs defaults) {
            $ = new GetInfraVariableSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectors Provider connector configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder connectors(@Nullable Output<List<GetInfraVariableSetConnectorArgs>> connectors) {
            $.connectors = connectors;
            return this;
        }

        /**
         * @param connectors Provider connector configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder connectors(List<GetInfraVariableSetConnectorArgs> connectors) {
            return connectors(Output.of(connectors));
        }

        /**
         * @param connectors Provider connector configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder connectors(GetInfraVariableSetConnectorArgs... connectors) {
            return connectors(List.of(connectors));
        }

        /**
         * @param environmentVariables Environment variables configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<List<GetInfraVariableSetEnvironmentVariableArgs>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Environment variables configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(List<GetInfraVariableSetEnvironmentVariableArgs> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param environmentVariables Environment variables configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(GetInfraVariableSetEnvironmentVariableArgs... environmentVariables) {
            return environmentVariables(List.of(environmentVariables));
        }

        /**
         * @param identifier Identifier of the Variable Set
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Identifier of the Variable Set
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param name Name of the Variable Set
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Variable Set
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId Organization Identifier
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Organization Identifier
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param projectId Project Identifier
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project Identifier
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder terraformVariableFiles(@Nullable Output<List<GetInfraVariableSetTerraformVariableFileArgs>> terraformVariableFiles) {
            $.terraformVariableFiles = terraformVariableFiles;
            return this;
        }

        public Builder terraformVariableFiles(List<GetInfraVariableSetTerraformVariableFileArgs> terraformVariableFiles) {
            return terraformVariableFiles(Output.of(terraformVariableFiles));
        }

        public Builder terraformVariableFiles(GetInfraVariableSetTerraformVariableFileArgs... terraformVariableFiles) {
            return terraformVariableFiles(List.of(terraformVariableFiles));
        }

        public Builder terraformVariables(@Nullable Output<List<GetInfraVariableSetTerraformVariableArgs>> terraformVariables) {
            $.terraformVariables = terraformVariables;
            return this;
        }

        public Builder terraformVariables(List<GetInfraVariableSetTerraformVariableArgs> terraformVariables) {
            return terraformVariables(Output.of(terraformVariables));
        }

        public Builder terraformVariables(GetInfraVariableSetTerraformVariableArgs... terraformVariables) {
            return terraformVariables(List.of(terraformVariables));
        }

        public GetInfraVariableSetArgs build() {
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("GetInfraVariableSetArgs", "identifier");
            }
            return $;
        }
    }

}
