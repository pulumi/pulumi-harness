// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.inputs.GetRuleVmHttpHealthArgs;
import com.pulumi.harness.autostopping.inputs.GetRuleVmHttpRoutingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuleVmHttpArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRuleVmHttpArgs Empty = new GetRuleVmHttpArgs();

    /**
     * Health Check Details
     * 
     */
    @Import(name="healths")
    private @Nullable Output<List<GetRuleVmHttpHealthArgs>> healths;

    /**
     * @return Health Check Details
     * 
     */
    public Optional<Output<List<GetRuleVmHttpHealthArgs>>> healths() {
        return Optional.ofNullable(this.healths);
    }

    /**
     * Id of the proxy
     * 
     */
    @Import(name="proxyId", required=true)
    private Output<String> proxyId;

    /**
     * @return Id of the proxy
     * 
     */
    public Output<String> proxyId() {
        return this.proxyId;
    }

    /**
     * Routing configuration used to access the instances
     * 
     */
    @Import(name="routings")
    private @Nullable Output<List<GetRuleVmHttpRoutingArgs>> routings;

    /**
     * @return Routing configuration used to access the instances
     * 
     */
    public Optional<Output<List<GetRuleVmHttpRoutingArgs>>> routings() {
        return Optional.ofNullable(this.routings);
    }

    private GetRuleVmHttpArgs() {}

    private GetRuleVmHttpArgs(GetRuleVmHttpArgs $) {
        this.healths = $.healths;
        this.proxyId = $.proxyId;
        this.routings = $.routings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuleVmHttpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuleVmHttpArgs $;

        public Builder() {
            $ = new GetRuleVmHttpArgs();
        }

        public Builder(GetRuleVmHttpArgs defaults) {
            $ = new GetRuleVmHttpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param healths Health Check Details
         * 
         * @return builder
         * 
         */
        public Builder healths(@Nullable Output<List<GetRuleVmHttpHealthArgs>> healths) {
            $.healths = healths;
            return this;
        }

        /**
         * @param healths Health Check Details
         * 
         * @return builder
         * 
         */
        public Builder healths(List<GetRuleVmHttpHealthArgs> healths) {
            return healths(Output.of(healths));
        }

        /**
         * @param healths Health Check Details
         * 
         * @return builder
         * 
         */
        public Builder healths(GetRuleVmHttpHealthArgs... healths) {
            return healths(List.of(healths));
        }

        /**
         * @param proxyId Id of the proxy
         * 
         * @return builder
         * 
         */
        public Builder proxyId(Output<String> proxyId) {
            $.proxyId = proxyId;
            return this;
        }

        /**
         * @param proxyId Id of the proxy
         * 
         * @return builder
         * 
         */
        public Builder proxyId(String proxyId) {
            return proxyId(Output.of(proxyId));
        }

        /**
         * @param routings Routing configuration used to access the instances
         * 
         * @return builder
         * 
         */
        public Builder routings(@Nullable Output<List<GetRuleVmHttpRoutingArgs>> routings) {
            $.routings = routings;
            return this;
        }

        /**
         * @param routings Routing configuration used to access the instances
         * 
         * @return builder
         * 
         */
        public Builder routings(List<GetRuleVmHttpRoutingArgs> routings) {
            return routings(Output.of(routings));
        }

        /**
         * @param routings Routing configuration used to access the instances
         * 
         * @return builder
         * 
         */
        public Builder routings(GetRuleVmHttpRoutingArgs... routings) {
            return routings(List.of(routings));
        }

        public GetRuleVmHttpArgs build() {
            if ($.proxyId == null) {
                throw new MissingRequiredPropertyException("GetRuleVmHttpArgs", "proxyId");
            }
            return $;
        }
    }

}
