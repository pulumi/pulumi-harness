// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SshCredentialSshAuthenticationServerPasswordArgs extends com.pulumi.resources.ResourceArgs {

    public static final SshCredentialSshAuthenticationServerPasswordArgs Empty = new SshCredentialSshAuthenticationServerPasswordArgs();

    /**
     * The id of the encrypted secret
     * 
     */
    @Import(name="passwordSecretId", required=true)
    private Output<String> passwordSecretId;

    /**
     * @return The id of the encrypted secret
     * 
     */
    public Output<String> passwordSecretId() {
        return this.passwordSecretId;
    }

    private SshCredentialSshAuthenticationServerPasswordArgs() {}

    private SshCredentialSshAuthenticationServerPasswordArgs(SshCredentialSshAuthenticationServerPasswordArgs $) {
        this.passwordSecretId = $.passwordSecretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SshCredentialSshAuthenticationServerPasswordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SshCredentialSshAuthenticationServerPasswordArgs $;

        public Builder() {
            $ = new SshCredentialSshAuthenticationServerPasswordArgs();
        }

        public Builder(SshCredentialSshAuthenticationServerPasswordArgs defaults) {
            $ = new SshCredentialSshAuthenticationServerPasswordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passwordSecretId The id of the encrypted secret
         * 
         * @return builder
         * 
         */
        public Builder passwordSecretId(Output<String> passwordSecretId) {
            $.passwordSecretId = passwordSecretId;
            return this;
        }

        /**
         * @param passwordSecretId The id of the encrypted secret
         * 
         * @return builder
         * 
         */
        public Builder passwordSecretId(String passwordSecretId) {
            return passwordSecretId(Output.of(passwordSecretId));
        }

        public SshCredentialSshAuthenticationServerPasswordArgs build() {
            if ($.passwordSecretId == null) {
                throw new MissingRequiredPropertyException("SshCredentialSshAuthenticationServerPasswordArgs", "passwordSecretId");
            }
            return $;
        }
    }

}
