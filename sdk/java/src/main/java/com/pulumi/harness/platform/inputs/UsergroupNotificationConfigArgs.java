// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsergroupNotificationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final UsergroupNotificationConfigArgs Empty = new UsergroupNotificationConfigArgs();

    /**
     * Group email.
     * 
     */
    @Import(name="groupEmail")
    private @Nullable Output<String> groupEmail;

    /**
     * @return Group email.
     * 
     */
    public Optional<Output<String>> groupEmail() {
        return Optional.ofNullable(this.groupEmail);
    }

    /**
     * Url of Microsoft teams webhook.
     * 
     */
    @Import(name="microsoftTeamsWebhookUrl")
    private @Nullable Output<String> microsoftTeamsWebhookUrl;

    /**
     * @return Url of Microsoft teams webhook.
     * 
     */
    public Optional<Output<String>> microsoftTeamsWebhookUrl() {
        return Optional.ofNullable(this.microsoftTeamsWebhookUrl);
    }

    /**
     * Pager duty key.
     * 
     */
    @Import(name="pagerDutyKey")
    private @Nullable Output<String> pagerDutyKey;

    /**
     * @return Pager duty key.
     * 
     */
    public Optional<Output<String>> pagerDutyKey() {
        return Optional.ofNullable(this.pagerDutyKey);
    }

    /**
     * Send email to all the group members.
     * 
     */
    @Import(name="sendEmailToAllUsers")
    private @Nullable Output<Boolean> sendEmailToAllUsers;

    /**
     * @return Send email to all the group members.
     * 
     */
    public Optional<Output<Boolean>> sendEmailToAllUsers() {
        return Optional.ofNullable(this.sendEmailToAllUsers);
    }

    /**
     * Url of slack webhook.
     * 
     */
    @Import(name="slackWebhookUrl")
    private @Nullable Output<String> slackWebhookUrl;

    /**
     * @return Url of slack webhook.
     * 
     */
    public Optional<Output<String>> slackWebhookUrl() {
        return Optional.ofNullable(this.slackWebhookUrl);
    }

    /**
     * Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private UsergroupNotificationConfigArgs() {}

    private UsergroupNotificationConfigArgs(UsergroupNotificationConfigArgs $) {
        this.groupEmail = $.groupEmail;
        this.microsoftTeamsWebhookUrl = $.microsoftTeamsWebhookUrl;
        this.pagerDutyKey = $.pagerDutyKey;
        this.sendEmailToAllUsers = $.sendEmailToAllUsers;
        this.slackWebhookUrl = $.slackWebhookUrl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsergroupNotificationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsergroupNotificationConfigArgs $;

        public Builder() {
            $ = new UsergroupNotificationConfigArgs();
        }

        public Builder(UsergroupNotificationConfigArgs defaults) {
            $ = new UsergroupNotificationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupEmail Group email.
         * 
         * @return builder
         * 
         */
        public Builder groupEmail(@Nullable Output<String> groupEmail) {
            $.groupEmail = groupEmail;
            return this;
        }

        /**
         * @param groupEmail Group email.
         * 
         * @return builder
         * 
         */
        public Builder groupEmail(String groupEmail) {
            return groupEmail(Output.of(groupEmail));
        }

        /**
         * @param microsoftTeamsWebhookUrl Url of Microsoft teams webhook.
         * 
         * @return builder
         * 
         */
        public Builder microsoftTeamsWebhookUrl(@Nullable Output<String> microsoftTeamsWebhookUrl) {
            $.microsoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            return this;
        }

        /**
         * @param microsoftTeamsWebhookUrl Url of Microsoft teams webhook.
         * 
         * @return builder
         * 
         */
        public Builder microsoftTeamsWebhookUrl(String microsoftTeamsWebhookUrl) {
            return microsoftTeamsWebhookUrl(Output.of(microsoftTeamsWebhookUrl));
        }

        /**
         * @param pagerDutyKey Pager duty key.
         * 
         * @return builder
         * 
         */
        public Builder pagerDutyKey(@Nullable Output<String> pagerDutyKey) {
            $.pagerDutyKey = pagerDutyKey;
            return this;
        }

        /**
         * @param pagerDutyKey Pager duty key.
         * 
         * @return builder
         * 
         */
        public Builder pagerDutyKey(String pagerDutyKey) {
            return pagerDutyKey(Output.of(pagerDutyKey));
        }

        /**
         * @param sendEmailToAllUsers Send email to all the group members.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailToAllUsers(@Nullable Output<Boolean> sendEmailToAllUsers) {
            $.sendEmailToAllUsers = sendEmailToAllUsers;
            return this;
        }

        /**
         * @param sendEmailToAllUsers Send email to all the group members.
         * 
         * @return builder
         * 
         */
        public Builder sendEmailToAllUsers(Boolean sendEmailToAllUsers) {
            return sendEmailToAllUsers(Output.of(sendEmailToAllUsers));
        }

        /**
         * @param slackWebhookUrl Url of slack webhook.
         * 
         * @return builder
         * 
         */
        public Builder slackWebhookUrl(@Nullable Output<String> slackWebhookUrl) {
            $.slackWebhookUrl = slackWebhookUrl;
            return this;
        }

        /**
         * @param slackWebhookUrl Url of slack webhook.
         * 
         * @return builder
         * 
         */
        public Builder slackWebhookUrl(String slackWebhookUrl) {
            return slackWebhookUrl(Output.of(slackWebhookUrl));
        }

        /**
         * @param type Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public UsergroupNotificationConfigArgs build() {
            return $;
        }
    }

}
