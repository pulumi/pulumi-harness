// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.PipelineFiltersFilterPropertiesModulePropertiesCdArgs;
import com.pulumi.harness.platform.inputs.PipelineFiltersFilterPropertiesModulePropertiesCiArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineFiltersFilterPropertiesModulePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineFiltersFilterPropertiesModulePropertiesArgs Empty = new PipelineFiltersFilterPropertiesModulePropertiesArgs();

    /**
     * CD related properties to be filtered on.
     * 
     */
    @Import(name="cd")
    private @Nullable Output<PipelineFiltersFilterPropertiesModulePropertiesCdArgs> cd;

    /**
     * @return CD related properties to be filtered on.
     * 
     */
    public Optional<Output<PipelineFiltersFilterPropertiesModulePropertiesCdArgs>> cd() {
        return Optional.ofNullable(this.cd);
    }

    /**
     * CI related properties to be filtered on.
     * 
     */
    @Import(name="ci")
    private @Nullable Output<PipelineFiltersFilterPropertiesModulePropertiesCiArgs> ci;

    /**
     * @return CI related properties to be filtered on.
     * 
     */
    public Optional<Output<PipelineFiltersFilterPropertiesModulePropertiesCiArgs>> ci() {
        return Optional.ofNullable(this.ci);
    }

    private PipelineFiltersFilterPropertiesModulePropertiesArgs() {}

    private PipelineFiltersFilterPropertiesModulePropertiesArgs(PipelineFiltersFilterPropertiesModulePropertiesArgs $) {
        this.cd = $.cd;
        this.ci = $.ci;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineFiltersFilterPropertiesModulePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineFiltersFilterPropertiesModulePropertiesArgs $;

        public Builder() {
            $ = new PipelineFiltersFilterPropertiesModulePropertiesArgs();
        }

        public Builder(PipelineFiltersFilterPropertiesModulePropertiesArgs defaults) {
            $ = new PipelineFiltersFilterPropertiesModulePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cd CD related properties to be filtered on.
         * 
         * @return builder
         * 
         */
        public Builder cd(@Nullable Output<PipelineFiltersFilterPropertiesModulePropertiesCdArgs> cd) {
            $.cd = cd;
            return this;
        }

        /**
         * @param cd CD related properties to be filtered on.
         * 
         * @return builder
         * 
         */
        public Builder cd(PipelineFiltersFilterPropertiesModulePropertiesCdArgs cd) {
            return cd(Output.of(cd));
        }

        /**
         * @param ci CI related properties to be filtered on.
         * 
         * @return builder
         * 
         */
        public Builder ci(@Nullable Output<PipelineFiltersFilterPropertiesModulePropertiesCiArgs> ci) {
            $.ci = ci;
            return this;
        }

        /**
         * @param ci CI related properties to be filtered on.
         * 
         * @return builder
         * 
         */
        public Builder ci(PipelineFiltersFilterPropertiesModulePropertiesCiArgs ci) {
            return ci(Output.of(ci));
        }

        public PipelineFiltersFilterPropertiesModulePropertiesArgs build() {
            return $;
        }
    }

}
