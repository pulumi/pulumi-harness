// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SecretSshkeySshSshPasswordCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretSshkeySshSshPasswordCredentialArgs Empty = new SecretSshkeySshSshPasswordCredentialArgs();

    /**
     * SSH Password. To reference a password at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a password at the account scope, prefix &#39;account` to the expression: account.{identifier}
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return SSH Password. To reference a password at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a password at the account scope, prefix &#39;account` to the expression: account.{identifier}
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * SSH Username.
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return SSH Username.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private SecretSshkeySshSshPasswordCredentialArgs() {}

    private SecretSshkeySshSshPasswordCredentialArgs(SecretSshkeySshSshPasswordCredentialArgs $) {
        this.password = $.password;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretSshkeySshSshPasswordCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretSshkeySshSshPasswordCredentialArgs $;

        public Builder() {
            $ = new SecretSshkeySshSshPasswordCredentialArgs();
        }

        public Builder(SecretSshkeySshSshPasswordCredentialArgs defaults) {
            $ = new SecretSshkeySshSshPasswordCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password SSH Password. To reference a password at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a password at the account scope, prefix &#39;account` to the expression: account.{identifier}
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password SSH Password. To reference a password at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a password at the account scope, prefix &#39;account` to the expression: account.{identifier}
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param userName SSH Username.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName SSH Username.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public SecretSshkeySshSshPasswordCredentialArgs build() {
            if ($.password == null) {
                throw new MissingRequiredPropertyException("SecretSshkeySshSshPasswordCredentialArgs", "password");
            }
            if ($.userName == null) {
                throw new MissingRequiredPropertyException("SecretSshkeySshSshPasswordCredentialArgs", "userName");
            }
            return $;
        }
    }

}
