// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManualFreezeCurrentOrUpcomingWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManualFreezeCurrentOrUpcomingWindowArgs Empty = new ManualFreezeCurrentOrUpcomingWindowArgs();

    /**
     * End time of the freeze window
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<Integer> endTime;

    /**
     * @return End time of the freeze window
     * 
     */
    public Optional<Output<Integer>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * Start time of the freeze window
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<Integer> startTime;

    /**
     * @return Start time of the freeze window
     * 
     */
    public Optional<Output<Integer>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private ManualFreezeCurrentOrUpcomingWindowArgs() {}

    private ManualFreezeCurrentOrUpcomingWindowArgs(ManualFreezeCurrentOrUpcomingWindowArgs $) {
        this.endTime = $.endTime;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManualFreezeCurrentOrUpcomingWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManualFreezeCurrentOrUpcomingWindowArgs $;

        public Builder() {
            $ = new ManualFreezeCurrentOrUpcomingWindowArgs();
        }

        public Builder(ManualFreezeCurrentOrUpcomingWindowArgs defaults) {
            $ = new ManualFreezeCurrentOrUpcomingWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime End time of the freeze window
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<Integer> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime End time of the freeze window
         * 
         * @return builder
         * 
         */
        public Builder endTime(Integer endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param startTime Start time of the freeze window
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<Integer> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Start time of the freeze window
         * 
         * @return builder
         * 
         */
        public Builder startTime(Integer startTime) {
            return startTime(Output.of(startTime));
        }

        public ManualFreezeCurrentOrUpcomingWindowArgs build() {
            return $;
        }
    }

}
