// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentClustersMappingClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentClustersMappingClusterArgs Empty = new EnvironmentClustersMappingClusterArgs();

    /**
     * agent identifier of the cluster (include scope prefix)
     * 
     */
    @Import(name="agentIdentifier")
    private @Nullable Output<String> agentIdentifier;

    /**
     * @return agent identifier of the cluster (include scope prefix)
     * 
     */
    public Optional<Output<String>> agentIdentifier() {
        return Optional.ofNullable(this.agentIdentifier);
    }

    /**
     * identifier of the cluster
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return identifier of the cluster
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * name of the cluster
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return name of the cluster
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * scope at which the cluster exists in harness gitops, one of &#34;ACCOUNT&#34;, &#34;ORGANIZATION&#34;, &#34;PROJECT&#34;. Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return scope at which the cluster exists in harness gitops, one of &#34;ACCOUNT&#34;, &#34;ORGANIZATION&#34;, &#34;PROJECT&#34;. Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private EnvironmentClustersMappingClusterArgs() {}

    private EnvironmentClustersMappingClusterArgs(EnvironmentClustersMappingClusterArgs $) {
        this.agentIdentifier = $.agentIdentifier;
        this.identifier = $.identifier;
        this.name = $.name;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentClustersMappingClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentClustersMappingClusterArgs $;

        public Builder() {
            $ = new EnvironmentClustersMappingClusterArgs();
        }

        public Builder(EnvironmentClustersMappingClusterArgs defaults) {
            $ = new EnvironmentClustersMappingClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentIdentifier agent identifier of the cluster (include scope prefix)
         * 
         * @return builder
         * 
         */
        public Builder agentIdentifier(@Nullable Output<String> agentIdentifier) {
            $.agentIdentifier = agentIdentifier;
            return this;
        }

        /**
         * @param agentIdentifier agent identifier of the cluster (include scope prefix)
         * 
         * @return builder
         * 
         */
        public Builder agentIdentifier(String agentIdentifier) {
            return agentIdentifier(Output.of(agentIdentifier));
        }

        /**
         * @param identifier identifier of the cluster
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier identifier of the cluster
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param name name of the cluster
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name name of the cluster
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scope scope at which the cluster exists in harness gitops, one of &#34;ACCOUNT&#34;, &#34;ORGANIZATION&#34;, &#34;PROJECT&#34;. Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope scope at which the cluster exists in harness gitops, one of &#34;ACCOUNT&#34;, &#34;ORGANIZATION&#34;, &#34;PROJECT&#34;. Scope of environment to which clusters are being mapped must be lower or equal to in hierarchy than the scope of the cluster
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public EnvironmentClustersMappingClusterArgs build() {
            return $;
        }
    }

}
