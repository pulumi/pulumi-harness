// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDiscoveryAgentConfigProxy {
    /**
     * @return HTTP proxy URL.
     * 
     */
    private String httpProxy;
    /**
     * @return HTTPS proxy URL.
     * 
     */
    private String httpsProxy;
    /**
     * @return Comma-separated list of hosts that should not use the proxy.
     * 
     */
    private String noProxy;
    /**
     * @return Proxy server URL.
     * 
     */
    private String url;

    private GetDiscoveryAgentConfigProxy() {}
    /**
     * @return HTTP proxy URL.
     * 
     */
    public String httpProxy() {
        return this.httpProxy;
    }
    /**
     * @return HTTPS proxy URL.
     * 
     */
    public String httpsProxy() {
        return this.httpsProxy;
    }
    /**
     * @return Comma-separated list of hosts that should not use the proxy.
     * 
     */
    public String noProxy() {
        return this.noProxy;
    }
    /**
     * @return Proxy server URL.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryAgentConfigProxy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String httpProxy;
        private String httpsProxy;
        private String noProxy;
        private String url;
        public Builder() {}
        public Builder(GetDiscoveryAgentConfigProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpProxy = defaults.httpProxy;
    	      this.httpsProxy = defaults.httpsProxy;
    	      this.noProxy = defaults.noProxy;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder httpProxy(String httpProxy) {
            if (httpProxy == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAgentConfigProxy", "httpProxy");
            }
            this.httpProxy = httpProxy;
            return this;
        }
        @CustomType.Setter
        public Builder httpsProxy(String httpsProxy) {
            if (httpsProxy == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAgentConfigProxy", "httpsProxy");
            }
            this.httpsProxy = httpsProxy;
            return this;
        }
        @CustomType.Setter
        public Builder noProxy(String noProxy) {
            if (noProxy == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAgentConfigProxy", "noProxy");
            }
            this.noProxy = noProxy;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryAgentConfigProxy", "url");
            }
            this.url = url;
            return this;
        }
        public GetDiscoveryAgentConfigProxy build() {
            final var _resultValue = new GetDiscoveryAgentConfigProxy();
            _resultValue.httpProxy = httpProxy;
            _resultValue.httpsProxy = httpsProxy;
            _resultValue.noProxy = noProxy;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
