// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GitOpsRepoCertRequestCertificateItemArgs;
import com.pulumi.harness.platform.inputs.GitOpsRepoCertRequestCertificateMetadataArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitOpsRepoCertRequestCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitOpsRepoCertRequestCertificateArgs Empty = new GitOpsRepoCertRequestCertificateArgs();

    /**
     * List of certificates to be processed.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<GitOpsRepoCertRequestCertificateItemArgs>> items;

    /**
     * @return List of certificates to be processed.
     * 
     */
    public Optional<Output<List<GitOpsRepoCertRequestCertificateItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * metadata details
     * 
     */
    @Import(name="metadatas")
    private @Nullable Output<List<GitOpsRepoCertRequestCertificateMetadataArgs>> metadatas;

    /**
     * @return metadata details
     * 
     */
    public Optional<Output<List<GitOpsRepoCertRequestCertificateMetadataArgs>>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    private GitOpsRepoCertRequestCertificateArgs() {}

    private GitOpsRepoCertRequestCertificateArgs(GitOpsRepoCertRequestCertificateArgs $) {
        this.items = $.items;
        this.metadatas = $.metadatas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitOpsRepoCertRequestCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitOpsRepoCertRequestCertificateArgs $;

        public Builder() {
            $ = new GitOpsRepoCertRequestCertificateArgs();
        }

        public Builder(GitOpsRepoCertRequestCertificateArgs defaults) {
            $ = new GitOpsRepoCertRequestCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param items List of certificates to be processed.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<GitOpsRepoCertRequestCertificateItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items List of certificates to be processed.
         * 
         * @return builder
         * 
         */
        public Builder items(List<GitOpsRepoCertRequestCertificateItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items List of certificates to be processed.
         * 
         * @return builder
         * 
         */
        public Builder items(GitOpsRepoCertRequestCertificateItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param metadatas metadata details
         * 
         * @return builder
         * 
         */
        public Builder metadatas(@Nullable Output<List<GitOpsRepoCertRequestCertificateMetadataArgs>> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        /**
         * @param metadatas metadata details
         * 
         * @return builder
         * 
         */
        public Builder metadatas(List<GitOpsRepoCertRequestCertificateMetadataArgs> metadatas) {
            return metadatas(Output.of(metadatas));
        }

        /**
         * @param metadatas metadata details
         * 
         * @return builder
         * 
         */
        public Builder metadatas(GitOpsRepoCertRequestCertificateMetadataArgs... metadatas) {
            return metadatas(List.of(metadatas));
        }

        public GitOpsRepoCertRequestCertificateArgs build() {
            return $;
        }
    }

}
