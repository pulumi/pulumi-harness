// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GitOpsApplicationsApplicationSpecSyncPolicyAutomated;
import com.pulumi.harness.platform.outputs.GitOpsApplicationsApplicationSpecSyncPolicyRetry;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GitOpsApplicationsApplicationSpecSyncPolicy {
    /**
     * @return Controls the behavior of an automated sync.
     * 
     */
    private @Nullable List<GitOpsApplicationsApplicationSpecSyncPolicyAutomated> automateds;
    /**
     * @return Contains information about the strategy to apply when a sync failed.
     * 
     */
    private @Nullable List<GitOpsApplicationsApplicationSpecSyncPolicyRetry> retries;
    /**
     * @return Options allow you to specify whole app sync-options.
     * 
     */
    private @Nullable List<String> syncOptions;

    private GitOpsApplicationsApplicationSpecSyncPolicy() {}
    /**
     * @return Controls the behavior of an automated sync.
     * 
     */
    public List<GitOpsApplicationsApplicationSpecSyncPolicyAutomated> automateds() {
        return this.automateds == null ? List.of() : this.automateds;
    }
    /**
     * @return Contains information about the strategy to apply when a sync failed.
     * 
     */
    public List<GitOpsApplicationsApplicationSpecSyncPolicyRetry> retries() {
        return this.retries == null ? List.of() : this.retries;
    }
    /**
     * @return Options allow you to specify whole app sync-options.
     * 
     */
    public List<String> syncOptions() {
        return this.syncOptions == null ? List.of() : this.syncOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitOpsApplicationsApplicationSpecSyncPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GitOpsApplicationsApplicationSpecSyncPolicyAutomated> automateds;
        private @Nullable List<GitOpsApplicationsApplicationSpecSyncPolicyRetry> retries;
        private @Nullable List<String> syncOptions;
        public Builder() {}
        public Builder(GitOpsApplicationsApplicationSpecSyncPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automateds = defaults.automateds;
    	      this.retries = defaults.retries;
    	      this.syncOptions = defaults.syncOptions;
        }

        @CustomType.Setter
        public Builder automateds(@Nullable List<GitOpsApplicationsApplicationSpecSyncPolicyAutomated> automateds) {

            this.automateds = automateds;
            return this;
        }
        public Builder automateds(GitOpsApplicationsApplicationSpecSyncPolicyAutomated... automateds) {
            return automateds(List.of(automateds));
        }
        @CustomType.Setter
        public Builder retries(@Nullable List<GitOpsApplicationsApplicationSpecSyncPolicyRetry> retries) {

            this.retries = retries;
            return this;
        }
        public Builder retries(GitOpsApplicationsApplicationSpecSyncPolicyRetry... retries) {
            return retries(List.of(retries));
        }
        @CustomType.Setter
        public Builder syncOptions(@Nullable List<String> syncOptions) {

            this.syncOptions = syncOptions;
            return this;
        }
        public Builder syncOptions(String... syncOptions) {
            return syncOptions(List.of(syncOptions));
        }
        public GitOpsApplicationsApplicationSpecSyncPolicy build() {
            final var _resultValue = new GitOpsApplicationsApplicationSpecSyncPolicy();
            _resultValue.automateds = automateds;
            _resultValue.retries = retries;
            _resultValue.syncOptions = syncOptions;
            return _resultValue;
        }
    }
}
