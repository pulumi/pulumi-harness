// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfrastructureV2ImageRegistryIdentifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureV2ImageRegistryIdentifierArgs Empty = new InfrastructureV2ImageRegistryIdentifierArgs();

    /**
     * Harness account identifier.
     * 
     */
    @Import(name="accountIdentifier")
    private @Nullable Output<String> accountIdentifier;

    /**
     * @return Harness account identifier.
     * 
     */
    public Optional<Output<String>> accountIdentifier() {
        return Optional.ofNullable(this.accountIdentifier);
    }

    /**
     * Harness organization identifier.
     * 
     */
    @Import(name="orgIdentifier")
    private @Nullable Output<String> orgIdentifier;

    /**
     * @return Harness organization identifier.
     * 
     */
    public Optional<Output<String>> orgIdentifier() {
        return Optional.ofNullable(this.orgIdentifier);
    }

    /**
     * Harness project identifier.
     * 
     */
    @Import(name="projectIdentifier")
    private @Nullable Output<String> projectIdentifier;

    /**
     * @return Harness project identifier.
     * 
     */
    public Optional<Output<String>> projectIdentifier() {
        return Optional.ofNullable(this.projectIdentifier);
    }

    private InfrastructureV2ImageRegistryIdentifierArgs() {}

    private InfrastructureV2ImageRegistryIdentifierArgs(InfrastructureV2ImageRegistryIdentifierArgs $) {
        this.accountIdentifier = $.accountIdentifier;
        this.orgIdentifier = $.orgIdentifier;
        this.projectIdentifier = $.projectIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureV2ImageRegistryIdentifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureV2ImageRegistryIdentifierArgs $;

        public Builder() {
            $ = new InfrastructureV2ImageRegistryIdentifierArgs();
        }

        public Builder(InfrastructureV2ImageRegistryIdentifierArgs defaults) {
            $ = new InfrastructureV2ImageRegistryIdentifierArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountIdentifier Harness account identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(@Nullable Output<String> accountIdentifier) {
            $.accountIdentifier = accountIdentifier;
            return this;
        }

        /**
         * @param accountIdentifier Harness account identifier.
         * 
         * @return builder
         * 
         */
        public Builder accountIdentifier(String accountIdentifier) {
            return accountIdentifier(Output.of(accountIdentifier));
        }

        /**
         * @param orgIdentifier Harness organization identifier.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(@Nullable Output<String> orgIdentifier) {
            $.orgIdentifier = orgIdentifier;
            return this;
        }

        /**
         * @param orgIdentifier Harness organization identifier.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(String orgIdentifier) {
            return orgIdentifier(Output.of(orgIdentifier));
        }

        /**
         * @param projectIdentifier Harness project identifier.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(@Nullable Output<String> projectIdentifier) {
            $.projectIdentifier = projectIdentifier;
            return this;
        }

        /**
         * @param projectIdentifier Harness project identifier.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(String projectIdentifier) {
            return projectIdentifier(Output.of(projectIdentifier));
        }

        public InfrastructureV2ImageRegistryIdentifierArgs build() {
            return $;
        }
    }

}
