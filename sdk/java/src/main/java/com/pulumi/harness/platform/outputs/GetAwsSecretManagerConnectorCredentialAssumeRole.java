// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAwsSecretManagerConnectorCredentialAssumeRole {
    /**
     * @return The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
     * 
     */
    private Integer duration;
    /**
     * @return If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
     * 
     */
    private String externalId;
    /**
     * @return The ARN of the role to assume.
     * 
     */
    private String roleArn;

    private GetAwsSecretManagerConnectorCredentialAssumeRole() {}
    /**
     * @return The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the client request body. The minimum value is 1 hour.
     * 
     */
    public Integer duration() {
        return this.duration;
    }
    /**
     * @return If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The ARN of the role to assume.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAwsSecretManagerConnectorCredentialAssumeRole defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer duration;
        private String externalId;
        private String roleArn;
        public Builder() {}
        public Builder(GetAwsSecretManagerConnectorCredentialAssumeRole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.externalId = defaults.externalId;
    	      this.roleArn = defaults.roleArn;
        }

        @CustomType.Setter
        public Builder duration(Integer duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredentialAssumeRole", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredentialAssumeRole", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            if (roleArn == null) {
              throw new MissingRequiredPropertyException("GetAwsSecretManagerConnectorCredentialAssumeRole", "roleArn");
            }
            this.roleArn = roleArn;
            return this;
        }
        public GetAwsSecretManagerConnectorCredentialAssumeRole build() {
            final var _resultValue = new GetAwsSecretManagerConnectorCredentialAssumeRole();
            _resultValue.duration = duration;
            _resultValue.externalId = externalId;
            _resultValue.roleArn = roleArn;
            return _resultValue;
        }
    }
}
