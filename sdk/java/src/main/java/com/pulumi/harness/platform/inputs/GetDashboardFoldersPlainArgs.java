// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDashboardFoldersPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDashboardFoldersPlainArgs Empty = new GetDashboardFoldersPlainArgs();

    /**
     * Identifier of the folder.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return Identifier of the folder.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Unique identifier of the resource.
     * 
     */
    @Import(name="identifier")
    private @Nullable String identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Optional<String> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetDashboardFoldersPlainArgs() {}

    private GetDashboardFoldersPlainArgs(GetDashboardFoldersPlainArgs $) {
        this.id = $.id;
        this.identifier = $.identifier;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDashboardFoldersPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDashboardFoldersPlainArgs $;

        public Builder() {
            $ = new GetDashboardFoldersPlainArgs();
        }

        public Builder(GetDashboardFoldersPlainArgs defaults) {
            $ = new GetDashboardFoldersPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Identifier of the folder.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable String identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetDashboardFoldersPlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetDashboardFoldersPlainArgs", "id");
            }
            return $;
        }
    }

}
