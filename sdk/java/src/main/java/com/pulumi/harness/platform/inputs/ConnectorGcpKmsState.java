// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.ConnectorGcpKmsManualArgs;
import com.pulumi.harness.platform.inputs.ConnectorGcpKmsOidcAuthenticationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorGcpKmsState extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorGcpKmsState Empty = new ConnectorGcpKmsState();

    /**
     * Set this flag to set this secret manager as default secret manager.
     * 
     */
    @Import(name="default")
    private @Nullable Output<Boolean> default_;

    /**
     * @return Set this flag to set this secret manager as default secret manager.
     * 
     */
    public Optional<Output<Boolean>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * Description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enable this flag to execute on Delegate.
     * 
     */
    @Import(name="executeOnDelegate")
    private @Nullable Output<Boolean> executeOnDelegate;

    /**
     * @return Enable this flag to execute on Delegate.
     * 
     */
    public Optional<Output<Boolean>> executeOnDelegate() {
        return Optional.ofNullable(this.executeOnDelegate);
    }

    /**
     * The project ID of the GCP KMS.
     * 
     */
    @Import(name="gcpProjectId")
    private @Nullable Output<String> gcpProjectId;

    /**
     * @return The project ID of the GCP KMS.
     * 
     */
    public Optional<Output<String>> gcpProjectId() {
        return Optional.ofNullable(this.gcpProjectId);
    }

    /**
     * Unique identifier of the resource.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * The key name of the GCP KMS.
     * 
     */
    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    /**
     * @return The key name of the GCP KMS.
     * 
     */
    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    /**
     * The key ring of the GCP KMS.
     * 
     */
    @Import(name="keyRing")
    private @Nullable Output<String> keyRing;

    /**
     * @return The key ring of the GCP KMS.
     * 
     */
    public Optional<Output<String>> keyRing() {
        return Optional.ofNullable(this.keyRing);
    }

    /**
     * Manual credential configuration.
     * 
     */
    @Import(name="manual")
    private @Nullable Output<ConnectorGcpKmsManualArgs> manual;

    /**
     * @return Manual credential configuration.
     * 
     */
    public Optional<Output<ConnectorGcpKmsManualArgs>> manual() {
        return Optional.ofNullable(this.manual);
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Authentication using harness oidc.
     * 
     */
    @Import(name="oidcAuthentications")
    private @Nullable Output<List<ConnectorGcpKmsOidcAuthenticationArgs>> oidcAuthentications;

    /**
     * @return Authentication using harness oidc.
     * 
     */
    public Optional<Output<List<ConnectorGcpKmsOidcAuthenticationArgs>>> oidcAuthentications() {
        return Optional.ofNullable(this.oidcAuthentications);
    }

    /**
     * Unique identifier of the organization.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Unique identifier of the project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region of the GCP KMS.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the GCP KMS.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Tags to associate with the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ConnectorGcpKmsState() {}

    private ConnectorGcpKmsState(ConnectorGcpKmsState $) {
        this.default_ = $.default_;
        this.description = $.description;
        this.executeOnDelegate = $.executeOnDelegate;
        this.gcpProjectId = $.gcpProjectId;
        this.identifier = $.identifier;
        this.keyName = $.keyName;
        this.keyRing = $.keyRing;
        this.manual = $.manual;
        this.name = $.name;
        this.oidcAuthentications = $.oidcAuthentications;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.region = $.region;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorGcpKmsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorGcpKmsState $;

        public Builder() {
            $ = new ConnectorGcpKmsState();
        }

        public Builder(ConnectorGcpKmsState defaults) {
            $ = new ConnectorGcpKmsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param default_ Set this flag to set this secret manager as default secret manager.
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable Output<Boolean> default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param default_ Set this flag to set this secret manager as default secret manager.
         * 
         * @return builder
         * 
         */
        public Builder default_(Boolean default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param description Description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param executeOnDelegate Enable this flag to execute on Delegate.
         * 
         * @return builder
         * 
         */
        public Builder executeOnDelegate(@Nullable Output<Boolean> executeOnDelegate) {
            $.executeOnDelegate = executeOnDelegate;
            return this;
        }

        /**
         * @param executeOnDelegate Enable this flag to execute on Delegate.
         * 
         * @return builder
         * 
         */
        public Builder executeOnDelegate(Boolean executeOnDelegate) {
            return executeOnDelegate(Output.of(executeOnDelegate));
        }

        /**
         * @param gcpProjectId The project ID of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(@Nullable Output<String> gcpProjectId) {
            $.gcpProjectId = gcpProjectId;
            return this;
        }

        /**
         * @param gcpProjectId The project ID of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(String gcpProjectId) {
            return gcpProjectId(Output.of(gcpProjectId));
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param keyName The key name of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName The key name of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        /**
         * @param keyRing The key ring of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder keyRing(@Nullable Output<String> keyRing) {
            $.keyRing = keyRing;
            return this;
        }

        /**
         * @param keyRing The key ring of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder keyRing(String keyRing) {
            return keyRing(Output.of(keyRing));
        }

        /**
         * @param manual Manual credential configuration.
         * 
         * @return builder
         * 
         */
        public Builder manual(@Nullable Output<ConnectorGcpKmsManualArgs> manual) {
            $.manual = manual;
            return this;
        }

        /**
         * @param manual Manual credential configuration.
         * 
         * @return builder
         * 
         */
        public Builder manual(ConnectorGcpKmsManualArgs manual) {
            return manual(Output.of(manual));
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param oidcAuthentications Authentication using harness oidc.
         * 
         * @return builder
         * 
         */
        public Builder oidcAuthentications(@Nullable Output<List<ConnectorGcpKmsOidcAuthenticationArgs>> oidcAuthentications) {
            $.oidcAuthentications = oidcAuthentications;
            return this;
        }

        /**
         * @param oidcAuthentications Authentication using harness oidc.
         * 
         * @return builder
         * 
         */
        public Builder oidcAuthentications(List<ConnectorGcpKmsOidcAuthenticationArgs> oidcAuthentications) {
            return oidcAuthentications(Output.of(oidcAuthentications));
        }

        /**
         * @param oidcAuthentications Authentication using harness oidc.
         * 
         * @return builder
         * 
         */
        public Builder oidcAuthentications(ConnectorGcpKmsOidcAuthenticationArgs... oidcAuthentications) {
            return oidcAuthentications(List.of(oidcAuthentications));
        }

        /**
         * @param orgId Unique identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Unique identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param projectId Unique identifier of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique identifier of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the GCP KMS.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public ConnectorGcpKmsState build() {
            return $;
        }
    }

}
