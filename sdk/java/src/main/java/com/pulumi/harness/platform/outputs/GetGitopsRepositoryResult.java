// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetGitopsRepositoryRepo;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGitopsRepositoryResult {
    /**
     * @return Account identifier of the GitOps repository.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    private String accountId;
    /**
     * @return Agent identifier of the GitOps repository.
     * 
     */
    private String agentId;
    /**
     * @return Indicates if helm-oci support must be enabled for this repo.
     * 
     */
    private Boolean enableOci;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Identifier of the GitOps repository.
     * 
     */
    private String identifier;
    /**
     * @return Organization identifier of the GitOps repository.
     * 
     */
    private @Nullable String orgId;
    /**
     * @return Project identifier of the GitOps repository.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Repo details holding application configurations.
     * 
     */
    private List<GetGitopsRepositoryRepo> repos;

    private GetGitopsRepositoryResult() {}
    /**
     * @return Account identifier of the GitOps repository.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Agent identifier of the GitOps repository.
     * 
     */
    public String agentId() {
        return this.agentId;
    }
    /**
     * @return Indicates if helm-oci support must be enabled for this repo.
     * 
     */
    public Boolean enableOci() {
        return this.enableOci;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Identifier of the GitOps repository.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Organization identifier of the GitOps repository.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    /**
     * @return Project identifier of the GitOps repository.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Repo details holding application configurations.
     * 
     */
    public List<GetGitopsRepositoryRepo> repos() {
        return this.repos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGitopsRepositoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String agentId;
        private Boolean enableOci;
        private String id;
        private String identifier;
        private @Nullable String orgId;
        private @Nullable String projectId;
        private List<GetGitopsRepositoryRepo> repos;
        public Builder() {}
        public Builder(GetGitopsRepositoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.agentId = defaults.agentId;
    	      this.enableOci = defaults.enableOci;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.orgId = defaults.orgId;
    	      this.projectId = defaults.projectId;
    	      this.repos = defaults.repos;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetGitopsRepositoryResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder agentId(String agentId) {
            if (agentId == null) {
              throw new MissingRequiredPropertyException("GetGitopsRepositoryResult", "agentId");
            }
            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder enableOci(Boolean enableOci) {
            if (enableOci == null) {
              throw new MissingRequiredPropertyException("GetGitopsRepositoryResult", "enableOci");
            }
            this.enableOci = enableOci;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGitopsRepositoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetGitopsRepositoryResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {

            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder repos(List<GetGitopsRepositoryRepo> repos) {
            if (repos == null) {
              throw new MissingRequiredPropertyException("GetGitopsRepositoryResult", "repos");
            }
            this.repos = repos;
            return this;
        }
        public Builder repos(GetGitopsRepositoryRepo... repos) {
            return repos(List.of(repos));
        }
        public GetGitopsRepositoryResult build() {
            final var _resultValue = new GetGitopsRepositoryResult();
            _resultValue.accountId = accountId;
            _resultValue.agentId = agentId;
            _resultValue.enableOci = enableOci;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.orgId = orgId;
            _resultValue.projectId = projectId;
            _resultValue.repos = repos;
            return _resultValue;
        }
    }
}
