// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HubSyncState extends com.pulumi.resources.ResourceArgs {

    public static final HubSyncState Empty = new HubSyncState();

    /**
     * The ID of the Chaos Hub to sync
     * 
     */
    @Import(name="hubId")
    private @Nullable Output<String> hubId;

    /**
     * @return The ID of the Chaos Hub to sync
     * 
     */
    public Optional<Output<String>> hubId() {
        return Optional.ofNullable(this.hubId);
    }

    /**
     * Timestamp of the last sync
     * 
     */
    @Import(name="lastSyncedAt")
    private @Nullable Output<String> lastSyncedAt;

    /**
     * @return Timestamp of the last sync
     * 
     */
    public Optional<Output<String>> lastSyncedAt() {
        return Optional.ofNullable(this.lastSyncedAt);
    }

    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private HubSyncState() {}

    private HubSyncState(HubSyncState $) {
        this.hubId = $.hubId;
        this.lastSyncedAt = $.lastSyncedAt;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HubSyncState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HubSyncState $;

        public Builder() {
            $ = new HubSyncState();
        }

        public Builder(HubSyncState defaults) {
            $ = new HubSyncState(Objects.requireNonNull(defaults));
        }

        /**
         * @param hubId The ID of the Chaos Hub to sync
         * 
         * @return builder
         * 
         */
        public Builder hubId(@Nullable Output<String> hubId) {
            $.hubId = hubId;
            return this;
        }

        /**
         * @param hubId The ID of the Chaos Hub to sync
         * 
         * @return builder
         * 
         */
        public Builder hubId(String hubId) {
            return hubId(Output.of(hubId));
        }

        /**
         * @param lastSyncedAt Timestamp of the last sync
         * 
         * @return builder
         * 
         */
        public Builder lastSyncedAt(@Nullable Output<String> lastSyncedAt) {
            $.lastSyncedAt = lastSyncedAt;
            return this;
        }

        /**
         * @param lastSyncedAt Timestamp of the last sync
         * 
         * @return builder
         * 
         */
        public Builder lastSyncedAt(String lastSyncedAt) {
            return lastSyncedAt(Output.of(lastSyncedAt));
        }

        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public HubSyncState build() {
            return $;
        }
    }

}
