// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpotArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpotArgs Empty = new SpotArgs();

    /**
     * The Spot account ID
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The Spot account ID
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * The name of the cloud provider.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the cloud provider.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Harness secret containing the spot account token
     * 
     */
    @Import(name="tokenSecretName", required=true)
    private Output<String> tokenSecretName;

    /**
     * @return The name of the Harness secret containing the spot account token
     * 
     */
    public Output<String> tokenSecretName() {
        return this.tokenSecretName;
    }

    private SpotArgs() {}

    private SpotArgs(SpotArgs $) {
        this.accountId = $.accountId;
        this.name = $.name;
        this.tokenSecretName = $.tokenSecretName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpotArgs $;

        public Builder() {
            $ = new SpotArgs();
        }

        public Builder(SpotArgs defaults) {
            $ = new SpotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The Spot account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The Spot account ID
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param name The name of the cloud provider.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cloud provider.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tokenSecretName The name of the Harness secret containing the spot account token
         * 
         * @return builder
         * 
         */
        public Builder tokenSecretName(Output<String> tokenSecretName) {
            $.tokenSecretName = tokenSecretName;
            return this;
        }

        /**
         * @param tokenSecretName The name of the Harness secret containing the spot account token
         * 
         * @return builder
         * 
         */
        public Builder tokenSecretName(String tokenSecretName) {
            return tokenSecretName(Output.of(tokenSecretName));
        }

        public SpotArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("SpotArgs", "accountId");
            }
            if ($.tokenSecretName == null) {
                throw new MissingRequiredPropertyException("SpotArgs", "tokenSecretName");
            }
            return $;
        }
    }

}
