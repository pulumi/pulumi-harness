// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.AzureKeyVaultConnectorArgs;
import com.pulumi.harness.platform.inputs.AzureKeyVaultConnectorState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating an Azure key vault in Harness.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.AzureKeyVaultConnector;
 * import com.pulumi.harness.platform.AzureKeyVaultConnectorArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AzureKeyVaultConnector("example", AzureKeyVaultConnectorArgs.builder()
 *             .identifier("identifier")
 *             .name("name")
 *             .description("example")
 *             .tags("foo:bar")
 *             .clientId("client_id")
 *             .secretKey("account.secret_key")
 *             .tenantId("tenant_id")
 *             .vaultName("vault_name")
 *             .subscription("subscription")
 *             .isDefault(false)
 *             .azureEnvironmentType("AZURE")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Import account level azure key vault connector
 * 
 * ```sh
 * $ pulumi import harness:platform/azureKeyVaultConnector:AzureKeyVaultConnector example &lt;connector_id&gt;
 * ```
 * 
 * Import org level azure key vault connector
 * 
 * ```sh
 * $ pulumi import harness:platform/azureKeyVaultConnector:AzureKeyVaultConnector example &lt;ord_id&gt;/&lt;connector_id&gt;
 * ```
 * 
 * Import project level azure key vault connector
 * 
 * ```sh
 * $ pulumi import harness:platform/azureKeyVaultConnector:AzureKeyVaultConnector example &lt;org_id&gt;/&lt;project_id&gt;/&lt;connector_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/azureKeyVaultConnector:AzureKeyVaultConnector")
public class AzureKeyVaultConnector extends com.pulumi.resources.CustomResource {
    /**
     * Azure environment type. Possible values: AZURE or AZURE*US*GOVERNMENT. Default value: AZURE
     * 
     */
    @Export(name="azureEnvironmentType", refs={String.class}, tree="[0]")
    private Output<String> azureEnvironmentType;

    /**
     * @return Azure environment type. Possible values: AZURE or AZURE*US*GOVERNMENT. Default value: AZURE
     * 
     */
    public Output<String> azureEnvironmentType() {
        return this.azureEnvironmentType;
    }
    /**
     * Application ID of the Azure App.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return Application ID of the Azure App.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * Tags to filter delegates for connection.
     * 
     */
    @Export(name="delegateSelectors", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> delegateSelectors;

    /**
     * @return Tags to filter delegates for connection.
     * 
     */
    public Output<Optional<List<String>>> delegateSelectors() {
        return Codegen.optional(this.delegateSelectors);
    }
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Specifies whether or not is the default value.
     * 
     */
    @Export(name="isDefault", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isDefault;

    /**
     * @return Specifies whether or not is the default value.
     * 
     */
    public Output<Optional<Boolean>> isDefault() {
        return Codegen.optional(this.isDefault);
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * The Harness text secret with the Azure authentication key as its value.
     * 
     */
    @Export(name="secretKey", refs={String.class}, tree="[0]")
    private Output<String> secretKey;

    /**
     * @return The Harness text secret with the Azure authentication key as its value.
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }
    /**
     * Azure subscription ID.
     * 
     */
    @Export(name="subscription", refs={String.class}, tree="[0]")
    private Output<String> subscription;

    /**
     * @return Azure subscription ID.
     * 
     */
    public Output<String> subscription() {
        return this.subscription;
    }
    /**
     * Tags to associate with the resource.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The Azure Active Directory (Azure AD) directory ID where you created your application.
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return The Azure Active Directory (Azure AD) directory ID where you created your application.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * Name of the vault.
     * 
     */
    @Export(name="vaultName", refs={String.class}, tree="[0]")
    private Output<String> vaultName;

    /**
     * @return Name of the vault.
     * 
     */
    public Output<String> vaultName() {
        return this.vaultName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AzureKeyVaultConnector(java.lang.String name) {
        this(name, AzureKeyVaultConnectorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AzureKeyVaultConnector(java.lang.String name, AzureKeyVaultConnectorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AzureKeyVaultConnector(java.lang.String name, AzureKeyVaultConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/azureKeyVaultConnector:AzureKeyVaultConnector", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AzureKeyVaultConnector(java.lang.String name, Output<java.lang.String> id, @Nullable AzureKeyVaultConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/azureKeyVaultConnector:AzureKeyVaultConnector", name, state, makeResourceOptions(options, id), false);
    }

    private static AzureKeyVaultConnectorArgs makeArgs(AzureKeyVaultConnectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AzureKeyVaultConnectorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AzureKeyVaultConnector get(java.lang.String name, Output<java.lang.String> id, @Nullable AzureKeyVaultConnectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AzureKeyVaultConnector(name, id, state, options);
    }
}
