// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetCentralNotificationChannelChannel;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCentralNotificationChannelResult {
    /**
     * @return Account identifier associated with this notification channel.
     * 
     */
    private @Nullable String account;
    /**
     * @return Configuration details of the notification channel.
     * 
     */
    private @Nullable List<GetCentralNotificationChannelChannel> channels;
    /**
     * @return Timestamp when the notification channel was created.
     * 
     */
    private @Nullable Integer created;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the notification channel.
     * 
     */
    private String identifier;
    /**
     * @return Timestamp when the notification channel was last modified.
     * 
     */
    private @Nullable Integer lastModified;
    /**
     * @return Name of the notification channel.
     * 
     */
    private @Nullable String name;
    /**
     * @return Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
     * 
     */
    private @Nullable String notificationChannelType;
    /**
     * @return Identifier of the organization the notification channel is scoped to.
     * 
     */
    private @Nullable String org;
    /**
     * @return Identifier of the project the notification channel is scoped to.
     * 
     */
    private @Nullable String project;
    /**
     * @return Status of the notification channel. Possible values are ENABLED or DISABLED.
     * 
     */
    private @Nullable String status;

    private GetCentralNotificationChannelResult() {}
    /**
     * @return Account identifier associated with this notification channel.
     * 
     */
    public Optional<String> account() {
        return Optional.ofNullable(this.account);
    }
    /**
     * @return Configuration details of the notification channel.
     * 
     */
    public List<GetCentralNotificationChannelChannel> channels() {
        return this.channels == null ? List.of() : this.channels;
    }
    /**
     * @return Timestamp when the notification channel was created.
     * 
     */
    public Optional<Integer> created() {
        return Optional.ofNullable(this.created);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the notification channel.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Timestamp when the notification channel was last modified.
     * 
     */
    public Optional<Integer> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }
    /**
     * @return Name of the notification channel.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
     * 
     */
    public Optional<String> notificationChannelType() {
        return Optional.ofNullable(this.notificationChannelType);
    }
    /**
     * @return Identifier of the organization the notification channel is scoped to.
     * 
     */
    public Optional<String> org() {
        return Optional.ofNullable(this.org);
    }
    /**
     * @return Identifier of the project the notification channel is scoped to.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return Status of the notification channel. Possible values are ENABLED or DISABLED.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCentralNotificationChannelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String account;
        private @Nullable List<GetCentralNotificationChannelChannel> channels;
        private @Nullable Integer created;
        private String id;
        private String identifier;
        private @Nullable Integer lastModified;
        private @Nullable String name;
        private @Nullable String notificationChannelType;
        private @Nullable String org;
        private @Nullable String project;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetCentralNotificationChannelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.account = defaults.account;
    	      this.channels = defaults.channels;
    	      this.created = defaults.created;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.notificationChannelType = defaults.notificationChannelType;
    	      this.org = defaults.org;
    	      this.project = defaults.project;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder account(@Nullable String account) {

            this.account = account;
            return this;
        }
        @CustomType.Setter
        public Builder channels(@Nullable List<GetCentralNotificationChannelChannel> channels) {

            this.channels = channels;
            return this;
        }
        public Builder channels(GetCentralNotificationChannelChannel... channels) {
            return channels(List.of(channels));
        }
        @CustomType.Setter
        public Builder created(@Nullable Integer created) {

            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationChannelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationChannelResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(@Nullable Integer lastModified) {

            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notificationChannelType(@Nullable String notificationChannelType) {

            this.notificationChannelType = notificationChannelType;
            return this;
        }
        @CustomType.Setter
        public Builder org(@Nullable String org) {

            this.org = org;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetCentralNotificationChannelResult build() {
            final var _resultValue = new GetCentralNotificationChannelResult();
            _resultValue.account = account;
            _resultValue.channels = channels;
            _resultValue.created = created;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.notificationChannelType = notificationChannelType;
            _resultValue.org = org;
            _resultValue.project = project;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
