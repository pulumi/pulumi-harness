// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecretSshkeySshSshkeyPathCredential {
    /**
     * @return Encrypted Passphrase
     * 
     */
    private String encryptedPassphrase;
    /**
     * @return Path of the key file.
     * 
     */
    private String keyPath;
    /**
     * @return SSH Username.
     * 
     */
    private String userName;

    private GetSecretSshkeySshSshkeyPathCredential() {}
    /**
     * @return Encrypted Passphrase
     * 
     */
    public String encryptedPassphrase() {
        return this.encryptedPassphrase;
    }
    /**
     * @return Path of the key file.
     * 
     */
    public String keyPath() {
        return this.keyPath;
    }
    /**
     * @return SSH Username.
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretSshkeySshSshkeyPathCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encryptedPassphrase;
        private String keyPath;
        private String userName;
        public Builder() {}
        public Builder(GetSecretSshkeySshSshkeyPathCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptedPassphrase = defaults.encryptedPassphrase;
    	      this.keyPath = defaults.keyPath;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder encryptedPassphrase(String encryptedPassphrase) {
            if (encryptedPassphrase == null) {
              throw new MissingRequiredPropertyException("GetSecretSshkeySshSshkeyPathCredential", "encryptedPassphrase");
            }
            this.encryptedPassphrase = encryptedPassphrase;
            return this;
        }
        @CustomType.Setter
        public Builder keyPath(String keyPath) {
            if (keyPath == null) {
              throw new MissingRequiredPropertyException("GetSecretSshkeySshSshkeyPathCredential", "keyPath");
            }
            this.keyPath = keyPath;
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            if (userName == null) {
              throw new MissingRequiredPropertyException("GetSecretSshkeySshSshkeyPathCredential", "userName");
            }
            this.userName = userName;
            return this;
        }
        public GetSecretSshkeySshSshkeyPathCredential build() {
            final var _resultValue = new GetSecretSshkeySshSshkeyPathCredential();
            _resultValue.encryptedPassphrase = encryptedPassphrase;
            _resultValue.keyPath = keyPath;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
