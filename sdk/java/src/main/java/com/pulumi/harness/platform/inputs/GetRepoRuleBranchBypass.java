// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRepoRuleBranchBypass extends com.pulumi.resources.InvokeArgs {

    public static final GetRepoRuleBranchBypass Empty = new GetRepoRuleBranchBypass();

    /**
     * Allow users with repository edit permission to bypass.
     * 
     */
    @Import(name="repoOwners")
    private @Nullable Boolean repoOwners;

    /**
     * @return Allow users with repository edit permission to bypass.
     * 
     */
    public Optional<Boolean> repoOwners() {
        return Optional.ofNullable(this.repoOwners);
    }

    /**
     * List of user ids with who can bypass.
     * 
     */
    @Import(name="userIds")
    private @Nullable List<String> userIds;

    /**
     * @return List of user ids with who can bypass.
     * 
     */
    public Optional<List<String>> userIds() {
        return Optional.ofNullable(this.userIds);
    }

    private GetRepoRuleBranchBypass() {}

    private GetRepoRuleBranchBypass(GetRepoRuleBranchBypass $) {
        this.repoOwners = $.repoOwners;
        this.userIds = $.userIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepoRuleBranchBypass defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepoRuleBranchBypass $;

        public Builder() {
            $ = new GetRepoRuleBranchBypass();
        }

        public Builder(GetRepoRuleBranchBypass defaults) {
            $ = new GetRepoRuleBranchBypass(Objects.requireNonNull(defaults));
        }

        /**
         * @param repoOwners Allow users with repository edit permission to bypass.
         * 
         * @return builder
         * 
         */
        public Builder repoOwners(@Nullable Boolean repoOwners) {
            $.repoOwners = repoOwners;
            return this;
        }

        /**
         * @param userIds List of user ids with who can bypass.
         * 
         * @return builder
         * 
         */
        public Builder userIds(@Nullable List<String> userIds) {
            $.userIds = userIds;
            return this;
        }

        /**
         * @param userIds List of user ids with who can bypass.
         * 
         * @return builder
         * 
         */
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }

        public GetRepoRuleBranchBypass build() {
            return $;
        }
    }

}
