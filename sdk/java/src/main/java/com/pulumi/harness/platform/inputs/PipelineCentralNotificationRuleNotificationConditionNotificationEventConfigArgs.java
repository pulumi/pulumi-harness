// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs Empty = new PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs();

    @Import(name="entityIdentifiers")
    private @Nullable Output<List<String>> entityIdentifiers;

    public Optional<Output<List<String>>> entityIdentifiers() {
        return Optional.ofNullable(this.entityIdentifiers);
    }

    @Import(name="notificationEntity", required=true)
    private Output<String> notificationEntity;

    public Output<String> notificationEntity() {
        return this.notificationEntity;
    }

    @Import(name="notificationEvent", required=true)
    private Output<String> notificationEvent;

    public Output<String> notificationEvent() {
        return this.notificationEvent;
    }

    @Import(name="notificationEventDatas")
    private @Nullable Output<List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs>> notificationEventDatas;

    public Optional<Output<List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs>>> notificationEventDatas() {
        return Optional.ofNullable(this.notificationEventDatas);
    }

    private PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs() {}

    private PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs(PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs $) {
        this.entityIdentifiers = $.entityIdentifiers;
        this.notificationEntity = $.notificationEntity;
        this.notificationEvent = $.notificationEvent;
        this.notificationEventDatas = $.notificationEventDatas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs $;

        public Builder() {
            $ = new PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs();
        }

        public Builder(PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs defaults) {
            $ = new PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder entityIdentifiers(@Nullable Output<List<String>> entityIdentifiers) {
            $.entityIdentifiers = entityIdentifiers;
            return this;
        }

        public Builder entityIdentifiers(List<String> entityIdentifiers) {
            return entityIdentifiers(Output.of(entityIdentifiers));
        }

        public Builder entityIdentifiers(String... entityIdentifiers) {
            return entityIdentifiers(List.of(entityIdentifiers));
        }

        public Builder notificationEntity(Output<String> notificationEntity) {
            $.notificationEntity = notificationEntity;
            return this;
        }

        public Builder notificationEntity(String notificationEntity) {
            return notificationEntity(Output.of(notificationEntity));
        }

        public Builder notificationEvent(Output<String> notificationEvent) {
            $.notificationEvent = notificationEvent;
            return this;
        }

        public Builder notificationEvent(String notificationEvent) {
            return notificationEvent(Output.of(notificationEvent));
        }

        public Builder notificationEventDatas(@Nullable Output<List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs>> notificationEventDatas) {
            $.notificationEventDatas = notificationEventDatas;
            return this;
        }

        public Builder notificationEventDatas(List<PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs> notificationEventDatas) {
            return notificationEventDatas(Output.of(notificationEventDatas));
        }

        public Builder notificationEventDatas(PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs... notificationEventDatas) {
            return notificationEventDatas(List.of(notificationEventDatas));
        }

        public PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs build() {
            if ($.notificationEntity == null) {
                throw new MissingRequiredPropertyException("PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs", "notificationEntity");
            }
            if ($.notificationEvent == null) {
                throw new MissingRequiredPropertyException("PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs", "notificationEvent");
            }
            return $;
        }
    }

}
