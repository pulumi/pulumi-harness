// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.chaos.SecurityGovernanceRuleArgs;
import com.pulumi.harness.chaos.inputs.SecurityGovernanceRuleState;
import com.pulumi.harness.chaos.outputs.SecurityGovernanceRuleTimeWindow;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for managing a Harness Chaos Security Governance Rule
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.chaos.SecurityGovernanceRule;
 * import com.pulumi.harness.chaos.SecurityGovernanceRuleArgs;
 * import com.pulumi.harness.chaos.inputs.SecurityGovernanceRuleTimeWindowArgs;
 * import com.pulumi.harness.chaos.inputs.SecurityGovernanceRuleTimeWindowRecurrenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // K8s Rule
 *         var example = new SecurityGovernanceRule("example", SecurityGovernanceRuleArgs.builder()
 *             .orgId("<org_id>")
 *             .projectId("<project_id>")
 *             .name("<name>")
 *             .description("<description>")
 *             .isEnabled(true)
 *             .conditionIds("<condition_id>")
 *             .userGroupIds("_project_all_users")
 *             .tags(            
 *                 "<tag1>",
 *                 "<tag2>")
 *             .timeWindows(SecurityGovernanceRuleTimeWindowArgs.builder()
 *                 .timeZone("UTC")
 *                 .startTime(1711238400000)
 *                 .duration("24h")
 *                 .recurrence(SecurityGovernanceRuleTimeWindowRecurrenceArgs.builder()
 *                     .type("Daily")
 *                     .until(-1)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         // Linux Rule
 *         var linuxRule = new SecurityGovernanceRule("linuxRule", SecurityGovernanceRuleArgs.builder()
 *             .orgId("<org_id>")
 *             .projectId("<project_id>")
 *             .name("<name>")
 *             .description("<description>")
 *             .isEnabled(true)
 *             .conditionIds("<condition_id>")
 *             .userGroupIds("_project_all_users")
 *             .tags(            
 *                 "<tag1>",
 *                 "<tag2>")
 *             .timeWindows(SecurityGovernanceRuleTimeWindowArgs.builder()
 *                 .timeZone("UTC")
 *                 .startTime(1711238400000)
 *                 .duration("24h")
 *                 .recurrence(SecurityGovernanceRuleTimeWindowRecurrenceArgs.builder()
 *                     .type("Daily")
 *                     .until(-1)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         // Windows Rule
 *         var windowsRule = new SecurityGovernanceRule("windowsRule", SecurityGovernanceRuleArgs.builder()
 *             .orgId("<org_id>")
 *             .projectId("<project_id>")
 *             .name("<name>")
 *             .description("<description>")
 *             .isEnabled(true)
 *             .conditionIds("<condition_id>")
 *             .userGroupIds("_project_all_users")
 *             .tags(            
 *                 "<tag1>",
 *                 "<tag2>")
 *             .timeWindows(SecurityGovernanceRuleTimeWindowArgs.builder()
 *                 .timeZone("UTC")
 *                 .startTime(1711238400000)
 *                 .duration("24h")
 *                 .recurrence(SecurityGovernanceRuleTimeWindowRecurrenceArgs.builder()
 *                     .type("Daily")
 *                     .until(-1)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Import Project level Chaos Security Governance Rule
 * 
 * ```sh
 * $ pulumi import harness:chaos/securityGovernanceRule:SecurityGovernanceRule example org_id/project_id/rule_id
 * ```
 * 
 */
@ResourceType(type="harness:chaos/securityGovernanceRule:SecurityGovernanceRule")
public class SecurityGovernanceRule extends com.pulumi.resources.CustomResource {
    /**
     * List of condition IDs associated with this rule
     * 
     */
    @Export(name="conditionIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> conditionIds;

    /**
     * @return List of condition IDs associated with this rule
     * 
     */
    public Output<List<String>> conditionIds() {
        return this.conditionIds;
    }
    /**
     * Description of the security governance rule
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the security governance rule
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether the rule is enabled
     * 
     */
    @Export(name="isEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isEnabled;

    /**
     * @return Whether the rule is enabled
     * 
     */
    public Output<Optional<Boolean>> isEnabled() {
        return Codegen.optional(this.isEnabled);
    }
    /**
     * Name of the security governance rule
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the security governance rule
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The organization ID of the security governance rule
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return The organization ID of the security governance rule
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * The project ID of the security governance rule
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The project ID of the security governance rule
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Tags for the security governance rule
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags for the security governance rule
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="timeWindows", refs={List.class,SecurityGovernanceRuleTimeWindow.class}, tree="[0,1]")
    private Output<List<SecurityGovernanceRuleTimeWindow>> timeWindows;

    public Output<List<SecurityGovernanceRuleTimeWindow>> timeWindows() {
        return this.timeWindows;
    }
    /**
     * List of user group IDs associated with this rule
     * 
     */
    @Export(name="userGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> userGroupIds;

    /**
     * @return List of user group IDs associated with this rule
     * 
     */
    public Output<Optional<List<String>>> userGroupIds() {
        return Codegen.optional(this.userGroupIds);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurityGovernanceRule(java.lang.String name) {
        this(name, SecurityGovernanceRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurityGovernanceRule(java.lang.String name, SecurityGovernanceRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurityGovernanceRule(java.lang.String name, SecurityGovernanceRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:chaos/securityGovernanceRule:SecurityGovernanceRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecurityGovernanceRule(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityGovernanceRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:chaos/securityGovernanceRule:SecurityGovernanceRule", name, state, makeResourceOptions(options, id), false);
    }

    private static SecurityGovernanceRuleArgs makeArgs(SecurityGovernanceRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecurityGovernanceRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurityGovernanceRule get(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityGovernanceRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurityGovernanceRule(name, id, state, options);
    }
}
