// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.ManualFreezeFreezeWindowRecurrence;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManualFreezeFreezeWindow {
    /**
     * @return Duration of the freeze window
     * 
     */
    private @Nullable String duration;
    /**
     * @return End Time of the freeze window
     * 
     */
    private @Nullable String endTime;
    /**
     * @return Recurrence of the freeze window
     * 
     */
    private @Nullable List<ManualFreezeFreezeWindowRecurrence> recurrences;
    /**
     * @return Start Time of the freeze window
     * 
     */
    private @Nullable String startTime;
    /**
     * @return Time zone of the freeze window
     * 
     */
    private @Nullable String timeZone;

    private ManualFreezeFreezeWindow() {}
    /**
     * @return Duration of the freeze window
     * 
     */
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return End Time of the freeze window
     * 
     */
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    /**
     * @return Recurrence of the freeze window
     * 
     */
    public List<ManualFreezeFreezeWindowRecurrence> recurrences() {
        return this.recurrences == null ? List.of() : this.recurrences;
    }
    /**
     * @return Start Time of the freeze window
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }
    /**
     * @return Time zone of the freeze window
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManualFreezeFreezeWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String duration;
        private @Nullable String endTime;
        private @Nullable List<ManualFreezeFreezeWindowRecurrence> recurrences;
        private @Nullable String startTime;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(ManualFreezeFreezeWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.endTime = defaults.endTime;
    	      this.recurrences = defaults.recurrences;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder duration(@Nullable String duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(@Nullable String endTime) {

            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder recurrences(@Nullable List<ManualFreezeFreezeWindowRecurrence> recurrences) {

            this.recurrences = recurrences;
            return this;
        }
        public Builder recurrences(ManualFreezeFreezeWindowRecurrence... recurrences) {
            return recurrences(List.of(recurrences));
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {

            this.timeZone = timeZone;
            return this;
        }
        public ManualFreezeFreezeWindow build() {
            final var _resultValue = new ManualFreezeFreezeWindow();
            _resultValue.duration = duration;
            _resultValue.endTime = endTime;
            _resultValue.recurrences = recurrences;
            _resultValue.startTime = startTime;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
