// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.FileStoreFolderCreatedByArgs;
import com.pulumi.harness.platform.inputs.FileStoreFolderLastModifiedByArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileStoreFolderState extends com.pulumi.resources.ResourceArgs {

    public static final FileStoreFolderState Empty = new FileStoreFolderState();

    /**
     * Created by
     * 
     */
    @Import(name="createdBies")
    private @Nullable Output<List<FileStoreFolderCreatedByArgs>> createdBies;

    /**
     * @return Created by
     * 
     */
    public Optional<Output<List<FileStoreFolderCreatedByArgs>>> createdBies() {
        return Optional.ofNullable(this.createdBies);
    }

    /**
     * Description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Unique identifier of the resource.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Last modified at
     * 
     */
    @Import(name="lastModifiedAt")
    private @Nullable Output<Integer> lastModifiedAt;

    /**
     * @return Last modified at
     * 
     */
    public Optional<Output<Integer>> lastModifiedAt() {
        return Optional.ofNullable(this.lastModifiedAt);
    }

    /**
     * Last modified by
     * 
     */
    @Import(name="lastModifiedBies")
    private @Nullable Output<List<FileStoreFolderLastModifiedByArgs>> lastModifiedBies;

    /**
     * @return Last modified by
     * 
     */
    public Optional<Output<List<FileStoreFolderLastModifiedByArgs>>> lastModifiedBies() {
        return Optional.ofNullable(this.lastModifiedBies);
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique identifier of the organization.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Folder parent identifier on Harness File Store
     * 
     */
    @Import(name="parentIdentifier")
    private @Nullable Output<String> parentIdentifier;

    /**
     * @return Folder parent identifier on Harness File Store
     * 
     */
    public Optional<Output<String>> parentIdentifier() {
        return Optional.ofNullable(this.parentIdentifier);
    }

    /**
     * Harness File Store folder path
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Harness File Store folder path
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Unique identifier of the project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Tags to associate with the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FileStoreFolderState() {}

    private FileStoreFolderState(FileStoreFolderState $) {
        this.createdBies = $.createdBies;
        this.description = $.description;
        this.identifier = $.identifier;
        this.lastModifiedAt = $.lastModifiedAt;
        this.lastModifiedBies = $.lastModifiedBies;
        this.name = $.name;
        this.orgId = $.orgId;
        this.parentIdentifier = $.parentIdentifier;
        this.path = $.path;
        this.projectId = $.projectId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileStoreFolderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileStoreFolderState $;

        public Builder() {
            $ = new FileStoreFolderState();
        }

        public Builder(FileStoreFolderState defaults) {
            $ = new FileStoreFolderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdBies Created by
         * 
         * @return builder
         * 
         */
        public Builder createdBies(@Nullable Output<List<FileStoreFolderCreatedByArgs>> createdBies) {
            $.createdBies = createdBies;
            return this;
        }

        /**
         * @param createdBies Created by
         * 
         * @return builder
         * 
         */
        public Builder createdBies(List<FileStoreFolderCreatedByArgs> createdBies) {
            return createdBies(Output.of(createdBies));
        }

        /**
         * @param createdBies Created by
         * 
         * @return builder
         * 
         */
        public Builder createdBies(FileStoreFolderCreatedByArgs... createdBies) {
            return createdBies(List.of(createdBies));
        }

        /**
         * @param description Description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param lastModifiedAt Last modified at
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedAt(@Nullable Output<Integer> lastModifiedAt) {
            $.lastModifiedAt = lastModifiedAt;
            return this;
        }

        /**
         * @param lastModifiedAt Last modified at
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedAt(Integer lastModifiedAt) {
            return lastModifiedAt(Output.of(lastModifiedAt));
        }

        /**
         * @param lastModifiedBies Last modified by
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBies(@Nullable Output<List<FileStoreFolderLastModifiedByArgs>> lastModifiedBies) {
            $.lastModifiedBies = lastModifiedBies;
            return this;
        }

        /**
         * @param lastModifiedBies Last modified by
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBies(List<FileStoreFolderLastModifiedByArgs> lastModifiedBies) {
            return lastModifiedBies(Output.of(lastModifiedBies));
        }

        /**
         * @param lastModifiedBies Last modified by
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedBies(FileStoreFolderLastModifiedByArgs... lastModifiedBies) {
            return lastModifiedBies(List.of(lastModifiedBies));
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId Unique identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Unique identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param parentIdentifier Folder parent identifier on Harness File Store
         * 
         * @return builder
         * 
         */
        public Builder parentIdentifier(@Nullable Output<String> parentIdentifier) {
            $.parentIdentifier = parentIdentifier;
            return this;
        }

        /**
         * @param parentIdentifier Folder parent identifier on Harness File Store
         * 
         * @return builder
         * 
         */
        public Builder parentIdentifier(String parentIdentifier) {
            return parentIdentifier(Output.of(parentIdentifier));
        }

        /**
         * @param path Harness File Store folder path
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Harness File Store folder path
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param projectId Unique identifier of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique identifier of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public FileStoreFolderState build() {
            return $;
        }
    }

}
