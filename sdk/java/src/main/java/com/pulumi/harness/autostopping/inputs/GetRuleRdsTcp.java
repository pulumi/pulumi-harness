// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.inputs.GetRuleRdsTcpForwardRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuleRdsTcp extends com.pulumi.resources.InvokeArgs {

    public static final GetRuleRdsTcp Empty = new GetRuleRdsTcp();

    /**
     * Additional tcp forwarding rules
     * 
     */
    @Import(name="forwardRules")
    private @Nullable List<GetRuleRdsTcpForwardRule> forwardRules;

    /**
     * @return Additional tcp forwarding rules
     * 
     */
    public Optional<List<GetRuleRdsTcpForwardRule>> forwardRules() {
        return Optional.ofNullable(this.forwardRules);
    }

    /**
     * Id of the Proxy
     * 
     */
    @Import(name="proxyId", required=true)
    private String proxyId;

    /**
     * @return Id of the Proxy
     * 
     */
    public String proxyId() {
        return this.proxyId;
    }

    private GetRuleRdsTcp() {}

    private GetRuleRdsTcp(GetRuleRdsTcp $) {
        this.forwardRules = $.forwardRules;
        this.proxyId = $.proxyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuleRdsTcp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuleRdsTcp $;

        public Builder() {
            $ = new GetRuleRdsTcp();
        }

        public Builder(GetRuleRdsTcp defaults) {
            $ = new GetRuleRdsTcp(Objects.requireNonNull(defaults));
        }

        /**
         * @param forwardRules Additional tcp forwarding rules
         * 
         * @return builder
         * 
         */
        public Builder forwardRules(@Nullable List<GetRuleRdsTcpForwardRule> forwardRules) {
            $.forwardRules = forwardRules;
            return this;
        }

        /**
         * @param forwardRules Additional tcp forwarding rules
         * 
         * @return builder
         * 
         */
        public Builder forwardRules(GetRuleRdsTcpForwardRule... forwardRules) {
            return forwardRules(List.of(forwardRules));
        }

        /**
         * @param proxyId Id of the Proxy
         * 
         * @return builder
         * 
         */
        public Builder proxyId(String proxyId) {
            $.proxyId = proxyId;
            return this;
        }

        public GetRuleRdsTcp build() {
            if ($.proxyId == null) {
                throw new MissingRequiredPropertyException("GetRuleRdsTcp", "proxyId");
            }
            return $;
        }
    }

}
