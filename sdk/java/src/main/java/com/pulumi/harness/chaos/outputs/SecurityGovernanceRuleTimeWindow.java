// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.chaos.outputs.SecurityGovernanceRuleTimeWindowRecurrence;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityGovernanceRuleTimeWindow {
    private @Nullable String duration;
    private @Nullable Integer endTime;
    private @Nullable SecurityGovernanceRuleTimeWindowRecurrence recurrence;
    private Integer startTime;
    private String timeZone;

    private SecurityGovernanceRuleTimeWindow() {}
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    public Optional<Integer> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    public Optional<SecurityGovernanceRuleTimeWindowRecurrence> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }
    public Integer startTime() {
        return this.startTime;
    }
    public String timeZone() {
        return this.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGovernanceRuleTimeWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String duration;
        private @Nullable Integer endTime;
        private @Nullable SecurityGovernanceRuleTimeWindowRecurrence recurrence;
        private Integer startTime;
        private String timeZone;
        public Builder() {}
        public Builder(SecurityGovernanceRuleTimeWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.endTime = defaults.endTime;
    	      this.recurrence = defaults.recurrence;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder duration(@Nullable String duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(@Nullable Integer endTime) {

            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder recurrence(@Nullable SecurityGovernanceRuleTimeWindowRecurrence recurrence) {

            this.recurrence = recurrence;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(Integer startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceRuleTimeWindow", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceRuleTimeWindow", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        public SecurityGovernanceRuleTimeWindow build() {
            final var _resultValue = new SecurityGovernanceRuleTimeWindow();
            _resultValue.duration = duration;
            _resultValue.endTime = endTime;
            _resultValue.recurrence = recurrence;
            _resultValue.startTime = startTime;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
