// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.RepoRuleBranchArgs;
import com.pulumi.harness.platform.inputs.RepoRuleBranchState;
import com.pulumi.harness.platform.outputs.RepoRuleBranchBypass;
import com.pulumi.harness.platform.outputs.RepoRuleBranchPattern;
import com.pulumi.harness.platform.outputs.RepoRuleBranchPolicy;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Harness Repo Branch Rule.
 * 
 */
@ResourceType(type="harness:platform/repoRuleBranch:RepoRuleBranch")
public class RepoRuleBranch extends com.pulumi.resources.CustomResource {
    /**
     * List of users who can bypass this rule.
     * 
     */
    @Export(name="bypasses", refs={List.class,RepoRuleBranchBypass.class}, tree="[0,1]")
    private Output<List<RepoRuleBranchBypass>> bypasses;

    /**
     * @return List of users who can bypass this rule.
     * 
     */
    public Output<List<RepoRuleBranchBypass>> bypasses() {
        return this.bypasses;
    }
    /**
     * Timestamp when the rule was created.
     * 
     */
    @Export(name="created", refs={Integer.class}, tree="[0]")
    private Output<Integer> created;

    /**
     * @return Timestamp when the rule was created.
     * 
     */
    public Output<Integer> created() {
        return this.created;
    }
    /**
     * ID of the user who created the rule.
     * 
     */
    @Export(name="createdBy", refs={Integer.class}, tree="[0]")
    private Output<Integer> createdBy;

    /**
     * @return ID of the user who created the rule.
     * 
     */
    public Output<Integer> createdBy() {
        return this.createdBy;
    }
    /**
     * Description of the rule.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the rule.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Identifier of the rule.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Identifier of the rule.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Pattern of branch to which rule will apply.
     * 
     */
    @Export(name="patterns", refs={List.class,RepoRuleBranchPattern.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RepoRuleBranchPattern>> patterns;

    /**
     * @return Pattern of branch to which rule will apply.
     * 
     */
    public Output<Optional<List<RepoRuleBranchPattern>>> patterns() {
        return Codegen.optional(this.patterns);
    }
    /**
     * Policies to be applied for this rule.
     * 
     */
    @Export(name="policies", refs={List.class,RepoRuleBranchPolicy.class}, tree="[0,1]")
    private Output<List<RepoRuleBranchPolicy>> policies;

    /**
     * @return Policies to be applied for this rule.
     * 
     */
    public Output<List<RepoRuleBranchPolicy>> policies() {
        return this.policies;
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Repo identifier of the repository.
     * 
     */
    @Export(name="repoIdentifier", refs={String.class}, tree="[0]")
    private Output<String> repoIdentifier;

    /**
     * @return Repo identifier of the repository.
     * 
     */
    public Output<String> repoIdentifier() {
        return this.repoIdentifier;
    }
    /**
     * State of the rule (active, disable, monitor).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return State of the rule (active, disable, monitor).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Timestamp when the rule was updated.
     * 
     */
    @Export(name="updated", refs={Integer.class}, tree="[0]")
    private Output<Integer> updated;

    /**
     * @return Timestamp when the rule was updated.
     * 
     */
    public Output<Integer> updated() {
        return this.updated;
    }
    /**
     * ID of the user who updated the rule.
     * 
     */
    @Export(name="updatedBy", refs={Integer.class}, tree="[0]")
    private Output<Integer> updatedBy;

    /**
     * @return ID of the user who updated the rule.
     * 
     */
    public Output<Integer> updatedBy() {
        return this.updatedBy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RepoRuleBranch(java.lang.String name) {
        this(name, RepoRuleBranchArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RepoRuleBranch(java.lang.String name, RepoRuleBranchArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RepoRuleBranch(java.lang.String name, RepoRuleBranchArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/repoRuleBranch:RepoRuleBranch", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RepoRuleBranch(java.lang.String name, Output<java.lang.String> id, @Nullable RepoRuleBranchState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/repoRuleBranch:RepoRuleBranch", name, state, makeResourceOptions(options, id), false);
    }

    private static RepoRuleBranchArgs makeArgs(RepoRuleBranchArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RepoRuleBranchArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RepoRuleBranch get(java.lang.String name, Output<java.lang.String> id, @Nullable RepoRuleBranchState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RepoRuleBranch(name, id, state, options);
    }
}
