// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.InfrastructureArgs;
import com.pulumi.harness.platform.inputs.InfrastructureState;
import com.pulumi.harness.platform.outputs.InfrastructureGitDetails;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Harness Infrastructure.
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Import account level infrastructure
 * 
 * ```sh
 * $ pulumi import harness:platform/infrastructure:Infrastructure example &lt;env_id&gt;/&lt;infrastructure_id&gt;
 * ```
 * 
 * Import org level infrastructure
 * 
 * ```sh
 * $ pulumi import harness:platform/infrastructure:Infrastructure example &lt;org_id&gt;/&lt;env_id&gt;/&lt;infrastructure_id&gt;
 * ```
 * 
 * Import project level infrastructure
 * 
 * ```sh
 * $ pulumi import harness:platform/infrastructure:Infrastructure example &lt;org_id&gt;/&lt;project_id&gt;/&lt;env_id&gt;/&lt;infrastructure_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/infrastructure:Infrastructure")
public class Infrastructure extends com.pulumi.resources.CustomResource {
    /**
     * Infrastructure deployment type. Valid values are Kubernetes, NativeHelm, Ssh, WinRm, ServerlessAwsLambda, AzureWebApp, Custom, ECS.
     * 
     */
    @Export(name="deploymentType", refs={String.class}, tree="[0]")
    private Output<String> deploymentType;

    /**
     * @return Infrastructure deployment type. Valid values are Kubernetes, NativeHelm, Ssh, WinRm, ServerlessAwsLambda, AzureWebApp, Custom, ECS.
     * 
     */
    public Output<String> deploymentType() {
        return this.deploymentType;
    }
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Environment Identifier.
     * 
     */
    @Export(name="envId", refs={String.class}, tree="[0]")
    private Output<String> envId;

    /**
     * @return Environment Identifier.
     * 
     */
    public Output<String> envId() {
        return this.envId;
    }
    /**
     * Enable this flag for force deletion of infrastructure
     * 
     */
    @Export(name="forceDelete", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> forceDelete;

    /**
     * @return Enable this flag for force deletion of infrastructure
     * 
     */
    public Output<Boolean> forceDelete() {
        return this.forceDelete;
    }
    /**
     * Contains parameters related to creating an Entity for Git Experience.
     * 
     */
    @Export(name="gitDetails", refs={InfrastructureGitDetails.class}, tree="[0]")
    private Output<InfrastructureGitDetails> gitDetails;

    /**
     * @return Contains parameters related to creating an Entity for Git Experience.
     * 
     */
    public Output<InfrastructureGitDetails> gitDetails() {
        return this.gitDetails;
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Tags to associate with the resource.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }
    /**
     * Type of Infrastructure. Valid values are KubernetesDirect, KubernetesGcp, ServerlessAwsLambda, Pdc, KubernetesAzure, SshWinRmAzure, SshWinRmAws, AzureWebApp, ECS, GitOps, CustomDeployment, TAS, KubernetesRancher, AWS_SAM.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return Type of Infrastructure. Valid values are KubernetesDirect, KubernetesGcp, ServerlessAwsLambda, Pdc, KubernetesAzure, SshWinRmAzure, SshWinRmAws, AzureWebApp, ECS, GitOps, CustomDeployment, TAS, KubernetesRancher, AWS_SAM.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * Infrastructure YAML. In YAML, to reference an entity at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference an entity at the account scope, prefix &#39;account` to the expression: account.{identifier}. For eg, to reference a connector with identifier &#39;connectorId&#39; at the organization scope in a stage mention it as connectorRef: org.connectorId.
     * 
     */
    @Export(name="yaml", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> yaml;

    /**
     * @return Infrastructure YAML. In YAML, to reference an entity at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference an entity at the account scope, prefix &#39;account` to the expression: account.{identifier}. For eg, to reference a connector with identifier &#39;connectorId&#39; at the organization scope in a stage mention it as connectorRef: org.connectorId.
     * 
     */
    public Output<Optional<String>> yaml() {
        return Codegen.optional(this.yaml);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Infrastructure(java.lang.String name) {
        this(name, InfrastructureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Infrastructure(java.lang.String name, InfrastructureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Infrastructure(java.lang.String name, InfrastructureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/infrastructure:Infrastructure", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Infrastructure(java.lang.String name, Output<java.lang.String> id, @Nullable InfrastructureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/infrastructure:Infrastructure", name, state, makeResourceOptions(options, id), false);
    }

    private static InfrastructureArgs makeArgs(InfrastructureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InfrastructureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Infrastructure get(java.lang.String name, Output<java.lang.String> id, @Nullable InfrastructureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Infrastructure(name, id, state, options);
    }
}
