// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.chaos.outputs.GetSecurityGovernanceConditionFaultSpecFault;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSecurityGovernanceConditionFaultSpec {
    /**
     * @return List of fault specifications
     * 
     */
    private List<GetSecurityGovernanceConditionFaultSpecFault> faults;
    /**
     * @return Operator for the fault specification
     * 
     */
    private String operator;

    private GetSecurityGovernanceConditionFaultSpec() {}
    /**
     * @return List of fault specifications
     * 
     */
    public List<GetSecurityGovernanceConditionFaultSpecFault> faults() {
        return this.faults;
    }
    /**
     * @return Operator for the fault specification
     * 
     */
    public String operator() {
        return this.operator;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityGovernanceConditionFaultSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSecurityGovernanceConditionFaultSpecFault> faults;
        private String operator;
        public Builder() {}
        public Builder(GetSecurityGovernanceConditionFaultSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.faults = defaults.faults;
    	      this.operator = defaults.operator;
        }

        @CustomType.Setter
        public Builder faults(List<GetSecurityGovernanceConditionFaultSpecFault> faults) {
            if (faults == null) {
              throw new MissingRequiredPropertyException("GetSecurityGovernanceConditionFaultSpec", "faults");
            }
            this.faults = faults;
            return this;
        }
        public Builder faults(GetSecurityGovernanceConditionFaultSpecFault... faults) {
            return faults(List.of(faults));
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            if (operator == null) {
              throw new MissingRequiredPropertyException("GetSecurityGovernanceConditionFaultSpec", "operator");
            }
            this.operator = operator;
            return this;
        }
        public GetSecurityGovernanceConditionFaultSpec build() {
            final var _resultValue = new GetSecurityGovernanceConditionFaultSpec();
            _resultValue.faults = faults;
            _resultValue.operator = operator;
            return _resultValue;
        }
    }
}
