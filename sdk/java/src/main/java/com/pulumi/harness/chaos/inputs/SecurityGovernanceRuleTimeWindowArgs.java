// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.chaos.inputs.SecurityGovernanceRuleTimeWindowRecurrenceArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGovernanceRuleTimeWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGovernanceRuleTimeWindowArgs Empty = new SecurityGovernanceRuleTimeWindowArgs();

    @Import(name="duration")
    private @Nullable Output<String> duration;

    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    @Import(name="endTime")
    private @Nullable Output<Integer> endTime;

    public Optional<Output<Integer>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    @Import(name="recurrence")
    private @Nullable Output<SecurityGovernanceRuleTimeWindowRecurrenceArgs> recurrence;

    public Optional<Output<SecurityGovernanceRuleTimeWindowRecurrenceArgs>> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }

    @Import(name="startTime", required=true)
    private Output<Integer> startTime;

    public Output<Integer> startTime() {
        return this.startTime;
    }

    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    public Output<String> timeZone() {
        return this.timeZone;
    }

    private SecurityGovernanceRuleTimeWindowArgs() {}

    private SecurityGovernanceRuleTimeWindowArgs(SecurityGovernanceRuleTimeWindowArgs $) {
        this.duration = $.duration;
        this.endTime = $.endTime;
        this.recurrence = $.recurrence;
        this.startTime = $.startTime;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGovernanceRuleTimeWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGovernanceRuleTimeWindowArgs $;

        public Builder() {
            $ = new SecurityGovernanceRuleTimeWindowArgs();
        }

        public Builder(SecurityGovernanceRuleTimeWindowArgs defaults) {
            $ = new SecurityGovernanceRuleTimeWindowArgs(Objects.requireNonNull(defaults));
        }

        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        public Builder endTime(@Nullable Output<Integer> endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder endTime(Integer endTime) {
            return endTime(Output.of(endTime));
        }

        public Builder recurrence(@Nullable Output<SecurityGovernanceRuleTimeWindowRecurrenceArgs> recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        public Builder recurrence(SecurityGovernanceRuleTimeWindowRecurrenceArgs recurrence) {
            return recurrence(Output.of(recurrence));
        }

        public Builder startTime(Output<Integer> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(Integer startTime) {
            return startTime(Output.of(startTime));
        }

        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public SecurityGovernanceRuleTimeWindowArgs build() {
            if ($.startTime == null) {
                throw new MissingRequiredPropertyException("SecurityGovernanceRuleTimeWindowArgs", "startTime");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("SecurityGovernanceRuleTimeWindowArgs", "timeZone");
            }
            return $;
        }
    }

}
