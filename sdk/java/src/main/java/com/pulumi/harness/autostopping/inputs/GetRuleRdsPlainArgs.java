// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.inputs.GetRuleRdsDatabase;
import com.pulumi.harness.autostopping.inputs.GetRuleRdsDepend;
import com.pulumi.harness.autostopping.inputs.GetRuleRdsTcp;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRuleRdsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRuleRdsPlainArgs Empty = new GetRuleRdsPlainArgs();

    /**
     * Id of the cloud connector
     * 
     */
    @Import(name="cloudConnectorId", required=true)
    private String cloudConnectorId;

    /**
     * @return Id of the cloud connector
     * 
     */
    public String cloudConnectorId() {
        return this.cloudConnectorId;
    }

    @Import(name="database", required=true)
    private GetRuleRdsDatabase database;

    public GetRuleRdsDatabase database() {
        return this.database;
    }

    /**
     * Dependent rules
     * 
     */
    @Import(name="depends")
    private @Nullable List<GetRuleRdsDepend> depends;

    /**
     * @return Dependent rules
     * 
     */
    public Optional<List<GetRuleRdsDepend>> depends() {
        return Optional.ofNullable(this.depends);
    }

    /**
     * Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
     * 
     */
    @Import(name="idleTimeMins")
    private @Nullable Integer idleTimeMins;

    /**
     * @return Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
     * 
     */
    public Optional<Integer> idleTimeMins() {
        return Optional.ofNullable(this.idleTimeMins);
    }

    /**
     * Name of the rule
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the rule
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * TCP routing configuration
     * 
     */
    @Import(name="tcps")
    private @Nullable List<GetRuleRdsTcp> tcps;

    /**
     * @return TCP routing configuration
     * 
     */
    public Optional<List<GetRuleRdsTcp>> tcps() {
        return Optional.ofNullable(this.tcps);
    }

    private GetRuleRdsPlainArgs() {}

    private GetRuleRdsPlainArgs(GetRuleRdsPlainArgs $) {
        this.cloudConnectorId = $.cloudConnectorId;
        this.database = $.database;
        this.depends = $.depends;
        this.idleTimeMins = $.idleTimeMins;
        this.name = $.name;
        this.tcps = $.tcps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRuleRdsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRuleRdsPlainArgs $;

        public Builder() {
            $ = new GetRuleRdsPlainArgs();
        }

        public Builder(GetRuleRdsPlainArgs defaults) {
            $ = new GetRuleRdsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudConnectorId Id of the cloud connector
         * 
         * @return builder
         * 
         */
        public Builder cloudConnectorId(String cloudConnectorId) {
            $.cloudConnectorId = cloudConnectorId;
            return this;
        }

        public Builder database(GetRuleRdsDatabase database) {
            $.database = database;
            return this;
        }

        /**
         * @param depends Dependent rules
         * 
         * @return builder
         * 
         */
        public Builder depends(@Nullable List<GetRuleRdsDepend> depends) {
            $.depends = depends;
            return this;
        }

        /**
         * @param depends Dependent rules
         * 
         * @return builder
         * 
         */
        public Builder depends(GetRuleRdsDepend... depends) {
            return depends(List.of(depends));
        }

        /**
         * @param idleTimeMins Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeMins(@Nullable Integer idleTimeMins) {
            $.idleTimeMins = idleTimeMins;
            return this;
        }

        /**
         * @param name Name of the rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param tcps TCP routing configuration
         * 
         * @return builder
         * 
         */
        public Builder tcps(@Nullable List<GetRuleRdsTcp> tcps) {
            $.tcps = tcps;
            return this;
        }

        /**
         * @param tcps TCP routing configuration
         * 
         * @return builder
         * 
         */
        public Builder tcps(GetRuleRdsTcp... tcps) {
            return tcps(List.of(tcps));
        }

        public GetRuleRdsPlainArgs build() {
            if ($.cloudConnectorId == null) {
                throw new MissingRequiredPropertyException("GetRuleRdsPlainArgs", "cloudConnectorId");
            }
            if ($.database == null) {
                throw new MissingRequiredPropertyException("GetRuleRdsPlainArgs", "database");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetRuleRdsPlainArgs", "name");
            }
            return $;
        }
    }

}
