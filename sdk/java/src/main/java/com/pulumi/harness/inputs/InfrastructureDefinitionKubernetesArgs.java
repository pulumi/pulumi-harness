// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InfrastructureDefinitionKubernetesArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureDefinitionKubernetesArgs Empty = new InfrastructureDefinitionKubernetesArgs();

    /**
     * The name of the cloud provider to connect with.
     * 
     */
    @Import(name="cloudProviderName", required=true)
    private Output<String> cloudProviderName;

    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    public Output<String> cloudProviderName() {
        return this.cloudProviderName;
    }

    /**
     * The namespace in Kubernetes to deploy to.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The namespace in Kubernetes to deploy to.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * The naming convention of the release. When using Helm Native the default is ${infra.kubernetes.infraId}. For standard Kubernetes manifests the default is release-${infra.kubernetes.infraId}
     * 
     */
    @Import(name="releaseName", required=true)
    private Output<String> releaseName;

    /**
     * @return The naming convention of the release. When using Helm Native the default is ${infra.kubernetes.infraId}. For standard Kubernetes manifests the default is release-${infra.kubernetes.infraId}
     * 
     */
    public Output<String> releaseName() {
        return this.releaseName;
    }

    private InfrastructureDefinitionKubernetesArgs() {}

    private InfrastructureDefinitionKubernetesArgs(InfrastructureDefinitionKubernetesArgs $) {
        this.cloudProviderName = $.cloudProviderName;
        this.namespace = $.namespace;
        this.releaseName = $.releaseName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureDefinitionKubernetesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureDefinitionKubernetesArgs $;

        public Builder() {
            $ = new InfrastructureDefinitionKubernetesArgs();
        }

        public Builder(InfrastructureDefinitionKubernetesArgs defaults) {
            $ = new InfrastructureDefinitionKubernetesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProviderName The name of the cloud provider to connect with.
         * 
         * @return builder
         * 
         */
        public Builder cloudProviderName(Output<String> cloudProviderName) {
            $.cloudProviderName = cloudProviderName;
            return this;
        }

        /**
         * @param cloudProviderName The name of the cloud provider to connect with.
         * 
         * @return builder
         * 
         */
        public Builder cloudProviderName(String cloudProviderName) {
            return cloudProviderName(Output.of(cloudProviderName));
        }

        /**
         * @param namespace The namespace in Kubernetes to deploy to.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace in Kubernetes to deploy to.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param releaseName The naming convention of the release. When using Helm Native the default is ${infra.kubernetes.infraId}. For standard Kubernetes manifests the default is release-${infra.kubernetes.infraId}
         * 
         * @return builder
         * 
         */
        public Builder releaseName(Output<String> releaseName) {
            $.releaseName = releaseName;
            return this;
        }

        /**
         * @param releaseName The naming convention of the release. When using Helm Native the default is ${infra.kubernetes.infraId}. For standard Kubernetes manifests the default is release-${infra.kubernetes.infraId}
         * 
         * @return builder
         * 
         */
        public Builder releaseName(String releaseName) {
            return releaseName(Output.of(releaseName));
        }

        public InfrastructureDefinitionKubernetesArgs build() {
            if ($.cloudProviderName == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionKubernetesArgs", "cloudProviderName");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionKubernetesArgs", "namespace");
            }
            if ($.releaseName == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionKubernetesArgs", "releaseName");
            }
            return $;
        }
    }

}
