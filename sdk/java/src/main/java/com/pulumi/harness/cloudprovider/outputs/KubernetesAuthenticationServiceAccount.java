// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesAuthenticationServiceAccount {
    /**
     * @return Name of the Harness secret containing the CA certificate for the cluster.
     * 
     */
    private @Nullable String caCertificateSecretName;
    /**
     * @return URL of the Kubernetes master to connect to.
     * 
     */
    private String masterUrl;
    /**
     * @return Name of the Harness secret containing the service account token for the cluster.
     * 
     */
    private String serviceAccountTokenSecretName;

    private KubernetesAuthenticationServiceAccount() {}
    /**
     * @return Name of the Harness secret containing the CA certificate for the cluster.
     * 
     */
    public Optional<String> caCertificateSecretName() {
        return Optional.ofNullable(this.caCertificateSecretName);
    }
    /**
     * @return URL of the Kubernetes master to connect to.
     * 
     */
    public String masterUrl() {
        return this.masterUrl;
    }
    /**
     * @return Name of the Harness secret containing the service account token for the cluster.
     * 
     */
    public String serviceAccountTokenSecretName() {
        return this.serviceAccountTokenSecretName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesAuthenticationServiceAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String caCertificateSecretName;
        private String masterUrl;
        private String serviceAccountTokenSecretName;
        public Builder() {}
        public Builder(KubernetesAuthenticationServiceAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caCertificateSecretName = defaults.caCertificateSecretName;
    	      this.masterUrl = defaults.masterUrl;
    	      this.serviceAccountTokenSecretName = defaults.serviceAccountTokenSecretName;
        }

        @CustomType.Setter
        public Builder caCertificateSecretName(@Nullable String caCertificateSecretName) {

            this.caCertificateSecretName = caCertificateSecretName;
            return this;
        }
        @CustomType.Setter
        public Builder masterUrl(String masterUrl) {
            if (masterUrl == null) {
              throw new MissingRequiredPropertyException("KubernetesAuthenticationServiceAccount", "masterUrl");
            }
            this.masterUrl = masterUrl;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountTokenSecretName(String serviceAccountTokenSecretName) {
            if (serviceAccountTokenSecretName == null) {
              throw new MissingRequiredPropertyException("KubernetesAuthenticationServiceAccount", "serviceAccountTokenSecretName");
            }
            this.serviceAccountTokenSecretName = serviceAccountTokenSecretName;
            return this;
        }
        public KubernetesAuthenticationServiceAccount build() {
            final var _resultValue = new KubernetesAuthenticationServiceAccount();
            _resultValue.caCertificateSecretName = caCertificateSecretName;
            _resultValue.masterUrl = masterUrl;
            _resultValue.serviceAccountTokenSecretName = serviceAccountTokenSecretName;
            return _resultValue;
        }
    }
}
