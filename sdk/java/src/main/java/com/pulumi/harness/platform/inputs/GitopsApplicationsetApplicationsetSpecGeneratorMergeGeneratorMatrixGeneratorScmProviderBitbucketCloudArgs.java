// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRefArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs Empty = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs();

    /**
     * Scan all branches instead of just the default branch.
     * 
     */
    @Import(name="allBranches")
    private @Nullable Output<Boolean> allBranches;

    /**
     * @return Scan all branches instead of just the default branch.
     * 
     */
    public Optional<Output<Boolean>> allBranches() {
        return Optional.ofNullable(this.allBranches);
    }

    /**
     * The app password to use for the user. See: https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/.
     * 
     */
    @Import(name="appPasswordRef")
    private @Nullable Output<GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRefArgs> appPasswordRef;

    /**
     * @return The app password to use for the user. See: https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/.
     * 
     */
    public Optional<Output<GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRefArgs>> appPasswordRef() {
        return Optional.ofNullable(this.appPasswordRef);
    }

    /**
     * Bitbucket workspace to scan.
     * 
     */
    @Import(name="owner", required=true)
    private Output<String> owner;

    /**
     * @return Bitbucket workspace to scan.
     * 
     */
    public Output<String> owner() {
        return this.owner;
    }

    /**
     * Bitbucket user to use when authenticating. Should have a &#34;member&#34; role to be able to read all repositories and branches.
     * 
     */
    @Import(name="user", required=true)
    private Output<String> user;

    /**
     * @return Bitbucket user to use when authenticating. Should have a &#34;member&#34; role to be able to read all repositories and branches.
     * 
     */
    public Output<String> user() {
        return this.user;
    }

    private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs() {}

    private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs $) {
        this.allBranches = $.allBranches;
        this.appPasswordRef = $.appPasswordRef;
        this.owner = $.owner;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs $;

        public Builder() {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs();
        }

        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs defaults) {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allBranches Scan all branches instead of just the default branch.
         * 
         * @return builder
         * 
         */
        public Builder allBranches(@Nullable Output<Boolean> allBranches) {
            $.allBranches = allBranches;
            return this;
        }

        /**
         * @param allBranches Scan all branches instead of just the default branch.
         * 
         * @return builder
         * 
         */
        public Builder allBranches(Boolean allBranches) {
            return allBranches(Output.of(allBranches));
        }

        /**
         * @param appPasswordRef The app password to use for the user. See: https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/.
         * 
         * @return builder
         * 
         */
        public Builder appPasswordRef(@Nullable Output<GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRefArgs> appPasswordRef) {
            $.appPasswordRef = appPasswordRef;
            return this;
        }

        /**
         * @param appPasswordRef The app password to use for the user. See: https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/.
         * 
         * @return builder
         * 
         */
        public Builder appPasswordRef(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudAppPasswordRefArgs appPasswordRef) {
            return appPasswordRef(Output.of(appPasswordRef));
        }

        /**
         * @param owner Bitbucket workspace to scan.
         * 
         * @return builder
         * 
         */
        public Builder owner(Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner Bitbucket workspace to scan.
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        /**
         * @param user Bitbucket user to use when authenticating. Should have a &#34;member&#34; role to be able to read all repositories and branches.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<String> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user Bitbucket user to use when authenticating. Should have a &#34;member&#34; role to be able to read all repositories and branches.
         * 
         * @return builder
         * 
         */
        public Builder user(String user) {
            return user(Output.of(user));
        }

        public GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs build() {
            if ($.owner == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs", "owner");
            }
            if ($.user == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderBitbucketCloudArgs", "user");
            }
            return $;
        }
    }

}
