// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class DelegateApprovalArgs extends com.pulumi.resources.ResourceArgs {

    public static final DelegateApprovalArgs Empty = new DelegateApprovalArgs();

    /**
     * Whether or not to approve the delegate.
     * 
     */
    @Import(name="approve", required=true)
    private Output<Boolean> approve;

    /**
     * @return Whether or not to approve the delegate.
     * 
     */
    public Output<Boolean> approve() {
        return this.approve;
    }

    /**
     * The id of the delegate.
     * 
     */
    @Import(name="delegateId", required=true)
    private Output<String> delegateId;

    /**
     * @return The id of the delegate.
     * 
     */
    public Output<String> delegateId() {
        return this.delegateId;
    }

    private DelegateApprovalArgs() {}

    private DelegateApprovalArgs(DelegateApprovalArgs $) {
        this.approve = $.approve;
        this.delegateId = $.delegateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DelegateApprovalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DelegateApprovalArgs $;

        public Builder() {
            $ = new DelegateApprovalArgs();
        }

        public Builder(DelegateApprovalArgs defaults) {
            $ = new DelegateApprovalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param approve Whether or not to approve the delegate.
         * 
         * @return builder
         * 
         */
        public Builder approve(Output<Boolean> approve) {
            $.approve = approve;
            return this;
        }

        /**
         * @param approve Whether or not to approve the delegate.
         * 
         * @return builder
         * 
         */
        public Builder approve(Boolean approve) {
            return approve(Output.of(approve));
        }

        /**
         * @param delegateId The id of the delegate.
         * 
         * @return builder
         * 
         */
        public Builder delegateId(Output<String> delegateId) {
            $.delegateId = delegateId;
            return this;
        }

        /**
         * @param delegateId The id of the delegate.
         * 
         * @return builder
         * 
         */
        public Builder delegateId(String delegateId) {
            return delegateId(Output.of(delegateId));
        }

        public DelegateApprovalArgs build() {
            if ($.approve == null) {
                throw new MissingRequiredPropertyException("DelegateApprovalArgs", "approve");
            }
            if ($.delegateId == null) {
                throw new MissingRequiredPropertyException("DelegateApprovalArgs", "delegateId");
            }
            return $;
        }
    }

}
