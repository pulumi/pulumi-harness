// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationOidcArgs;
import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationServiceAccountArgs;
import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationUsernamePasswordArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesAuthenticationArgs Empty = new KubernetesAuthenticationArgs();

    /**
     * Delegate selectors to inherit the GCP credentials from.
     * 
     */
    @Import(name="delegateSelectors")
    private @Nullable Output<List<String>> delegateSelectors;

    /**
     * @return Delegate selectors to inherit the GCP credentials from.
     * 
     */
    public Optional<Output<List<String>>> delegateSelectors() {
        return Optional.ofNullable(this.delegateSelectors);
    }

    /**
     * Service account configuration for connecting to the Kubernetes cluster
     * 
     */
    @Import(name="oidc")
    private @Nullable Output<KubernetesAuthenticationOidcArgs> oidc;

    /**
     * @return Service account configuration for connecting to the Kubernetes cluster
     * 
     */
    public Optional<Output<KubernetesAuthenticationOidcArgs>> oidc() {
        return Optional.ofNullable(this.oidc);
    }

    /**
     * Username and password for authentication to the cluster
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<KubernetesAuthenticationServiceAccountArgs> serviceAccount;

    /**
     * @return Username and password for authentication to the cluster
     * 
     */
    public Optional<Output<KubernetesAuthenticationServiceAccountArgs>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Username and password for authentication to the cluster
     * 
     */
    @Import(name="usernamePassword")
    private @Nullable Output<KubernetesAuthenticationUsernamePasswordArgs> usernamePassword;

    /**
     * @return Username and password for authentication to the cluster
     * 
     */
    public Optional<Output<KubernetesAuthenticationUsernamePasswordArgs>> usernamePassword() {
        return Optional.ofNullable(this.usernamePassword);
    }

    private KubernetesAuthenticationArgs() {}

    private KubernetesAuthenticationArgs(KubernetesAuthenticationArgs $) {
        this.delegateSelectors = $.delegateSelectors;
        this.oidc = $.oidc;
        this.serviceAccount = $.serviceAccount;
        this.usernamePassword = $.usernamePassword;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesAuthenticationArgs $;

        public Builder() {
            $ = new KubernetesAuthenticationArgs();
        }

        public Builder(KubernetesAuthenticationArgs defaults) {
            $ = new KubernetesAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegateSelectors Delegate selectors to inherit the GCP credentials from.
         * 
         * @return builder
         * 
         */
        public Builder delegateSelectors(@Nullable Output<List<String>> delegateSelectors) {
            $.delegateSelectors = delegateSelectors;
            return this;
        }

        /**
         * @param delegateSelectors Delegate selectors to inherit the GCP credentials from.
         * 
         * @return builder
         * 
         */
        public Builder delegateSelectors(List<String> delegateSelectors) {
            return delegateSelectors(Output.of(delegateSelectors));
        }

        /**
         * @param delegateSelectors Delegate selectors to inherit the GCP credentials from.
         * 
         * @return builder
         * 
         */
        public Builder delegateSelectors(String... delegateSelectors) {
            return delegateSelectors(List.of(delegateSelectors));
        }

        /**
         * @param oidc Service account configuration for connecting to the Kubernetes cluster
         * 
         * @return builder
         * 
         */
        public Builder oidc(@Nullable Output<KubernetesAuthenticationOidcArgs> oidc) {
            $.oidc = oidc;
            return this;
        }

        /**
         * @param oidc Service account configuration for connecting to the Kubernetes cluster
         * 
         * @return builder
         * 
         */
        public Builder oidc(KubernetesAuthenticationOidcArgs oidc) {
            return oidc(Output.of(oidc));
        }

        /**
         * @param serviceAccount Username and password for authentication to the cluster
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<KubernetesAuthenticationServiceAccountArgs> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Username and password for authentication to the cluster
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(KubernetesAuthenticationServiceAccountArgs serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param usernamePassword Username and password for authentication to the cluster
         * 
         * @return builder
         * 
         */
        public Builder usernamePassword(@Nullable Output<KubernetesAuthenticationUsernamePasswordArgs> usernamePassword) {
            $.usernamePassword = usernamePassword;
            return this;
        }

        /**
         * @param usernamePassword Username and password for authentication to the cluster
         * 
         * @return builder
         * 
         */
        public Builder usernamePassword(KubernetesAuthenticationUsernamePasswordArgs usernamePassword) {
            return usernamePassword(Output.of(usernamePassword));
        }

        public KubernetesAuthenticationArgs build() {
            return $;
        }
    }

}
