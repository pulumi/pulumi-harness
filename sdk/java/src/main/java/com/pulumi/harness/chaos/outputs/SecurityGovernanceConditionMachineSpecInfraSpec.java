// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SecurityGovernanceConditionMachineSpecInfraSpec {
    /**
     * @return List of infrastructure IDs to apply the condition to
     * 
     */
    private List<String> infraIds;
    /**
     * @return Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
     * 
     */
    private String operator;

    private SecurityGovernanceConditionMachineSpecInfraSpec() {}
    /**
     * @return List of infrastructure IDs to apply the condition to
     * 
     */
    public List<String> infraIds() {
        return this.infraIds;
    }
    /**
     * @return Operator for comparing infrastructure IDs (EQUAL*TO or NOT*EQUAL_TO)
     * 
     */
    public String operator() {
        return this.operator;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGovernanceConditionMachineSpecInfraSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> infraIds;
        private String operator;
        public Builder() {}
        public Builder(SecurityGovernanceConditionMachineSpecInfraSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.infraIds = defaults.infraIds;
    	      this.operator = defaults.operator;
        }

        @CustomType.Setter
        public Builder infraIds(List<String> infraIds) {
            if (infraIds == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceConditionMachineSpecInfraSpec", "infraIds");
            }
            this.infraIds = infraIds;
            return this;
        }
        public Builder infraIds(String... infraIds) {
            return infraIds(List.of(infraIds));
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            if (operator == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceConditionMachineSpecInfraSpec", "operator");
            }
            this.operator = operator;
            return this;
        }
        public SecurityGovernanceConditionMachineSpecInfraSpec build() {
            final var _resultValue = new SecurityGovernanceConditionMachineSpecInfraSpec();
            _resultValue.infraIds = infraIds;
            _resultValue.operator = operator;
            return _resultValue;
        }
    }
}
