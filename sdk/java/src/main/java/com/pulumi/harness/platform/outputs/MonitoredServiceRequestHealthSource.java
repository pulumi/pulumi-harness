// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredServiceRequestHealthSource {
    /**
     * @return Identifier of the health source.
     * 
     */
    private String identifier;
    /**
     * @return Name of the health source.
     * 
     */
    private String name;
    /**
     * @return Specification of the health source. Depends on the type of the health source.
     * 
     */
    private String spec;
    /**
     * @return Type of the health source.
     * 
     */
    private String type;
    /**
     * @return Version of the health source.
     * 
     */
    private @Nullable String version;

    private MonitoredServiceRequestHealthSource() {}
    /**
     * @return Identifier of the health source.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Name of the health source.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specification of the health source. Depends on the type of the health source.
     * 
     */
    public String spec() {
        return this.spec;
    }
    /**
     * @return Type of the health source.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the health source.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredServiceRequestHealthSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String identifier;
        private String name;
        private String spec;
        private String type;
        private @Nullable String version;
        public Builder() {}
        public Builder(MonitoredServiceRequestHealthSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identifier = defaults.identifier;
    	      this.name = defaults.name;
    	      this.spec = defaults.spec;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestHealthSource", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestHealthSource", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder spec(String spec) {
            if (spec == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestHealthSource", "spec");
            }
            this.spec = spec;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestHealthSource", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public MonitoredServiceRequestHealthSource build() {
            final var _resultValue = new MonitoredServiceRequestHealthSource();
            _resultValue.identifier = identifier;
            _resultValue.name = name;
            _resultValue.spec = spec;
            _resultValue.type = type;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
