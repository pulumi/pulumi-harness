// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.service.inputs.GetDiscoveryAgentArgs;
import com.pulumi.harness.service.inputs.GetDiscoveryAgentPlainArgs;
import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
import com.pulumi.harness.service.inputs.GetDiscoverySettingPlainArgs;
import com.pulumi.harness.service.outputs.GetDiscoveryAgentResult;
import com.pulumi.harness.service.outputs.GetDiscoverySettingResult;
import java.util.concurrent.CompletableFuture;

public final class ServiceFunctions {
    /**
     * Data source for retrieving a Harness Service Discovery Agent.
     * 
     * This data source allows you to fetch details of a Service Discovery Agent using either its unique identifier or name.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoveryAgentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch a specific agent by name
     *         final var byName = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .name("example-agent")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByName", byName);
     *         // Data source to fetch a specific agent by identity
     *         final var byIdentity = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .identity("example-infra")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByIdentity", byIdentity);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoveryAgentResult> getDiscoveryAgent(GetDiscoveryAgentArgs args) {
        return getDiscoveryAgent(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness Service Discovery Agent.
     * 
     * This data source allows you to fetch details of a Service Discovery Agent using either its unique identifier or name.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoveryAgentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch a specific agent by name
     *         final var byName = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .name("example-agent")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByName", byName);
     *         // Data source to fetch a specific agent by identity
     *         final var byIdentity = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .identity("example-infra")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByIdentity", byIdentity);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiscoveryAgentResult> getDiscoveryAgentPlain(GetDiscoveryAgentPlainArgs args) {
        return getDiscoveryAgentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness Service Discovery Agent.
     * 
     * This data source allows you to fetch details of a Service Discovery Agent using either its unique identifier or name.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoveryAgentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch a specific agent by name
     *         final var byName = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .name("example-agent")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByName", byName);
     *         // Data source to fetch a specific agent by identity
     *         final var byIdentity = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .identity("example-infra")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByIdentity", byIdentity);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoveryAgentResult> getDiscoveryAgent(GetDiscoveryAgentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:service/getDiscoveryAgent:getDiscoveryAgent", TypeShape.of(GetDiscoveryAgentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness Service Discovery Agent.
     * 
     * This data source allows you to fetch details of a Service Discovery Agent using either its unique identifier or name.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoveryAgentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch a specific agent by name
     *         final var byName = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .name("example-agent")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByName", byName);
     *         // Data source to fetch a specific agent by identity
     *         final var byIdentity = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .identity("example-infra")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByIdentity", byIdentity);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoveryAgentResult> getDiscoveryAgent(GetDiscoveryAgentArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:service/getDiscoveryAgent:getDiscoveryAgent", TypeShape.of(GetDiscoveryAgentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness Service Discovery Agent.
     * 
     * This data source allows you to fetch details of a Service Discovery Agent using either its unique identifier or name.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoveryAgentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch a specific agent by name
     *         final var byName = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .name("example-agent")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByName", byName);
     *         // Data source to fetch a specific agent by identity
     *         final var byIdentity = ServiceFunctions.getDiscoveryAgent(GetDiscoveryAgentArgs.builder()
     *             .identity("example-infra")
     *             .orgIdentifier(orgIdentifier)
     *             .projectIdentifier(projectIdentifier)
     *             .environmentIdentifier(environmentIdentifier)
     *             .build());
     * 
     *         ctx.export("agentDetailsByIdentity", byIdentity);
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiscoveryAgentResult> getDiscoveryAgentPlain(GetDiscoveryAgentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:service/getDiscoveryAgent:getDiscoveryAgent", TypeShape.of(GetDiscoveryAgentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoverySettingResult> getDiscoverySetting() {
        return getDiscoverySetting(GetDiscoverySettingArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiscoverySettingResult> getDiscoverySettingPlain() {
        return getDiscoverySettingPlain(GetDiscoverySettingPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoverySettingResult> getDiscoverySetting(GetDiscoverySettingArgs args) {
        return getDiscoverySetting(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiscoverySettingResult> getDiscoverySettingPlain(GetDiscoverySettingPlainArgs args) {
        return getDiscoverySettingPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoverySettingResult> getDiscoverySetting(GetDiscoverySettingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:service/getDiscoverySetting:getDiscoverySetting", TypeShape.of(GetDiscoverySettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiscoverySettingResult> getDiscoverySetting(GetDiscoverySettingArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("harness:service/getDiscoverySetting:getDiscoverySetting", TypeShape.of(GetDiscoverySettingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service discovery settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.service.ServiceFunctions;
     * import com.pulumi.harness.service.inputs.GetDiscoverySettingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Data source to fetch service discovery setting by name
     *         final var example = ServiceFunctions.getDiscoverySetting(GetDiscoverySettingArgs.builder()
     *             .orgIdentifier("<org_identifier>")
     *             .projectIdentifier("<project_identifier>")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiscoverySettingResult> getDiscoverySettingPlain(GetDiscoverySettingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:service/getDiscoverySetting:getDiscoverySetting", TypeShape.of(GetDiscoverySettingResult.class), args, Utilities.withVersion(options));
    }
}
