// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.AzureCloudCostConnectorBillingExportSpec2Args;
import com.pulumi.harness.platform.inputs.AzureCloudCostConnectorBillingExportSpecArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureCloudCostConnectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureCloudCostConnectorArgs Empty = new AzureCloudCostConnectorArgs();

    /**
     * Returns billing details for the Azure account.
     * 
     */
    @Import(name="billingExportSpec")
    private @Nullable Output<AzureCloudCostConnectorBillingExportSpecArgs> billingExportSpec;

    /**
     * @return Returns billing details for the Azure account.
     * 
     */
    public Optional<Output<AzureCloudCostConnectorBillingExportSpecArgs>> billingExportSpec() {
        return Optional.ofNullable(this.billingExportSpec);
    }

    /**
     * Returns billing details for the Azure account.
     * 
     */
    @Import(name="billingExportSpec2")
    private @Nullable Output<AzureCloudCostConnectorBillingExportSpec2Args> billingExportSpec2;

    /**
     * @return Returns billing details for the Azure account.
     * 
     */
    public Optional<Output<AzureCloudCostConnectorBillingExportSpec2Args>> billingExportSpec2() {
        return Optional.ofNullable(this.billingExportSpec2);
    }

    /**
     * Description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
     * 
     */
    @Import(name="featuresEnableds", required=true)
    private Output<List<String>> featuresEnableds;

    /**
     * @return Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
     * 
     */
    public Output<List<String>> featuresEnableds() {
        return this.featuresEnableds;
    }

    /**
     * Unique identifier of the resource.
     * 
     */
    @Import(name="identifier", required=true)
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }

    /**
     * Name of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique identifier of the organization.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Unique identifier of the project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Subsription id.
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return Subsription id.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Tags to associate with the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Tenant id.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return Tenant id.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private AzureCloudCostConnectorArgs() {}

    private AzureCloudCostConnectorArgs(AzureCloudCostConnectorArgs $) {
        this.billingExportSpec = $.billingExportSpec;
        this.billingExportSpec2 = $.billingExportSpec2;
        this.description = $.description;
        this.featuresEnableds = $.featuresEnableds;
        this.identifier = $.identifier;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.subscriptionId = $.subscriptionId;
        this.tags = $.tags;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureCloudCostConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureCloudCostConnectorArgs $;

        public Builder() {
            $ = new AzureCloudCostConnectorArgs();
        }

        public Builder(AzureCloudCostConnectorArgs defaults) {
            $ = new AzureCloudCostConnectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param billingExportSpec Returns billing details for the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder billingExportSpec(@Nullable Output<AzureCloudCostConnectorBillingExportSpecArgs> billingExportSpec) {
            $.billingExportSpec = billingExportSpec;
            return this;
        }

        /**
         * @param billingExportSpec Returns billing details for the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder billingExportSpec(AzureCloudCostConnectorBillingExportSpecArgs billingExportSpec) {
            return billingExportSpec(Output.of(billingExportSpec));
        }

        /**
         * @param billingExportSpec2 Returns billing details for the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder billingExportSpec2(@Nullable Output<AzureCloudCostConnectorBillingExportSpec2Args> billingExportSpec2) {
            $.billingExportSpec2 = billingExportSpec2;
            return this;
        }

        /**
         * @param billingExportSpec2 Returns billing details for the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder billingExportSpec2(AzureCloudCostConnectorBillingExportSpec2Args billingExportSpec2) {
            return billingExportSpec2(Output.of(billingExportSpec2));
        }

        /**
         * @param description Description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featuresEnableds Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
         * 
         * @return builder
         * 
         */
        public Builder featuresEnableds(Output<List<String>> featuresEnableds) {
            $.featuresEnableds = featuresEnableds;
            return this;
        }

        /**
         * @param featuresEnableds Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
         * 
         * @return builder
         * 
         */
        public Builder featuresEnableds(List<String> featuresEnableds) {
            return featuresEnableds(Output.of(featuresEnableds));
        }

        /**
         * @param featuresEnableds Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
         * 
         * @return builder
         * 
         */
        public Builder featuresEnableds(String... featuresEnableds) {
            return featuresEnableds(List.of(featuresEnableds));
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Unique identifier of the resource.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId Unique identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId Unique identifier of the organization.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param projectId Unique identifier of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Unique identifier of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param subscriptionId Subsription id.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Subsription id.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags to associate with the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenantId Tenant id.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Tenant id.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public AzureCloudCostConnectorArgs build() {
            if ($.featuresEnableds == null) {
                throw new MissingRequiredPropertyException("AzureCloudCostConnectorArgs", "featuresEnableds");
            }
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("AzureCloudCostConnectorArgs", "identifier");
            }
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("AzureCloudCostConnectorArgs", "subscriptionId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("AzureCloudCostConnectorArgs", "tenantId");
            }
            return $;
        }
    }

}
