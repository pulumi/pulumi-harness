// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.ResourceGroupResourceFilterResourceArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceGroupResourceFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceGroupResourceFilterArgs Empty = new ResourceGroupResourceFilterArgs();

    /**
     * Include all resource or not
     * 
     */
    @Import(name="includeAllResources")
    private @Nullable Output<Boolean> includeAllResources;

    /**
     * @return Include all resource or not
     * 
     */
    public Optional<Output<Boolean>> includeAllResources() {
        return Optional.ofNullable(this.includeAllResources);
    }

    /**
     * Resources for a resource group
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<ResourceGroupResourceFilterResourceArgs>> resources;

    /**
     * @return Resources for a resource group
     * 
     */
    public Optional<Output<List<ResourceGroupResourceFilterResourceArgs>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    private ResourceGroupResourceFilterArgs() {}

    private ResourceGroupResourceFilterArgs(ResourceGroupResourceFilterArgs $) {
        this.includeAllResources = $.includeAllResources;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceGroupResourceFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceGroupResourceFilterArgs $;

        public Builder() {
            $ = new ResourceGroupResourceFilterArgs();
        }

        public Builder(ResourceGroupResourceFilterArgs defaults) {
            $ = new ResourceGroupResourceFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param includeAllResources Include all resource or not
         * 
         * @return builder
         * 
         */
        public Builder includeAllResources(@Nullable Output<Boolean> includeAllResources) {
            $.includeAllResources = includeAllResources;
            return this;
        }

        /**
         * @param includeAllResources Include all resource or not
         * 
         * @return builder
         * 
         */
        public Builder includeAllResources(Boolean includeAllResources) {
            return includeAllResources(Output.of(includeAllResources));
        }

        /**
         * @param resources Resources for a resource group
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<ResourceGroupResourceFilterResourceArgs>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources Resources for a resource group
         * 
         * @return builder
         * 
         */
        public Builder resources(List<ResourceGroupResourceFilterResourceArgs> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources Resources for a resource group
         * 
         * @return builder
         * 
         */
        public Builder resources(ResourceGroupResourceFilterResourceArgs... resources) {
            return resources(List.of(resources));
        }

        public ResourceGroupResourceFilterArgs build() {
            return $;
        }
    }

}
