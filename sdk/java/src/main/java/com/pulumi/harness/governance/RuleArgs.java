// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.governance;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleArgs Empty = new RuleArgs();

    /**
     * The cloud provider for the rule. It should be either AWS, AZURE or GCP.
     * 
     */
    @Import(name="cloudProvider", required=true)
    private Output<String> cloudProvider;

    /**
     * @return The cloud provider for the rule. It should be either AWS, AZURE or GCP.
     * 
     */
    public Output<String> cloudProvider() {
        return this.cloudProvider;
    }

    /**
     * Description for rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the rule.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the rule.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The policy YAML of the rule
     * 
     */
    @Import(name="rulesYaml", required=true)
    private Output<String> rulesYaml;

    /**
     * @return The policy YAML of the rule
     * 
     */
    public Output<String> rulesYaml() {
        return this.rulesYaml;
    }

    private RuleArgs() {}

    private RuleArgs(RuleArgs $) {
        this.cloudProvider = $.cloudProvider;
        this.description = $.description;
        this.name = $.name;
        this.rulesYaml = $.rulesYaml;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleArgs $;

        public Builder() {
            $ = new RuleArgs();
        }

        public Builder(RuleArgs defaults) {
            $ = new RuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider The cloud provider for the rule. It should be either AWS, AZURE or GCP.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider The cloud provider for the rule. It should be either AWS, AZURE or GCP.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        /**
         * @param description Description for rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rulesYaml The policy YAML of the rule
         * 
         * @return builder
         * 
         */
        public Builder rulesYaml(Output<String> rulesYaml) {
            $.rulesYaml = rulesYaml;
            return this;
        }

        /**
         * @param rulesYaml The policy YAML of the rule
         * 
         * @return builder
         * 
         */
        public Builder rulesYaml(String rulesYaml) {
            return rulesYaml(Output.of(rulesYaml));
        }

        public RuleArgs build() {
            if ($.cloudProvider == null) {
                throw new MissingRequiredPropertyException("RuleArgs", "cloudProvider");
            }
            if ($.rulesYaml == null) {
                throw new MissingRequiredPropertyException("RuleArgs", "rulesYaml");
            }
            return $;
        }
    }

}
