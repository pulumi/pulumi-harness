// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs Empty = new GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs();

    /**
     * Indicates to allows apps to have zero live resources (default: false).
     * 
     */
    @Import(name="allowEmpty")
    private @Nullable Output<Boolean> allowEmpty;

    /**
     * @return Indicates to allows apps to have zero live resources (default: false).
     * 
     */
    public Optional<Output<Boolean>> allowEmpty() {
        return Optional.ofNullable(this.allowEmpty);
    }

    /**
     * Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
     * 
     */
    @Import(name="prune")
    private @Nullable Output<Boolean> prune;

    /**
     * @return Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
     * 
     */
    public Optional<Output<Boolean>> prune() {
        return Optional.ofNullable(this.prune);
    }

    /**
     * Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
     * 
     */
    @Import(name="selfHeal")
    private @Nullable Output<Boolean> selfHeal;

    /**
     * @return Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
     * 
     */
    public Optional<Output<Boolean>> selfHeal() {
        return Optional.ofNullable(this.selfHeal);
    }

    private GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs() {}

    private GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs(GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs $) {
        this.allowEmpty = $.allowEmpty;
        this.prune = $.prune;
        this.selfHeal = $.selfHeal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs $;

        public Builder() {
            $ = new GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs();
        }

        public Builder(GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs defaults) {
            $ = new GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowEmpty Indicates to allows apps to have zero live resources (default: false).
         * 
         * @return builder
         * 
         */
        public Builder allowEmpty(@Nullable Output<Boolean> allowEmpty) {
            $.allowEmpty = allowEmpty;
            return this;
        }

        /**
         * @param allowEmpty Indicates to allows apps to have zero live resources (default: false).
         * 
         * @return builder
         * 
         */
        public Builder allowEmpty(Boolean allowEmpty) {
            return allowEmpty(Output.of(allowEmpty));
        }

        /**
         * @param prune Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
         * 
         * @return builder
         * 
         */
        public Builder prune(@Nullable Output<Boolean> prune) {
            $.prune = prune;
            return this;
        }

        /**
         * @param prune Indicates whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false).
         * 
         * @return builder
         * 
         */
        public Builder prune(Boolean prune) {
            return prune(Output.of(prune));
        }

        /**
         * @param selfHeal Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
         * 
         * @return builder
         * 
         */
        public Builder selfHeal(@Nullable Output<Boolean> selfHeal) {
            $.selfHeal = selfHeal;
            return this;
        }

        /**
         * @param selfHeal Indicates whether to revert resources back to their desired state upon modification in the cluster (default: false).
         * 
         * @return builder
         * 
         */
        public Builder selfHeal(Boolean selfHeal) {
            return selfHeal(Output.of(selfHeal));
        }

        public GitOpsApplicationsApplicationSpecSyncPolicyAutomatedArgs build() {
            return $;
        }
    }

}
