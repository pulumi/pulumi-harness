// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceOverridesV2GitDetails {
    /**
     * @return Name of the branch.
     * 
     */
    private String branch;
    /**
     * @return Load service yaml from fallback branch
     * 
     */
    private Boolean loadFromCache;
    /**
     * @return Load service yaml from fallback branch
     * 
     */
    private Boolean loadFromFallbackBranch;
    /**
     * @return Repo name of remote service override
     * 
     */
    private String repoName;

    private GetServiceOverridesV2GitDetails() {}
    /**
     * @return Name of the branch.
     * 
     */
    public String branch() {
        return this.branch;
    }
    /**
     * @return Load service yaml from fallback branch
     * 
     */
    public Boolean loadFromCache() {
        return this.loadFromCache;
    }
    /**
     * @return Load service yaml from fallback branch
     * 
     */
    public Boolean loadFromFallbackBranch() {
        return this.loadFromFallbackBranch;
    }
    /**
     * @return Repo name of remote service override
     * 
     */
    public String repoName() {
        return this.repoName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceOverridesV2GitDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String branch;
        private Boolean loadFromCache;
        private Boolean loadFromFallbackBranch;
        private String repoName;
        public Builder() {}
        public Builder(GetServiceOverridesV2GitDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.loadFromCache = defaults.loadFromCache;
    	      this.loadFromFallbackBranch = defaults.loadFromFallbackBranch;
    	      this.repoName = defaults.repoName;
        }

        @CustomType.Setter
        public Builder branch(String branch) {
            if (branch == null) {
              throw new MissingRequiredPropertyException("GetServiceOverridesV2GitDetails", "branch");
            }
            this.branch = branch;
            return this;
        }
        @CustomType.Setter
        public Builder loadFromCache(Boolean loadFromCache) {
            if (loadFromCache == null) {
              throw new MissingRequiredPropertyException("GetServiceOverridesV2GitDetails", "loadFromCache");
            }
            this.loadFromCache = loadFromCache;
            return this;
        }
        @CustomType.Setter
        public Builder loadFromFallbackBranch(Boolean loadFromFallbackBranch) {
            if (loadFromFallbackBranch == null) {
              throw new MissingRequiredPropertyException("GetServiceOverridesV2GitDetails", "loadFromFallbackBranch");
            }
            this.loadFromFallbackBranch = loadFromFallbackBranch;
            return this;
        }
        @CustomType.Setter
        public Builder repoName(String repoName) {
            if (repoName == null) {
              throw new MissingRequiredPropertyException("GetServiceOverridesV2GitDetails", "repoName");
            }
            this.repoName = repoName;
            return this;
        }
        public GetServiceOverridesV2GitDetails build() {
            final var _resultValue = new GetServiceOverridesV2GitDetails();
            _resultValue.branch = branch;
            _resultValue.loadFromCache = loadFromCache;
            _resultValue.loadFromFallbackBranch = loadFromFallbackBranch;
            _resultValue.repoName = repoName;
            return _resultValue;
        }
    }
}
