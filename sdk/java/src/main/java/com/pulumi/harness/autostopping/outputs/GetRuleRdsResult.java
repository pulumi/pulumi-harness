// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.autostopping.outputs.GetRuleRdsDatabase;
import com.pulumi.harness.autostopping.outputs.GetRuleRdsDepend;
import com.pulumi.harness.autostopping.outputs.GetRuleRdsTcp;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRuleRdsResult {
    /**
     * @return Id of the cloud connector
     * 
     */
    private String cloudConnectorId;
    private GetRuleRdsDatabase database;
    /**
     * @return Dependent rules
     * 
     */
    private @Nullable List<GetRuleRdsDepend> depends;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the resource
     * 
     */
    private Double identifier;
    /**
     * @return Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
     * 
     */
    private @Nullable Integer idleTimeMins;
    /**
     * @return Name of the rule
     * 
     */
    private String name;
    /**
     * @return TCP routing configuration
     * 
     */
    private @Nullable List<GetRuleRdsTcp> tcps;

    private GetRuleRdsResult() {}
    /**
     * @return Id of the cloud connector
     * 
     */
    public String cloudConnectorId() {
        return this.cloudConnectorId;
    }
    public GetRuleRdsDatabase database() {
        return this.database;
    }
    /**
     * @return Dependent rules
     * 
     */
    public List<GetRuleRdsDepend> depends() {
        return this.depends == null ? List.of() : this.depends;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the resource
     * 
     */
    public Double identifier() {
        return this.identifier;
    }
    /**
     * @return Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
     * 
     */
    public Optional<Integer> idleTimeMins() {
        return Optional.ofNullable(this.idleTimeMins);
    }
    /**
     * @return Name of the rule
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return TCP routing configuration
     * 
     */
    public List<GetRuleRdsTcp> tcps() {
        return this.tcps == null ? List.of() : this.tcps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleRdsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudConnectorId;
        private GetRuleRdsDatabase database;
        private @Nullable List<GetRuleRdsDepend> depends;
        private String id;
        private Double identifier;
        private @Nullable Integer idleTimeMins;
        private String name;
        private @Nullable List<GetRuleRdsTcp> tcps;
        public Builder() {}
        public Builder(GetRuleRdsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudConnectorId = defaults.cloudConnectorId;
    	      this.database = defaults.database;
    	      this.depends = defaults.depends;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.idleTimeMins = defaults.idleTimeMins;
    	      this.name = defaults.name;
    	      this.tcps = defaults.tcps;
        }

        @CustomType.Setter
        public Builder cloudConnectorId(String cloudConnectorId) {
            if (cloudConnectorId == null) {
              throw new MissingRequiredPropertyException("GetRuleRdsResult", "cloudConnectorId");
            }
            this.cloudConnectorId = cloudConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder database(GetRuleRdsDatabase database) {
            if (database == null) {
              throw new MissingRequiredPropertyException("GetRuleRdsResult", "database");
            }
            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder depends(@Nullable List<GetRuleRdsDepend> depends) {

            this.depends = depends;
            return this;
        }
        public Builder depends(GetRuleRdsDepend... depends) {
            return depends(List.of(depends));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRuleRdsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(Double identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetRuleRdsResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeMins(@Nullable Integer idleTimeMins) {

            this.idleTimeMins = idleTimeMins;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRuleRdsResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tcps(@Nullable List<GetRuleRdsTcp> tcps) {

            this.tcps = tcps;
            return this;
        }
        public Builder tcps(GetRuleRdsTcp... tcps) {
            return tcps(List.of(tcps));
        }
        public GetRuleRdsResult build() {
            final var _resultValue = new GetRuleRdsResult();
            _resultValue.cloudConnectorId = cloudConnectorId;
            _resultValue.database = database;
            _resultValue.depends = depends;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.idleTimeMins = idleTimeMins;
            _resultValue.name = name;
            _resultValue.tcps = tcps;
            return _resultValue;
        }
    }
}
