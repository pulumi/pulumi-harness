// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDbSchemaSchemaSource {
    /**
     * @return If connector type is artifactory, path to the archive file which contains the changeLog
     * 
     */
    private String archivePath;
    /**
     * @return Connector to repository at which to find details about the database schema
     * 
     */
    private String connector;
    /**
     * @return The path within the specified repository at which to find details about the database schema
     * 
     */
    private String location;
    /**
     * @return If connector url is of account, which repository to connect to using the connector
     * 
     */
    private String repo;

    private GetDbSchemaSchemaSource() {}
    /**
     * @return If connector type is artifactory, path to the archive file which contains the changeLog
     * 
     */
    public String archivePath() {
        return this.archivePath;
    }
    /**
     * @return Connector to repository at which to find details about the database schema
     * 
     */
    public String connector() {
        return this.connector;
    }
    /**
     * @return The path within the specified repository at which to find details about the database schema
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return If connector url is of account, which repository to connect to using the connector
     * 
     */
    public String repo() {
        return this.repo;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSchemaSchemaSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archivePath;
        private String connector;
        private String location;
        private String repo;
        public Builder() {}
        public Builder(GetDbSchemaSchemaSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archivePath = defaults.archivePath;
    	      this.connector = defaults.connector;
    	      this.location = defaults.location;
    	      this.repo = defaults.repo;
        }

        @CustomType.Setter
        public Builder archivePath(String archivePath) {
            if (archivePath == null) {
              throw new MissingRequiredPropertyException("GetDbSchemaSchemaSource", "archivePath");
            }
            this.archivePath = archivePath;
            return this;
        }
        @CustomType.Setter
        public Builder connector(String connector) {
            if (connector == null) {
              throw new MissingRequiredPropertyException("GetDbSchemaSchemaSource", "connector");
            }
            this.connector = connector;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetDbSchemaSchemaSource", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder repo(String repo) {
            if (repo == null) {
              throw new MissingRequiredPropertyException("GetDbSchemaSchemaSource", "repo");
            }
            this.repo = repo;
            return this;
        }
        public GetDbSchemaSchemaSource build() {
            final var _resultValue = new GetDbSchemaSchemaSource();
            _resultValue.archivePath = archivePath;
            _resultValue.connector = connector;
            _resultValue.location = location;
            _resultValue.repo = repo;
            return _resultValue;
        }
    }
}
