// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationRuleRequestConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationRuleRequestConditionArgs Empty = new NotificationRuleRequestConditionArgs();

    /**
     * Specification of the notification condition. Depends on the type of the notification condition.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<String> spec;

    /**
     * @return Specification of the notification condition. Depends on the type of the notification condition.
     * 
     */
    public Optional<Output<String>> spec() {
        return Optional.ofNullable(this.spec);
    }

    /**
     * Type of the condition.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of the condition.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private NotificationRuleRequestConditionArgs() {}

    private NotificationRuleRequestConditionArgs(NotificationRuleRequestConditionArgs $) {
        this.spec = $.spec;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationRuleRequestConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationRuleRequestConditionArgs $;

        public Builder() {
            $ = new NotificationRuleRequestConditionArgs();
        }

        public Builder(NotificationRuleRequestConditionArgs defaults) {
            $ = new NotificationRuleRequestConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param spec Specification of the notification condition. Depends on the type of the notification condition.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<String> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Specification of the notification condition. Depends on the type of the notification condition.
         * 
         * @return builder
         * 
         */
        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        /**
         * @param type Type of the condition.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the condition.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NotificationRuleRequestConditionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("NotificationRuleRequestConditionArgs", "type");
            }
            return $;
        }
    }

}
