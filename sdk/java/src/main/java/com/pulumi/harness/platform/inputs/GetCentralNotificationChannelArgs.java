// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GetCentralNotificationChannelChannelArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCentralNotificationChannelArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCentralNotificationChannelArgs Empty = new GetCentralNotificationChannelArgs();

    /**
     * Account identifier associated with this notification channel.
     * 
     */
    @Import(name="account")
    private @Nullable Output<String> account;

    /**
     * @return Account identifier associated with this notification channel.
     * 
     */
    public Optional<Output<String>> account() {
        return Optional.ofNullable(this.account);
    }

    /**
     * Configuration details of the notification channel.
     * 
     */
    @Import(name="channels")
    private @Nullable Output<List<GetCentralNotificationChannelChannelArgs>> channels;

    /**
     * @return Configuration details of the notification channel.
     * 
     */
    public Optional<Output<List<GetCentralNotificationChannelChannelArgs>>> channels() {
        return Optional.ofNullable(this.channels);
    }

    /**
     * Timestamp when the notification channel was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<Integer> created;

    /**
     * @return Timestamp when the notification channel was created.
     * 
     */
    public Optional<Output<Integer>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * Unique identifier of the notification channel.
     * 
     */
    @Import(name="identifier", required=true)
    private Output<String> identifier;

    /**
     * @return Unique identifier of the notification channel.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }

    /**
     * Timestamp when the notification channel was last modified.
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<Integer> lastModified;

    /**
     * @return Timestamp when the notification channel was last modified.
     * 
     */
    public Optional<Output<Integer>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * Name of the notification channel.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the notification channel.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
     * 
     */
    @Import(name="notificationChannelType")
    private @Nullable Output<String> notificationChannelType;

    /**
     * @return Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
     * 
     */
    public Optional<Output<String>> notificationChannelType() {
        return Optional.ofNullable(this.notificationChannelType);
    }

    /**
     * Identifier of the organization the notification channel is scoped to.
     * 
     */
    @Import(name="org")
    private @Nullable Output<String> org;

    /**
     * @return Identifier of the organization the notification channel is scoped to.
     * 
     */
    public Optional<Output<String>> org() {
        return Optional.ofNullable(this.org);
    }

    /**
     * Identifier of the project the notification channel is scoped to.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Identifier of the project the notification channel is scoped to.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Status of the notification channel. Possible values are ENABLED or DISABLED.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the notification channel. Possible values are ENABLED or DISABLED.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetCentralNotificationChannelArgs() {}

    private GetCentralNotificationChannelArgs(GetCentralNotificationChannelArgs $) {
        this.account = $.account;
        this.channels = $.channels;
        this.created = $.created;
        this.identifier = $.identifier;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.notificationChannelType = $.notificationChannelType;
        this.org = $.org;
        this.project = $.project;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCentralNotificationChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCentralNotificationChannelArgs $;

        public Builder() {
            $ = new GetCentralNotificationChannelArgs();
        }

        public Builder(GetCentralNotificationChannelArgs defaults) {
            $ = new GetCentralNotificationChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param account Account identifier associated with this notification channel.
         * 
         * @return builder
         * 
         */
        public Builder account(@Nullable Output<String> account) {
            $.account = account;
            return this;
        }

        /**
         * @param account Account identifier associated with this notification channel.
         * 
         * @return builder
         * 
         */
        public Builder account(String account) {
            return account(Output.of(account));
        }

        /**
         * @param channels Configuration details of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder channels(@Nullable Output<List<GetCentralNotificationChannelChannelArgs>> channels) {
            $.channels = channels;
            return this;
        }

        /**
         * @param channels Configuration details of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder channels(List<GetCentralNotificationChannelChannelArgs> channels) {
            return channels(Output.of(channels));
        }

        /**
         * @param channels Configuration details of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder channels(GetCentralNotificationChannelChannelArgs... channels) {
            return channels(List.of(channels));
        }

        /**
         * @param created Timestamp when the notification channel was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<Integer> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created Timestamp when the notification channel was created.
         * 
         * @return builder
         * 
         */
        public Builder created(Integer created) {
            return created(Output.of(created));
        }

        /**
         * @param identifier Unique identifier of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Unique identifier of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param lastModified Timestamp when the notification channel was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<Integer> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified Timestamp when the notification channel was last modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(Integer lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param name Name of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the notification channel.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notificationChannelType Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
         * 
         * @return builder
         * 
         */
        public Builder notificationChannelType(@Nullable Output<String> notificationChannelType) {
            $.notificationChannelType = notificationChannelType;
            return this;
        }

        /**
         * @param notificationChannelType Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
         * 
         * @return builder
         * 
         */
        public Builder notificationChannelType(String notificationChannelType) {
            return notificationChannelType(Output.of(notificationChannelType));
        }

        /**
         * @param org Identifier of the organization the notification channel is scoped to.
         * 
         * @return builder
         * 
         */
        public Builder org(@Nullable Output<String> org) {
            $.org = org;
            return this;
        }

        /**
         * @param org Identifier of the organization the notification channel is scoped to.
         * 
         * @return builder
         * 
         */
        public Builder org(String org) {
            return org(Output.of(org));
        }

        /**
         * @param project Identifier of the project the notification channel is scoped to.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Identifier of the project the notification channel is scoped to.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param status Status of the notification channel. Possible values are ENABLED or DISABLED.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the notification channel. Possible values are ENABLED or DISABLED.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetCentralNotificationChannelArgs build() {
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("GetCentralNotificationChannelArgs", "identifier");
            }
            return $;
        }
    }

}
