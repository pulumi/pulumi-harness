// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.ConnectorAzureRepoCredentialsHttpArgs;
import com.pulumi.harness.platform.inputs.ConnectorAzureRepoCredentialsSshArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorAzureRepoCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorAzureRepoCredentialsArgs Empty = new ConnectorAzureRepoCredentialsArgs();

    /**
     * Authenticate using Username and token over http(s) for the connection.
     * 
     */
    @Import(name="http")
    private @Nullable Output<ConnectorAzureRepoCredentialsHttpArgs> http;

    /**
     * @return Authenticate using Username and token over http(s) for the connection.
     * 
     */
    public Optional<Output<ConnectorAzureRepoCredentialsHttpArgs>> http() {
        return Optional.ofNullable(this.http);
    }

    /**
     * Authenticate using SSH for the connection.
     * 
     */
    @Import(name="ssh")
    private @Nullable Output<ConnectorAzureRepoCredentialsSshArgs> ssh;

    /**
     * @return Authenticate using SSH for the connection.
     * 
     */
    public Optional<Output<ConnectorAzureRepoCredentialsSshArgs>> ssh() {
        return Optional.ofNullable(this.ssh);
    }

    private ConnectorAzureRepoCredentialsArgs() {}

    private ConnectorAzureRepoCredentialsArgs(ConnectorAzureRepoCredentialsArgs $) {
        this.http = $.http;
        this.ssh = $.ssh;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorAzureRepoCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorAzureRepoCredentialsArgs $;

        public Builder() {
            $ = new ConnectorAzureRepoCredentialsArgs();
        }

        public Builder(ConnectorAzureRepoCredentialsArgs defaults) {
            $ = new ConnectorAzureRepoCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param http Authenticate using Username and token over http(s) for the connection.
         * 
         * @return builder
         * 
         */
        public Builder http(@Nullable Output<ConnectorAzureRepoCredentialsHttpArgs> http) {
            $.http = http;
            return this;
        }

        /**
         * @param http Authenticate using Username and token over http(s) for the connection.
         * 
         * @return builder
         * 
         */
        public Builder http(ConnectorAzureRepoCredentialsHttpArgs http) {
            return http(Output.of(http));
        }

        /**
         * @param ssh Authenticate using SSH for the connection.
         * 
         * @return builder
         * 
         */
        public Builder ssh(@Nullable Output<ConnectorAzureRepoCredentialsSshArgs> ssh) {
            $.ssh = ssh;
            return this;
        }

        /**
         * @param ssh Authenticate using SSH for the connection.
         * 
         * @return builder
         * 
         */
        public Builder ssh(ConnectorAzureRepoCredentialsSshArgs ssh) {
            return ssh(Output.of(ssh));
        }

        public ConnectorAzureRepoCredentialsArgs build() {
            return $;
        }
    }

}
