// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GcpSecretManagerConnectorOidcAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GcpSecretManagerConnectorOidcAuthenticationArgs Empty = new GcpSecretManagerConnectorOidcAuthenticationArgs();

    /**
     * The project number of the GCP project that is used to create the workload identity.
     * 
     */
    @Import(name="gcpProjectId", required=true)
    private Output<String> gcpProjectId;

    /**
     * @return The project number of the GCP project that is used to create the workload identity.
     * 
     */
    public Output<String> gcpProjectId() {
        return this.gcpProjectId;
    }

    /**
     * The OIDC provider ID value configured in GCP.
     * 
     */
    @Import(name="providerId", required=true)
    private Output<String> providerId;

    /**
     * @return The OIDC provider ID value configured in GCP.
     * 
     */
    public Output<String> providerId() {
        return this.providerId;
    }

    /**
     * The service account linked to workload identity pool while setting GCP workload identity provider.
     * 
     */
    @Import(name="serviceAccountEmail", required=true)
    private Output<String> serviceAccountEmail;

    /**
     * @return The service account linked to workload identity pool while setting GCP workload identity provider.
     * 
     */
    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    /**
     * The workload pool ID value created in GCP.
     * 
     */
    @Import(name="workloadPoolId", required=true)
    private Output<String> workloadPoolId;

    /**
     * @return The workload pool ID value created in GCP.
     * 
     */
    public Output<String> workloadPoolId() {
        return this.workloadPoolId;
    }

    private GcpSecretManagerConnectorOidcAuthenticationArgs() {}

    private GcpSecretManagerConnectorOidcAuthenticationArgs(GcpSecretManagerConnectorOidcAuthenticationArgs $) {
        this.gcpProjectId = $.gcpProjectId;
        this.providerId = $.providerId;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.workloadPoolId = $.workloadPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GcpSecretManagerConnectorOidcAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GcpSecretManagerConnectorOidcAuthenticationArgs $;

        public Builder() {
            $ = new GcpSecretManagerConnectorOidcAuthenticationArgs();
        }

        public Builder(GcpSecretManagerConnectorOidcAuthenticationArgs defaults) {
            $ = new GcpSecretManagerConnectorOidcAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gcpProjectId The project number of the GCP project that is used to create the workload identity.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(Output<String> gcpProjectId) {
            $.gcpProjectId = gcpProjectId;
            return this;
        }

        /**
         * @param gcpProjectId The project number of the GCP project that is used to create the workload identity.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(String gcpProjectId) {
            return gcpProjectId(Output.of(gcpProjectId));
        }

        /**
         * @param providerId The OIDC provider ID value configured in GCP.
         * 
         * @return builder
         * 
         */
        public Builder providerId(Output<String> providerId) {
            $.providerId = providerId;
            return this;
        }

        /**
         * @param providerId The OIDC provider ID value configured in GCP.
         * 
         * @return builder
         * 
         */
        public Builder providerId(String providerId) {
            return providerId(Output.of(providerId));
        }

        /**
         * @param serviceAccountEmail The service account linked to workload identity pool while setting GCP workload identity provider.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param serviceAccountEmail The service account linked to workload identity pool while setting GCP workload identity provider.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        /**
         * @param workloadPoolId The workload pool ID value created in GCP.
         * 
         * @return builder
         * 
         */
        public Builder workloadPoolId(Output<String> workloadPoolId) {
            $.workloadPoolId = workloadPoolId;
            return this;
        }

        /**
         * @param workloadPoolId The workload pool ID value created in GCP.
         * 
         * @return builder
         * 
         */
        public Builder workloadPoolId(String workloadPoolId) {
            return workloadPoolId(Output.of(workloadPoolId));
        }

        public GcpSecretManagerConnectorOidcAuthenticationArgs build() {
            if ($.gcpProjectId == null) {
                throw new MissingRequiredPropertyException("GcpSecretManagerConnectorOidcAuthenticationArgs", "gcpProjectId");
            }
            if ($.providerId == null) {
                throw new MissingRequiredPropertyException("GcpSecretManagerConnectorOidcAuthenticationArgs", "providerId");
            }
            if ($.serviceAccountEmail == null) {
                throw new MissingRequiredPropertyException("GcpSecretManagerConnectorOidcAuthenticationArgs", "serviceAccountEmail");
            }
            if ($.workloadPoolId == null) {
                throw new MissingRequiredPropertyException("GcpSecretManagerConnectorOidcAuthenticationArgs", "workloadPoolId");
            }
            return $;
        }
    }

}
