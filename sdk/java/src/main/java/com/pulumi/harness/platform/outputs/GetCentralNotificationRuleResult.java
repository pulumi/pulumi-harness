// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetCentralNotificationRuleCustomNotificationTemplateRef;
import com.pulumi.harness.platform.outputs.GetCentralNotificationRuleNotificationCondition;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCentralNotificationRuleResult {
    /**
     * @return Account identifier associated with this notification channel.
     * 
     */
    private String account;
    /**
     * @return Timestamp when the notification rule was created.
     * 
     */
    private Integer created;
    private @Nullable GetCentralNotificationRuleCustomNotificationTemplateRef customNotificationTemplateRef;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Identifier of the Notification Rule.
     * 
     */
    private String identifier;
    /**
     * @return Timestamp when the notification rule was last modified.
     * 
     */
    private Integer lastModified;
    private @Nullable String name;
    private @Nullable List<String> notificationChannelRefs;
    private @Nullable List<GetCentralNotificationRuleNotificationCondition> notificationConditions;
    /**
     * @return Identifier of the organization in which the Notification Rule is configured.
     * 
     */
    private @Nullable String org;
    /**
     * @return Identifier of the project in which the Notification Rule is configured.
     * 
     */
    private @Nullable String project;
    private @Nullable String status;

    private GetCentralNotificationRuleResult() {}
    /**
     * @return Account identifier associated with this notification channel.
     * 
     */
    public String account() {
        return this.account;
    }
    /**
     * @return Timestamp when the notification rule was created.
     * 
     */
    public Integer created() {
        return this.created;
    }
    public Optional<GetCentralNotificationRuleCustomNotificationTemplateRef> customNotificationTemplateRef() {
        return Optional.ofNullable(this.customNotificationTemplateRef);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Identifier of the Notification Rule.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Timestamp when the notification rule was last modified.
     * 
     */
    public Integer lastModified() {
        return this.lastModified;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<String> notificationChannelRefs() {
        return this.notificationChannelRefs == null ? List.of() : this.notificationChannelRefs;
    }
    public List<GetCentralNotificationRuleNotificationCondition> notificationConditions() {
        return this.notificationConditions == null ? List.of() : this.notificationConditions;
    }
    /**
     * @return Identifier of the organization in which the Notification Rule is configured.
     * 
     */
    public Optional<String> org() {
        return Optional.ofNullable(this.org);
    }
    /**
     * @return Identifier of the project in which the Notification Rule is configured.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCentralNotificationRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String account;
        private Integer created;
        private @Nullable GetCentralNotificationRuleCustomNotificationTemplateRef customNotificationTemplateRef;
        private String id;
        private String identifier;
        private Integer lastModified;
        private @Nullable String name;
        private @Nullable List<String> notificationChannelRefs;
        private @Nullable List<GetCentralNotificationRuleNotificationCondition> notificationConditions;
        private @Nullable String org;
        private @Nullable String project;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetCentralNotificationRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.account = defaults.account;
    	      this.created = defaults.created;
    	      this.customNotificationTemplateRef = defaults.customNotificationTemplateRef;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.notificationChannelRefs = defaults.notificationChannelRefs;
    	      this.notificationConditions = defaults.notificationConditions;
    	      this.org = defaults.org;
    	      this.project = defaults.project;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder account(String account) {
            if (account == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleResult", "account");
            }
            this.account = account;
            return this;
        }
        @CustomType.Setter
        public Builder created(Integer created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder customNotificationTemplateRef(@Nullable GetCentralNotificationRuleCustomNotificationTemplateRef customNotificationTemplateRef) {

            this.customNotificationTemplateRef = customNotificationTemplateRef;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(Integer lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetCentralNotificationRuleResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notificationChannelRefs(@Nullable List<String> notificationChannelRefs) {

            this.notificationChannelRefs = notificationChannelRefs;
            return this;
        }
        public Builder notificationChannelRefs(String... notificationChannelRefs) {
            return notificationChannelRefs(List.of(notificationChannelRefs));
        }
        @CustomType.Setter
        public Builder notificationConditions(@Nullable List<GetCentralNotificationRuleNotificationCondition> notificationConditions) {

            this.notificationConditions = notificationConditions;
            return this;
        }
        public Builder notificationConditions(GetCentralNotificationRuleNotificationCondition... notificationConditions) {
            return notificationConditions(List.of(notificationConditions));
        }
        @CustomType.Setter
        public Builder org(@Nullable String org) {

            this.org = org;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetCentralNotificationRuleResult build() {
            final var _resultValue = new GetCentralNotificationRuleResult();
            _resultValue.account = account;
            _resultValue.created = created;
            _resultValue.customNotificationTemplateRef = customNotificationTemplateRef;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.notificationChannelRefs = notificationChannelRefs;
            _resultValue.notificationConditions = notificationConditions;
            _resultValue.org = org;
            _resultValue.project = project;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
