// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GitOpsRepoCertRequestCertificate;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitOpsRepoCertRequest {
    /**
     * @return certificates details.
     * 
     */
    private @Nullable List<GitOpsRepoCertRequestCertificate> certificates;
    /**
     * @return Indicates if the GitOps repository certificate should be updated if existing and inserted if not.
     * 
     */
    private @Nullable Boolean upsert;

    private GitOpsRepoCertRequest() {}
    /**
     * @return certificates details.
     * 
     */
    public List<GitOpsRepoCertRequestCertificate> certificates() {
        return this.certificates == null ? List.of() : this.certificates;
    }
    /**
     * @return Indicates if the GitOps repository certificate should be updated if existing and inserted if not.
     * 
     */
    public Optional<Boolean> upsert() {
        return Optional.ofNullable(this.upsert);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitOpsRepoCertRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GitOpsRepoCertRequestCertificate> certificates;
        private @Nullable Boolean upsert;
        public Builder() {}
        public Builder(GitOpsRepoCertRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificates = defaults.certificates;
    	      this.upsert = defaults.upsert;
        }

        @CustomType.Setter
        public Builder certificates(@Nullable List<GitOpsRepoCertRequestCertificate> certificates) {

            this.certificates = certificates;
            return this;
        }
        public Builder certificates(GitOpsRepoCertRequestCertificate... certificates) {
            return certificates(List.of(certificates));
        }
        @CustomType.Setter
        public Builder upsert(@Nullable Boolean upsert) {

            this.upsert = upsert;
            return this;
        }
        public GitOpsRepoCertRequest build() {
            final var _resultValue = new GitOpsRepoCertRequest();
            _resultValue.certificates = certificates;
            _resultValue.upsert = upsert;
            return _resultValue;
        }
    }
}
