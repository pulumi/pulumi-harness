// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetResourceGroupResourceFilterResourceAttributeFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResourceGroupResourceFilterResource {
    /**
     * @return Used to filter resources on their attributes
     * 
     */
    private List<GetResourceGroupResourceFilterResourceAttributeFilter> attributeFilters;
    /**
     * @return List of the identifiers
     * 
     */
    private List<String> identifiers;
    /**
     * @return Type of the resource
     * 
     */
    private String resourceType;

    private GetResourceGroupResourceFilterResource() {}
    /**
     * @return Used to filter resources on their attributes
     * 
     */
    public List<GetResourceGroupResourceFilterResourceAttributeFilter> attributeFilters() {
        return this.attributeFilters;
    }
    /**
     * @return List of the identifiers
     * 
     */
    public List<String> identifiers() {
        return this.identifiers;
    }
    /**
     * @return Type of the resource
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceGroupResourceFilterResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetResourceGroupResourceFilterResourceAttributeFilter> attributeFilters;
        private List<String> identifiers;
        private String resourceType;
        public Builder() {}
        public Builder(GetResourceGroupResourceFilterResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeFilters = defaults.attributeFilters;
    	      this.identifiers = defaults.identifiers;
    	      this.resourceType = defaults.resourceType;
        }

        @CustomType.Setter
        public Builder attributeFilters(List<GetResourceGroupResourceFilterResourceAttributeFilter> attributeFilters) {
            if (attributeFilters == null) {
              throw new MissingRequiredPropertyException("GetResourceGroupResourceFilterResource", "attributeFilters");
            }
            this.attributeFilters = attributeFilters;
            return this;
        }
        public Builder attributeFilters(GetResourceGroupResourceFilterResourceAttributeFilter... attributeFilters) {
            return attributeFilters(List.of(attributeFilters));
        }
        @CustomType.Setter
        public Builder identifiers(List<String> identifiers) {
            if (identifiers == null) {
              throw new MissingRequiredPropertyException("GetResourceGroupResourceFilterResource", "identifiers");
            }
            this.identifiers = identifiers;
            return this;
        }
        public Builder identifiers(String... identifiers) {
            return identifiers(List.of(identifiers));
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetResourceGroupResourceFilterResource", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        public GetResourceGroupResourceFilterResource build() {
            final var _resultValue = new GetResourceGroupResourceFilterResource();
            _resultValue.attributeFilters = attributeFilters;
            _resultValue.identifiers = identifiers;
            _resultValue.resourceType = resourceType;
            return _resultValue;
        }
    }
}
