// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.autostopping.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureGatewayState extends com.pulumi.resources.ResourceArgs {

    public static final AzureGatewayState Empty = new AzureGatewayState();

    /**
     * ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
     * 
     */
    @Import(name="appGatewayId")
    private @Nullable Output<String> appGatewayId;

    /**
     * @return ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
     * 
     */
    public Optional<Output<String>> appGatewayId() {
        return Optional.ofNullable(this.appGatewayId);
    }

    /**
     * Region in which azure cloud function will be provisioned
     * 
     */
    @Import(name="azureFuncRegion")
    private @Nullable Output<String> azureFuncRegion;

    /**
     * @return Region in which azure cloud function will be provisioned
     * 
     */
    public Optional<Output<String>> azureFuncRegion() {
        return Optional.ofNullable(this.azureFuncRegion);
    }

    /**
     * ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * Id of the cloud connector
     * 
     */
    @Import(name="cloudConnectorId")
    private @Nullable Output<String> cloudConnectorId;

    /**
     * @return Id of the cloud connector
     * 
     */
    public Optional<Output<String>> cloudConnectorId() {
        return Optional.ofNullable(this.cloudConnectorId);
    }

    @Import(name="deleteCloudResourcesOnDestroy")
    private @Nullable Output<Boolean> deleteCloudResourcesOnDestroy;

    public Optional<Output<Boolean>> deleteCloudResourcesOnDestroy() {
        return Optional.ofNullable(this.deleteCloudResourcesOnDestroy);
    }

    /**
     * ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
     * 
     */
    @Import(name="frontendIp")
    private @Nullable Output<String> frontendIp;

    /**
     * @return ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
     * 
     */
    public Optional<Output<String>> frontendIp() {
        return Optional.ofNullable(this.frontendIp);
    }

    /**
     * Hostname for the proxy
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return Hostname for the proxy
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * Unique identifier of the resource
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Unique identifier of the resource
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Name of the proxy
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the proxy
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Region in which cloud resources are hosted
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region in which cloud resources are hosted
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Resource group in which cloud resources are hosted
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable Output<String> resourceGroup;

    /**
     * @return Resource group in which cloud resources are hosted
     * 
     */
    public Optional<Output<String>> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * Size of machine used for the gateway. Required only for creating new AppGateway
     * 
     */
    @Import(name="skuSize")
    private @Nullable Output<String> skuSize;

    /**
     * @return Size of machine used for the gateway. Required only for creating new AppGateway
     * 
     */
    public Optional<Output<String>> skuSize() {
        return Optional.ofNullable(this.skuSize);
    }

    /**
     * Subnet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return Subnet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * VNet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    @Import(name="vpc")
    private @Nullable Output<String> vpc;

    /**
     * @return VNet in which cloud resources are hosted. Required only for creating new AppGateway
     * 
     */
    public Optional<Output<String>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    private AzureGatewayState() {}

    private AzureGatewayState(AzureGatewayState $) {
        this.appGatewayId = $.appGatewayId;
        this.azureFuncRegion = $.azureFuncRegion;
        this.certificateId = $.certificateId;
        this.cloudConnectorId = $.cloudConnectorId;
        this.deleteCloudResourcesOnDestroy = $.deleteCloudResourcesOnDestroy;
        this.frontendIp = $.frontendIp;
        this.hostName = $.hostName;
        this.identifier = $.identifier;
        this.name = $.name;
        this.region = $.region;
        this.resourceGroup = $.resourceGroup;
        this.skuSize = $.skuSize;
        this.subnetId = $.subnetId;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureGatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureGatewayState $;

        public Builder() {
            $ = new AzureGatewayState();
        }

        public Builder(AzureGatewayState defaults) {
            $ = new AzureGatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appGatewayId ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
         * 
         * @return builder
         * 
         */
        public Builder appGatewayId(@Nullable Output<String> appGatewayId) {
            $.appGatewayId = appGatewayId;
            return this;
        }

        /**
         * @param appGatewayId ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
         * 
         * @return builder
         * 
         */
        public Builder appGatewayId(String appGatewayId) {
            return appGatewayId(Output.of(appGatewayId));
        }

        /**
         * @param azureFuncRegion Region in which azure cloud function will be provisioned
         * 
         * @return builder
         * 
         */
        public Builder azureFuncRegion(@Nullable Output<String> azureFuncRegion) {
            $.azureFuncRegion = azureFuncRegion;
            return this;
        }

        /**
         * @param azureFuncRegion Region in which azure cloud function will be provisioned
         * 
         * @return builder
         * 
         */
        public Builder azureFuncRegion(String azureFuncRegion) {
            return azureFuncRegion(Output.of(azureFuncRegion));
        }

        /**
         * @param certificateId ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param cloudConnectorId Id of the cloud connector
         * 
         * @return builder
         * 
         */
        public Builder cloudConnectorId(@Nullable Output<String> cloudConnectorId) {
            $.cloudConnectorId = cloudConnectorId;
            return this;
        }

        /**
         * @param cloudConnectorId Id of the cloud connector
         * 
         * @return builder
         * 
         */
        public Builder cloudConnectorId(String cloudConnectorId) {
            return cloudConnectorId(Output.of(cloudConnectorId));
        }

        public Builder deleteCloudResourcesOnDestroy(@Nullable Output<Boolean> deleteCloudResourcesOnDestroy) {
            $.deleteCloudResourcesOnDestroy = deleteCloudResourcesOnDestroy;
            return this;
        }

        public Builder deleteCloudResourcesOnDestroy(Boolean deleteCloudResourcesOnDestroy) {
            return deleteCloudResourcesOnDestroy(Output.of(deleteCloudResourcesOnDestroy));
        }

        /**
         * @param frontendIp ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
         * 
         * @return builder
         * 
         */
        public Builder frontendIp(@Nullable Output<String> frontendIp) {
            $.frontendIp = frontendIp;
            return this;
        }

        /**
         * @param frontendIp ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
         * 
         * @return builder
         * 
         */
        public Builder frontendIp(String frontendIp) {
            return frontendIp(Output.of(frontendIp));
        }

        /**
         * @param hostName Hostname for the proxy
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Hostname for the proxy
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param identifier Unique identifier of the resource
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Unique identifier of the resource
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param name Name of the proxy
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the proxy
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region Region in which cloud resources are hosted
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region in which cloud resources are hosted
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param resourceGroup Resource group in which cloud resources are hosted
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(@Nullable Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup Resource group in which cloud resources are hosted
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param skuSize Size of machine used for the gateway. Required only for creating new AppGateway
         * 
         * @return builder
         * 
         */
        public Builder skuSize(@Nullable Output<String> skuSize) {
            $.skuSize = skuSize;
            return this;
        }

        /**
         * @param skuSize Size of machine used for the gateway. Required only for creating new AppGateway
         * 
         * @return builder
         * 
         */
        public Builder skuSize(String skuSize) {
            return skuSize(Output.of(skuSize));
        }

        /**
         * @param subnetId Subnet in which cloud resources are hosted. Required only for creating new AppGateway
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId Subnet in which cloud resources are hosted. Required only for creating new AppGateway
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param vpc VNet in which cloud resources are hosted. Required only for creating new AppGateway
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Output<String> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc VNet in which cloud resources are hosted. Required only for creating new AppGateway
         * 
         * @return builder
         * 
         */
        public Builder vpc(String vpc) {
            return vpc(Output.of(vpc));
        }

        public AzureGatewayState build() {
            return $;
        }
    }

}
