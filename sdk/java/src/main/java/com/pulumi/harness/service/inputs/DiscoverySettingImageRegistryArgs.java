// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiscoverySettingImageRegistryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiscoverySettingImageRegistryArgs Empty = new DiscoverySettingImageRegistryArgs();

    /**
     * The account name for the image registry.
     * 
     */
    @Import(name="account", required=true)
    private Output<String> account;

    /**
     * @return The account name for the image registry.
     * 
     */
    public Output<String> account() {
        return this.account;
    }

    /**
     * List of secrets for the image registry.
     * 
     */
    @Import(name="secrets")
    private @Nullable Output<List<String>> secrets;

    /**
     * @return List of secrets for the image registry.
     * 
     */
    public Optional<Output<List<String>>> secrets() {
        return Optional.ofNullable(this.secrets);
    }

    /**
     * The server URL for the image registry.
     * 
     */
    @Import(name="server", required=true)
    private Output<String> server;

    /**
     * @return The server URL for the image registry.
     * 
     */
    public Output<String> server() {
        return this.server;
    }

    private DiscoverySettingImageRegistryArgs() {}

    private DiscoverySettingImageRegistryArgs(DiscoverySettingImageRegistryArgs $) {
        this.account = $.account;
        this.secrets = $.secrets;
        this.server = $.server;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiscoverySettingImageRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiscoverySettingImageRegistryArgs $;

        public Builder() {
            $ = new DiscoverySettingImageRegistryArgs();
        }

        public Builder(DiscoverySettingImageRegistryArgs defaults) {
            $ = new DiscoverySettingImageRegistryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param account The account name for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder account(Output<String> account) {
            $.account = account;
            return this;
        }

        /**
         * @param account The account name for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder account(String account) {
            return account(Output.of(account));
        }

        /**
         * @param secrets List of secrets for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder secrets(@Nullable Output<List<String>> secrets) {
            $.secrets = secrets;
            return this;
        }

        /**
         * @param secrets List of secrets for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder secrets(List<String> secrets) {
            return secrets(Output.of(secrets));
        }

        /**
         * @param secrets List of secrets for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder secrets(String... secrets) {
            return secrets(List.of(secrets));
        }

        /**
         * @param server The server URL for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder server(Output<String> server) {
            $.server = server;
            return this;
        }

        /**
         * @param server The server URL for the image registry.
         * 
         * @return builder
         * 
         */
        public Builder server(String server) {
            return server(Output.of(server));
        }

        public DiscoverySettingImageRegistryArgs build() {
            if ($.account == null) {
                throw new MissingRequiredPropertyException("DiscoverySettingImageRegistryArgs", "account");
            }
            if ($.server == null) {
                throw new MissingRequiredPropertyException("DiscoverySettingImageRegistryArgs", "server");
            }
            return $;
        }
    }

}
