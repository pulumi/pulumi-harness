// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGitopsApplicationsApplicationMetadataOwnerReference {
    /**
     * @return API version of the referent.
     * 
     */
    private String apiVersion;
    /**
     * @return If true, AND if the owner has the &#34;foregroundDeletion&#34; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs &#34;delete&#34; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
     * 
     */
    private Boolean blockOwnerDeletion;
    /**
     * @return Indicates if the reference points to the managing controller.
     * 
     */
    private Boolean controller;
    /**
     * @return Kind of the referent.
     * 
     */
    private String kind;
    /**
     * @return Name of the referent.
     * 
     */
    private String name;
    /**
     * @return UID of the referent.
     * 
     */
    private String uid;

    private GetGitopsApplicationsApplicationMetadataOwnerReference() {}
    /**
     * @return API version of the referent.
     * 
     */
    public String apiVersion() {
        return this.apiVersion;
    }
    /**
     * @return If true, AND if the owner has the &#34;foregroundDeletion&#34; finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs &#34;delete&#34; permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
     * 
     */
    public Boolean blockOwnerDeletion() {
        return this.blockOwnerDeletion;
    }
    /**
     * @return Indicates if the reference points to the managing controller.
     * 
     */
    public Boolean controller() {
        return this.controller;
    }
    /**
     * @return Kind of the referent.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Name of the referent.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return UID of the referent.
     * 
     */
    public String uid() {
        return this.uid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGitopsApplicationsApplicationMetadataOwnerReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiVersion;
        private Boolean blockOwnerDeletion;
        private Boolean controller;
        private String kind;
        private String name;
        private String uid;
        public Builder() {}
        public Builder(GetGitopsApplicationsApplicationMetadataOwnerReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.blockOwnerDeletion = defaults.blockOwnerDeletion;
    	      this.controller = defaults.controller;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder apiVersion(String apiVersion) {
            if (apiVersion == null) {
              throw new MissingRequiredPropertyException("GetGitopsApplicationsApplicationMetadataOwnerReference", "apiVersion");
            }
            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder blockOwnerDeletion(Boolean blockOwnerDeletion) {
            if (blockOwnerDeletion == null) {
              throw new MissingRequiredPropertyException("GetGitopsApplicationsApplicationMetadataOwnerReference", "blockOwnerDeletion");
            }
            this.blockOwnerDeletion = blockOwnerDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder controller(Boolean controller) {
            if (controller == null) {
              throw new MissingRequiredPropertyException("GetGitopsApplicationsApplicationMetadataOwnerReference", "controller");
            }
            this.controller = controller;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetGitopsApplicationsApplicationMetadataOwnerReference", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGitopsApplicationsApplicationMetadataOwnerReference", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            if (uid == null) {
              throw new MissingRequiredPropertyException("GetGitopsApplicationsApplicationMetadataOwnerReference", "uid");
            }
            this.uid = uid;
            return this;
        }
        public GetGitopsApplicationsApplicationMetadataOwnerReference build() {
            final var _resultValue = new GetGitopsApplicationsApplicationMetadataOwnerReference();
            _resultValue.apiVersion = apiVersion;
            _resultValue.blockOwnerDeletion = blockOwnerDeletion;
            _resultValue.controller = controller;
            _resultValue.kind = kind;
            _resultValue.name = name;
            _resultValue.uid = uid;
            return _resultValue;
        }
    }
}
