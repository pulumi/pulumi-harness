// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGenerator;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeTemplate;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitopsApplicationsetApplicationsetSpecGeneratorMerge {
    /**
     * @return Child generator. Generators are responsible for generating parameters, which are then combined by the parent merge generator.
     * 
     */
    private List<GitopsApplicationsetApplicationsetSpecGeneratorMergeGenerator> generators;
    /**
     * @return Keys to merge into resulting parameter set.
     * 
     */
    private List<String> mergeKeys;
    /**
     * @return Generator template. Used to override the values of the spec-level template.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMergeTemplate template;

    private GitopsApplicationsetApplicationsetSpecGeneratorMerge() {}
    /**
     * @return Child generator. Generators are responsible for generating parameters, which are then combined by the parent merge generator.
     * 
     */
    public List<GitopsApplicationsetApplicationsetSpecGeneratorMergeGenerator> generators() {
        return this.generators;
    }
    /**
     * @return Keys to merge into resulting parameter set.
     * 
     */
    public List<String> mergeKeys() {
        return this.mergeKeys;
    }
    /**
     * @return Generator template. Used to override the values of the spec-level template.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMergeTemplate> template() {
        return Optional.ofNullable(this.template);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMerge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GitopsApplicationsetApplicationsetSpecGeneratorMergeGenerator> generators;
        private List<String> mergeKeys;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMergeTemplate template;
        public Builder() {}
        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMerge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.generators = defaults.generators;
    	      this.mergeKeys = defaults.mergeKeys;
    	      this.template = defaults.template;
        }

        @CustomType.Setter
        public Builder generators(List<GitopsApplicationsetApplicationsetSpecGeneratorMergeGenerator> generators) {
            if (generators == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMerge", "generators");
            }
            this.generators = generators;
            return this;
        }
        public Builder generators(GitopsApplicationsetApplicationsetSpecGeneratorMergeGenerator... generators) {
            return generators(List.of(generators));
        }
        @CustomType.Setter
        public Builder mergeKeys(List<String> mergeKeys) {
            if (mergeKeys == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMerge", "mergeKeys");
            }
            this.mergeKeys = mergeKeys;
            return this;
        }
        public Builder mergeKeys(String... mergeKeys) {
            return mergeKeys(List.of(mergeKeys));
        }
        @CustomType.Setter
        public Builder template(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMergeTemplate template) {

            this.template = template;
            return this;
        }
        public GitopsApplicationsetApplicationsetSpecGeneratorMerge build() {
            final var _resultValue = new GitopsApplicationsetApplicationsetSpecGeneratorMerge();
            _resultValue.generators = generators;
            _resultValue.mergeKeys = mergeKeys;
            _resultValue.template = template;
            return _resultValue;
        }
    }
}
