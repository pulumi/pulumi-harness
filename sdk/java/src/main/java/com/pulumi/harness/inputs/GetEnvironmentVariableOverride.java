// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEnvironmentVariableOverride extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentVariableOverride Empty = new GetEnvironmentVariableOverride();

    /**
     * The name of the variable
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the variable
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The name of the service
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return The name of the service
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * The type of the service variable. Valid values are `TEXT` and `ENCRYPTED_TEXT`
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of the service variable. Valid values are `TEXT` and `ENCRYPTED_TEXT`
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * The value of the service variable
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return The value of the service variable
     * 
     */
    public String value() {
        return this.value;
    }

    private GetEnvironmentVariableOverride() {}

    private GetEnvironmentVariableOverride(GetEnvironmentVariableOverride $) {
        this.name = $.name;
        this.serviceName = $.serviceName;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentVariableOverride defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentVariableOverride $;

        public Builder() {
            $ = new GetEnvironmentVariableOverride();
        }

        public Builder(GetEnvironmentVariableOverride defaults) {
            $ = new GetEnvironmentVariableOverride(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the variable
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param serviceName The name of the service
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param type The type of the service variable. Valid values are `TEXT` and `ENCRYPTED_TEXT`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param value The value of the service variable
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public GetEnvironmentVariableOverride build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentVariableOverride", "name");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentVariableOverride", "serviceName");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentVariableOverride", "type");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentVariableOverride", "value");
            }
            return $;
        }
    }

}
