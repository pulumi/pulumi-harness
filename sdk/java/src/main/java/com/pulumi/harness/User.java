// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.UserArgs;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.inputs.UserState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Harness user
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.User;
 * import com.pulumi.harness.UserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var johnDoe = new User("johnDoe", UserArgs.builder()
 *             .name("John Doe")
 *             .email("john.doe}{@literal @}{@code example.com")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Import using the email address of the user
 * 
 * ```sh
 * $ pulumi import harness:index/user:User john_doe john.doe{@literal @}example.com
 * ```
 * 
 */
@ResourceType(type="harness:index/user:User")
public class User extends com.pulumi.resources.CustomResource {
    /**
     * The email of the user.
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return The email of the user.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * The groups the user belongs to. This is only used during the creation of the user. The groups are not updated after the user is created. When using this option you should also set `lifecycle = { ignore_changes = [&#34;group_ids&#34;] }`.
     * 
     */
    @Export(name="groupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupIds;

    /**
     * @return The groups the user belongs to. This is only used during the creation of the user. The groups are not updated after the user is created. When using this option you should also set `lifecycle = { ignore_changes = [&#34;group_ids&#34;] }`.
     * 
     */
    public Output<Optional<List<String>>> groupIds() {
        return Codegen.optional(this.groupIds);
    }
    /**
     * Flag indicating whether or not the users email has been verified.
     * 
     */
    @Export(name="isEmailVerified", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isEmailVerified;

    /**
     * @return Flag indicating whether or not the users email has been verified.
     * 
     */
    public Output<Boolean> isEmailVerified() {
        return this.isEmailVerified;
    }
    /**
     * Flag indicating whether or not the user was imported from an identity provider.
     * 
     */
    @Export(name="isImportedFromIdentityProvider", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isImportedFromIdentityProvider;

    /**
     * @return Flag indicating whether or not the user was imported from an identity provider.
     * 
     */
    public Output<Boolean> isImportedFromIdentityProvider() {
        return this.isImportedFromIdentityProvider;
    }
    /**
     * Flag indicating whether or not the users password has expired.
     * 
     */
    @Export(name="isPasswordExpired", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isPasswordExpired;

    /**
     * @return Flag indicating whether or not the users password has expired.
     * 
     */
    public Output<Boolean> isPasswordExpired() {
        return this.isPasswordExpired;
    }
    /**
     * Flag indicating whether or not two-factor authentication is enabled for the user.
     * 
     */
    @Export(name="isTwoFactorAuthEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isTwoFactorAuthEnabled;

    /**
     * @return Flag indicating whether or not two-factor authentication is enabled for the user.
     * 
     */
    public Output<Boolean> isTwoFactorAuthEnabled() {
        return this.isTwoFactorAuthEnabled;
    }
    /**
     * Flag indicating whether or not the user is locked out.
     * 
     */
    @Export(name="isUserLocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUserLocked;

    /**
     * @return Flag indicating whether or not the user is locked out.
     * 
     */
    public Output<Boolean> isUserLocked() {
        return this.isUserLocked;
    }
    /**
     * The name of the user.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the user.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(java.lang.String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(java.lang.String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(java.lang.String name, UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:index/user:User", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private User(java.lang.String name, Output<java.lang.String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:index/user:User", name, state, makeResourceOptions(options, id), false);
    }

    private static UserArgs makeArgs(UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? UserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(java.lang.String name, Output<java.lang.String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
