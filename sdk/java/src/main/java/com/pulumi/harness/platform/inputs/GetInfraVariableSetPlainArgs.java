// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetConnector;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetEnvironmentVariable;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetTerraformVariable;
import com.pulumi.harness.platform.inputs.GetInfraVariableSetTerraformVariableFile;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInfraVariableSetPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInfraVariableSetPlainArgs Empty = new GetInfraVariableSetPlainArgs();

    /**
     * Provider connector configured on the variable set
     * 
     */
    @Import(name="connectors")
    private @Nullable List<GetInfraVariableSetConnector> connectors;

    /**
     * @return Provider connector configured on the variable set
     * 
     */
    public Optional<List<GetInfraVariableSetConnector>> connectors() {
        return Optional.ofNullable(this.connectors);
    }

    /**
     * Environment variables configured on the variable set
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable List<GetInfraVariableSetEnvironmentVariable> environmentVariables;

    /**
     * @return Environment variables configured on the variable set
     * 
     */
    public Optional<List<GetInfraVariableSetEnvironmentVariable>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Identifier of the Variable Set
     * 
     */
    @Import(name="identifier", required=true)
    private String identifier;

    /**
     * @return Identifier of the Variable Set
     * 
     */
    public String identifier() {
        return this.identifier;
    }

    /**
     * Name of the Variable Set
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the Variable Set
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Organization Identifier
     * 
     */
    @Import(name="orgId")
    private @Nullable String orgId;

    /**
     * @return Organization Identifier
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Project Identifier
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return Project Identifier
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    @Import(name="terraformVariableFiles")
    private @Nullable List<GetInfraVariableSetTerraformVariableFile> terraformVariableFiles;

    public Optional<List<GetInfraVariableSetTerraformVariableFile>> terraformVariableFiles() {
        return Optional.ofNullable(this.terraformVariableFiles);
    }

    @Import(name="terraformVariables")
    private @Nullable List<GetInfraVariableSetTerraformVariable> terraformVariables;

    public Optional<List<GetInfraVariableSetTerraformVariable>> terraformVariables() {
        return Optional.ofNullable(this.terraformVariables);
    }

    private GetInfraVariableSetPlainArgs() {}

    private GetInfraVariableSetPlainArgs(GetInfraVariableSetPlainArgs $) {
        this.connectors = $.connectors;
        this.environmentVariables = $.environmentVariables;
        this.identifier = $.identifier;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.terraformVariableFiles = $.terraformVariableFiles;
        this.terraformVariables = $.terraformVariables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInfraVariableSetPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInfraVariableSetPlainArgs $;

        public Builder() {
            $ = new GetInfraVariableSetPlainArgs();
        }

        public Builder(GetInfraVariableSetPlainArgs defaults) {
            $ = new GetInfraVariableSetPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectors Provider connector configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder connectors(@Nullable List<GetInfraVariableSetConnector> connectors) {
            $.connectors = connectors;
            return this;
        }

        /**
         * @param connectors Provider connector configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder connectors(GetInfraVariableSetConnector... connectors) {
            return connectors(List.of(connectors));
        }

        /**
         * @param environmentVariables Environment variables configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable List<GetInfraVariableSetEnvironmentVariable> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Environment variables configured on the variable set
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(GetInfraVariableSetEnvironmentVariable... environmentVariables) {
            return environmentVariables(List.of(environmentVariables));
        }

        /**
         * @param identifier Identifier of the Variable Set
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param name Name of the Variable Set
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param orgId Organization Identifier
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param projectId Project Identifier
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder terraformVariableFiles(@Nullable List<GetInfraVariableSetTerraformVariableFile> terraformVariableFiles) {
            $.terraformVariableFiles = terraformVariableFiles;
            return this;
        }

        public Builder terraformVariableFiles(GetInfraVariableSetTerraformVariableFile... terraformVariableFiles) {
            return terraformVariableFiles(List.of(terraformVariableFiles));
        }

        public Builder terraformVariables(@Nullable List<GetInfraVariableSetTerraformVariable> terraformVariables) {
            $.terraformVariables = terraformVariables;
            return this;
        }

        public Builder terraformVariables(GetInfraVariableSetTerraformVariable... terraformVariables) {
            return terraformVariables(List.of(terraformVariables));
        }

        public GetInfraVariableSetPlainArgs build() {
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("GetInfraVariableSetPlainArgs", "identifier");
            }
            return $;
        }
    }

}
