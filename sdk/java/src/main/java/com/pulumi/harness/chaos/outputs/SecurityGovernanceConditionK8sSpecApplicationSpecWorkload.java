// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityGovernanceConditionK8sSpecApplicationSpecWorkload {
    /**
     * @return ID for the application map
     * 
     */
    private @Nullable String applicationMapId;
    /**
     * @return Kind of the workload (e.g., deployment, statefulset)
     * 
     */
    private @Nullable String kind;
    /**
     * @return Label selector for the workload
     * 
     */
    private @Nullable String label;
    /**
     * @return Namespace of the workload
     * 
     */
    private String namespace;
    /**
     * @return List of services associated with the workload
     * 
     */
    private @Nullable List<String> services;

    private SecurityGovernanceConditionK8sSpecApplicationSpecWorkload() {}
    /**
     * @return ID for the application map
     * 
     */
    public Optional<String> applicationMapId() {
        return Optional.ofNullable(this.applicationMapId);
    }
    /**
     * @return Kind of the workload (e.g., deployment, statefulset)
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return Label selector for the workload
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return Namespace of the workload
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return List of services associated with the workload
     * 
     */
    public List<String> services() {
        return this.services == null ? List.of() : this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGovernanceConditionK8sSpecApplicationSpecWorkload defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationMapId;
        private @Nullable String kind;
        private @Nullable String label;
        private String namespace;
        private @Nullable List<String> services;
        public Builder() {}
        public Builder(SecurityGovernanceConditionK8sSpecApplicationSpecWorkload defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationMapId = defaults.applicationMapId;
    	      this.kind = defaults.kind;
    	      this.label = defaults.label;
    	      this.namespace = defaults.namespace;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder applicationMapId(@Nullable String applicationMapId) {

            this.applicationMapId = applicationMapId;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {

            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("SecurityGovernanceConditionK8sSpecApplicationSpecWorkload", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder services(@Nullable List<String> services) {

            this.services = services;
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        public SecurityGovernanceConditionK8sSpecApplicationSpecWorkload build() {
            final var _resultValue = new SecurityGovernanceConditionK8sSpecApplicationSpecWorkload();
            _resultValue.applicationMapId = applicationMapId;
            _resultValue.kind = kind;
            _resultValue.label = label;
            _resultValue.namespace = namespace;
            _resultValue.services = services;
            return _resultValue;
        }
    }
}
