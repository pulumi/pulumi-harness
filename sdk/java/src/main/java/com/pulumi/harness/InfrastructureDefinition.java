// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.InfrastructureDefinitionArgs;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.inputs.InfrastructureDefinitionState;
import com.pulumi.harness.outputs.InfrastructureDefinitionAwsAmi;
import com.pulumi.harness.outputs.InfrastructureDefinitionAwsEcs;
import com.pulumi.harness.outputs.InfrastructureDefinitionAwsLambda;
import com.pulumi.harness.outputs.InfrastructureDefinitionAwsSsh;
import com.pulumi.harness.outputs.InfrastructureDefinitionAwsWinrm;
import com.pulumi.harness.outputs.InfrastructureDefinitionAzureVmss;
import com.pulumi.harness.outputs.InfrastructureDefinitionAzureWebapp;
import com.pulumi.harness.outputs.InfrastructureDefinitionCustom;
import com.pulumi.harness.outputs.InfrastructureDefinitionDatacenterSsh;
import com.pulumi.harness.outputs.InfrastructureDefinitionDatacenterWinrm;
import com.pulumi.harness.outputs.InfrastructureDefinitionKubernetes;
import com.pulumi.harness.outputs.InfrastructureDefinitionKubernetesGcp;
import com.pulumi.harness.outputs.InfrastructureDefinitionTanzu;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating am infrastructure definition. This resource uses the config-as-code API&#39;s. When updating the `name` or `path` of this resource you should typically also set the `create_before_destroy = true` lifecycle setting.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.cloudprovider.Kubernetes;
 * import com.pulumi.harness.cloudprovider.KubernetesArgs;
 * import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationArgs;
 * import com.pulumi.harness.Application;
 * import com.pulumi.harness.ApplicationArgs;
 * import com.pulumi.harness.Environment;
 * import com.pulumi.harness.EnvironmentArgs;
 * import com.pulumi.harness.InfrastructureDefinition;
 * import com.pulumi.harness.InfrastructureDefinitionArgs;
 * import com.pulumi.harness.inputs.InfrastructureDefinitionKubernetesArgs;
 * import com.pulumi.harness.YamlConfig;
 * import com.pulumi.harness.YamlConfigArgs;
 * import com.pulumi.harness.inputs.InfrastructureDefinitionCustomArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Creating a Kubernetes infrastructure definition
 *         var dev = new Kubernetes("dev", KubernetesArgs.builder()
 *             .name("k8s-dev")
 *             .authentication(KubernetesAuthenticationArgs.builder()
 *                 .delegateSelectors("k8s")
 *                 .build())
 *             .build());
 * 
 *         var example = new Application("example", ApplicationArgs.builder()
 *             .name("example")
 *             .build());
 * 
 *         var devEnvironment = new Environment("devEnvironment", EnvironmentArgs.builder()
 *             .name("dev")
 *             .appId(example.id())
 *             .type("NON_PROD")
 *             .build());
 * 
 *         // Creating a infrastructure of type KUBERNETES
 *         var k8s = new InfrastructureDefinition("k8s", InfrastructureDefinitionArgs.builder()
 *             .name("k8s-eks-us-east-1")
 *             .appId(example.id())
 *             .envId(devEnvironment.id())
 *             .cloudProviderType("KUBERNETES_CLUSTER")
 *             .deploymentType("KUBERNETES")
 *             .kubernetes(InfrastructureDefinitionKubernetesArgs.builder()
 *                 .cloudProviderName(dev.name())
 *                 .namespace("dev")
 *                 .releaseName("${service.name}")
 *                 .build())
 *             .build());
 * 
 *         // Creating a Deployment Template for CUSTOM infrastructure type
 *         var exampleYaml = new YamlConfig("exampleYaml", YamlConfigArgs.builder()
 *             .path("Setup/Template Library/Example Folder/deployment_template.yaml")
 *             .content("""
 * harnessApiVersion: '1.0'
 * type: CUSTOM_DEPLOYMENT_TYPE
 * fetchInstanceScript: |-
 *   set -ex
 *   curl http://${url}/${file_name} > ${INSTANCE_OUTPUT_PATH}
 * hostAttributes:
 *   hostname: host
 * hostObjectArrayPath: hosts
 * variables:
 * - name: url
 * - name: file_name
 *             """)
 *             .build());
 * 
 *         // Creating a infrastructure of type CUSTOM
 *         var custom = new InfrastructureDefinition("custom", InfrastructureDefinitionArgs.builder()
 *             .name("custom-infra")
 *             .appId(example.id())
 *             .envId(devEnvironment.id())
 *             .cloudProviderType("CUSTOM")
 *             .deploymentType("CUSTOM")
 *             .deploymentTemplateUri(exampleYaml.name().applyValue(_name -> String.format("Example Folder/%s", _name)))
 *             .custom(InfrastructureDefinitionCustomArgs.builder()
 *                 .deploymentTypeTemplateVersion("1")
 *                 .variables(                
 *                     InfrastructureDefinitionCustomVariableArgs.builder()
 *                         .name("url")
 *                         .value("localhost:8081")
 *                         .build(),
 *                     InfrastructureDefinitionCustomVariableArgs.builder()
 *                         .name("file_name")
 *                         .value("instances.json")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Import using the Harness application id, environment id, and infrastructure definition id
 * 
 * ```sh
 * $ pulumi import harness:index/infrastructureDefinition:InfrastructureDefinition example &lt;app_id&gt;/&lt;env_id&gt;/&lt;infradef_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:index/infrastructureDefinition:InfrastructureDefinition")
public class InfrastructureDefinition extends com.pulumi.resources.CustomResource {
    /**
     * The id of the application the infrastructure definition belongs to.
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return The id of the application the infrastructure definition belongs to.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * The configuration details for Aws AMI deployments.
     * 
     */
    @Export(name="awsAmi", refs={InfrastructureDefinitionAwsAmi.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAwsAmi> awsAmi;

    /**
     * @return The configuration details for Aws AMI deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAwsAmi>> awsAmi() {
        return Codegen.optional(this.awsAmi);
    }
    /**
     * The configuration details for Aws AMI deployments.
     * 
     */
    @Export(name="awsEcs", refs={InfrastructureDefinitionAwsEcs.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAwsEcs> awsEcs;

    /**
     * @return The configuration details for Aws AMI deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAwsEcs>> awsEcs() {
        return Codegen.optional(this.awsEcs);
    }
    /**
     * The configuration details for Aws Lambda deployments.
     * 
     */
    @Export(name="awsLambda", refs={InfrastructureDefinitionAwsLambda.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAwsLambda> awsLambda;

    /**
     * @return The configuration details for Aws Lambda deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAwsLambda>> awsLambda() {
        return Codegen.optional(this.awsLambda);
    }
    /**
     * The configuration details for AWS SSH deployments.
     * 
     */
    @Export(name="awsSsh", refs={InfrastructureDefinitionAwsSsh.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAwsSsh> awsSsh;

    /**
     * @return The configuration details for AWS SSH deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAwsSsh>> awsSsh() {
        return Codegen.optional(this.awsSsh);
    }
    /**
     * The configuration details for AWS WinRM deployments.
     * 
     */
    @Export(name="awsWinrm", refs={InfrastructureDefinitionAwsWinrm.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAwsWinrm> awsWinrm;

    /**
     * @return The configuration details for AWS WinRM deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAwsWinrm>> awsWinrm() {
        return Codegen.optional(this.awsWinrm);
    }
    /**
     * The configuration details for Azure VMSS deployments.
     * 
     */
    @Export(name="azureVmss", refs={InfrastructureDefinitionAzureVmss.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAzureVmss> azureVmss;

    /**
     * @return The configuration details for Azure VMSS deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAzureVmss>> azureVmss() {
        return Codegen.optional(this.azureVmss);
    }
    /**
     * The configuration details for Azure WebApp deployments.
     * 
     */
    @Export(name="azureWebapp", refs={InfrastructureDefinitionAzureWebapp.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionAzureWebapp> azureWebapp;

    /**
     * @return The configuration details for Azure WebApp deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionAzureWebapp>> azureWebapp() {
        return Codegen.optional(this.azureWebapp);
    }
    /**
     * The type of the cloud provider to connect with. Valid options are AWS, AZURE, CUSTOM, PHYSICAL*DATA*CENTER, KUBERNETES*CLUSTER, PCF, SPOT*INST
     * 
     */
    @Export(name="cloudProviderType", refs={String.class}, tree="[0]")
    private Output<String> cloudProviderType;

    /**
     * @return The type of the cloud provider to connect with. Valid options are AWS, AZURE, CUSTOM, PHYSICAL*DATA*CENTER, KUBERNETES*CLUSTER, PCF, SPOT*INST
     * 
     */
    public Output<String> cloudProviderType() {
        return this.cloudProviderType;
    }
    /**
     * The configuration details for Custom deployments.
     * 
     */
    @Export(name="custom", refs={InfrastructureDefinitionCustom.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionCustom> custom;

    /**
     * @return The configuration details for Custom deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionCustom>> custom() {
        return Codegen.optional(this.custom);
    }
    /**
     * The configuration details for SSH datacenter deployments.
     * 
     */
    @Export(name="datacenterSsh", refs={InfrastructureDefinitionDatacenterSsh.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionDatacenterSsh> datacenterSsh;

    /**
     * @return The configuration details for SSH datacenter deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionDatacenterSsh>> datacenterSsh() {
        return Codegen.optional(this.datacenterSsh);
    }
    /**
     * The configuration details for WinRM datacenter deployments.
     * 
     */
    @Export(name="datacenterWinrm", refs={InfrastructureDefinitionDatacenterWinrm.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionDatacenterWinrm> datacenterWinrm;

    /**
     * @return The configuration details for WinRM datacenter deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionDatacenterWinrm>> datacenterWinrm() {
        return Codegen.optional(this.datacenterWinrm);
    }
    /**
     * The URI of the deployment template to use. Only used if deployment_type is `CUSTOM`.
     * 
     */
    @Export(name="deploymentTemplateUri", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deploymentTemplateUri;

    /**
     * @return The URI of the deployment template to use. Only used if deployment_type is `CUSTOM`.
     * 
     */
    public Output<Optional<String>> deploymentTemplateUri() {
        return Codegen.optional(this.deploymentTemplateUri);
    }
    /**
     * The type of the deployment to use. Valid options are AMI, AWS*CODEDEPLOY, AWS*LAMBDA, AZURE*VMSS, AZURE*WEBAPP, CUSTOM, ECS, HELM, KUBERNETES, PCF, SSH, WINRM
     * 
     */
    @Export(name="deploymentType", refs={String.class}, tree="[0]")
    private Output<String> deploymentType;

    /**
     * @return The type of the deployment to use. Valid options are AMI, AWS*CODEDEPLOY, AWS*LAMBDA, AZURE*VMSS, AZURE*WEBAPP, CUSTOM, ECS, HELM, KUBERNETES, PCF, SSH, WINRM
     * 
     */
    public Output<String> deploymentType() {
        return this.deploymentType;
    }
    /**
     * The id of the environment the infrastructure definition belongs to.
     * 
     */
    @Export(name="envId", refs={String.class}, tree="[0]")
    private Output<String> envId;

    /**
     * @return The id of the environment the infrastructure definition belongs to.
     * 
     */
    public Output<String> envId() {
        return this.envId;
    }
    /**
     * The configuration details for Kubernetes deployments.
     * 
     */
    @Export(name="kubernetes", refs={InfrastructureDefinitionKubernetes.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionKubernetes> kubernetes;

    /**
     * @return The configuration details for Kubernetes deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionKubernetes>> kubernetes() {
        return Codegen.optional(this.kubernetes);
    }
    /**
     * The configuration details for Kubernetes on GCP deployments.
     * 
     */
    @Export(name="kubernetesGcp", refs={InfrastructureDefinitionKubernetesGcp.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionKubernetesGcp> kubernetesGcp;

    /**
     * @return The configuration details for Kubernetes on GCP deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionKubernetesGcp>> kubernetesGcp() {
        return Codegen.optional(this.kubernetesGcp);
    }
    /**
     * The name of the infrastructure definition
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the infrastructure definition
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the infrastructure provisioner to use.
     * 
     */
    @Export(name="provisionerName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> provisionerName;

    /**
     * @return The name of the infrastructure provisioner to use.
     * 
     */
    public Output<Optional<String>> provisionerName() {
        return Codegen.optional(this.provisionerName);
    }
    /**
     * The list of service names to scope this infrastructure definition to.
     * 
     */
    @Export(name="scopedServices", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> scopedServices;

    /**
     * @return The list of service names to scope this infrastructure definition to.
     * 
     */
    public Output<Optional<List<String>>> scopedServices() {
        return Codegen.optional(this.scopedServices);
    }
    /**
     * The configuration details for PCF deployments.
     * 
     */
    @Export(name="tanzu", refs={InfrastructureDefinitionTanzu.class}, tree="[0]")
    private Output</* @Nullable */ InfrastructureDefinitionTanzu> tanzu;

    /**
     * @return The configuration details for PCF deployments.
     * 
     */
    public Output<Optional<InfrastructureDefinitionTanzu>> tanzu() {
        return Codegen.optional(this.tanzu);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InfrastructureDefinition(java.lang.String name) {
        this(name, InfrastructureDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InfrastructureDefinition(java.lang.String name, InfrastructureDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InfrastructureDefinition(java.lang.String name, InfrastructureDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:index/infrastructureDefinition:InfrastructureDefinition", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InfrastructureDefinition(java.lang.String name, Output<java.lang.String> id, @Nullable InfrastructureDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:index/infrastructureDefinition:InfrastructureDefinition", name, state, makeResourceOptions(options, id), false);
    }

    private static InfrastructureDefinitionArgs makeArgs(InfrastructureDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InfrastructureDefinitionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InfrastructureDefinition get(java.lang.String name, Output<java.lang.String> id, @Nullable InfrastructureDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InfrastructureDefinition(name, id, state, options);
    }
}
