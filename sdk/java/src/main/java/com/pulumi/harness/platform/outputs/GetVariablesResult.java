// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetVariablesSpec;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVariablesResult {
    /**
     * @return Description of the entity
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the resource
     * 
     */
    private String identifier;
    /**
     * @return Name of the Variable
     * 
     */
    private String name;
    /**
     * @return Organization Identifier for the Entity
     * 
     */
    private @Nullable String orgId;
    /**
     * @return Project Identifier for the Entity
     * 
     */
    private @Nullable String projectId;
    /**
     * @return List of Spce Fields.
     * 
     */
    private List<GetVariablesSpec> specs;
    /**
     * @return Type of Variable
     * 
     */
    private String type;

    private GetVariablesResult() {}
    /**
     * @return Description of the entity
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the resource
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Name of the Variable
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Organization Identifier for the Entity
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    /**
     * @return Project Identifier for the Entity
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return List of Spce Fields.
     * 
     */
    public List<GetVariablesSpec> specs() {
        return this.specs;
    }
    /**
     * @return Type of Variable
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVariablesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String identifier;
        private String name;
        private @Nullable String orgId;
        private @Nullable String projectId;
        private List<GetVariablesSpec> specs;
        private String type;
        public Builder() {}
        public Builder(GetVariablesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.projectId = defaults.projectId;
    	      this.specs = defaults.specs;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {

            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder specs(List<GetVariablesSpec> specs) {
            if (specs == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "specs");
            }
            this.specs = specs;
            return this;
        }
        public Builder specs(GetVariablesSpec... specs) {
            return specs(List.of(specs));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetVariablesResult build() {
            final var _resultValue = new GetVariablesResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.name = name;
            _resultValue.orgId = orgId;
            _resultValue.projectId = projectId;
            _resultValue.specs = specs;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
