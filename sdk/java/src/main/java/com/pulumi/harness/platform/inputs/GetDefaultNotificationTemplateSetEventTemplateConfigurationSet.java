// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetDefaultNotificationTemplateSetEventTemplateConfigurationSet extends com.pulumi.resources.InvokeArgs {

    public static final GetDefaultNotificationTemplateSetEventTemplateConfigurationSet Empty = new GetDefaultNotificationTemplateSetEventTemplateConfigurationSet();

    /**
     * List of notification events like PIPELINE_START
     * 
     */
    @Import(name="notificationEvents", required=true)
    private List<String> notificationEvents;

    /**
     * @return List of notification events like PIPELINE_START
     * 
     */
    public List<String> notificationEvents() {
        return this.notificationEvents;
    }

    /**
     * Template reference configuration
     * 
     */
    @Import(name="template", required=true)
    private GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template;

    /**
     * @return Template reference configuration
     * 
     */
    public GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template() {
        return this.template;
    }

    private GetDefaultNotificationTemplateSetEventTemplateConfigurationSet() {}

    private GetDefaultNotificationTemplateSetEventTemplateConfigurationSet(GetDefaultNotificationTemplateSetEventTemplateConfigurationSet $) {
        this.notificationEvents = $.notificationEvents;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDefaultNotificationTemplateSetEventTemplateConfigurationSet defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDefaultNotificationTemplateSetEventTemplateConfigurationSet $;

        public Builder() {
            $ = new GetDefaultNotificationTemplateSetEventTemplateConfigurationSet();
        }

        public Builder(GetDefaultNotificationTemplateSetEventTemplateConfigurationSet defaults) {
            $ = new GetDefaultNotificationTemplateSetEventTemplateConfigurationSet(Objects.requireNonNull(defaults));
        }

        /**
         * @param notificationEvents List of notification events like PIPELINE_START
         * 
         * @return builder
         * 
         */
        public Builder notificationEvents(List<String> notificationEvents) {
            $.notificationEvents = notificationEvents;
            return this;
        }

        /**
         * @param notificationEvents List of notification events like PIPELINE_START
         * 
         * @return builder
         * 
         */
        public Builder notificationEvents(String... notificationEvents) {
            return notificationEvents(List.of(notificationEvents));
        }

        /**
         * @param template Template reference configuration
         * 
         * @return builder
         * 
         */
        public Builder template(GetDefaultNotificationTemplateSetEventTemplateConfigurationSetTemplate template) {
            $.template = template;
            return this;
        }

        public GetDefaultNotificationTemplateSetEventTemplateConfigurationSet build() {
            if ($.notificationEvents == null) {
                throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetEventTemplateConfigurationSet", "notificationEvents");
            }
            if ($.template == null) {
                throw new MissingRequiredPropertyException("GetDefaultNotificationTemplateSetEventTemplateConfigurationSet", "template");
            }
            return $;
        }
    }

}
