// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleAssignmentsPrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleAssignmentsPrincipalArgs Empty = new RoleAssignmentsPrincipalArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<String> identifier;

    /**
     * @return Identifier.
     * 
     */
    public Optional<Output<String>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Scope level.
     * 
     */
    @Import(name="scopeLevel")
    private @Nullable Output<String> scopeLevel;

    /**
     * @return Scope level.
     * 
     */
    public Optional<Output<String>> scopeLevel() {
        return Optional.ofNullable(this.scopeLevel);
    }

    /**
     * Type.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private RoleAssignmentsPrincipalArgs() {}

    private RoleAssignmentsPrincipalArgs(RoleAssignmentsPrincipalArgs $) {
        this.identifier = $.identifier;
        this.scopeLevel = $.scopeLevel;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleAssignmentsPrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleAssignmentsPrincipalArgs $;

        public Builder() {
            $ = new RoleAssignmentsPrincipalArgs();
        }

        public Builder(RoleAssignmentsPrincipalArgs defaults) {
            $ = new RoleAssignmentsPrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identifier Identifier.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Identifier.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param scopeLevel Scope level.
         * 
         * @return builder
         * 
         */
        public Builder scopeLevel(@Nullable Output<String> scopeLevel) {
            $.scopeLevel = scopeLevel;
            return this;
        }

        /**
         * @param scopeLevel Scope level.
         * 
         * @return builder
         * 
         */
        public Builder scopeLevel(String scopeLevel) {
            return scopeLevel(Output.of(scopeLevel));
        }

        /**
         * @param type Type.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public RoleAssignmentsPrincipalArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("RoleAssignmentsPrincipalArgs", "type");
            }
            return $;
        }
    }

}
