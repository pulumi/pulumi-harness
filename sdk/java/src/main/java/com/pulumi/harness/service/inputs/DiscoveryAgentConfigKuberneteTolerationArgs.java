// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiscoveryAgentConfigKuberneteTolerationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiscoveryAgentConfigKuberneteTolerationArgs Empty = new DiscoveryAgentConfigKuberneteTolerationArgs();

    /**
     * Effect indicates the taint effect to match.
     * 
     */
    @Import(name="effect", required=true)
    private Output<String> effect;

    /**
     * @return Effect indicates the taint effect to match.
     * 
     */
    public Output<String> effect() {
        return this.effect;
    }

    /**
     * The taint key that the toleration applies to.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return The taint key that the toleration applies to.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * Operator represents a key&#39;s relationship to the value.
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Operator represents a key&#39;s relationship to the value.
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * TolerationSeconds represents the period of time the toleration tolerates the taint.
     * 
     */
    @Import(name="tolerationSeconds")
    private @Nullable Output<Integer> tolerationSeconds;

    /**
     * @return TolerationSeconds represents the period of time the toleration tolerates the taint.
     * 
     */
    public Optional<Output<Integer>> tolerationSeconds() {
        return Optional.ofNullable(this.tolerationSeconds);
    }

    /**
     * The taint value the toleration matches to.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The taint value the toleration matches to.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private DiscoveryAgentConfigKuberneteTolerationArgs() {}

    private DiscoveryAgentConfigKuberneteTolerationArgs(DiscoveryAgentConfigKuberneteTolerationArgs $) {
        this.effect = $.effect;
        this.key = $.key;
        this.operator = $.operator;
        this.tolerationSeconds = $.tolerationSeconds;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiscoveryAgentConfigKuberneteTolerationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiscoveryAgentConfigKuberneteTolerationArgs $;

        public Builder() {
            $ = new DiscoveryAgentConfigKuberneteTolerationArgs();
        }

        public Builder(DiscoveryAgentConfigKuberneteTolerationArgs defaults) {
            $ = new DiscoveryAgentConfigKuberneteTolerationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param effect Effect indicates the taint effect to match.
         * 
         * @return builder
         * 
         */
        public Builder effect(Output<String> effect) {
            $.effect = effect;
            return this;
        }

        /**
         * @param effect Effect indicates the taint effect to match.
         * 
         * @return builder
         * 
         */
        public Builder effect(String effect) {
            return effect(Output.of(effect));
        }

        /**
         * @param key The taint key that the toleration applies to.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The taint key that the toleration applies to.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param operator Operator represents a key&#39;s relationship to the value.
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Operator represents a key&#39;s relationship to the value.
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param tolerationSeconds TolerationSeconds represents the period of time the toleration tolerates the taint.
         * 
         * @return builder
         * 
         */
        public Builder tolerationSeconds(@Nullable Output<Integer> tolerationSeconds) {
            $.tolerationSeconds = tolerationSeconds;
            return this;
        }

        /**
         * @param tolerationSeconds TolerationSeconds represents the period of time the toleration tolerates the taint.
         * 
         * @return builder
         * 
         */
        public Builder tolerationSeconds(Integer tolerationSeconds) {
            return tolerationSeconds(Output.of(tolerationSeconds));
        }

        /**
         * @param value The taint value the toleration matches to.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The taint value the toleration matches to.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DiscoveryAgentConfigKuberneteTolerationArgs build() {
            if ($.effect == null) {
                throw new MissingRequiredPropertyException("DiscoveryAgentConfigKuberneteTolerationArgs", "effect");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("DiscoveryAgentConfigKuberneteTolerationArgs", "key");
            }
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("DiscoveryAgentConfigKuberneteTolerationArgs", "operator");
            }
            return $;
        }
    }

}
