// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs Empty = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs();

    /**
     * Path to the file in the repository.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Path to the file in the repository.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs() {}

    private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs $) {
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs $;

        public Builder() {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs();
        }

        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs defaults) {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param path Path to the file in the repository.
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to the file in the repository.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs build() {
            if ($.path == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorGitFileArgs", "path");
            }
            return $;
        }
    }

}
