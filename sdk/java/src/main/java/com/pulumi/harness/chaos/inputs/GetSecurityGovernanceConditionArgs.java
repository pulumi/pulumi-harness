// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityGovernanceConditionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityGovernanceConditionArgs Empty = new GetSecurityGovernanceConditionArgs();

    /**
     * The ID of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the security governance condition. Either `id` or `name` must be specified.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization ID of the security governance condition
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return The organization ID of the security governance condition
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * The project ID of the security governance condition
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The project ID of the security governance condition
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private GetSecurityGovernanceConditionArgs() {}

    private GetSecurityGovernanceConditionArgs(GetSecurityGovernanceConditionArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityGovernanceConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityGovernanceConditionArgs $;

        public Builder() {
            $ = new GetSecurityGovernanceConditionArgs();
        }

        public Builder(GetSecurityGovernanceConditionArgs defaults) {
            $ = new GetSecurityGovernanceConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the security governance condition. Either `id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the security governance condition. Either `id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The name of the security governance condition. Either `id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the security governance condition. Either `id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId The organization ID of the security governance condition
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The organization ID of the security governance condition
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param projectId The project ID of the security governance condition
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The project ID of the security governance condition
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public GetSecurityGovernanceConditionArgs build() {
            return $;
        }
    }

}
