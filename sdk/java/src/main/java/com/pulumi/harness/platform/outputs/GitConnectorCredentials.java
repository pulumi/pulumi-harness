// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GitConnectorCredentialsHttp;
import com.pulumi.harness.platform.outputs.GitConnectorCredentialsSsh;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitConnectorCredentials {
    /**
     * @return Authenticate using Username and password over http(s) for the connection.
     * 
     */
    private @Nullable GitConnectorCredentialsHttp http;
    /**
     * @return Authenticate using SSH for the connection.
     * 
     */
    private @Nullable GitConnectorCredentialsSsh ssh;

    private GitConnectorCredentials() {}
    /**
     * @return Authenticate using Username and password over http(s) for the connection.
     * 
     */
    public Optional<GitConnectorCredentialsHttp> http() {
        return Optional.ofNullable(this.http);
    }
    /**
     * @return Authenticate using SSH for the connection.
     * 
     */
    public Optional<GitConnectorCredentialsSsh> ssh() {
        return Optional.ofNullable(this.ssh);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitConnectorCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GitConnectorCredentialsHttp http;
        private @Nullable GitConnectorCredentialsSsh ssh;
        public Builder() {}
        public Builder(GitConnectorCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.http = defaults.http;
    	      this.ssh = defaults.ssh;
        }

        @CustomType.Setter
        public Builder http(@Nullable GitConnectorCredentialsHttp http) {

            this.http = http;
            return this;
        }
        @CustomType.Setter
        public Builder ssh(@Nullable GitConnectorCredentialsSsh ssh) {

            this.ssh = ssh;
            return this;
        }
        public GitConnectorCredentials build() {
            final var _resultValue = new GitConnectorCredentials();
            _resultValue.http = http;
            _resultValue.ssh = ssh;
            return _resultValue;
        }
    }
}
