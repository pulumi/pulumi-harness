// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GithubConnectorApiAuthenticationGithubAppArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GithubConnectorApiAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GithubConnectorApiAuthenticationArgs Empty = new GithubConnectorApiAuthenticationArgs();

    /**
     * Configuration for using the github app for interacting with the github api.
     * 
     */
    @Import(name="githubApp")
    private @Nullable Output<GithubConnectorApiAuthenticationGithubAppArgs> githubApp;

    /**
     * @return Configuration for using the github app for interacting with the github api.
     * 
     */
    public Optional<Output<GithubConnectorApiAuthenticationGithubAppArgs>> githubApp() {
        return Optional.ofNullable(this.githubApp);
    }

    /**
     * Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Import(name="tokenRef")
    private @Nullable Output<String> tokenRef;

    /**
     * @return Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Optional<Output<String>> tokenRef() {
        return Optional.ofNullable(this.tokenRef);
    }

    private GithubConnectorApiAuthenticationArgs() {}

    private GithubConnectorApiAuthenticationArgs(GithubConnectorApiAuthenticationArgs $) {
        this.githubApp = $.githubApp;
        this.tokenRef = $.tokenRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GithubConnectorApiAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GithubConnectorApiAuthenticationArgs $;

        public Builder() {
            $ = new GithubConnectorApiAuthenticationArgs();
        }

        public Builder(GithubConnectorApiAuthenticationArgs defaults) {
            $ = new GithubConnectorApiAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param githubApp Configuration for using the github app for interacting with the github api.
         * 
         * @return builder
         * 
         */
        public Builder githubApp(@Nullable Output<GithubConnectorApiAuthenticationGithubAppArgs> githubApp) {
            $.githubApp = githubApp;
            return this;
        }

        /**
         * @param githubApp Configuration for using the github app for interacting with the github api.
         * 
         * @return builder
         * 
         */
        public Builder githubApp(GithubConnectorApiAuthenticationGithubAppArgs githubApp) {
            return githubApp(Output.of(githubApp));
        }

        /**
         * @param tokenRef Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder tokenRef(@Nullable Output<String> tokenRef) {
            $.tokenRef = tokenRef;
            return this;
        }

        /**
         * @param tokenRef Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder tokenRef(String tokenRef) {
            return tokenRef(Output.of(tokenRef));
        }

        public GithubConnectorApiAuthenticationArgs build() {
            return $;
        }
    }

}
