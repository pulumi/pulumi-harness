// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs Empty = new AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs();

    /**
     * Reference of the secret for the certificate. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Import(name="certificateRef")
    private @Nullable Output<String> certificateRef;

    /**
     * @return Reference of the secret for the certificate. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Optional<Output<String>> certificateRef() {
        return Optional.ofNullable(this.certificateRef);
    }

    private AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs() {}

    private AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs(AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs $) {
        this.certificateRef = $.certificateRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs $;

        public Builder() {
            $ = new AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs();
        }

        public Builder(AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs defaults) {
            $ = new AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateRef Reference of the secret for the certificate. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder certificateRef(@Nullable Output<String> certificateRef) {
            $.certificateRef = certificateRef;
            return this;
        }

        /**
         * @param certificateRef Reference of the secret for the certificate. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder certificateRef(String certificateRef) {
            return certificateRef(Output.of(certificateRef));
        }

        public AzureCloudProviderConnectorCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs build() {
            return $;
        }
    }

}
