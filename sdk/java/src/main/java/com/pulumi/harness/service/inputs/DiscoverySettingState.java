// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.service.inputs.DiscoverySettingImageRegistryArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiscoverySettingState extends com.pulumi.resources.ResourceArgs {

    public static final DiscoverySettingState Empty = new DiscoverySettingState();

    /**
     * Correlation ID for the request.
     * 
     */
    @Import(name="correlationId")
    private @Nullable Output<String> correlationId;

    /**
     * @return Correlation ID for the request.
     * 
     */
    public Optional<Output<String>> correlationId() {
        return Optional.ofNullable(this.correlationId);
    }

    /**
     * Timestamp when the setting was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Timestamp when the setting was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Image registry configuration.
     * 
     */
    @Import(name="imageRegistry")
    private @Nullable Output<DiscoverySettingImageRegistryArgs> imageRegistry;

    /**
     * @return Image registry configuration.
     * 
     */
    public Optional<Output<DiscoverySettingImageRegistryArgs>> imageRegistry() {
        return Optional.ofNullable(this.imageRegistry);
    }

    /**
     * The organization identifier.
     * 
     */
    @Import(name="orgIdentifier")
    private @Nullable Output<String> orgIdentifier;

    /**
     * @return The organization identifier.
     * 
     */
    public Optional<Output<String>> orgIdentifier() {
        return Optional.ofNullable(this.orgIdentifier);
    }

    /**
     * The project identifier.
     * 
     */
    @Import(name="projectIdentifier")
    private @Nullable Output<String> projectIdentifier;

    /**
     * @return The project identifier.
     * 
     */
    public Optional<Output<String>> projectIdentifier() {
        return Optional.ofNullable(this.projectIdentifier);
    }

    /**
     * Timestamp when the setting was last updated.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Timestamp when the setting was last updated.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private DiscoverySettingState() {}

    private DiscoverySettingState(DiscoverySettingState $) {
        this.correlationId = $.correlationId;
        this.createdAt = $.createdAt;
        this.imageRegistry = $.imageRegistry;
        this.orgIdentifier = $.orgIdentifier;
        this.projectIdentifier = $.projectIdentifier;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiscoverySettingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiscoverySettingState $;

        public Builder() {
            $ = new DiscoverySettingState();
        }

        public Builder(DiscoverySettingState defaults) {
            $ = new DiscoverySettingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param correlationId Correlation ID for the request.
         * 
         * @return builder
         * 
         */
        public Builder correlationId(@Nullable Output<String> correlationId) {
            $.correlationId = correlationId;
            return this;
        }

        /**
         * @param correlationId Correlation ID for the request.
         * 
         * @return builder
         * 
         */
        public Builder correlationId(String correlationId) {
            return correlationId(Output.of(correlationId));
        }

        /**
         * @param createdAt Timestamp when the setting was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Timestamp when the setting was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param imageRegistry Image registry configuration.
         * 
         * @return builder
         * 
         */
        public Builder imageRegistry(@Nullable Output<DiscoverySettingImageRegistryArgs> imageRegistry) {
            $.imageRegistry = imageRegistry;
            return this;
        }

        /**
         * @param imageRegistry Image registry configuration.
         * 
         * @return builder
         * 
         */
        public Builder imageRegistry(DiscoverySettingImageRegistryArgs imageRegistry) {
            return imageRegistry(Output.of(imageRegistry));
        }

        /**
         * @param orgIdentifier The organization identifier.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(@Nullable Output<String> orgIdentifier) {
            $.orgIdentifier = orgIdentifier;
            return this;
        }

        /**
         * @param orgIdentifier The organization identifier.
         * 
         * @return builder
         * 
         */
        public Builder orgIdentifier(String orgIdentifier) {
            return orgIdentifier(Output.of(orgIdentifier));
        }

        /**
         * @param projectIdentifier The project identifier.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(@Nullable Output<String> projectIdentifier) {
            $.projectIdentifier = projectIdentifier;
            return this;
        }

        /**
         * @param projectIdentifier The project identifier.
         * 
         * @return builder
         * 
         */
        public Builder projectIdentifier(String projectIdentifier) {
            return projectIdentifier(Output.of(projectIdentifier));
        }

        /**
         * @param updatedAt Timestamp when the setting was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Timestamp when the setting was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public DiscoverySettingState build() {
            return $;
        }
    }

}
