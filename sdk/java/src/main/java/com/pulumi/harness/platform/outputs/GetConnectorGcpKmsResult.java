// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetConnectorGcpKmsManual;
import com.pulumi.harness.platform.outputs.GetConnectorGcpKmsOidcAuthentication;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectorGcpKmsResult {
    /**
     * @return Set this flag to set this secret manager as default secret manager.
     * 
     */
    private Boolean default_;
    /**
     * @return Description of the resource.
     * 
     */
    private String description;
    /**
     * @return Enable this flag to execute on Delegate.
     * 
     */
    private Boolean executeOnDelegate;
    /**
     * @return The project ID of the GCP KMS.
     * 
     */
    private String gcpProjectId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the resource.
     * 
     */
    private String identifier;
    /**
     * @return The key name of the GCP KMS.
     * 
     */
    private String keyName;
    /**
     * @return The key ring of the GCP KMS.
     * 
     */
    private String keyRing;
    /**
     * @return Manual credential configuration.
     * 
     */
    private List<GetConnectorGcpKmsManual> manuals;
    /**
     * @return Name of the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return Authentication using harness oidc.
     * 
     */
    private List<GetConnectorGcpKmsOidcAuthentication> oidcAuthentications;
    /**
     * @return Unique identifier of the organization.
     * 
     */
    private @Nullable String orgId;
    /**
     * @return Unique identifier of the project.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return The region of the GCP KMS.
     * 
     */
    private String region;
    /**
     * @return Tags to associate with the resource.
     * 
     */
    private List<String> tags;

    private GetConnectorGcpKmsResult() {}
    /**
     * @return Set this flag to set this secret manager as default secret manager.
     * 
     */
    public Boolean default_() {
        return this.default_;
    }
    /**
     * @return Description of the resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Enable this flag to execute on Delegate.
     * 
     */
    public Boolean executeOnDelegate() {
        return this.executeOnDelegate;
    }
    /**
     * @return The project ID of the GCP KMS.
     * 
     */
    public String gcpProjectId() {
        return this.gcpProjectId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the resource.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return The key name of the GCP KMS.
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    /**
     * @return The key ring of the GCP KMS.
     * 
     */
    public String keyRing() {
        return this.keyRing;
    }
    /**
     * @return Manual credential configuration.
     * 
     */
    public List<GetConnectorGcpKmsManual> manuals() {
        return this.manuals;
    }
    /**
     * @return Name of the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Authentication using harness oidc.
     * 
     */
    public List<GetConnectorGcpKmsOidcAuthentication> oidcAuthentications() {
        return this.oidcAuthentications;
    }
    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    /**
     * @return Unique identifier of the project.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return The region of the GCP KMS.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Tags to associate with the resource.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectorGcpKmsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean default_;
        private String description;
        private Boolean executeOnDelegate;
        private String gcpProjectId;
        private String id;
        private String identifier;
        private String keyName;
        private String keyRing;
        private List<GetConnectorGcpKmsManual> manuals;
        private @Nullable String name;
        private List<GetConnectorGcpKmsOidcAuthentication> oidcAuthentications;
        private @Nullable String orgId;
        private @Nullable String projectId;
        private String region;
        private List<String> tags;
        public Builder() {}
        public Builder(GetConnectorGcpKmsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.description = defaults.description;
    	      this.executeOnDelegate = defaults.executeOnDelegate;
    	      this.gcpProjectId = defaults.gcpProjectId;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.keyName = defaults.keyName;
    	      this.keyRing = defaults.keyRing;
    	      this.manuals = defaults.manuals;
    	      this.name = defaults.name;
    	      this.oidcAuthentications = defaults.oidcAuthentications;
    	      this.orgId = defaults.orgId;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter("default")
        public Builder default_(Boolean default_) {
            if (default_ == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "default_");
            }
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder executeOnDelegate(Boolean executeOnDelegate) {
            if (executeOnDelegate == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "executeOnDelegate");
            }
            this.executeOnDelegate = executeOnDelegate;
            return this;
        }
        @CustomType.Setter
        public Builder gcpProjectId(String gcpProjectId) {
            if (gcpProjectId == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "gcpProjectId");
            }
            this.gcpProjectId = gcpProjectId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder keyName(String keyName) {
            if (keyName == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "keyName");
            }
            this.keyName = keyName;
            return this;
        }
        @CustomType.Setter
        public Builder keyRing(String keyRing) {
            if (keyRing == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "keyRing");
            }
            this.keyRing = keyRing;
            return this;
        }
        @CustomType.Setter
        public Builder manuals(List<GetConnectorGcpKmsManual> manuals) {
            if (manuals == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "manuals");
            }
            this.manuals = manuals;
            return this;
        }
        public Builder manuals(GetConnectorGcpKmsManual... manuals) {
            return manuals(List.of(manuals));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder oidcAuthentications(List<GetConnectorGcpKmsOidcAuthentication> oidcAuthentications) {
            if (oidcAuthentications == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "oidcAuthentications");
            }
            this.oidcAuthentications = oidcAuthentications;
            return this;
        }
        public Builder oidcAuthentications(GetConnectorGcpKmsOidcAuthentication... oidcAuthentications) {
            return oidcAuthentications(List.of(oidcAuthentications));
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {

            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetConnectorGcpKmsResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetConnectorGcpKmsResult build() {
            final var _resultValue = new GetConnectorGcpKmsResult();
            _resultValue.default_ = default_;
            _resultValue.description = description;
            _resultValue.executeOnDelegate = executeOnDelegate;
            _resultValue.gcpProjectId = gcpProjectId;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.keyName = keyName;
            _resultValue.keyRing = keyRing;
            _resultValue.manuals = manuals;
            _resultValue.name = name;
            _resultValue.oidcAuthentications = oidcAuthentications;
            _resultValue.orgId = orgId;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
