// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InfrastructureDefinitionTanzuArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureDefinitionTanzuArgs Empty = new InfrastructureDefinitionTanzuArgs();

    /**
     * The name of the cloud provider to connect with.
     * 
     */
    @Import(name="cloudProviderName", required=true)
    private Output<String> cloudProviderName;

    /**
     * @return The name of the cloud provider to connect with.
     * 
     */
    public Output<String> cloudProviderName() {
        return this.cloudProviderName;
    }

    /**
     * The PCF organization to use.
     * 
     */
    @Import(name="organization", required=true)
    private Output<String> organization;

    /**
     * @return The PCF organization to use.
     * 
     */
    public Output<String> organization() {
        return this.organization;
    }

    /**
     * The PCF space to deploy to.
     * 
     */
    @Import(name="space", required=true)
    private Output<String> space;

    /**
     * @return The PCF space to deploy to.
     * 
     */
    public Output<String> space() {
        return this.space;
    }

    private InfrastructureDefinitionTanzuArgs() {}

    private InfrastructureDefinitionTanzuArgs(InfrastructureDefinitionTanzuArgs $) {
        this.cloudProviderName = $.cloudProviderName;
        this.organization = $.organization;
        this.space = $.space;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureDefinitionTanzuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureDefinitionTanzuArgs $;

        public Builder() {
            $ = new InfrastructureDefinitionTanzuArgs();
        }

        public Builder(InfrastructureDefinitionTanzuArgs defaults) {
            $ = new InfrastructureDefinitionTanzuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProviderName The name of the cloud provider to connect with.
         * 
         * @return builder
         * 
         */
        public Builder cloudProviderName(Output<String> cloudProviderName) {
            $.cloudProviderName = cloudProviderName;
            return this;
        }

        /**
         * @param cloudProviderName The name of the cloud provider to connect with.
         * 
         * @return builder
         * 
         */
        public Builder cloudProviderName(String cloudProviderName) {
            return cloudProviderName(Output.of(cloudProviderName));
        }

        /**
         * @param organization The PCF organization to use.
         * 
         * @return builder
         * 
         */
        public Builder organization(Output<String> organization) {
            $.organization = organization;
            return this;
        }

        /**
         * @param organization The PCF organization to use.
         * 
         * @return builder
         * 
         */
        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        /**
         * @param space The PCF space to deploy to.
         * 
         * @return builder
         * 
         */
        public Builder space(Output<String> space) {
            $.space = space;
            return this;
        }

        /**
         * @param space The PCF space to deploy to.
         * 
         * @return builder
         * 
         */
        public Builder space(String space) {
            return space(Output.of(space));
        }

        public InfrastructureDefinitionTanzuArgs build() {
            if ($.cloudProviderName == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionTanzuArgs", "cloudProviderName");
            }
            if ($.organization == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionTanzuArgs", "organization");
            }
            if ($.space == null) {
                throw new MissingRequiredPropertyException("InfrastructureDefinitionTanzuArgs", "space");
            }
            return $;
        }
    }

}
