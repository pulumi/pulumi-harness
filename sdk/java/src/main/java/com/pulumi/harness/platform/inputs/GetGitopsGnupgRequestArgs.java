// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsGnupgRequestPublickeyArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsGnupgRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetGitopsGnupgRequestArgs Empty = new GetGitopsGnupgRequestArgs();

    /**
     * Public key details.
     * 
     */
    @Import(name="publickeys")
    private @Nullable Output<List<GetGitopsGnupgRequestPublickeyArgs>> publickeys;

    /**
     * @return Public key details.
     * 
     */
    public Optional<Output<List<GetGitopsGnupgRequestPublickeyArgs>>> publickeys() {
        return Optional.ofNullable(this.publickeys);
    }

    /**
     * Indicates if the GnuPG Key should be inserted if not present or updated if present.
     * 
     */
    @Import(name="upsert")
    private @Nullable Output<Boolean> upsert;

    /**
     * @return Indicates if the GnuPG Key should be inserted if not present or updated if present.
     * 
     */
    public Optional<Output<Boolean>> upsert() {
        return Optional.ofNullable(this.upsert);
    }

    private GetGitopsGnupgRequestArgs() {}

    private GetGitopsGnupgRequestArgs(GetGitopsGnupgRequestArgs $) {
        this.publickeys = $.publickeys;
        this.upsert = $.upsert;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsGnupgRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsGnupgRequestArgs $;

        public Builder() {
            $ = new GetGitopsGnupgRequestArgs();
        }

        public Builder(GetGitopsGnupgRequestArgs defaults) {
            $ = new GetGitopsGnupgRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param publickeys Public key details.
         * 
         * @return builder
         * 
         */
        public Builder publickeys(@Nullable Output<List<GetGitopsGnupgRequestPublickeyArgs>> publickeys) {
            $.publickeys = publickeys;
            return this;
        }

        /**
         * @param publickeys Public key details.
         * 
         * @return builder
         * 
         */
        public Builder publickeys(List<GetGitopsGnupgRequestPublickeyArgs> publickeys) {
            return publickeys(Output.of(publickeys));
        }

        /**
         * @param publickeys Public key details.
         * 
         * @return builder
         * 
         */
        public Builder publickeys(GetGitopsGnupgRequestPublickeyArgs... publickeys) {
            return publickeys(List.of(publickeys));
        }

        /**
         * @param upsert Indicates if the GnuPG Key should be inserted if not present or updated if present.
         * 
         * @return builder
         * 
         */
        public Builder upsert(@Nullable Output<Boolean> upsert) {
            $.upsert = upsert;
            return this;
        }

        /**
         * @param upsert Indicates if the GnuPG Key should be inserted if not present or updated if present.
         * 
         * @return builder
         * 
         */
        public Builder upsert(Boolean upsert) {
            return upsert(Output.of(upsert));
        }

        public GetGitopsGnupgRequestArgs build() {
            return $;
        }
    }

}
