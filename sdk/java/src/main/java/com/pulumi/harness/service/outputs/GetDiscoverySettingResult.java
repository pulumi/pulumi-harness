// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.service.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.service.outputs.GetDiscoverySettingImageRegistry;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDiscoverySettingResult {
    /**
     * @return Correlation ID for the request.
     * 
     */
    private @Nullable String correlationId;
    /**
     * @return Timestamp when the setting was created.
     * 
     */
    private String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Image registry configuration.
     * 
     */
    private List<GetDiscoverySettingImageRegistry> imageRegistries;
    /**
     * @return The organization identifier.
     * 
     */
    private @Nullable String orgIdentifier;
    /**
     * @return The project identifier.
     * 
     */
    private @Nullable String projectIdentifier;
    /**
     * @return Timestamp when the setting was last updated.
     * 
     */
    private String updatedAt;

    private GetDiscoverySettingResult() {}
    /**
     * @return Correlation ID for the request.
     * 
     */
    public Optional<String> correlationId() {
        return Optional.ofNullable(this.correlationId);
    }
    /**
     * @return Timestamp when the setting was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Image registry configuration.
     * 
     */
    public List<GetDiscoverySettingImageRegistry> imageRegistries() {
        return this.imageRegistries;
    }
    /**
     * @return The organization identifier.
     * 
     */
    public Optional<String> orgIdentifier() {
        return Optional.ofNullable(this.orgIdentifier);
    }
    /**
     * @return The project identifier.
     * 
     */
    public Optional<String> projectIdentifier() {
        return Optional.ofNullable(this.projectIdentifier);
    }
    /**
     * @return Timestamp when the setting was last updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoverySettingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String correlationId;
        private String createdAt;
        private String id;
        private List<GetDiscoverySettingImageRegistry> imageRegistries;
        private @Nullable String orgIdentifier;
        private @Nullable String projectIdentifier;
        private String updatedAt;
        public Builder() {}
        public Builder(GetDiscoverySettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.correlationId = defaults.correlationId;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.imageRegistries = defaults.imageRegistries;
    	      this.orgIdentifier = defaults.orgIdentifier;
    	      this.projectIdentifier = defaults.projectIdentifier;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder correlationId(@Nullable String correlationId) {

            this.correlationId = correlationId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetDiscoverySettingResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDiscoverySettingResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageRegistries(List<GetDiscoverySettingImageRegistry> imageRegistries) {
            if (imageRegistries == null) {
              throw new MissingRequiredPropertyException("GetDiscoverySettingResult", "imageRegistries");
            }
            this.imageRegistries = imageRegistries;
            return this;
        }
        public Builder imageRegistries(GetDiscoverySettingImageRegistry... imageRegistries) {
            return imageRegistries(List.of(imageRegistries));
        }
        @CustomType.Setter
        public Builder orgIdentifier(@Nullable String orgIdentifier) {

            this.orgIdentifier = orgIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder projectIdentifier(@Nullable String projectIdentifier) {

            this.projectIdentifier = projectIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetDiscoverySettingResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetDiscoverySettingResult build() {
            final var _resultValue = new GetDiscoverySettingResult();
            _resultValue.correlationId = correlationId;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.imageRegistries = imageRegistries;
            _resultValue.orgIdentifier = orgIdentifier;
            _resultValue.projectIdentifier = projectIdentifier;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
