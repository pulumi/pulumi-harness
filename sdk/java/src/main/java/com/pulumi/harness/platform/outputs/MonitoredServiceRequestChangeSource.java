// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredServiceRequestChangeSource {
    /**
     * @return Category of the change source.
     * 
     */
    private String category;
    /**
     * @return Enable or disable the change source.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Identifier of the change source.
     * 
     */
    private String identifier;
    /**
     * @return Name of the change source.
     * 
     */
    private String name;
    /**
     * @return Specification of the change source. Depends on the type of the change source.
     * 
     */
    private @Nullable String spec;
    /**
     * @return Type of the change source.
     * 
     */
    private String type;

    private MonitoredServiceRequestChangeSource() {}
    /**
     * @return Category of the change source.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return Enable or disable the change source.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Identifier of the change source.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return Name of the change source.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specification of the change source. Depends on the type of the change source.
     * 
     */
    public Optional<String> spec() {
        return Optional.ofNullable(this.spec);
    }
    /**
     * @return Type of the change source.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredServiceRequestChangeSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        private @Nullable Boolean enabled;
        private String identifier;
        private String name;
        private @Nullable String spec;
        private String type;
        public Builder() {}
        public Builder(MonitoredServiceRequestChangeSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.enabled = defaults.enabled;
    	      this.identifier = defaults.identifier;
    	      this.name = defaults.name;
    	      this.spec = defaults.spec;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestChangeSource", "category");
            }
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestChangeSource", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestChangeSource", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder spec(@Nullable String spec) {

            this.spec = spec;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("MonitoredServiceRequestChangeSource", "type");
            }
            this.type = type;
            return this;
        }
        public MonitoredServiceRequestChangeSource build() {
            final var _resultValue = new MonitoredServiceRequestChangeSource();
            _resultValue.category = category;
            _resultValue.enabled = enabled;
            _resultValue.identifier = identifier;
            _resultValue.name = name;
            _resultValue.spec = spec;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
