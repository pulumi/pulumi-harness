// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.chaos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfrastructureV2ProxyArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureV2ProxyArgs Empty = new InfrastructureV2ProxyArgs();

    /**
     * HTTP proxy URL.
     * 
     */
    @Import(name="httpProxy")
    private @Nullable Output<String> httpProxy;

    /**
     * @return HTTP proxy URL.
     * 
     */
    public Optional<Output<String>> httpProxy() {
        return Optional.ofNullable(this.httpProxy);
    }

    /**
     * HTTPS proxy URL.
     * 
     */
    @Import(name="httpsProxy")
    private @Nullable Output<String> httpsProxy;

    /**
     * @return HTTPS proxy URL.
     * 
     */
    public Optional<Output<String>> httpsProxy() {
        return Optional.ofNullable(this.httpsProxy);
    }

    /**
     * List of hosts that should not use proxy.
     * 
     */
    @Import(name="noProxy")
    private @Nullable Output<String> noProxy;

    /**
     * @return List of hosts that should not use proxy.
     * 
     */
    public Optional<Output<String>> noProxy() {
        return Optional.ofNullable(this.noProxy);
    }

    /**
     * Proxy URL.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return Proxy URL.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private InfrastructureV2ProxyArgs() {}

    private InfrastructureV2ProxyArgs(InfrastructureV2ProxyArgs $) {
        this.httpProxy = $.httpProxy;
        this.httpsProxy = $.httpsProxy;
        this.noProxy = $.noProxy;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureV2ProxyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureV2ProxyArgs $;

        public Builder() {
            $ = new InfrastructureV2ProxyArgs();
        }

        public Builder(InfrastructureV2ProxyArgs defaults) {
            $ = new InfrastructureV2ProxyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpProxy HTTP proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder httpProxy(@Nullable Output<String> httpProxy) {
            $.httpProxy = httpProxy;
            return this;
        }

        /**
         * @param httpProxy HTTP proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder httpProxy(String httpProxy) {
            return httpProxy(Output.of(httpProxy));
        }

        /**
         * @param httpsProxy HTTPS proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxy(@Nullable Output<String> httpsProxy) {
            $.httpsProxy = httpsProxy;
            return this;
        }

        /**
         * @param httpsProxy HTTPS proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxy(String httpsProxy) {
            return httpsProxy(Output.of(httpsProxy));
        }

        /**
         * @param noProxy List of hosts that should not use proxy.
         * 
         * @return builder
         * 
         */
        public Builder noProxy(@Nullable Output<String> noProxy) {
            $.noProxy = noProxy;
            return this;
        }

        /**
         * @param noProxy List of hosts that should not use proxy.
         * 
         * @return builder
         * 
         */
        public Builder noProxy(String noProxy) {
            return noProxy(Output.of(noProxy));
        }

        /**
         * @param url Proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Proxy URL.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public InfrastructureV2ProxyArgs build() {
            if ($.url == null) {
                throw new MissingRequiredPropertyException("InfrastructureV2ProxyArgs", "url");
            }
            return $;
        }
    }

}
