// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureFlagEnvironmentAddTargetRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureFlagEnvironmentAddTargetRuleArgs Empty = new FeatureFlagEnvironmentAddTargetRuleArgs();

    /**
     * The targets that should be served this variation
     * 
     */
    @Import(name="targets")
    private @Nullable Output<List<String>> targets;

    /**
     * @return The targets that should be served this variation
     * 
     */
    public Optional<Output<List<String>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    /**
     * The identifier of the variation
     * 
     */
    @Import(name="variation")
    private @Nullable Output<String> variation;

    /**
     * @return The identifier of the variation
     * 
     */
    public Optional<Output<String>> variation() {
        return Optional.ofNullable(this.variation);
    }

    private FeatureFlagEnvironmentAddTargetRuleArgs() {}

    private FeatureFlagEnvironmentAddTargetRuleArgs(FeatureFlagEnvironmentAddTargetRuleArgs $) {
        this.targets = $.targets;
        this.variation = $.variation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureFlagEnvironmentAddTargetRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureFlagEnvironmentAddTargetRuleArgs $;

        public Builder() {
            $ = new FeatureFlagEnvironmentAddTargetRuleArgs();
        }

        public Builder(FeatureFlagEnvironmentAddTargetRuleArgs defaults) {
            $ = new FeatureFlagEnvironmentAddTargetRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targets The targets that should be served this variation
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Output<List<String>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets The targets that should be served this variation
         * 
         * @return builder
         * 
         */
        public Builder targets(List<String> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets The targets that should be served this variation
         * 
         * @return builder
         * 
         */
        public Builder targets(String... targets) {
            return targets(List.of(targets));
        }

        /**
         * @param variation The identifier of the variation
         * 
         * @return builder
         * 
         */
        public Builder variation(@Nullable Output<String> variation) {
            $.variation = variation;
            return this;
        }

        /**
         * @param variation The identifier of the variation
         * 
         * @return builder
         * 
         */
        public Builder variation(String variation) {
            return variation(Output.of(variation));
        }

        public FeatureFlagEnvironmentAddTargetRuleArgs build() {
            return $;
        }
    }

}
