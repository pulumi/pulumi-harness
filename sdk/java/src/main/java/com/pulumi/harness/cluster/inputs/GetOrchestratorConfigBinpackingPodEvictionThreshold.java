// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cluster.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;


public final class GetOrchestratorConfigBinpackingPodEvictionThreshold extends com.pulumi.resources.InvokeArgs {

    public static final GetOrchestratorConfigBinpackingPodEvictionThreshold Empty = new GetOrchestratorConfigBinpackingPodEvictionThreshold();

    /**
     * CPU percentage for considering a node as underutilized
     * 
     */
    @Import(name="cpu", required=true)
    private Double cpu;

    /**
     * @return CPU percentage for considering a node as underutilized
     * 
     */
    public Double cpu() {
        return this.cpu;
    }

    /**
     * Memory percentage for considering a node as underutilized
     * 
     */
    @Import(name="memory", required=true)
    private Double memory;

    /**
     * @return Memory percentage for considering a node as underutilized
     * 
     */
    public Double memory() {
        return this.memory;
    }

    private GetOrchestratorConfigBinpackingPodEvictionThreshold() {}

    private GetOrchestratorConfigBinpackingPodEvictionThreshold(GetOrchestratorConfigBinpackingPodEvictionThreshold $) {
        this.cpu = $.cpu;
        this.memory = $.memory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrchestratorConfigBinpackingPodEvictionThreshold defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrchestratorConfigBinpackingPodEvictionThreshold $;

        public Builder() {
            $ = new GetOrchestratorConfigBinpackingPodEvictionThreshold();
        }

        public Builder(GetOrchestratorConfigBinpackingPodEvictionThreshold defaults) {
            $ = new GetOrchestratorConfigBinpackingPodEvictionThreshold(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpu CPU percentage for considering a node as underutilized
         * 
         * @return builder
         * 
         */
        public Builder cpu(Double cpu) {
            $.cpu = cpu;
            return this;
        }

        /**
         * @param memory Memory percentage for considering a node as underutilized
         * 
         * @return builder
         * 
         */
        public Builder memory(Double memory) {
            $.memory = memory;
            return this;
        }

        public GetOrchestratorConfigBinpackingPodEvictionThreshold build() {
            if ($.cpu == null) {
                throw new MissingRequiredPropertyException("GetOrchestratorConfigBinpackingPodEvictionThreshold", "cpu");
            }
            if ($.memory == null) {
                throw new MissingRequiredPropertyException("GetOrchestratorConfigBinpackingPodEvictionThreshold", "memory");
            }
            return $;
        }
    }

}
