// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabTokenRefArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs Empty = new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs();

    /**
     * The GitLab API URL to talk to. If blank, uses https://gitlab.com/.
     * 
     */
    @Import(name="api")
    private @Nullable Output<String> api;

    /**
     * @return The GitLab API URL to talk to. If blank, uses https://gitlab.com/.
     * 
     */
    public Optional<Output<String>> api() {
        return Optional.ofNullable(this.api);
    }

    /**
     * Labels is used to filter the PRs that you want to target.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<String>> labels;

    /**
     * @return Labels is used to filter the PRs that you want to target.
     * 
     */
    public Optional<Output<List<String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * GitLab project to scan.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return GitLab project to scan.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * additional MRs filter to get only those with a certain state. Default:  &#34;&#34; (all states).
     * 
     */
    @Import(name="pullRequestState")
    private @Nullable Output<String> pullRequestState;

    /**
     * @return additional MRs filter to get only those with a certain state. Default:  &#34;&#34; (all states).
     * 
     */
    public Optional<Output<String>> pullRequestState() {
        return Optional.ofNullable(this.pullRequestState);
    }

    /**
     * Authentication token reference.
     * 
     */
    @Import(name="tokenRef")
    private @Nullable Output<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabTokenRefArgs> tokenRef;

    /**
     * @return Authentication token reference.
     * 
     */
    public Optional<Output<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabTokenRefArgs>> tokenRef() {
        return Optional.ofNullable(this.tokenRef);
    }

    private GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs() {}

    private GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs $) {
        this.api = $.api;
        this.labels = $.labels;
        this.project = $.project;
        this.pullRequestState = $.pullRequestState;
        this.tokenRef = $.tokenRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs $;

        public Builder() {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs();
        }

        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs defaults) {
            $ = new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param api The GitLab API URL to talk to. If blank, uses https://gitlab.com/.
         * 
         * @return builder
         * 
         */
        public Builder api(@Nullable Output<String> api) {
            $.api = api;
            return this;
        }

        /**
         * @param api The GitLab API URL to talk to. If blank, uses https://gitlab.com/.
         * 
         * @return builder
         * 
         */
        public Builder api(String api) {
            return api(Output.of(api));
        }

        /**
         * @param labels Labels is used to filter the PRs that you want to target.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels is used to filter the PRs that you want to target.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels Labels is used to filter the PRs that you want to target.
         * 
         * @return builder
         * 
         */
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param project GitLab project to scan.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project GitLab project to scan.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pullRequestState additional MRs filter to get only those with a certain state. Default:  &#34;&#34; (all states).
         * 
         * @return builder
         * 
         */
        public Builder pullRequestState(@Nullable Output<String> pullRequestState) {
            $.pullRequestState = pullRequestState;
            return this;
        }

        /**
         * @param pullRequestState additional MRs filter to get only those with a certain state. Default:  &#34;&#34; (all states).
         * 
         * @return builder
         * 
         */
        public Builder pullRequestState(String pullRequestState) {
            return pullRequestState(Output.of(pullRequestState));
        }

        /**
         * @param tokenRef Authentication token reference.
         * 
         * @return builder
         * 
         */
        public Builder tokenRef(@Nullable Output<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabTokenRefArgs> tokenRef) {
            $.tokenRef = tokenRef;
            return this;
        }

        /**
         * @param tokenRef Authentication token reference.
         * 
         * @return builder
         * 
         */
        public Builder tokenRef(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabTokenRefArgs tokenRef) {
            return tokenRef(Output.of(tokenRef));
        }

        public GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs build() {
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorPullRequestGitlabArgs", "project");
            }
            return $;
        }
    }

}
