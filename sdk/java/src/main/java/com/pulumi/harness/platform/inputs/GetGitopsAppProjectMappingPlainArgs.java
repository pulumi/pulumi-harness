// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsAppProjectMappingPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsAppProjectMappingPlainArgs Empty = new GetGitopsAppProjectMappingPlainArgs();

    /**
     * Account identifier of the GitOps agent&#39;s Application Project.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    @Import(name="accountId")
    private @Nullable String accountId;

    /**
     * @return Account identifier of the GitOps agent&#39;s Application Project.
     * 
     * @deprecated
     * This field is deprecated and will be removed in a future release.
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future release. */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Agent identifier for which the ArgoCD and Harness project mapping is to be created.
     * 
     */
    @Import(name="agentId", required=true)
    private String agentId;

    /**
     * @return Agent identifier for which the ArgoCD and Harness project mapping is to be created.
     * 
     */
    public String agentId() {
        return this.agentId;
    }

    /**
     * ArgoCD Project name which is to be mapped to the Harness project.
     * 
     */
    @Import(name="argoProjectName", required=true)
    private String argoProjectName;

    /**
     * @return ArgoCD Project name which is to be mapped to the Harness project.
     * 
     */
    public String argoProjectName() {
        return this.argoProjectName;
    }

    /**
     * Organization identifier of the GitOps agent&#39;s Application Project.
     * 
     */
    @Import(name="orgId", required=true)
    private String orgId;

    /**
     * @return Organization identifier of the GitOps agent&#39;s Application Project.
     * 
     */
    public String orgId() {
        return this.orgId;
    }

    /**
     * Project identifier of the GitOps agent&#39;s Application Project.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return Project identifier of the GitOps agent&#39;s Application Project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetGitopsAppProjectMappingPlainArgs() {}

    private GetGitopsAppProjectMappingPlainArgs(GetGitopsAppProjectMappingPlainArgs $) {
        this.accountId = $.accountId;
        this.agentId = $.agentId;
        this.argoProjectName = $.argoProjectName;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsAppProjectMappingPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsAppProjectMappingPlainArgs $;

        public Builder() {
            $ = new GetGitopsAppProjectMappingPlainArgs();
        }

        public Builder(GetGitopsAppProjectMappingPlainArgs defaults) {
            $ = new GetGitopsAppProjectMappingPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account identifier of the GitOps agent&#39;s Application Project.
         * 
         * @return builder
         * 
         * @deprecated
         * This field is deprecated and will be removed in a future release.
         * 
         */
        @Deprecated /* This field is deprecated and will be removed in a future release. */
        public Builder accountId(@Nullable String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param agentId Agent identifier for which the ArgoCD and Harness project mapping is to be created.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param argoProjectName ArgoCD Project name which is to be mapped to the Harness project.
         * 
         * @return builder
         * 
         */
        public Builder argoProjectName(String argoProjectName) {
            $.argoProjectName = argoProjectName;
            return this;
        }

        /**
         * @param orgId Organization identifier of the GitOps agent&#39;s Application Project.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param projectId Project identifier of the GitOps agent&#39;s Application Project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetGitopsAppProjectMappingPlainArgs build() {
            if ($.agentId == null) {
                throw new MissingRequiredPropertyException("GetGitopsAppProjectMappingPlainArgs", "agentId");
            }
            if ($.argoProjectName == null) {
                throw new MissingRequiredPropertyException("GetGitopsAppProjectMappingPlainArgs", "argoProjectName");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetGitopsAppProjectMappingPlainArgs", "orgId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetGitopsAppProjectMappingPlainArgs", "projectId");
            }
            return $;
        }
    }

}
