// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.DelegatetokenArgs;
import com.pulumi.harness.platform.inputs.DelegatetokenState;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating delegate tokens. Delegate tokens can be created and revoked. Revoked tokens immediately stop functioning and are only purged after 30 days, meaning you cannot recreate a token with the same name within that period.
 * To revoke a token, set token_status field to &#34;REVOKED&#34;.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.Delegatetoken;
 * import com.pulumi.harness.platform.DelegatetokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create delegate token at account level
 *         var accountLevel = new Delegatetoken("accountLevel", DelegatetokenArgs.builder()
 *             .name("account-delegate-token")
 *             .accountId("account_id")
 *             .build());
 * 
 *         // Create delegate token at organization level
 *         var orgLevel = new Delegatetoken("orgLevel", DelegatetokenArgs.builder()
 *             .name("org-delegate-token")
 *             .accountId("account_id")
 *             .orgId("org_id")
 *             .build());
 * 
 *         // Create delegate token at project level
 *         var projectLevel = new Delegatetoken("projectLevel", DelegatetokenArgs.builder()
 *             .name("project-delegate-token")
 *             .accountId("account_id")
 *             .orgId("org_id")
 *             .projectId("project_id")
 *             .build());
 * 
 *         // Create delegate token with auto-expiry
 *         var expiryToken = new Delegatetoken("expiryToken", DelegatetokenArgs.builder()
 *             .name("expiry-delegate-token")
 *             .accountId("account_id")
 *             .revokeAfter(1769689600000)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="harness:platform/delegatetoken:Delegatetoken")
public class Delegatetoken extends com.pulumi.resources.CustomResource {
    /**
     * Account Identifier for the Entity
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Account Identifier for the Entity
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Time when the delegate token is created. This is an epoch timestamp.
     * 
     */
    @Export(name="createdAt", refs={Integer.class}, tree="[0]")
    private Output<Integer> createdAt;

    /**
     * @return Time when the delegate token is created. This is an epoch timestamp.
     * 
     */
    public Output<Integer> createdAt() {
        return this.createdAt;
    }
    /**
     * created by details
     * 
     */
    @Export(name="createdBy", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> createdBy;

    /**
     * @return created by details
     * 
     */
    public Output<Map<String,String>> createdBy() {
        return this.createdBy;
    }
    /**
     * Name of the delegate token
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the delegate token
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Org Identifier for the Entity
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Org Identifier for the Entity
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Project Identifier for the Entity
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Project Identifier for the Entity
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
     * 
     */
    @Export(name="revokeAfter", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> revokeAfter;

    /**
     * @return Epoch time in milliseconds after which the token will be marked as revoked. There can be a delay of up to one hour from the epoch value provided and actual revoking of the token.
     * 
     */
    public Output<Optional<Integer>> revokeAfter() {
        return Codegen.optional(this.revokeAfter);
    }
    /**
     * Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
     * 
     */
    @Export(name="tokenStatus", refs={String.class}, tree="[0]")
    private Output<String> tokenStatus;

    /**
     * @return Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed
     * 
     */
    public Output<String> tokenStatus() {
        return this.tokenStatus;
    }
    /**
     * Value of the delegate token. Encoded in base64.
     * 
     */
    @Export(name="value", refs={String.class}, tree="[0]")
    private Output<String> value;

    /**
     * @return Value of the delegate token. Encoded in base64.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Delegatetoken(java.lang.String name) {
        this(name, DelegatetokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Delegatetoken(java.lang.String name, DelegatetokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Delegatetoken(java.lang.String name, DelegatetokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/delegatetoken:Delegatetoken", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Delegatetoken(java.lang.String name, Output<java.lang.String> id, @Nullable DelegatetokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/delegatetoken:Delegatetoken", name, state, makeResourceOptions(options, id), false);
    }

    private static DelegatetokenArgs makeArgs(DelegatetokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DelegatetokenArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Delegatetoken get(java.lang.String name, Output<java.lang.String> id, @Nullable DelegatetokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Delegatetoken(name, id, state, options);
    }
}
