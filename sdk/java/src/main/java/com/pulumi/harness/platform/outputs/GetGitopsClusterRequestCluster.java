// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetGitopsClusterRequestClusterConfig;
import com.pulumi.harness.platform.outputs.GetGitopsClusterRequestClusterInfo;
import com.pulumi.harness.platform.outputs.GetGitopsClusterRequestClusterRefreshRequestedAt;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGitopsClusterRequestCluster {
    /**
     * @return Annotations for cluster secret metadata.
     * 
     */
    private @Nullable Map<String,String> annotations;
    /**
     * @return Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
     * 
     */
    private @Nullable Boolean clusterResources;
    /**
     * @return GitOps cluster config.
     * 
     */
    private @Nullable List<GetGitopsClusterRequestClusterConfig> configs;
    /**
     * @return Information about cluster cache and state.
     * 
     */
    private List<GetGitopsClusterRequestClusterInfo> infos;
    /**
     * @return Labels for cluster secret metadata.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return Name of the cluster. If omitted, the server address will be used.
     * 
     */
    private @Nullable String name;
    /**
     * @return List of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
     * 
     */
    private @Nullable List<String> namespaces;
    /**
     * @return The ArgoCD project name corresponding to this GitOps cluster. An empty string means that the GitOps cluster belongs to the default project created by Harness.
     * 
     */
    private @Nullable String project;
    /**
     * @return Time when cluster cache refresh has been requested.
     * 
     */
    private @Nullable List<GetGitopsClusterRequestClusterRefreshRequestedAt> refreshRequestedAts;
    /**
     * @return API server URL of the kubernetes cluster.
     * 
     */
    private @Nullable String server;
    /**
     * @return Shard number to be managed by a specific application controller pod. Calculated on the fly by the application controller if not specified.
     * 
     */
    private @Nullable String shard;

    private GetGitopsClusterRequestCluster() {}
    /**
     * @return Annotations for cluster secret metadata.
     * 
     */
    public Map<String,String> annotations() {
        return this.annotations == null ? Map.of() : this.annotations;
    }
    /**
     * @return Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
     * 
     */
    public Optional<Boolean> clusterResources() {
        return Optional.ofNullable(this.clusterResources);
    }
    /**
     * @return GitOps cluster config.
     * 
     */
    public List<GetGitopsClusterRequestClusterConfig> configs() {
        return this.configs == null ? List.of() : this.configs;
    }
    /**
     * @return Information about cluster cache and state.
     * 
     */
    public List<GetGitopsClusterRequestClusterInfo> infos() {
        return this.infos;
    }
    /**
     * @return Labels for cluster secret metadata.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Name of the cluster. If omitted, the server address will be used.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return List of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
     * 
     */
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    /**
     * @return The ArgoCD project name corresponding to this GitOps cluster. An empty string means that the GitOps cluster belongs to the default project created by Harness.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return Time when cluster cache refresh has been requested.
     * 
     */
    public List<GetGitopsClusterRequestClusterRefreshRequestedAt> refreshRequestedAts() {
        return this.refreshRequestedAts == null ? List.of() : this.refreshRequestedAts;
    }
    /**
     * @return API server URL of the kubernetes cluster.
     * 
     */
    public Optional<String> server() {
        return Optional.ofNullable(this.server);
    }
    /**
     * @return Shard number to be managed by a specific application controller pod. Calculated on the fly by the application controller if not specified.
     * 
     */
    public Optional<String> shard() {
        return Optional.ofNullable(this.shard);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGitopsClusterRequestCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> annotations;
        private @Nullable Boolean clusterResources;
        private @Nullable List<GetGitopsClusterRequestClusterConfig> configs;
        private List<GetGitopsClusterRequestClusterInfo> infos;
        private @Nullable Map<String,String> labels;
        private @Nullable String name;
        private @Nullable List<String> namespaces;
        private @Nullable String project;
        private @Nullable List<GetGitopsClusterRequestClusterRefreshRequestedAt> refreshRequestedAts;
        private @Nullable String server;
        private @Nullable String shard;
        public Builder() {}
        public Builder(GetGitopsClusterRequestCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.clusterResources = defaults.clusterResources;
    	      this.configs = defaults.configs;
    	      this.infos = defaults.infos;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.namespaces = defaults.namespaces;
    	      this.project = defaults.project;
    	      this.refreshRequestedAts = defaults.refreshRequestedAts;
    	      this.server = defaults.server;
    	      this.shard = defaults.shard;
        }

        @CustomType.Setter
        public Builder annotations(@Nullable Map<String,String> annotations) {

            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder clusterResources(@Nullable Boolean clusterResources) {

            this.clusterResources = clusterResources;
            return this;
        }
        @CustomType.Setter
        public Builder configs(@Nullable List<GetGitopsClusterRequestClusterConfig> configs) {

            this.configs = configs;
            return this;
        }
        public Builder configs(GetGitopsClusterRequestClusterConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder infos(List<GetGitopsClusterRequestClusterInfo> infos) {
            if (infos == null) {
              throw new MissingRequiredPropertyException("GetGitopsClusterRequestCluster", "infos");
            }
            this.infos = infos;
            return this;
        }
        public Builder infos(GetGitopsClusterRequestClusterInfo... infos) {
            return infos(List.of(infos));
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespaces(@Nullable List<String> namespaces) {

            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder refreshRequestedAts(@Nullable List<GetGitopsClusterRequestClusterRefreshRequestedAt> refreshRequestedAts) {

            this.refreshRequestedAts = refreshRequestedAts;
            return this;
        }
        public Builder refreshRequestedAts(GetGitopsClusterRequestClusterRefreshRequestedAt... refreshRequestedAts) {
            return refreshRequestedAts(List.of(refreshRequestedAts));
        }
        @CustomType.Setter
        public Builder server(@Nullable String server) {

            this.server = server;
            return this;
        }
        @CustomType.Setter
        public Builder shard(@Nullable String shard) {

            this.shard = shard;
            return this;
        }
        public GetGitopsClusterRequestCluster build() {
            final var _resultValue = new GetGitopsClusterRequestCluster();
            _resultValue.annotations = annotations;
            _resultValue.clusterResources = clusterResources;
            _resultValue.configs = configs;
            _resultValue.infos = infos;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.namespaces = namespaces;
            _resultValue.project = project;
            _resultValue.refreshRequestedAts = refreshRequestedAts;
            _resultValue.server = server;
            _resultValue.shard = shard;
            return _resultValue;
        }
    }
}
