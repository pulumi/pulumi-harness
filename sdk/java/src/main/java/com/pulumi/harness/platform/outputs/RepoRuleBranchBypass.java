// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepoRuleBranchBypass {
    /**
     * @return Allow users with repository edit permission to bypass.
     * 
     */
    private @Nullable Boolean repoOwners;
    /**
     * @return List of user ids with who can bypass.
     * 
     */
    private @Nullable List<String> userIds;

    private RepoRuleBranchBypass() {}
    /**
     * @return Allow users with repository edit permission to bypass.
     * 
     */
    public Optional<Boolean> repoOwners() {
        return Optional.ofNullable(this.repoOwners);
    }
    /**
     * @return List of user ids with who can bypass.
     * 
     */
    public List<String> userIds() {
        return this.userIds == null ? List.of() : this.userIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepoRuleBranchBypass defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean repoOwners;
        private @Nullable List<String> userIds;
        public Builder() {}
        public Builder(RepoRuleBranchBypass defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.repoOwners = defaults.repoOwners;
    	      this.userIds = defaults.userIds;
        }

        @CustomType.Setter
        public Builder repoOwners(@Nullable Boolean repoOwners) {

            this.repoOwners = repoOwners;
            return this;
        }
        @CustomType.Setter
        public Builder userIds(@Nullable List<String> userIds) {

            this.userIds = userIds;
            return this;
        }
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }
        public RepoRuleBranchBypass build() {
            final var _resultValue = new RepoRuleBranchBypass();
            _resultValue.repoOwners = repoOwners;
            _resultValue.userIds = userIds;
            return _resultValue;
        }
    }
}
