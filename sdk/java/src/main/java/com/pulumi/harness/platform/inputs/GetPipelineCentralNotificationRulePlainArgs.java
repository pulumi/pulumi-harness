// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.inputs.GetPipelineCentralNotificationRuleCustomNotificationTemplateRef;
import com.pulumi.harness.platform.inputs.GetPipelineCentralNotificationRuleNotificationCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPipelineCentralNotificationRulePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPipelineCentralNotificationRulePlainArgs Empty = new GetPipelineCentralNotificationRulePlainArgs();

    @Import(name="customNotificationTemplateRef")
    private @Nullable GetPipelineCentralNotificationRuleCustomNotificationTemplateRef customNotificationTemplateRef;

    public Optional<GetPipelineCentralNotificationRuleCustomNotificationTemplateRef> customNotificationTemplateRef() {
        return Optional.ofNullable(this.customNotificationTemplateRef);
    }

    @Import(name="identifier", required=true)
    private String identifier;

    public String identifier() {
        return this.identifier;
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="notificationChannelRefs")
    private @Nullable List<String> notificationChannelRefs;

    public Optional<List<String>> notificationChannelRefs() {
        return Optional.ofNullable(this.notificationChannelRefs);
    }

    @Import(name="notificationConditions")
    private @Nullable List<GetPipelineCentralNotificationRuleNotificationCondition> notificationConditions;

    public Optional<List<GetPipelineCentralNotificationRuleNotificationCondition>> notificationConditions() {
        return Optional.ofNullable(this.notificationConditions);
    }

    @Import(name="org")
    private @Nullable String org;

    public Optional<String> org() {
        return Optional.ofNullable(this.org);
    }

    @Import(name="project")
    private @Nullable String project;

    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="status")
    private @Nullable String status;

    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetPipelineCentralNotificationRulePlainArgs() {}

    private GetPipelineCentralNotificationRulePlainArgs(GetPipelineCentralNotificationRulePlainArgs $) {
        this.customNotificationTemplateRef = $.customNotificationTemplateRef;
        this.identifier = $.identifier;
        this.name = $.name;
        this.notificationChannelRefs = $.notificationChannelRefs;
        this.notificationConditions = $.notificationConditions;
        this.org = $.org;
        this.project = $.project;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPipelineCentralNotificationRulePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPipelineCentralNotificationRulePlainArgs $;

        public Builder() {
            $ = new GetPipelineCentralNotificationRulePlainArgs();
        }

        public Builder(GetPipelineCentralNotificationRulePlainArgs defaults) {
            $ = new GetPipelineCentralNotificationRulePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder customNotificationTemplateRef(@Nullable GetPipelineCentralNotificationRuleCustomNotificationTemplateRef customNotificationTemplateRef) {
            $.customNotificationTemplateRef = customNotificationTemplateRef;
            return this;
        }

        public Builder identifier(String identifier) {
            $.identifier = identifier;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder notificationChannelRefs(@Nullable List<String> notificationChannelRefs) {
            $.notificationChannelRefs = notificationChannelRefs;
            return this;
        }

        public Builder notificationChannelRefs(String... notificationChannelRefs) {
            return notificationChannelRefs(List.of(notificationChannelRefs));
        }

        public Builder notificationConditions(@Nullable List<GetPipelineCentralNotificationRuleNotificationCondition> notificationConditions) {
            $.notificationConditions = notificationConditions;
            return this;
        }

        public Builder notificationConditions(GetPipelineCentralNotificationRuleNotificationCondition... notificationConditions) {
            return notificationConditions(List.of(notificationConditions));
        }

        public Builder org(@Nullable String org) {
            $.org = org;
            return this;
        }

        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetPipelineCentralNotificationRulePlainArgs build() {
            if ($.identifier == null) {
                throw new MissingRequiredPropertyException("GetPipelineCentralNotificationRulePlainArgs", "identifier");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetPipelineCentralNotificationRulePlainArgs", "name");
            }
            return $;
        }
    }

}
