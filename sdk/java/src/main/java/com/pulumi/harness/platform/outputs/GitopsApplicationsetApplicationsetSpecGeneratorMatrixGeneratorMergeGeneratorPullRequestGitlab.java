// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlabTokenRef;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab {
    /**
     * @return The GitLab API URL to talk to. If blank, uses https://gitlab.com/.
     * 
     */
    private @Nullable String api;
    /**
     * @return Labels is used to filter the PRs that you want to target.
     * 
     */
    private @Nullable List<String> labels;
    /**
     * @return GitLab project to scan.
     * 
     */
    private String project;
    /**
     * @return additional MRs filter to get only those with a certain state. Default:  &#34;&#34; (all states).
     * 
     */
    private @Nullable String pullRequestState;
    /**
     * @return Authentication token reference.
     * 
     */
    private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlabTokenRef tokenRef;

    private GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab() {}
    /**
     * @return The GitLab API URL to talk to. If blank, uses https://gitlab.com/.
     * 
     */
    public Optional<String> api() {
        return Optional.ofNullable(this.api);
    }
    /**
     * @return Labels is used to filter the PRs that you want to target.
     * 
     */
    public List<String> labels() {
        return this.labels == null ? List.of() : this.labels;
    }
    /**
     * @return GitLab project to scan.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return additional MRs filter to get only those with a certain state. Default:  &#34;&#34; (all states).
     * 
     */
    public Optional<String> pullRequestState() {
        return Optional.ofNullable(this.pullRequestState);
    }
    /**
     * @return Authentication token reference.
     * 
     */
    public Optional<GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlabTokenRef> tokenRef() {
        return Optional.ofNullable(this.tokenRef);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String api;
        private @Nullable List<String> labels;
        private String project;
        private @Nullable String pullRequestState;
        private @Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlabTokenRef tokenRef;
        public Builder() {}
        public Builder(GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.api = defaults.api;
    	      this.labels = defaults.labels;
    	      this.project = defaults.project;
    	      this.pullRequestState = defaults.pullRequestState;
    	      this.tokenRef = defaults.tokenRef;
        }

        @CustomType.Setter
        public Builder api(@Nullable String api) {

            this.api = api;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable List<String> labels) {

            this.labels = labels;
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder pullRequestState(@Nullable String pullRequestState) {

            this.pullRequestState = pullRequestState;
            return this;
        }
        @CustomType.Setter
        public Builder tokenRef(@Nullable GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlabTokenRef tokenRef) {

            this.tokenRef = tokenRef;
            return this;
        }
        public GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab build() {
            final var _resultValue = new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMergeGeneratorPullRequestGitlab();
            _resultValue.api = api;
            _resultValue.labels = labels;
            _resultValue.project = project;
            _resultValue.pullRequestState = pullRequestState;
            _resultValue.tokenRef = tokenRef;
            return _resultValue;
        }
    }
}
