// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cluster.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;


public final class OrchestratorConfigBinpackingPodEvictionThresholdArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrchestratorConfigBinpackingPodEvictionThresholdArgs Empty = new OrchestratorConfigBinpackingPodEvictionThresholdArgs();

    /**
     * CPU percentage for considering a node as underutilized
     * 
     */
    @Import(name="cpu", required=true)
    private Output<Double> cpu;

    /**
     * @return CPU percentage for considering a node as underutilized
     * 
     */
    public Output<Double> cpu() {
        return this.cpu;
    }

    /**
     * Memory percentage for considering a node as underutilized
     * 
     */
    @Import(name="memory", required=true)
    private Output<Double> memory;

    /**
     * @return Memory percentage for considering a node as underutilized
     * 
     */
    public Output<Double> memory() {
        return this.memory;
    }

    private OrchestratorConfigBinpackingPodEvictionThresholdArgs() {}

    private OrchestratorConfigBinpackingPodEvictionThresholdArgs(OrchestratorConfigBinpackingPodEvictionThresholdArgs $) {
        this.cpu = $.cpu;
        this.memory = $.memory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrchestratorConfigBinpackingPodEvictionThresholdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrchestratorConfigBinpackingPodEvictionThresholdArgs $;

        public Builder() {
            $ = new OrchestratorConfigBinpackingPodEvictionThresholdArgs();
        }

        public Builder(OrchestratorConfigBinpackingPodEvictionThresholdArgs defaults) {
            $ = new OrchestratorConfigBinpackingPodEvictionThresholdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpu CPU percentage for considering a node as underutilized
         * 
         * @return builder
         * 
         */
        public Builder cpu(Output<Double> cpu) {
            $.cpu = cpu;
            return this;
        }

        /**
         * @param cpu CPU percentage for considering a node as underutilized
         * 
         * @return builder
         * 
         */
        public Builder cpu(Double cpu) {
            return cpu(Output.of(cpu));
        }

        /**
         * @param memory Memory percentage for considering a node as underutilized
         * 
         * @return builder
         * 
         */
        public Builder memory(Output<Double> memory) {
            $.memory = memory;
            return this;
        }

        /**
         * @param memory Memory percentage for considering a node as underutilized
         * 
         * @return builder
         * 
         */
        public Builder memory(Double memory) {
            return memory(Output.of(memory));
        }

        public OrchestratorConfigBinpackingPodEvictionThresholdArgs build() {
            if ($.cpu == null) {
                throw new MissingRequiredPropertyException("OrchestratorConfigBinpackingPodEvictionThresholdArgs", "cpu");
            }
            if ($.memory == null) {
                throw new MissingRequiredPropertyException("OrchestratorConfigBinpackingPodEvictionThresholdArgs", "memory");
            }
            return $;
        }
    }

}
