// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Governance
{
    public static class GetRuleSet
    {
        /// <summary>
        /// Datasource for looking up a rule.
        /// </summary>
        public static Task<GetRuleSetResult> InvokeAsync(GetRuleSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleSetResult>("harness:governance/getRuleSet:getRuleSet", args ?? new GetRuleSetArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource for looking up a rule.
        /// </summary>
        public static Output<GetRuleSetResult> Invoke(GetRuleSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleSetResult>("harness:governance/getRuleSet:getRuleSet", args ?? new GetRuleSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource for looking up a rule.
        /// </summary>
        public static Output<GetRuleSetResult> Invoke(GetRuleSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleSetResult>("harness:governance/getRuleSet:getRuleSet", args ?? new GetRuleSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of rule set.
        /// </summary>
        [Input("ruleSetId", required: true)]
        public string RuleSetId { get; set; } = null!;

        public GetRuleSetArgs()
        {
        }
        public static new GetRuleSetArgs Empty => new GetRuleSetArgs();
    }

    public sealed class GetRuleSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of rule set.
        /// </summary>
        [Input("ruleSetId", required: true)]
        public Input<string> RuleSetId { get; set; } = null!;

        public GetRuleSetInvokeArgs()
        {
        }
        public static new GetRuleSetInvokeArgs Empty => new GetRuleSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleSetResult
    {
        /// <summary>
        /// The cloud provider for the rule set.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// Description for rule set.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the rule set.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of target regions.
        /// </summary>
        public readonly ImmutableArray<string> RuleIds;
        /// <summary>
        /// Id of rule set.
        /// </summary>
        public readonly string RuleSetId;

        [OutputConstructor]
        private GetRuleSetResult(
            string cloudProvider,

            string description,

            string id,

            string name,

            ImmutableArray<string> ruleIds,

            string ruleSetId)
        {
            CloudProvider = cloudProvider;
            Description = description;
            Id = id;
            Name = name;
            RuleIds = ruleIds;
            RuleSetId = ruleSetId;
        }
    }
}
