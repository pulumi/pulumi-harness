// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Governance
{
    public static class GetRule
    {
        /// <summary>
        /// Datasource for looking up a rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Governance.GetRule.Invoke(new()
        ///     {
        ///         RuleId = "rule_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRuleResult> InvokeAsync(GetRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleResult>("harness:governance/getRule:getRule", args ?? new GetRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource for looking up a rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Governance.GetRule.Invoke(new()
        ///     {
        ///         RuleId = "rule_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("harness:governance/getRule:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource for looking up a rule.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Governance.GetRule.Invoke(new()
        ///     {
        ///         RuleId = "rule_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("harness:governance/getRule:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of rule.
        /// </summary>
        [Input("ruleId", required: true)]
        public string RuleId { get; set; } = null!;

        public GetRuleArgs()
        {
        }
        public static new GetRuleArgs Empty => new GetRuleArgs();
    }

    public sealed class GetRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of rule.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        public GetRuleInvokeArgs()
        {
        }
        public static new GetRuleInvokeArgs Empty => new GetRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleResult
    {
        /// <summary>
        /// The cloud provider for the rule.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// Description for rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Id of rule.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// Policy YAML of the rule.
        /// </summary>
        public readonly string RulesYaml;

        [OutputConstructor]
        private GetRuleResult(
            string cloudProvider,

            string description,

            string id,

            string name,

            string ruleId,

            string rulesYaml)
        {
            CloudProvider = cloudProvider;
            Description = description;
            Id = id;
            Name = name;
            RuleId = ruleId;
            RulesYaml = rulesYaml;
        }
    }
}
