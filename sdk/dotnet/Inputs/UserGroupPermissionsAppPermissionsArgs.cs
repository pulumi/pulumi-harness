// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Inputs
{

    public sealed class UserGroupPermissionsAppPermissionsArgs : global::Pulumi.ResourceArgs
    {
        [Input("alls")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsAllArgs>? _alls;

        /// <summary>
        /// The permission to perform actions against all resources.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsAllArgs> Alls
        {
            get => _alls ?? (_alls = new InputList<Inputs.UserGroupPermissionsAppPermissionsAllArgs>());
            set => _alls = value;
        }

        [Input("deployments")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsDeploymentArgs>? _deployments;

        /// <summary>
        /// Permission configuration to perform actions against deployments.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsDeploymentArgs> Deployments
        {
            get => _deployments ?? (_deployments = new InputList<Inputs.UserGroupPermissionsAppPermissionsDeploymentArgs>());
            set => _deployments = value;
        }

        [Input("environments")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsEnvironmentArgs>? _environments;

        /// <summary>
        /// Permission configuration to perform actions against workflows.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsEnvironmentArgs> Environments
        {
            get => _environments ?? (_environments = new InputList<Inputs.UserGroupPermissionsAppPermissionsEnvironmentArgs>());
            set => _environments = value;
        }

        [Input("pipelines")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsPipelineArgs>? _pipelines;

        /// <summary>
        /// Permission configuration to perform actions against pipelines.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsPipelineArgs> Pipelines
        {
            get => _pipelines ?? (_pipelines = new InputList<Inputs.UserGroupPermissionsAppPermissionsPipelineArgs>());
            set => _pipelines = value;
        }

        [Input("provisioners")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsProvisionerArgs>? _provisioners;

        /// <summary>
        /// Permission configuration to perform actions against provisioners.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsProvisionerArgs> Provisioners
        {
            get => _provisioners ?? (_provisioners = new InputList<Inputs.UserGroupPermissionsAppPermissionsProvisionerArgs>());
            set => _provisioners = value;
        }

        [Input("services")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsServiceArgs>? _services;

        /// <summary>
        /// Permission configuration to perform actions against services.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsServiceArgs> Services
        {
            get => _services ?? (_services = new InputList<Inputs.UserGroupPermissionsAppPermissionsServiceArgs>());
            set => _services = value;
        }

        [Input("templates")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsTemplateArgs>? _templates;

        /// <summary>
        /// Permission configuration to perform actions against templates.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsTemplateArgs> Templates
        {
            get => _templates ?? (_templates = new InputList<Inputs.UserGroupPermissionsAppPermissionsTemplateArgs>());
            set => _templates = value;
        }

        [Input("workflows")]
        private InputList<Inputs.UserGroupPermissionsAppPermissionsWorkflowArgs>? _workflows;

        /// <summary>
        /// Permission configuration to perform actions against workflows.
        /// </summary>
        public InputList<Inputs.UserGroupPermissionsAppPermissionsWorkflowArgs> Workflows
        {
            get => _workflows ?? (_workflows = new InputList<Inputs.UserGroupPermissionsAppPermissionsWorkflowArgs>());
            set => _workflows = value;
        }

        public UserGroupPermissionsAppPermissionsArgs()
        {
        }
        public static new UserGroupPermissionsAppPermissionsArgs Empty => new UserGroupPermissionsAppPermissionsArgs();
    }
}
