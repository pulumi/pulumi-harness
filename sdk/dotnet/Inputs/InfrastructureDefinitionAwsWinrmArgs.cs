// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Inputs
{

    public sealed class InfrastructureDefinitionAwsWinrmArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the autoscaling group.
        /// </summary>
        [Input("autoscalingGroupName", required: true)]
        public Input<string> AutoscalingGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the cloud provider to connect with.
        /// </summary>
        [Input("cloudProviderName", required: true)]
        public Input<string> CloudProviderName { get; set; } = null!;

        /// <summary>
        /// The desired capacity of the autoscaling group.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        /// <summary>
        /// The name of the host connection attributes to use.
        /// </summary>
        [Input("hostConnectionAttrsName", required: true)]
        public Input<string> HostConnectionAttrsName { get; set; } = null!;

        /// <summary>
        /// The type of host connection to use. Valid options are PRIVATE*DNS, PUBLIC*DNS, PRIVATE*IP, PUBLIC*IP
        /// </summary>
        [Input("hostConnectionType", required: true)]
        public Input<string> HostConnectionType { get; set; } = null!;

        /// <summary>
        /// The naming convention to use for the hostname. Defaults to ${host.ec2Instance.privateDnsName.split('.')[0]}
        /// </summary>
        [Input("hostnameConvention")]
        public Input<string>? HostnameConvention { get; set; }

        /// <summary>
        /// The name of the load balancer to use.
        /// </summary>
        [Input("loadbalancerName")]
        public Input<string>? LoadbalancerName { get; set; }

        /// <summary>
        /// The region to deploy to.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public InfrastructureDefinitionAwsWinrmArgs()
        {
        }
        public static new InfrastructureDefinitionAwsWinrmArgs Empty => new InfrastructureDefinitionAwsWinrmArgs();
    }
}
