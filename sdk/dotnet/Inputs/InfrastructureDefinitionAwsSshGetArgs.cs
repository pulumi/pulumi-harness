// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Inputs
{

    public sealed class InfrastructureDefinitionAwsSshGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the autoscaling group.
        /// </summary>
        [Input("autoscalingGroupName")]
        public Input<string>? AutoscalingGroupName { get; set; }

        /// <summary>
        /// The name of the cloud provider to connect with.
        /// </summary>
        [Input("cloudProviderName", required: true)]
        public Input<string> CloudProviderName { get; set; } = null!;

        /// <summary>
        /// The desired capacity of the auto scaling group.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        /// <summary>
        /// The name of the host connection attributes to use.
        /// </summary>
        [Input("hostConnectionAttrsName")]
        public Input<string>? HostConnectionAttrsName { get; set; }

        /// <summary>
        /// The type of host connection to use. Valid options are PRIVATE*DNS, PUBLIC*DNS, PRIVATE*IP, PUBLIC*IP
        /// </summary>
        [Input("hostConnectionType", required: true)]
        public Input<string> HostConnectionType { get; set; } = null!;

        /// <summary>
        /// The naming convention to use for the hostname. Defaults to ${host.ec2Instance.privateDnsName.split('.')[0]}
        /// </summary>
        [Input("hostnameConvention")]
        public Input<string>? HostnameConvention { get; set; }

        /// <summary>
        /// The name of the load balancer to use.
        /// </summary>
        [Input("loadbalancerName")]
        public Input<string>? LoadbalancerName { get; set; }

        /// <summary>
        /// The region to deploy to.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.InfrastructureDefinitionAwsSshTagGetArgs>? _tags;

        /// <summary>
        /// The tags to use when selecting the instances.
        /// </summary>
        public InputList<Inputs.InfrastructureDefinitionAwsSshTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InfrastructureDefinitionAwsSshTagGetArgs>());
            set => _tags = value;
        }

        [Input("vpcIds")]
        private InputList<string>? _vpcIds;

        /// <summary>
        /// The VPC ids to use when selecting the instances.
        /// </summary>
        public InputList<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new InputList<string>());
            set => _vpcIds = value;
        }

        public InfrastructureDefinitionAwsSshGetArgs()
        {
        }
        public static new InfrastructureDefinitionAwsSshGetArgs Empty => new InfrastructureDefinitionAwsSshGetArgs();
    }
}
