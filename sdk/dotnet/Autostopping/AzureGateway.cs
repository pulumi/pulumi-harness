// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Autostopping
{
    /// <summary>
    /// Resource for creating an Azure Application Gateway
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Harness.Autostopping.AzureGateway("test", new()
    ///     {
    ///         Name = "name",
    ///         CloudConnectorId = "cloud_connector_id",
    ///         HostName = "host_name",
    ///         Region = "eastus2",
    ///         ResourceGroup = "resource_group",
    ///         SubnetId = "/subscriptions/subscription_id/resourceGroups/resource_group/providers/Microsoft.Network/virtualNetworks/virtual_network/subnets/subnet_id",
    ///         Vpc = "/subscriptions/subscription_id/resourceGroups/resource_group/providers/Microsoft.Network/virtualNetworks/virtual_network",
    ///         AzureFuncRegion = "westus2",
    ///         FrontendIp = "/subscriptions/subscription_id/resourceGroups/resource_group/providers/Microsoft.Network/publicIPAddresses/publicip",
    ///         SkuSize = "sku2",
    ///         DeleteCloudResourcesOnDestroy = true,
    ///     });
    /// 
    ///     var importTest = new Harness.Autostopping.AzureGateway("import_test", new()
    ///     {
    ///         Name = "import_test",
    ///         CloudConnectorId = "cloud_connector_id",
    ///         HostName = "host_name",
    ///         Region = "westus2",
    ///         ResourceGroup = "test_resource_group",
    ///         AppGatewayId = "/subscriptions/subscription_id/resourceGroups/test_resource_group/providers/Microsoft.Network/applicationGateways/TestAppGateway",
    ///         CertificateId = "/subscriptions/subscription_id/resourceGroups/test_resource_group/providers/Microsoft.Network/applicationGateways/TestAppGateway/sslCertificates/certificate_name",
    ///         AzureFuncRegion = "westus2",
    ///         Vpc = "/subscriptions/subscription_id/resourceGroups/test_resource_group/providers/Microsoft.Network/virtualNetworks/test_resource_group_vnet",
    ///         DeleteCloudResourcesOnDestroy = false,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HarnessResourceType("harness:autostopping/azureGateway:AzureGateway")]
    public partial class AzureGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
        /// </summary>
        [Output("appGatewayId")]
        public Output<string?> AppGatewayId { get; private set; } = null!;

        /// <summary>
        /// Region in which azure cloud function will be provisioned
        /// </summary>
        [Output("azureFuncRegion")]
        public Output<string> AzureFuncRegion { get; private set; } = null!;

        /// <summary>
        /// ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
        /// </summary>
        [Output("certificateId")]
        public Output<string?> CertificateId { get; private set; } = null!;

        /// <summary>
        /// Id of the cloud connector
        /// </summary>
        [Output("cloudConnectorId")]
        public Output<string> CloudConnectorId { get; private set; } = null!;

        [Output("deleteCloudResourcesOnDestroy")]
        public Output<bool> DeleteCloudResourcesOnDestroy { get; private set; } = null!;

        /// <summary>
        /// ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
        /// </summary>
        [Output("frontendIp")]
        public Output<string?> FrontendIp { get; private set; } = null!;

        /// <summary>
        /// Hostname for the proxy
        /// </summary>
        [Output("hostName")]
        public Output<string> HostName { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the resource
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Name of the proxy
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Region in which cloud resources are hosted
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Resource group in which cloud resources are hosted
        /// </summary>
        [Output("resourceGroup")]
        public Output<string> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// Size of machine used for the gateway. Required only for creating new AppGateway
        /// </summary>
        [Output("skuSize")]
        public Output<string?> SkuSize { get; private set; } = null!;

        /// <summary>
        /// Subnet in which cloud resources are hosted. Required only for creating new AppGateway
        /// </summary>
        [Output("subnetId")]
        public Output<string?> SubnetId { get; private set; } = null!;

        /// <summary>
        /// VNet in which cloud resources are hosted. Required only for creating new AppGateway
        /// </summary>
        [Output("vpc")]
        public Output<string> Vpc { get; private set; } = null!;


        /// <summary>
        /// Create a AzureGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureGateway(string name, AzureGatewayArgs args, CustomResourceOptions? options = null)
            : base("harness:autostopping/azureGateway:AzureGateway", name, args ?? new AzureGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureGateway(string name, Input<string> id, AzureGatewayState? state = null, CustomResourceOptions? options = null)
            : base("harness:autostopping/azureGateway:AzureGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureGateway Get(string name, Input<string> id, AzureGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureGateway(name, id, state, options);
        }
    }

    public sealed class AzureGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
        /// </summary>
        [Input("appGatewayId")]
        public Input<string>? AppGatewayId { get; set; }

        /// <summary>
        /// Region in which azure cloud function will be provisioned
        /// </summary>
        [Input("azureFuncRegion", required: true)]
        public Input<string> AzureFuncRegion { get; set; } = null!;

        /// <summary>
        /// ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// Id of the cloud connector
        /// </summary>
        [Input("cloudConnectorId", required: true)]
        public Input<string> CloudConnectorId { get; set; } = null!;

        [Input("deleteCloudResourcesOnDestroy", required: true)]
        public Input<bool> DeleteCloudResourcesOnDestroy { get; set; } = null!;

        /// <summary>
        /// ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
        /// </summary>
        [Input("frontendIp")]
        public Input<string>? FrontendIp { get; set; }

        /// <summary>
        /// Hostname for the proxy
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        /// <summary>
        /// Name of the proxy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region in which cloud resources are hosted
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Resource group in which cloud resources are hosted
        /// </summary>
        [Input("resourceGroup", required: true)]
        public Input<string> ResourceGroup { get; set; } = null!;

        /// <summary>
        /// Size of machine used for the gateway. Required only for creating new AppGateway
        /// </summary>
        [Input("skuSize")]
        public Input<string>? SkuSize { get; set; }

        /// <summary>
        /// Subnet in which cloud resources are hosted. Required only for creating new AppGateway
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// VNet in which cloud resources are hosted. Required only for creating new AppGateway
        /// </summary>
        [Input("vpc", required: true)]
        public Input<string> Vpc { get; set; } = null!;

        public AzureGatewayArgs()
        {
        }
        public static new AzureGatewayArgs Empty => new AzureGatewayArgs();
    }

    public sealed class AzureGatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of Azure AppGateway for importing. Required only for importing exiging AppGateway
        /// </summary>
        [Input("appGatewayId")]
        public Input<string>? AppGatewayId { get; set; }

        /// <summary>
        /// Region in which azure cloud function will be provisioned
        /// </summary>
        [Input("azureFuncRegion")]
        public Input<string>? AzureFuncRegion { get; set; }

        /// <summary>
        /// ID of existing SSL certificate from AppGateway being imported. Required only for importing existing AppGateway. Required only for SSL based rules
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// Id of the cloud connector
        /// </summary>
        [Input("cloudConnectorId")]
        public Input<string>? CloudConnectorId { get; set; }

        [Input("deleteCloudResourcesOnDestroy")]
        public Input<bool>? DeleteCloudResourcesOnDestroy { get; set; }

        /// <summary>
        /// ID of IP address to be used. Required only for creating new AppGateway. See https://learn.microsoft.com/en-us/azure/application-gateway/application-gateway-components#static-versus-dynamic-public-ip-address for more details
        /// </summary>
        [Input("frontendIp")]
        public Input<string>? FrontendIp { get; set; }

        /// <summary>
        /// Hostname for the proxy
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// Unique identifier of the resource
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Name of the proxy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region in which cloud resources are hosted
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Resource group in which cloud resources are hosted
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// Size of machine used for the gateway. Required only for creating new AppGateway
        /// </summary>
        [Input("skuSize")]
        public Input<string>? SkuSize { get; set; }

        /// <summary>
        /// Subnet in which cloud resources are hosted. Required only for creating new AppGateway
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// VNet in which cloud resources are hosted. Required only for creating new AppGateway
        /// </summary>
        [Input("vpc")]
        public Input<string>? Vpc { get; set; }

        public AzureGatewayState()
        {
        }
        public static new AzureGatewayState Empty => new AzureGatewayState();
    }
}
