// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Autostopping
{
    public static class GetRuleEcs
    {
        /// <summary>
        /// Data source for retrieving a Harness Variable.
        /// </summary>
        public static Task<GetRuleEcsResult> InvokeAsync(GetRuleEcsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleEcsResult>("harness:autostopping/getRuleEcs:getRuleEcs", args ?? new GetRuleEcsArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness Variable.
        /// </summary>
        public static Output<GetRuleEcsResult> Invoke(GetRuleEcsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleEcsResult>("harness:autostopping/getRuleEcs:getRuleEcs", args ?? new GetRuleEcsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness Variable.
        /// </summary>
        public static Output<GetRuleEcsResult> Invoke(GetRuleEcsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleEcsResult>("harness:autostopping/getRuleEcs:getRuleEcs", args ?? new GetRuleEcsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleEcsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of the cloud connector
        /// </summary>
        [Input("cloudConnectorId", required: true)]
        public string CloudConnectorId { get; set; } = null!;

        [Input("container")]
        public Inputs.GetRuleEcsContainerArgs? Container { get; set; }

        [Input("customDomains")]
        private List<string>? _customDomains;

        /// <summary>
        /// Custom URLs used to access the instances
        /// </summary>
        public List<string> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new List<string>());
            set => _customDomains = value;
        }

        [Input("depends")]
        private List<Inputs.GetRuleEcsDependArgs>? _depends;

        /// <summary>
        /// Dependent rules
        /// </summary>
        public List<Inputs.GetRuleEcsDependArgs> Depends
        {
            get => _depends ?? (_depends = new List<Inputs.GetRuleEcsDependArgs>());
            set => _depends = value;
        }

        [Input("https")]
        private List<Inputs.GetRuleEcsHttpArgs>? _https;

        /// <summary>
        /// Http routing configuration
        /// </summary>
        public List<Inputs.GetRuleEcsHttpArgs> Https
        {
            get => _https ?? (_https = new List<Inputs.GetRuleEcsHttpArgs>());
            set => _https = value;
        }

        /// <summary>
        /// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
        /// </summary>
        [Input("idleTimeMins")]
        public int? IdleTimeMins { get; set; }

        /// <summary>
        /// Name of the rule
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRuleEcsArgs()
        {
        }
        public static new GetRuleEcsArgs Empty => new GetRuleEcsArgs();
    }

    public sealed class GetRuleEcsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of the cloud connector
        /// </summary>
        [Input("cloudConnectorId", required: true)]
        public Input<string> CloudConnectorId { get; set; } = null!;

        [Input("container")]
        public Input<Inputs.GetRuleEcsContainerInputArgs>? Container { get; set; }

        [Input("customDomains")]
        private InputList<string>? _customDomains;

        /// <summary>
        /// Custom URLs used to access the instances
        /// </summary>
        public InputList<string> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new InputList<string>());
            set => _customDomains = value;
        }

        [Input("depends")]
        private InputList<Inputs.GetRuleEcsDependInputArgs>? _depends;

        /// <summary>
        /// Dependent rules
        /// </summary>
        public InputList<Inputs.GetRuleEcsDependInputArgs> Depends
        {
            get => _depends ?? (_depends = new InputList<Inputs.GetRuleEcsDependInputArgs>());
            set => _depends = value;
        }

        [Input("https")]
        private InputList<Inputs.GetRuleEcsHttpInputArgs>? _https;

        /// <summary>
        /// Http routing configuration
        /// </summary>
        public InputList<Inputs.GetRuleEcsHttpInputArgs> Https
        {
            get => _https ?? (_https = new InputList<Inputs.GetRuleEcsHttpInputArgs>());
            set => _https = value;
        }

        /// <summary>
        /// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
        /// </summary>
        [Input("idleTimeMins")]
        public Input<int>? IdleTimeMins { get; set; }

        /// <summary>
        /// Name of the rule
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRuleEcsInvokeArgs()
        {
        }
        public static new GetRuleEcsInvokeArgs Empty => new GetRuleEcsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleEcsResult
    {
        /// <summary>
        /// Id of the cloud connector
        /// </summary>
        public readonly string CloudConnectorId;
        public readonly Outputs.GetRuleEcsContainerResult? Container;
        /// <summary>
        /// Custom URLs used to access the instances
        /// </summary>
        public readonly ImmutableArray<string> CustomDomains;
        /// <summary>
        /// Dependent rules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRuleEcsDependResult> Depends;
        /// <summary>
        /// Http routing configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRuleEcsHttpResult> Https;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique identifier of the resource
        /// </summary>
        public readonly double Identifier;
        /// <summary>
        /// Idle time in minutes. This is the time that the AutoStopping rule waits before stopping the idle instances.
        /// </summary>
        public readonly int? IdleTimeMins;
        /// <summary>
        /// Name of the rule
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetRuleEcsResult(
            string cloudConnectorId,

            Outputs.GetRuleEcsContainerResult? container,

            ImmutableArray<string> customDomains,

            ImmutableArray<Outputs.GetRuleEcsDependResult> depends,

            ImmutableArray<Outputs.GetRuleEcsHttpResult> https,

            string id,

            double identifier,

            int? idleTimeMins,

            string name)
        {
            CloudConnectorId = cloudConnectorId;
            Container = container;
            CustomDomains = customDomains;
            Depends = depends;
            Https = https;
            Id = id;
            Identifier = identifier;
            IdleTimeMins = idleTimeMins;
            Name = name;
        }
    }
}
