// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Inputs
{

    public sealed class DiscoveryAgentInstallationDetailGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account identifier for the installation.
        /// </summary>
        [Input("accountIdentifier")]
        public Input<string>? AccountIdentifier { get; set; }

        [Input("agentDetails")]
        private InputList<Inputs.DiscoveryAgentInstallationDetailAgentDetailGetArgs>? _agentDetails;

        /// <summary>
        /// Details about the installed agent.
        /// </summary>
        public InputList<Inputs.DiscoveryAgentInstallationDetailAgentDetailGetArgs> AgentDetails
        {
            get => _agentDetails ?? (_agentDetails = new InputList<Inputs.DiscoveryAgentInstallationDetailAgentDetailGetArgs>());
            set => _agentDetails = value;
        }

        /// <summary>
        /// The ID of the installed agent.
        /// </summary>
        [Input("agentId")]
        public Input<string>? AgentId { get; set; }

        /// <summary>
        /// The timestamp when the installation was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The user who created the installation.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The ID of the delegate used for installation.
        /// </summary>
        [Input("delegateId")]
        public Input<string>? DelegateId { get; set; }

        /// <summary>
        /// The ID of the delegate task for the installation.
        /// </summary>
        [Input("delegateTaskId")]
        public Input<string>? DelegateTaskId { get; set; }

        /// <summary>
        /// The status of the delegate task (e.g., 'SUCCESS').
        /// </summary>
        [Input("delegateTaskStatus")]
        public Input<string>? DelegateTaskStatus { get; set; }

        /// <summary>
        /// The environment identifier for the installation.
        /// </summary>
        [Input("environmentIdentifier")]
        public Input<string>? EnvironmentIdentifier { get; set; }

        /// <summary>
        /// The unique identifier of the installation.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Whether the installation was triggered by a cron job.
        /// </summary>
        [Input("isCronTriggered")]
        public Input<bool>? IsCronTriggered { get; set; }

        /// <summary>
        /// The timestamp when the log stream was created.
        /// </summary>
        [Input("logStreamCreatedAt")]
        public Input<string>? LogStreamCreatedAt { get; set; }

        /// <summary>
        /// The ID of the log stream for the installation.
        /// </summary>
        [Input("logStreamId")]
        public Input<string>? LogStreamId { get; set; }

        /// <summary>
        /// The organization identifier for the installation.
        /// </summary>
        [Input("organizationIdentifier")]
        public Input<string>? OrganizationIdentifier { get; set; }

        /// <summary>
        /// The project identifier for the installation.
        /// </summary>
        [Input("projectIdentifier")]
        public Input<string>? ProjectIdentifier { get; set; }

        /// <summary>
        /// Whether the installation has been removed.
        /// </summary>
        [Input("removed")]
        public Input<bool>? Removed { get; set; }

        /// <summary>
        /// Whether the installation has been stopped.
        /// </summary>
        [Input("stopped")]
        public Input<bool>? Stopped { get; set; }

        /// <summary>
        /// The timestamp when the installation was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The user who last updated the installation.
        /// </summary>
        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        public DiscoveryAgentInstallationDetailGetArgs()
        {
        }
        public static new DiscoveryAgentInstallationDetailGetArgs Empty => new DiscoveryAgentInstallationDetailGetArgs();
    }
}
