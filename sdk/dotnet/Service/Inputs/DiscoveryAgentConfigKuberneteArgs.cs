// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Inputs
{

    public sealed class DiscoveryAgentConfigKuberneteArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations to add to all resources.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Whether to disable namespace creation.
        /// </summary>
        [Input("disableNamespaceCreation")]
        public Input<bool>? DisableNamespaceCreation { get; set; }

        /// <summary>
        /// The image pull policy.
        /// </summary>
        [Input("imagePullPolicy")]
        public Input<string>? ImagePullPolicy { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to add to all resources.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Kubernetes namespace to use
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// Whether the agent is namespaced.
        /// </summary>
        [Input("namespaced")]
        public Input<bool>? Namespaced { get; set; }

        [Input("nodeSelector")]
        private InputMap<string>? _nodeSelector;

        /// <summary>
        /// Node selector labels.
        /// </summary>
        public InputMap<string> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<string>());
            set => _nodeSelector = value;
        }

        [Input("resources")]
        private InputList<Inputs.DiscoveryAgentConfigKuberneteResourceArgs>? _resources;

        /// <summary>
        /// Compute resource requirements for the agent container.
        /// </summary>
        public InputList<Inputs.DiscoveryAgentConfigKuberneteResourceArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.DiscoveryAgentConfigKuberneteResourceArgs>());
            set => _resources = value;
        }

        /// <summary>
        /// The group ID to run as.
        /// </summary>
        [Input("runAsGroup")]
        public Input<int>? RunAsGroup { get; set; }

        /// <summary>
        /// The user ID to run as.
        /// </summary>
        [Input("runAsUser")]
        public Input<int>? RunAsUser { get; set; }

        /// <summary>
        /// Service account to use
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        [Input("tolerations")]
        private InputList<Inputs.DiscoveryAgentConfigKuberneteTolerationArgs>? _tolerations;

        /// <summary>
        /// Tolerations for pod assignment.
        /// </summary>
        public InputList<Inputs.DiscoveryAgentConfigKuberneteTolerationArgs> Tolerations
        {
            get => _tolerations ?? (_tolerations = new InputList<Inputs.DiscoveryAgentConfigKuberneteTolerationArgs>());
            set => _tolerations = value;
        }

        public DiscoveryAgentConfigKuberneteArgs()
        {
        }
        public static new DiscoveryAgentConfigKuberneteArgs Empty => new DiscoveryAgentConfigKuberneteArgs();
    }
}
