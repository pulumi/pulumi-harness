// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Inputs
{

    public sealed class DiscoveryAgentConfigDataArgs : global::Pulumi.ResourceArgs
    {
        [Input("blacklistedNamespaces")]
        private InputList<string>? _blacklistedNamespaces;

        /// <summary>
        /// List of namespaces to exclude from discovery.
        /// </summary>
        public InputList<string> BlacklistedNamespaces
        {
            get => _blacklistedNamespaces ?? (_blacklistedNamespaces = new InputList<string>());
            set => _blacklistedNamespaces = value;
        }

        /// <summary>
        /// Collection window in minutes.
        /// </summary>
        [Input("collectionWindowInMin")]
        public Input<int>? CollectionWindowInMin { get; set; }

        [Input("crons")]
        private InputList<Inputs.DiscoveryAgentConfigDataCronArgs>? _crons;

        /// <summary>
        /// Cron schedule for data collection.
        /// </summary>
        public InputList<Inputs.DiscoveryAgentConfigDataCronArgs> Crons
        {
            get => _crons ?? (_crons = new InputList<Inputs.DiscoveryAgentConfigDataCronArgs>());
            set => _crons = value;
        }

        /// <summary>
        /// Whether to enable batch resources.
        /// </summary>
        [Input("enableBatchResources")]
        public Input<bool>? EnableBatchResources { get; set; }

        /// <summary>
        /// Whether to enable node agent.
        /// </summary>
        [Input("enableNodeAgent")]
        public Input<bool>? EnableNodeAgent { get; set; }

        /// <summary>
        /// Whether to enable orphaned pod detection.
        /// </summary>
        [Input("enableOrphanedPod")]
        public Input<bool>? EnableOrphanedPod { get; set; }

        /// <summary>
        /// Namespace selector for the agent.
        /// </summary>
        [Input("namespaceSelector")]
        public Input<string>? NamespaceSelector { get; set; }

        /// <summary>
        /// Node selector for the node agent.
        /// </summary>
        [Input("nodeAgentSelector")]
        public Input<string>? NodeAgentSelector { get; set; }

        [Input("observedNamespaces")]
        private InputList<string>? _observedNamespaces;

        /// <summary>
        /// List of namespaces to observe.
        /// </summary>
        public InputList<string> ObservedNamespaces
        {
            get => _observedNamespaces ?? (_observedNamespaces = new InputList<string>());
            set => _observedNamespaces = value;
        }

        public DiscoveryAgentConfigDataArgs()
        {
        }
        public static new DiscoveryAgentConfigDataArgs Empty => new DiscoveryAgentConfigDataArgs();
    }
}
