// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service
{
    /// <summary>
    /// Resource for managing service discovery settings.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Update image registry settings for service discovery
    ///     var example = new Harness.Service.DiscoverySetting("example", new()
    ///     {
    ///         OrgIdentifier = "sechaosworkshop",
    ///         ProjectIdentifier = "se1",
    ///         ImageRegistry = new Harness.Service.Inputs.DiscoverySettingImageRegistryArgs
    ///         {
    ///             Account = "&lt;account_name&gt;",
    ///             Server = "&lt;registry_server&gt;",
    ///             Secrets = new[]
    ///             {
    ///                 "&lt;secret_name&gt;",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HarnessResourceType("harness:service/discoverySetting:DiscoverySetting")]
    public partial class DiscoverySetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Correlation ID for the request.
        /// </summary>
        [Output("correlationId")]
        public Output<string?> CorrelationId { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the setting was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Image registry configuration.
        /// </summary>
        [Output("imageRegistry")]
        public Output<Outputs.DiscoverySettingImageRegistry?> ImageRegistry { get; private set; } = null!;

        /// <summary>
        /// The organization identifier.
        /// </summary>
        [Output("orgIdentifier")]
        public Output<string?> OrgIdentifier { get; private set; } = null!;

        /// <summary>
        /// The project identifier.
        /// </summary>
        [Output("projectIdentifier")]
        public Output<string?> ProjectIdentifier { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the setting was last updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a DiscoverySetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiscoverySetting(string name, DiscoverySettingArgs? args = null, CustomResourceOptions? options = null)
            : base("harness:service/discoverySetting:DiscoverySetting", name, args ?? new DiscoverySettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiscoverySetting(string name, Input<string> id, DiscoverySettingState? state = null, CustomResourceOptions? options = null)
            : base("harness:service/discoverySetting:DiscoverySetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiscoverySetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiscoverySetting Get(string name, Input<string> id, DiscoverySettingState? state = null, CustomResourceOptions? options = null)
        {
            return new DiscoverySetting(name, id, state, options);
        }
    }

    public sealed class DiscoverySettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Correlation ID for the request.
        /// </summary>
        [Input("correlationId")]
        public Input<string>? CorrelationId { get; set; }

        /// <summary>
        /// Image registry configuration.
        /// </summary>
        [Input("imageRegistry")]
        public Input<Inputs.DiscoverySettingImageRegistryArgs>? ImageRegistry { get; set; }

        /// <summary>
        /// The organization identifier.
        /// </summary>
        [Input("orgIdentifier")]
        public Input<string>? OrgIdentifier { get; set; }

        /// <summary>
        /// The project identifier.
        /// </summary>
        [Input("projectIdentifier")]
        public Input<string>? ProjectIdentifier { get; set; }

        public DiscoverySettingArgs()
        {
        }
        public static new DiscoverySettingArgs Empty => new DiscoverySettingArgs();
    }

    public sealed class DiscoverySettingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Correlation ID for the request.
        /// </summary>
        [Input("correlationId")]
        public Input<string>? CorrelationId { get; set; }

        /// <summary>
        /// Timestamp when the setting was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Image registry configuration.
        /// </summary>
        [Input("imageRegistry")]
        public Input<Inputs.DiscoverySettingImageRegistryGetArgs>? ImageRegistry { get; set; }

        /// <summary>
        /// The organization identifier.
        /// </summary>
        [Input("orgIdentifier")]
        public Input<string>? OrgIdentifier { get; set; }

        /// <summary>
        /// The project identifier.
        /// </summary>
        [Input("projectIdentifier")]
        public Input<string>? ProjectIdentifier { get; set; }

        /// <summary>
        /// Timestamp when the setting was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public DiscoverySettingState()
        {
        }
        public static new DiscoverySettingState Empty => new DiscoverySettingState();
    }
}
