// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Outputs
{

    [OutputType]
    public sealed class GetDiscoveryAgentInstallationDetailResult
    {
        /// <summary>
        /// Account identifier of the installation.
        /// </summary>
        public readonly string AccountIdentifier;
        /// <summary>
        /// Details about the agent installation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiscoveryAgentInstallationDetailAgentDetailResult> AgentDetails;
        /// <summary>
        /// ID of the agent.
        /// </summary>
        public readonly string AgentId;
        /// <summary>
        /// When the installation was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Who created the installation.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// ID of the delegate.
        /// </summary>
        public readonly string DelegateId;
        /// <summary>
        /// ID of the delegate task.
        /// </summary>
        public readonly string DelegateTaskId;
        /// <summary>
        /// Status of the delegate task.
        /// </summary>
        public readonly string DelegateTaskStatus;
        /// <summary>
        /// Environment identifier of the installation.
        /// </summary>
        public readonly string EnvironmentIdentifier;
        /// <summary>
        /// Installation ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the installation was triggered by a cron job.
        /// </summary>
        public readonly bool IsCronTriggered;
        /// <summary>
        /// When the log stream was created.
        /// </summary>
        public readonly string LogStreamCreatedAt;
        /// <summary>
        /// ID of the log stream.
        /// </summary>
        public readonly string LogStreamId;
        /// <summary>
        /// Organization identifier of the installation.
        /// </summary>
        public readonly string OrgIdentifier;
        /// <summary>
        /// Project identifier of the installation.
        /// </summary>
        public readonly string ProjectIdentifier;
        /// <summary>
        /// Whether the installation has been removed.
        /// </summary>
        public readonly bool Removed;
        /// <summary>
        /// When the installation was removed.
        /// </summary>
        public readonly string RemovedAt;
        /// <summary>
        /// Whether the installation has been stopped.
        /// </summary>
        public readonly bool Stopped;
        /// <summary>
        /// When the installation was last updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Who last updated the installation.
        /// </summary>
        public readonly string UpdatedBy;

        [OutputConstructor]
        private GetDiscoveryAgentInstallationDetailResult(
            string accountIdentifier,

            ImmutableArray<Outputs.GetDiscoveryAgentInstallationDetailAgentDetailResult> agentDetails,

            string agentId,

            string createdAt,

            string createdBy,

            string delegateId,

            string delegateTaskId,

            string delegateTaskStatus,

            string environmentIdentifier,

            string id,

            bool isCronTriggered,

            string logStreamCreatedAt,

            string logStreamId,

            string orgIdentifier,

            string projectIdentifier,

            bool removed,

            string removedAt,

            bool stopped,

            string updatedAt,

            string updatedBy)
        {
            AccountIdentifier = accountIdentifier;
            AgentDetails = agentDetails;
            AgentId = agentId;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            DelegateId = delegateId;
            DelegateTaskId = delegateTaskId;
            DelegateTaskStatus = delegateTaskStatus;
            EnvironmentIdentifier = environmentIdentifier;
            Id = id;
            IsCronTriggered = isCronTriggered;
            LogStreamCreatedAt = logStreamCreatedAt;
            LogStreamId = logStreamId;
            OrgIdentifier = orgIdentifier;
            ProjectIdentifier = projectIdentifier;
            Removed = removed;
            RemovedAt = removedAt;
            Stopped = stopped;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
        }
    }
}
