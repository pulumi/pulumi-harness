// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Outputs
{

    [OutputType]
    public sealed class GetDiscoveryAgentConfigKuberneteResult
    {
        /// <summary>
        /// Annotations to add to all resources.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Whether to disable namespace creation.
        /// </summary>
        public readonly bool DisableNamespaceCreation;
        /// <summary>
        /// The image pull policy.
        /// </summary>
        public readonly string ImagePullPolicy;
        /// <summary>
        /// Labels to add to all resources.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Kubernetes namespace to use
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Whether the agent is namespaced.
        /// </summary>
        public readonly bool Namespaced;
        /// <summary>
        /// Node selector labels.
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// Compute resource requirements for the agent container.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiscoveryAgentConfigKuberneteResourceResult> Resources;
        /// <summary>
        /// The group ID to run as.
        /// </summary>
        public readonly int RunAsGroup;
        /// <summary>
        /// The user ID to run as.
        /// </summary>
        public readonly int RunAsUser;
        /// <summary>
        /// Service account to use
        /// </summary>
        public readonly string ServiceAccount;
        /// <summary>
        /// Tolerations for pod assignment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiscoveryAgentConfigKuberneteTolerationResult> Tolerations;

        [OutputConstructor]
        private GetDiscoveryAgentConfigKuberneteResult(
            ImmutableDictionary<string, string> annotations,

            bool disableNamespaceCreation,

            string imagePullPolicy,

            ImmutableDictionary<string, string> labels,

            string @namespace,

            bool namespaced,

            ImmutableDictionary<string, string> nodeSelector,

            ImmutableArray<Outputs.GetDiscoveryAgentConfigKuberneteResourceResult> resources,

            int runAsGroup,

            int runAsUser,

            string serviceAccount,

            ImmutableArray<Outputs.GetDiscoveryAgentConfigKuberneteTolerationResult> tolerations)
        {
            Annotations = annotations;
            DisableNamespaceCreation = disableNamespaceCreation;
            ImagePullPolicy = imagePullPolicy;
            Labels = labels;
            Namespace = @namespace;
            Namespaced = namespaced;
            NodeSelector = nodeSelector;
            Resources = resources;
            RunAsGroup = runAsGroup;
            RunAsUser = runAsUser;
            ServiceAccount = serviceAccount;
            Tolerations = tolerations;
        }
    }
}
