// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Outputs
{

    [OutputType]
    public sealed class DiscoveryAgentInstallationDetail
    {
        /// <summary>
        /// The account identifier for the installation.
        /// </summary>
        public readonly string? AccountIdentifier;
        /// <summary>
        /// Details about the installed agent.
        /// </summary>
        public readonly ImmutableArray<Outputs.DiscoveryAgentInstallationDetailAgentDetail> AgentDetails;
        /// <summary>
        /// The ID of the installed agent.
        /// </summary>
        public readonly string? AgentId;
        /// <summary>
        /// The timestamp when the installation was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The user who created the installation.
        /// </summary>
        public readonly string? CreatedBy;
        /// <summary>
        /// The ID of the delegate used for installation.
        /// </summary>
        public readonly string? DelegateId;
        /// <summary>
        /// The ID of the delegate task for the installation.
        /// </summary>
        public readonly string? DelegateTaskId;
        /// <summary>
        /// The status of the delegate task (e.g., 'SUCCESS').
        /// </summary>
        public readonly string? DelegateTaskStatus;
        /// <summary>
        /// The environment identifier for the installation.
        /// </summary>
        public readonly string? EnvironmentIdentifier;
        /// <summary>
        /// The unique identifier of the installation.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Whether the installation was triggered by a cron job.
        /// </summary>
        public readonly bool? IsCronTriggered;
        /// <summary>
        /// The timestamp when the log stream was created.
        /// </summary>
        public readonly string? LogStreamCreatedAt;
        /// <summary>
        /// The ID of the log stream for the installation.
        /// </summary>
        public readonly string? LogStreamId;
        /// <summary>
        /// The organization identifier for the installation.
        /// </summary>
        public readonly string? OrganizationIdentifier;
        /// <summary>
        /// The project identifier for the installation.
        /// </summary>
        public readonly string? ProjectIdentifier;
        /// <summary>
        /// Whether the installation has been removed.
        /// </summary>
        public readonly bool? Removed;
        /// <summary>
        /// Whether the installation has been stopped.
        /// </summary>
        public readonly bool? Stopped;
        /// <summary>
        /// The timestamp when the installation was last updated.
        /// </summary>
        public readonly string? UpdatedAt;
        /// <summary>
        /// The user who last updated the installation.
        /// </summary>
        public readonly string? UpdatedBy;

        [OutputConstructor]
        private DiscoveryAgentInstallationDetail(
            string? accountIdentifier,

            ImmutableArray<Outputs.DiscoveryAgentInstallationDetailAgentDetail> agentDetails,

            string? agentId,

            string? createdAt,

            string? createdBy,

            string? delegateId,

            string? delegateTaskId,

            string? delegateTaskStatus,

            string? environmentIdentifier,

            string? id,

            bool? isCronTriggered,

            string? logStreamCreatedAt,

            string? logStreamId,

            string? organizationIdentifier,

            string? projectIdentifier,

            bool? removed,

            bool? stopped,

            string? updatedAt,

            string? updatedBy)
        {
            AccountIdentifier = accountIdentifier;
            AgentDetails = agentDetails;
            AgentId = agentId;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            DelegateId = delegateId;
            DelegateTaskId = delegateTaskId;
            DelegateTaskStatus = delegateTaskStatus;
            EnvironmentIdentifier = environmentIdentifier;
            Id = id;
            IsCronTriggered = isCronTriggered;
            LogStreamCreatedAt = logStreamCreatedAt;
            LogStreamId = logStreamId;
            OrganizationIdentifier = organizationIdentifier;
            ProjectIdentifier = projectIdentifier;
            Removed = removed;
            Stopped = stopped;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
        }
    }
}
