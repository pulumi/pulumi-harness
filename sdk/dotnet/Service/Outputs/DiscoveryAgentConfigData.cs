// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Service.Outputs
{

    [OutputType]
    public sealed class DiscoveryAgentConfigData
    {
        /// <summary>
        /// List of namespaces to exclude from discovery.
        /// </summary>
        public readonly ImmutableArray<string> BlacklistedNamespaces;
        /// <summary>
        /// Collection window in minutes.
        /// </summary>
        public readonly int? CollectionWindowInMin;
        /// <summary>
        /// Cron schedule for data collection.
        /// </summary>
        public readonly ImmutableArray<Outputs.DiscoveryAgentConfigDataCron> Crons;
        /// <summary>
        /// Whether to enable batch resources.
        /// </summary>
        public readonly bool? EnableBatchResources;
        /// <summary>
        /// Whether to enable node agent.
        /// </summary>
        public readonly bool? EnableNodeAgent;
        /// <summary>
        /// Whether to enable orphaned pod detection.
        /// </summary>
        public readonly bool? EnableOrphanedPod;
        /// <summary>
        /// Namespace selector for the agent.
        /// </summary>
        public readonly string? NamespaceSelector;
        /// <summary>
        /// Node selector for the node agent.
        /// </summary>
        public readonly string? NodeAgentSelector;
        /// <summary>
        /// List of namespaces to observe.
        /// </summary>
        public readonly ImmutableArray<string> ObservedNamespaces;

        [OutputConstructor]
        private DiscoveryAgentConfigData(
            ImmutableArray<string> blacklistedNamespaces,

            int? collectionWindowInMin,

            ImmutableArray<Outputs.DiscoveryAgentConfigDataCron> crons,

            bool? enableBatchResources,

            bool? enableNodeAgent,

            bool? enableOrphanedPod,

            string? namespaceSelector,

            string? nodeAgentSelector,

            ImmutableArray<string> observedNamespaces)
        {
            BlacklistedNamespaces = blacklistedNamespaces;
            CollectionWindowInMin = collectionWindowInMin;
            Crons = crons;
            EnableBatchResources = enableBatchResources;
            EnableNodeAgent = enableNodeAgent;
            EnableOrphanedPod = enableOrphanedPod;
            NamespaceSelector = namespaceSelector;
            NodeAgentSelector = nodeAgentSelector;
            ObservedNamespaces = observedNamespaces;
        }
    }
}
