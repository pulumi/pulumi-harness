// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Inputs
{

    public sealed class GetInfrastructureV2VolumeMountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Path within the container at which the volume should be mounted. Must not contain ':'.
        /// </summary>
        [Input("mountPath", required: true)]
        public string MountPath { get; set; } = null!;

        /// <summary>
        /// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
        /// </summary>
        [Input("mountPropagation")]
        public string? MountPropagation { get; set; }

        /// <summary>
        /// This must match the Name of a Volume.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Mounted read-only if true, read-write otherwise.
        /// </summary>
        [Input("readOnly")]
        public bool? ReadOnly { get; set; }

        /// <summary>
        /// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
        /// </summary>
        [Input("subPath")]
        public string? SubPath { get; set; }

        /// <summary>
        /// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
        /// </summary>
        [Input("subPathExpr")]
        public string? SubPathExpr { get; set; }

        public GetInfrastructureV2VolumeMountArgs()
        {
        }
        public static new GetInfrastructureV2VolumeMountArgs Empty => new GetInfrastructureV2VolumeMountArgs();
    }
}
