// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Inputs
{

    public sealed class InfrastructureV2ImageRegistryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timestamp when the registry was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("customImages")]
        private InputList<Inputs.InfrastructureV2ImageRegistryCustomImageArgs>? _customImages;

        /// <summary>
        /// Custom image configurations. Required when use*custom*images is true.
        /// </summary>
        public InputList<Inputs.InfrastructureV2ImageRegistryCustomImageArgs> CustomImages
        {
            get => _customImages ?? (_customImages = new InputList<Inputs.InfrastructureV2ImageRegistryCustomImageArgs>());
            set => _customImages = value;
        }

        [Input("identifiers")]
        private InputList<Inputs.InfrastructureV2ImageRegistryIdentifierArgs>? _identifiers;

        /// <summary>
        /// Scoped identifiers for the registry.
        /// </summary>
        public InputList<Inputs.InfrastructureV2ImageRegistryIdentifierArgs> Identifiers
        {
            get => _identifiers ?? (_identifiers = new InputList<Inputs.InfrastructureV2ImageRegistryIdentifierArgs>());
            set => _identifiers = value;
        }

        /// <summary>
        /// ID of the infrastructure.
        /// </summary>
        [Input("infraId")]
        public Input<string>? InfraId { get; set; }

        /// <summary>
        /// Whether this is the default registry.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Whether override is allowed for this registry.
        /// </summary>
        [Input("isOverrideAllowed")]
        public Input<bool>? IsOverrideAllowed { get; set; }

        /// <summary>
        /// Whether the registry is private.
        /// </summary>
        [Input("isPrivate")]
        public Input<bool>? IsPrivate { get; set; }

        /// <summary>
        /// The account name for the container registry.
        /// </summary>
        [Input("registryAccount")]
        public Input<string>? RegistryAccount { get; set; }

        /// <summary>
        /// The container image registry server URL (e.g., docker.io, gcr.io).
        /// </summary>
        [Input("registryServer")]
        public Input<string>? RegistryServer { get; set; }

        /// <summary>
        /// Name of the Kubernetes secret containing registry credentials.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        /// <summary>
        /// Timestamp when the registry was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// Whether to use custom images instead of default ones.
        /// </summary>
        [Input("useCustomImages")]
        public Input<bool>? UseCustomImages { get; set; }

        public InfrastructureV2ImageRegistryArgs()
        {
        }
        public static new InfrastructureV2ImageRegistryArgs Empty => new InfrastructureV2ImageRegistryArgs();
    }
}
