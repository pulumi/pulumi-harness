// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Inputs
{

    public sealed class GetInfrastructureV2ImageRegistryInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Timestamp when the registry was created.
        /// </summary>
        [Input("createdAt", required: true)]
        public Input<string> CreatedAt { get; set; } = null!;

        [Input("customImages", required: true)]
        private InputList<Inputs.GetInfrastructureV2ImageRegistryCustomImageInputArgs>? _customImages;

        /// <summary>
        /// Custom image configurations. Required when use*custom*images is true.
        /// </summary>
        public InputList<Inputs.GetInfrastructureV2ImageRegistryCustomImageInputArgs> CustomImages
        {
            get => _customImages ?? (_customImages = new InputList<Inputs.GetInfrastructureV2ImageRegistryCustomImageInputArgs>());
            set => _customImages = value;
        }

        [Input("identifiers", required: true)]
        private InputList<Inputs.GetInfrastructureV2ImageRegistryIdentifierInputArgs>? _identifiers;

        /// <summary>
        /// Scoped identifiers for the registry.
        /// </summary>
        public InputList<Inputs.GetInfrastructureV2ImageRegistryIdentifierInputArgs> Identifiers
        {
            get => _identifiers ?? (_identifiers = new InputList<Inputs.GetInfrastructureV2ImageRegistryIdentifierInputArgs>());
            set => _identifiers = value;
        }

        /// <summary>
        /// ID of the infrastructure.
        /// </summary>
        [Input("infraId", required: true)]
        public Input<string> InfraId { get; set; } = null!;

        /// <summary>
        /// Whether this is the default registry.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// Whether override is allowed for this registry.
        /// </summary>
        [Input("isOverrideAllowed", required: true)]
        public Input<bool> IsOverrideAllowed { get; set; } = null!;

        /// <summary>
        /// Whether the registry is private.
        /// </summary>
        [Input("isPrivate", required: true)]
        public Input<bool> IsPrivate { get; set; } = null!;

        /// <summary>
        /// The account name for the container registry.
        /// </summary>
        [Input("registryAccount", required: true)]
        public Input<string> RegistryAccount { get; set; } = null!;

        /// <summary>
        /// The container image registry server URL (e.g., docker.io, gcr.io).
        /// </summary>
        [Input("registryServer", required: true)]
        public Input<string> RegistryServer { get; set; } = null!;

        /// <summary>
        /// Name of the Kubernetes secret containing registry credentials.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        /// <summary>
        /// Timestamp when the registry was last updated.
        /// </summary>
        [Input("updatedAt", required: true)]
        public Input<string> UpdatedAt { get; set; } = null!;

        /// <summary>
        /// Whether to use custom images instead of default ones.
        /// </summary>
        [Input("useCustomImages", required: true)]
        public Input<bool> UseCustomImages { get; set; } = null!;

        public GetInfrastructureV2ImageRegistryInputArgs()
        {
        }
        public static new GetInfrastructureV2ImageRegistryInputArgs Empty => new GetInfrastructureV2ImageRegistryInputArgs();
    }
}
