// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Inputs
{

    public sealed class InfrastructureV2EnvGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Variable name from a ConfigMap or Secret. Required when ValueFrom is configMapKeyRef or secretKeyRef.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Name of the environment variable. Must be a C_IDENTIFIER.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Variable references $(VAR*NAME) are expanded using the container's environment. If the variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR*NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        /// <summary>
        /// Source for the environment variable's value. Cannot be used if value is not empty.
        /// </summary>
        [Input("valueFrom")]
        public Input<string>? ValueFrom { get; set; }

        public InfrastructureV2EnvGetArgs()
        {
        }
        public static new InfrastructureV2EnvGetArgs Empty => new InfrastructureV2EnvGetArgs();
    }
}
