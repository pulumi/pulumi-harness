// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Inputs
{

    public sealed class SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID for the application map
        /// </summary>
        [Input("applicationMapId")]
        public Input<string>? ApplicationMapId { get; set; }

        /// <summary>
        /// Kind of the workload (e.g., deployment, statefulset)
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Label selector for the workload
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Namespace of the workload
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("services")]
        private InputList<string>? _services;

        /// <summary>
        /// List of services associated with the workload
        /// </summary>
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        public SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadGetArgs()
        {
        }
        public static new SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadGetArgs Empty => new SecurityGovernanceConditionK8sSpecApplicationSpecWorkloadGetArgs();
    }
}
