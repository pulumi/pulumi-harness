// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Outputs
{

    [OutputType]
    public sealed class GetSecurityGovernanceRuleTimeWindowResult
    {
        /// <summary>
        /// Duration of the time window (e.g., '30m', '2h').
        /// </summary>
        public readonly string Duration;
        /// <summary>
        /// End time of the time window in milliseconds since epoch.
        /// </summary>
        public readonly int EndTime;
        /// <summary>
        /// Recurrence configuration for the time window.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityGovernanceRuleTimeWindowRecurrenceResult> Recurrences;
        /// <summary>
        /// Start time of the time window in milliseconds since epoch.
        /// </summary>
        public readonly int StartTime;
        /// <summary>
        /// Time zone for the time window.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private GetSecurityGovernanceRuleTimeWindowResult(
            string duration,

            int endTime,

            ImmutableArray<Outputs.GetSecurityGovernanceRuleTimeWindowRecurrenceResult> recurrences,

            int startTime,

            string timeZone)
        {
            Duration = duration;
            EndTime = endTime;
            Recurrences = recurrences;
            StartTime = startTime;
            TimeZone = timeZone;
        }
    }
}
