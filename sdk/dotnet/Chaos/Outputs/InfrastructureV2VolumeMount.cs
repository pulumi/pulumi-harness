// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Outputs
{

    [OutputType]
    public sealed class InfrastructureV2VolumeMount
    {
        /// <summary>
        /// Path within the container at which the volume should be mounted. Must not contain ':'.
        /// </summary>
        public readonly string MountPath;
        /// <summary>
        /// Determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used.
        /// </summary>
        public readonly string? MountPropagation;
        /// <summary>
        /// This must match the Name of a Volume.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Mounted read-only if true, read-write otherwise.
        /// </summary>
        public readonly bool? ReadOnly;
        /// <summary>
        /// Path within the volume from which the container's volume should be mounted. Mutually exclusive with sub*path*expr.
        /// </summary>
        public readonly string? SubPath;
        /// <summary>
        /// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to sub*path but environment variable references $(VAR*NAME) are expanded using the container's environment. Mutually exclusive with sub_path.
        /// </summary>
        public readonly string? SubPathExpr;

        [OutputConstructor]
        private InfrastructureV2VolumeMount(
            string mountPath,

            string? mountPropagation,

            string name,

            bool? readOnly,

            string? subPath,

            string? subPathExpr)
        {
            MountPath = mountPath;
            MountPropagation = mountPropagation;
            Name = name;
            ReadOnly = readOnly;
            SubPath = subPath;
            SubPathExpr = subPathExpr;
        }
    }
}
