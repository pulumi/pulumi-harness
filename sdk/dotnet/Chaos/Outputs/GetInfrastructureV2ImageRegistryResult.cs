// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos.Outputs
{

    [OutputType]
    public sealed class GetInfrastructureV2ImageRegistryResult
    {
        /// <summary>
        /// Timestamp when the registry was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Custom image configurations. Required when use*custom*images is true.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInfrastructureV2ImageRegistryCustomImageResult> CustomImages;
        /// <summary>
        /// Scoped identifiers for the registry.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInfrastructureV2ImageRegistryIdentifierResult> Identifiers;
        /// <summary>
        /// ID of the infrastructure.
        /// </summary>
        public readonly string InfraId;
        /// <summary>
        /// Whether this is the default registry.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// Whether override is allowed for this registry.
        /// </summary>
        public readonly bool IsOverrideAllowed;
        /// <summary>
        /// Whether the registry is private.
        /// </summary>
        public readonly bool IsPrivate;
        /// <summary>
        /// The account name for the container registry.
        /// </summary>
        public readonly string RegistryAccount;
        /// <summary>
        /// The container image registry server URL (e.g., docker.io, gcr.io).
        /// </summary>
        public readonly string RegistryServer;
        /// <summary>
        /// Name of the Kubernetes secret containing registry credentials.
        /// </summary>
        public readonly string? SecretName;
        /// <summary>
        /// Timestamp when the registry was last updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Whether to use custom images instead of default ones.
        /// </summary>
        public readonly bool UseCustomImages;

        [OutputConstructor]
        private GetInfrastructureV2ImageRegistryResult(
            string createdAt,

            ImmutableArray<Outputs.GetInfrastructureV2ImageRegistryCustomImageResult> customImages,

            ImmutableArray<Outputs.GetInfrastructureV2ImageRegistryIdentifierResult> identifiers,

            string infraId,

            bool isDefault,

            bool isOverrideAllowed,

            bool isPrivate,

            string registryAccount,

            string registryServer,

            string? secretName,

            string updatedAt,

            bool useCustomImages)
        {
            CreatedAt = createdAt;
            CustomImages = customImages;
            Identifiers = identifiers;
            InfraId = infraId;
            IsDefault = isDefault;
            IsOverrideAllowed = isOverrideAllowed;
            IsPrivate = isPrivate;
            RegistryAccount = registryAccount;
            RegistryServer = registryServer;
            SecretName = secretName;
            UpdatedAt = updatedAt;
            UseCustomImages = useCustomImages;
        }
    }
}
