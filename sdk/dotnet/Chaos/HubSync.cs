// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Chaos
{
    /// <summary>
    /// Resource for syncing a Harness Chaos Hub
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Harness.Chaos.HubSync("example", new()
    ///     {
    ///         OrgId = "&lt;org_id&gt;",
    ///         ProjectId = "&lt;project_id&gt;",
    ///         HubId = "&lt;hub_id&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HarnessResourceType("harness:chaos/hubSync:HubSync")]
    public partial class HubSync : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Chaos Hub to sync
        /// </summary>
        [Output("hubId")]
        public Output<string> HubId { get; private set; } = null!;

        /// <summary>
        /// Timestamp of the last sync
        /// </summary>
        [Output("lastSyncedAt")]
        public Output<string> LastSyncedAt { get; private set; } = null!;

        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a HubSync resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HubSync(string name, HubSyncArgs args, CustomResourceOptions? options = null)
            : base("harness:chaos/hubSync:HubSync", name, args ?? new HubSyncArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HubSync(string name, Input<string> id, HubSyncState? state = null, CustomResourceOptions? options = null)
            : base("harness:chaos/hubSync:HubSync", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HubSync resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HubSync Get(string name, Input<string> id, HubSyncState? state = null, CustomResourceOptions? options = null)
        {
            return new HubSync(name, id, state, options);
        }
    }

    public sealed class HubSyncArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Chaos Hub to sync
        /// </summary>
        [Input("hubId", required: true)]
        public Input<string> HubId { get; set; } = null!;

        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public HubSyncArgs()
        {
        }
        public static new HubSyncArgs Empty => new HubSyncArgs();
    }

    public sealed class HubSyncState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Chaos Hub to sync
        /// </summary>
        [Input("hubId")]
        public Input<string>? HubId { get; set; }

        /// <summary>
        /// Timestamp of the last sync
        /// </summary>
        [Input("lastSyncedAt")]
        public Input<string>? LastSyncedAt { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public HubSyncState()
        {
        }
        public static new HubSyncState Empty => new HubSyncState();
    }
}
