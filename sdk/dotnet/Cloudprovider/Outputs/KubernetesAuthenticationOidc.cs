// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Cloudprovider.Outputs
{

    [OutputType]
    public sealed class KubernetesAuthenticationOidc
    {
        /// <summary>
        /// Name of the Harness secret containing the client ID for the cluster.
        /// </summary>
        public readonly string ClientIdSecretName;
        /// <summary>
        /// Name of the Harness secret containing the client secret for the cluster.
        /// </summary>
        public readonly string? ClientSecretSecretName;
        /// <summary>
        /// URL of the identity provider to use.
        /// </summary>
        public readonly string IdentityProviderUrl;
        /// <summary>
        /// URL of the Kubernetes master to connect to.
        /// </summary>
        public readonly string MasterUrl;
        /// <summary>
        /// Name of the Harness secret containing the password for the cluster.
        /// </summary>
        public readonly string PasswordSecretName;
        /// <summary>
        /// Scopes to request from the identity provider.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Username for authentication to the cluster. This can be the username itself or the ID of a harness secret.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private KubernetesAuthenticationOidc(
            string clientIdSecretName,

            string? clientSecretSecretName,

            string identityProviderUrl,

            string masterUrl,

            string passwordSecretName,

            ImmutableArray<string> scopes,

            string username)
        {
            ClientIdSecretName = clientIdSecretName;
            ClientSecretSecretName = clientSecretSecretName;
            IdentityProviderUrl = identityProviderUrl;
            MasterUrl = masterUrl;
            PasswordSecretName = passwordSecretName;
            Scopes = scopes;
            Username = username;
        }
    }
}
