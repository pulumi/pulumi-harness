// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Cloudprovider
{
    public static class GetDelegateIds
    {
        /// <summary>
        /// Use this data source to get a list of delegate ID's matching the specified search criteria.
        /// </summary>
        public static Task<GetDelegateIdsResult> InvokeAsync(GetDelegateIdsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegateIdsResult>("harness:cloudprovider/getDelegateIds:getDelegateIds", args ?? new GetDelegateIdsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a list of delegate ID's matching the specified search criteria.
        /// </summary>
        public static Output<GetDelegateIdsResult> Invoke(GetDelegateIdsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegateIdsResult>("harness:cloudprovider/getDelegateIds:getDelegateIds", args ?? new GetDelegateIdsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a list of delegate ID's matching the specified search criteria.
        /// </summary>
        public static Output<GetDelegateIdsResult> Invoke(GetDelegateIdsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegateIdsResult>("harness:cloudprovider/getDelegateIds:getDelegateIds", args ?? new GetDelegateIdsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegateIdsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the delegate to query for.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The status of the delegate to query for. Valid values are DELETED, ENABLED, WAITING*FOR*APPROVAL
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// The type of the delegate to query for. Valid values are DOCKER, ECS, HELM*DELEGATE, KUBERNETES, SHELL*SCRIPT
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetDelegateIdsArgs()
        {
        }
        public static new GetDelegateIdsArgs Empty => new GetDelegateIdsArgs();
    }

    public sealed class GetDelegateIdsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the delegate to query for.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The status of the delegate to query for. Valid values are DELETED, ENABLED, WAITING*FOR*APPROVAL
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The type of the delegate to query for. Valid values are DOCKER, ECS, HELM*DELEGATE, KUBERNETES, SHELL*SCRIPT
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetDelegateIdsInvokeArgs()
        {
        }
        public static new GetDelegateIdsInvokeArgs Empty => new GetDelegateIdsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegateIdsResult
    {
        /// <summary>
        /// A list of delegate ID's matching the specified search criteria.
        /// </summary>
        public readonly ImmutableArray<string> DelegateIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the delegate to query for.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The status of the delegate to query for. Valid values are DELETED, ENABLED, WAITING*FOR*APPROVAL
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The type of the delegate to query for. Valid values are DOCKER, ECS, HELM*DELEGATE, KUBERNETES, SHELL*SCRIPT
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetDelegateIdsResult(
            ImmutableArray<string> delegateIds,

            string id,

            string? name,

            string? status,

            string? type)
        {
            DelegateIds = delegateIds;
            Id = id;
            Name = name;
            Status = status;
            Type = type;
        }
    }
}
