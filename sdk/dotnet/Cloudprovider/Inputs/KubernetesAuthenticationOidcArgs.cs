// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Cloudprovider.Inputs
{

    public sealed class KubernetesAuthenticationOidcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Harness secret containing the client ID for the cluster.
        /// </summary>
        [Input("clientIdSecretName", required: true)]
        public Input<string> ClientIdSecretName { get; set; } = null!;

        /// <summary>
        /// Name of the Harness secret containing the client secret for the cluster.
        /// </summary>
        [Input("clientSecretSecretName")]
        public Input<string>? ClientSecretSecretName { get; set; }

        /// <summary>
        /// URL of the identity provider to use.
        /// </summary>
        [Input("identityProviderUrl", required: true)]
        public Input<string> IdentityProviderUrl { get; set; } = null!;

        /// <summary>
        /// URL of the Kubernetes master to connect to.
        /// </summary>
        [Input("masterUrl", required: true)]
        public Input<string> MasterUrl { get; set; } = null!;

        /// <summary>
        /// Name of the Harness secret containing the password for the cluster.
        /// </summary>
        [Input("passwordSecretName", required: true)]
        public Input<string> PasswordSecretName { get; set; } = null!;

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// Scopes to request from the identity provider.
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Username for authentication to the cluster. This can be the username itself or the ID of a harness secret.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public KubernetesAuthenticationOidcArgs()
        {
        }
        public static new KubernetesAuthenticationOidcArgs Empty => new KubernetesAuthenticationOidcArgs();
    }
}
