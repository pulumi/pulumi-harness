// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    /// <summary>
    /// Resource for managing IAC default pipelines
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Harness.Platform.IacmDefaultPipeline("example", new()
    ///     {
    ///         OrgId = test.Id,
    ///         ProjectId = testHarnessPlatformProject.Id,
    ///         ProvisionerType = "terraform",
    ///         Operation = "plan",
    ///         Pipeline = "pipeline1",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HarnessResourceType("harness:platform/iacmDefaultPipeline:IacmDefaultPipeline")]
    public partial class IacmDefaultPipeline : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The operation associated with this default.
        /// </summary>
        [Output("operation")]
        public Output<string> Operation { get; private set; } = null!;

        /// <summary>
        /// Organization identifier of the organization the default pipelines resides in.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// The pipeline associated with this default.
        /// </summary>
        [Output("pipeline")]
        public Output<string> Pipeline { get; private set; } = null!;

        /// <summary>
        /// Project identifier of the project the default pipelines resides in.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The provisioner associated with this default.
        /// </summary>
        [Output("provisionerType")]
        public Output<string> ProvisionerType { get; private set; } = null!;


        /// <summary>
        /// Create a IacmDefaultPipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IacmDefaultPipeline(string name, IacmDefaultPipelineArgs args, CustomResourceOptions? options = null)
            : base("harness:platform/iacmDefaultPipeline:IacmDefaultPipeline", name, args ?? new IacmDefaultPipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IacmDefaultPipeline(string name, Input<string> id, IacmDefaultPipelineState? state = null, CustomResourceOptions? options = null)
            : base("harness:platform/iacmDefaultPipeline:IacmDefaultPipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IacmDefaultPipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IacmDefaultPipeline Get(string name, Input<string> id, IacmDefaultPipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new IacmDefaultPipeline(name, id, state, options);
        }
    }

    public sealed class IacmDefaultPipelineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The operation associated with this default.
        /// </summary>
        [Input("operation", required: true)]
        public Input<string> Operation { get; set; } = null!;

        /// <summary>
        /// Organization identifier of the organization the default pipelines resides in.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// The pipeline associated with this default.
        /// </summary>
        [Input("pipeline", required: true)]
        public Input<string> Pipeline { get; set; } = null!;

        /// <summary>
        /// Project identifier of the project the default pipelines resides in.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The provisioner associated with this default.
        /// </summary>
        [Input("provisionerType", required: true)]
        public Input<string> ProvisionerType { get; set; } = null!;

        public IacmDefaultPipelineArgs()
        {
        }
        public static new IacmDefaultPipelineArgs Empty => new IacmDefaultPipelineArgs();
    }

    public sealed class IacmDefaultPipelineState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The operation associated with this default.
        /// </summary>
        [Input("operation")]
        public Input<string>? Operation { get; set; }

        /// <summary>
        /// Organization identifier of the organization the default pipelines resides in.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// The pipeline associated with this default.
        /// </summary>
        [Input("pipeline")]
        public Input<string>? Pipeline { get; set; }

        /// <summary>
        /// Project identifier of the project the default pipelines resides in.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The provisioner associated with this default.
        /// </summary>
        [Input("provisionerType")]
        public Input<string>? ProvisionerType { get; set; }

        public IacmDefaultPipelineState()
        {
        }
        public static new IacmDefaultPipelineState Empty => new IacmDefaultPipelineState();
    }
}
