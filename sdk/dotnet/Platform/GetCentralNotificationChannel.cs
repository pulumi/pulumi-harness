// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetCentralNotificationChannel
    {
        /// <summary>
        /// Data source for retrieving a central notification channel in Harness.
        /// </summary>
        public static Task<GetCentralNotificationChannelResult> InvokeAsync(GetCentralNotificationChannelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCentralNotificationChannelResult>("harness:platform/getCentralNotificationChannel:getCentralNotificationChannel", args ?? new GetCentralNotificationChannelArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a central notification channel in Harness.
        /// </summary>
        public static Output<GetCentralNotificationChannelResult> Invoke(GetCentralNotificationChannelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCentralNotificationChannelResult>("harness:platform/getCentralNotificationChannel:getCentralNotificationChannel", args ?? new GetCentralNotificationChannelInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a central notification channel in Harness.
        /// </summary>
        public static Output<GetCentralNotificationChannelResult> Invoke(GetCentralNotificationChannelInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCentralNotificationChannelResult>("harness:platform/getCentralNotificationChannel:getCentralNotificationChannel", args ?? new GetCentralNotificationChannelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCentralNotificationChannelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier associated with this notification channel.
        /// </summary>
        [Input("account")]
        public string? Account { get; set; }

        [Input("channels")]
        private List<Inputs.GetCentralNotificationChannelChannelArgs>? _channels;

        /// <summary>
        /// Configuration details of the notification channel.
        /// </summary>
        public List<Inputs.GetCentralNotificationChannelChannelArgs> Channels
        {
            get => _channels ?? (_channels = new List<Inputs.GetCentralNotificationChannelChannelArgs>());
            set => _channels = value;
        }

        /// <summary>
        /// Timestamp when the notification channel was created.
        /// </summary>
        [Input("created")]
        public int? Created { get; set; }

        /// <summary>
        /// Unique identifier of the notification channel.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        /// <summary>
        /// Timestamp when the notification channel was last modified.
        /// </summary>
        [Input("lastModified")]
        public int? LastModified { get; set; }

        /// <summary>
        /// Name of the notification channel.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
        /// </summary>
        [Input("notificationChannelType")]
        public string? NotificationChannelType { get; set; }

        /// <summary>
        /// Identifier of the organization the notification channel is scoped to.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// Identifier of the project the notification channel is scoped to.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// Status of the notification channel. Possible values are ENABLED or DISABLED.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetCentralNotificationChannelArgs()
        {
        }
        public static new GetCentralNotificationChannelArgs Empty => new GetCentralNotificationChannelArgs();
    }

    public sealed class GetCentralNotificationChannelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier associated with this notification channel.
        /// </summary>
        [Input("account")]
        public Input<string>? Account { get; set; }

        [Input("channels")]
        private InputList<Inputs.GetCentralNotificationChannelChannelInputArgs>? _channels;

        /// <summary>
        /// Configuration details of the notification channel.
        /// </summary>
        public InputList<Inputs.GetCentralNotificationChannelChannelInputArgs> Channels
        {
            get => _channels ?? (_channels = new InputList<Inputs.GetCentralNotificationChannelChannelInputArgs>());
            set => _channels = value;
        }

        /// <summary>
        /// Timestamp when the notification channel was created.
        /// </summary>
        [Input("created")]
        public Input<int>? Created { get; set; }

        /// <summary>
        /// Unique identifier of the notification channel.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Timestamp when the notification channel was last modified.
        /// </summary>
        [Input("lastModified")]
        public Input<int>? LastModified { get; set; }

        /// <summary>
        /// Name of the notification channel.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
        /// </summary>
        [Input("notificationChannelType")]
        public Input<string>? NotificationChannelType { get; set; }

        /// <summary>
        /// Identifier of the organization the notification channel is scoped to.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Identifier of the project the notification channel is scoped to.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Status of the notification channel. Possible values are ENABLED or DISABLED.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetCentralNotificationChannelInvokeArgs()
        {
        }
        public static new GetCentralNotificationChannelInvokeArgs Empty => new GetCentralNotificationChannelInvokeArgs();
    }


    [OutputType]
    public sealed class GetCentralNotificationChannelResult
    {
        /// <summary>
        /// Account identifier associated with this notification channel.
        /// </summary>
        public readonly string? Account;
        /// <summary>
        /// Configuration details of the notification channel.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCentralNotificationChannelChannelResult> Channels;
        /// <summary>
        /// Timestamp when the notification channel was created.
        /// </summary>
        public readonly int? Created;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique identifier of the notification channel.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Timestamp when the notification channel was last modified.
        /// </summary>
        public readonly int? LastModified;
        /// <summary>
        /// Name of the notification channel.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Type of notification channel. One of: EMAIL, SLACK, PAGERDUTY, MSTeams, WEBHOOK, DATADOG.
        /// </summary>
        public readonly string? NotificationChannelType;
        /// <summary>
        /// Identifier of the organization the notification channel is scoped to.
        /// </summary>
        public readonly string? Org;
        /// <summary>
        /// Identifier of the project the notification channel is scoped to.
        /// </summary>
        public readonly string? Project;
        /// <summary>
        /// Status of the notification channel. Possible values are ENABLED or DISABLED.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private GetCentralNotificationChannelResult(
            string? account,

            ImmutableArray<Outputs.GetCentralNotificationChannelChannelResult> channels,

            int? created,

            string id,

            string identifier,

            int? lastModified,

            string? name,

            string? notificationChannelType,

            string? org,

            string? project,

            string? status)
        {
            Account = account;
            Channels = channels;
            Created = created;
            Id = id;
            Identifier = identifier;
            LastModified = lastModified;
            Name = name;
            NotificationChannelType = notificationChannelType;
            Org = org;
            Project = project;
            Status = status;
        }
    }
}
