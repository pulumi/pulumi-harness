// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    /// <summary>
    /// Resource for creating a Harness Provider.
    /// </summary>
    [HarnessResourceType("harness:platform/provider:Provider")]
    public partial class Provider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the provider entity.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The identifier of the provider entity.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// The last modified time of the provider entity.
        /// </summary>
        [Output("lastModifiedAt")]
        public Output<int> LastModifiedAt { get; private set; } = null!;

        /// <summary>
        /// The name of the provider entity.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Contains parameters related to the provider entity.
        /// </summary>
        [Output("spec")]
        public Output<Outputs.ProviderSpec> Spec { get; private set; } = null!;

        /// <summary>
        /// The type of the provider entity.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs args, CustomResourceOptions? options = null)
            : base("harness:platform/provider:Provider", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Provider(string name, Input<string> id, ProviderState? state = null, CustomResourceOptions? options = null)
            : base("harness:platform/provider:Provider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Provider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Provider Get(string name, Input<string> id, ProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new Provider(name, id, state, options);
        }
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the provider entity.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The identifier of the provider entity.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// The name of the provider entity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Contains parameters related to the provider entity.
        /// </summary>
        [Input("spec", required: true)]
        public Input<Inputs.ProviderSpecArgs> Spec { get; set; } = null!;

        public ProviderArgs()
        {
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }

    public sealed class ProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the provider entity.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The identifier of the provider entity.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// The last modified time of the provider entity.
        /// </summary>
        [Input("lastModifiedAt")]
        public Input<int>? LastModifiedAt { get; set; }

        /// <summary>
        /// The name of the provider entity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Contains parameters related to the provider entity.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.ProviderSpecGetArgs>? Spec { get; set; }

        /// <summary>
        /// The type of the provider entity.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ProviderState()
        {
        }
        public static new ProviderState Empty => new ProviderState();
    }
}
