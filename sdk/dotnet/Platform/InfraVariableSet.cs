// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    /// <summary>
    /// Resource for managing infrastructure Variable Sets
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Harness.Platform.InfraVariableSet("example", new()
    ///     {
    ///         Identifier = "example",
    ///         Name = "example",
    ///         OrgId = test.Id,
    ///         ProjectId = testHarnessPlatformProject.Id,
    ///         Description = "some description",
    ///         EnvironmentVariables = new[]
    ///         {
    ///             new Harness.Platform.Inputs.InfraVariableSetEnvironmentVariableArgs
    ///             {
    ///                 Key = "key1",
    ///                 Value = "value1",
    ///                 ValueType = "string",
    ///             },
    ///             new Harness.Platform.Inputs.InfraVariableSetEnvironmentVariableArgs
    ///             {
    ///                 Key = "key2",
    ///                 Value = "harness_platform_secret_text.test.id",
    ///                 ValueType = "secret",
    ///             },
    ///         },
    ///         TerraformVariables = new[]
    ///         {
    ///             new Harness.Platform.Inputs.InfraVariableSetTerraformVariableArgs
    ///             {
    ///                 Key = "key1",
    ///                 Value = "1111",
    ///                 ValueType = "string",
    ///             },
    ///             new Harness.Platform.Inputs.InfraVariableSetTerraformVariableArgs
    ///             {
    ///                 Key = "key2",
    ///                 Value = "1111u",
    ///                 ValueType = "string",
    ///             },
    ///         },
    ///         TerraformVariableFiles = new[]
    ///         {
    ///             new Harness.Platform.Inputs.InfraVariableSetTerraformVariableFileArgs
    ///             {
    ///                 Repository = "https://github.com/org/repo",
    ///                 RepositoryBranch = "main",
    ///                 RepositoryPath = "tf/aws/basic",
    ///                 RepositoryConnector = "harness_platform_connector_github.test.id",
    ///             },
    ///             new Harness.Platform.Inputs.InfraVariableSetTerraformVariableFileArgs
    ///             {
    ///                 Repository = "https://github.com/org/repo",
    ///                 RepositoryBranch = "br2",
    ///                 RepositoryPath = "tf/aws/basic",
    ///                 RepositoryConnector = "harness_platform_connector_github.test.id",
    ///             },
    ///         },
    ///         Connectors = new[]
    ///         {
    ///             new Harness.Platform.Inputs.InfraVariableSetConnectorArgs
    ///             {
    ///                 ConnectorRef = "harness_platform_connector_aws.test.id",
    ///                 Type = "aws",
    ///             },
    ///             new Harness.Platform.Inputs.InfraVariableSetConnectorArgs
    ///             {
    ///                 ConnectorRef = "harness_platform_connector_azure.test.id",
    ///                 Type = "azure",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/infraVariableSet:InfraVariableSet example &lt;varset_id&gt;
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/infraVariableSet:InfraVariableSet example &lt;org_id&gt;/&lt;varset_id&gt;
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/infraVariableSet:InfraVariableSet example &lt;org_id&gt;/&lt;project_id&gt;/&lt;varset_id&gt;
    /// ```
    /// </summary>
    [HarnessResourceType("harness:platform/infraVariableSet:InfraVariableSet")]
    public partial class InfraVariableSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Provider connector configured on the variable set
        /// </summary>
        [Output("connectors")]
        public Output<ImmutableArray<Outputs.InfraVariableSetConnector>> Connectors { get; private set; } = null!;

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Environment variables configured on the variable set
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableArray<Outputs.InfraVariableSetEnvironmentVariable>> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Output("orgId")]
        public Output<string?> OrgId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string?> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("terraformVariableFiles")]
        public Output<ImmutableArray<Outputs.InfraVariableSetTerraformVariableFile>> TerraformVariableFiles { get; private set; } = null!;

        [Output("terraformVariables")]
        public Output<ImmutableArray<Outputs.InfraVariableSetTerraformVariable>> TerraformVariables { get; private set; } = null!;


        /// <summary>
        /// Create a InfraVariableSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InfraVariableSet(string name, InfraVariableSetArgs args, CustomResourceOptions? options = null)
            : base("harness:platform/infraVariableSet:InfraVariableSet", name, args ?? new InfraVariableSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InfraVariableSet(string name, Input<string> id, InfraVariableSetState? state = null, CustomResourceOptions? options = null)
            : base("harness:platform/infraVariableSet:InfraVariableSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InfraVariableSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InfraVariableSet Get(string name, Input<string> id, InfraVariableSetState? state = null, CustomResourceOptions? options = null)
        {
            return new InfraVariableSet(name, id, state, options);
        }
    }

    public sealed class InfraVariableSetArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectors")]
        private InputList<Inputs.InfraVariableSetConnectorArgs>? _connectors;

        /// <summary>
        /// Provider connector configured on the variable set
        /// </summary>
        public InputList<Inputs.InfraVariableSetConnectorArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.InfraVariableSetConnectorArgs>());
            set => _connectors = value;
        }

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environmentVariables")]
        private InputList<Inputs.InfraVariableSetEnvironmentVariableArgs>? _environmentVariables;

        /// <summary>
        /// Environment variables configured on the variable set
        /// </summary>
        public InputList<Inputs.InfraVariableSetEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.InfraVariableSetEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("terraformVariableFiles")]
        private InputList<Inputs.InfraVariableSetTerraformVariableFileArgs>? _terraformVariableFiles;
        public InputList<Inputs.InfraVariableSetTerraformVariableFileArgs> TerraformVariableFiles
        {
            get => _terraformVariableFiles ?? (_terraformVariableFiles = new InputList<Inputs.InfraVariableSetTerraformVariableFileArgs>());
            set => _terraformVariableFiles = value;
        }

        [Input("terraformVariables")]
        private InputList<Inputs.InfraVariableSetTerraformVariableArgs>? _terraformVariables;
        public InputList<Inputs.InfraVariableSetTerraformVariableArgs> TerraformVariables
        {
            get => _terraformVariables ?? (_terraformVariables = new InputList<Inputs.InfraVariableSetTerraformVariableArgs>());
            set => _terraformVariables = value;
        }

        public InfraVariableSetArgs()
        {
        }
        public static new InfraVariableSetArgs Empty => new InfraVariableSetArgs();
    }

    public sealed class InfraVariableSetState : global::Pulumi.ResourceArgs
    {
        [Input("connectors")]
        private InputList<Inputs.InfraVariableSetConnectorGetArgs>? _connectors;

        /// <summary>
        /// Provider connector configured on the variable set
        /// </summary>
        public InputList<Inputs.InfraVariableSetConnectorGetArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.InfraVariableSetConnectorGetArgs>());
            set => _connectors = value;
        }

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environmentVariables")]
        private InputList<Inputs.InfraVariableSetEnvironmentVariableGetArgs>? _environmentVariables;

        /// <summary>
        /// Environment variables configured on the variable set
        /// </summary>
        public InputList<Inputs.InfraVariableSetEnvironmentVariableGetArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.InfraVariableSetEnvironmentVariableGetArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("terraformVariableFiles")]
        private InputList<Inputs.InfraVariableSetTerraformVariableFileGetArgs>? _terraformVariableFiles;
        public InputList<Inputs.InfraVariableSetTerraformVariableFileGetArgs> TerraformVariableFiles
        {
            get => _terraformVariableFiles ?? (_terraformVariableFiles = new InputList<Inputs.InfraVariableSetTerraformVariableFileGetArgs>());
            set => _terraformVariableFiles = value;
        }

        [Input("terraformVariables")]
        private InputList<Inputs.InfraVariableSetTerraformVariableGetArgs>? _terraformVariables;
        public InputList<Inputs.InfraVariableSetTerraformVariableGetArgs> TerraformVariables
        {
            get => _terraformVariables ?? (_terraformVariables = new InputList<Inputs.InfraVariableSetTerraformVariableGetArgs>());
            set => _terraformVariables = value;
        }

        public InfraVariableSetState()
        {
        }
        public static new InfraVariableSetState Empty => new InfraVariableSetState();
    }
}
