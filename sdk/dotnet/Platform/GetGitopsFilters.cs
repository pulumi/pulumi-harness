// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetGitopsFilters
    {
        /// <summary>
        /// Data source for retrieving a Harness GitOps Filter.
        /// </summary>
        public static Task<GetGitopsFiltersResult> InvokeAsync(GetGitopsFiltersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGitopsFiltersResult>("harness:platform/getGitopsFilters:getGitopsFilters", args ?? new GetGitopsFiltersArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness GitOps Filter.
        /// </summary>
        public static Output<GetGitopsFiltersResult> Invoke(GetGitopsFiltersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGitopsFiltersResult>("harness:platform/getGitopsFilters:getGitopsFilters", args ?? new GetGitopsFiltersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness GitOps Filter.
        /// </summary>
        public static Output<GetGitopsFiltersResult> Invoke(GetGitopsFiltersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGitopsFiltersResult>("harness:platform/getGitopsFilters:getGitopsFilters", args ?? new GetGitopsFiltersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGitopsFiltersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        /// <summary>
        /// Organization Identifier for the Entity.
        /// </summary>
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        /// <summary>
        /// Project Identifier for the Entity.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// Type of filter.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetGitopsFiltersArgs()
        {
        }
        public static new GetGitopsFiltersArgs Empty => new GetGitopsFiltersArgs();
    }

    public sealed class GetGitopsFiltersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Organization Identifier for the Entity.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// Project Identifier for the Entity.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Type of filter.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetGitopsFiltersInvokeArgs()
        {
        }
        public static new GetGitopsFiltersInvokeArgs Empty => new GetGitopsFiltersInvokeArgs();
    }


    [OutputType]
    public sealed class GetGitopsFiltersResult
    {
        /// <summary>
        /// Properties of the filters entity defined in Harness as a JSON string. All values should be arrays of strings. Example: jsonencode({"healthStatus": ["Healthy", "Degraded"], "syncStatus": ["Synced"]})
        /// </summary>
        public readonly string FilterProperties;
        /// <summary>
        /// This indicates visibility of filters, by default it is Everyone.
        /// </summary>
        public readonly string FilterVisibility;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Name of the Filter.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Organization Identifier for the Entity.
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// Project Identifier for the Entity.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Type of filter.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGitopsFiltersResult(
            string filterProperties,

            string filterVisibility,

            string id,

            string identifier,

            string name,

            string orgId,

            string projectId,

            string type)
        {
            FilterProperties = filterProperties;
            FilterVisibility = filterVisibility;
            Id = id;
            Identifier = identifier;
            Name = name;
            OrgId = orgId;
            ProjectId = projectId;
            Type = type;
        }
    }
}
