// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class HarRegistryConfigAuthGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessKey")]
        private Input<string>? _accessKey;
        public Input<string>? AccessKey
        {
            get => _accessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("accessKeyIdentifier")]
        public Input<string>? AccessKeyIdentifier { get; set; }

        [Input("accessKeySecretPath")]
        public Input<string>? AccessKeySecretPath { get; set; }

        /// <summary>
        /// Type of authentication (UserPassword, Anonymous)
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// Secret identifier for UserPassword auth type
        /// </summary>
        [Input("secretIdentifier")]
        public Input<string>? SecretIdentifier { get; set; }

        [Input("secretKeyIdentifier")]
        public Input<string>? SecretKeyIdentifier { get; set; }

        [Input("secretKeySecretPath")]
        public Input<string>? SecretKeySecretPath { get; set; }

        /// <summary>
        /// Secret space path for UserPassword auth type
        /// </summary>
        [Input("secretSpacePath")]
        public Input<string>? SecretSpacePath { get; set; }

        /// <summary>
        /// User name for UserPassword auth type
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public HarRegistryConfigAuthGetArgs()
        {
        }
        public static new HarRegistryConfigAuthGetArgs Empty => new HarRegistryConfigAuthGetArgs();
    }
}
