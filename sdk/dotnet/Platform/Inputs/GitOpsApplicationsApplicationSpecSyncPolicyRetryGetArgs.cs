// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("backoffs")]
        private InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyRetryBackoffGetArgs>? _backoffs;

        /// <summary>
        /// Backoff strategy to use on subsequent retries for failing syncs.
        /// </summary>
        public InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyRetryBackoffGetArgs> Backoffs
        {
            get => _backoffs ?? (_backoffs = new InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyRetryBackoffGetArgs>());
            set => _backoffs = value;
        }

        /// <summary>
        /// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
        /// </summary>
        [Input("limit")]
        public Input<string>? Limit { get; set; }

        public GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs()
        {
        }
        public static new GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs Empty => new GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs();
    }
}
