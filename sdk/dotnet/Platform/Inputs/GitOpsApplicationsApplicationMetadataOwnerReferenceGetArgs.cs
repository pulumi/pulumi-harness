// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsApplicationsApplicationMetadataOwnerReferenceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API version of the referent.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
        /// </summary>
        [Input("blockOwnerDeletion")]
        public Input<bool>? BlockOwnerDeletion { get; set; }

        /// <summary>
        /// Indicates if the reference points to the managing controller.
        /// </summary>
        [Input("controller")]
        public Input<bool>? Controller { get; set; }

        /// <summary>
        /// Kind of the referent.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Name of the referent.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// UID of the referent.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public GitOpsApplicationsApplicationMetadataOwnerReferenceGetArgs()
        {
        }
        public static new GitOpsApplicationsApplicationMetadataOwnerReferenceGetArgs Empty => new GitOpsApplicationsApplicationMetadataOwnerReferenceGetArgs();
    }
}
