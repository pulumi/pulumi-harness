// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("notificationEntity", required: true)]
        public string NotificationEntity { get; set; } = null!;

        [Input("notificationEvent", required: true)]
        public string NotificationEvent { get; set; } = null!;

        [Input("notificationEventDatas")]
        private List<Inputs.GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs>? _notificationEventDatas;
        public List<Inputs.GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs> NotificationEventDatas
        {
            get => _notificationEventDatas ?? (_notificationEventDatas = new List<Inputs.GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs>());
            set => _notificationEventDatas = value;
        }

        public GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs()
        {
        }
        public static new GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs Empty => new GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigArgs();
    }
}
