// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class MonitoredServiceRequestGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("changeSources")]
        private InputList<Inputs.MonitoredServiceRequestChangeSourceGetArgs>? _changeSources;

        /// <summary>
        /// Set of change sources for the monitored service.
        /// </summary>
        public InputList<Inputs.MonitoredServiceRequestChangeSourceGetArgs> ChangeSources
        {
            get => _changeSources ?? (_changeSources = new InputList<Inputs.MonitoredServiceRequestChangeSourceGetArgs>());
            set => _changeSources = value;
        }

        [Input("dependencies")]
        private InputList<Inputs.MonitoredServiceRequestDependencyGetArgs>? _dependencies;

        /// <summary>
        /// Dependencies of the monitored service.
        /// </summary>
        public InputList<Inputs.MonitoredServiceRequestDependencyGetArgs> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputList<Inputs.MonitoredServiceRequestDependencyGetArgs>());
            set => _dependencies = value;
        }

        /// <summary>
        /// Description for the monitored service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable or disable the monitored service.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Environment in which the service is deployed.
        /// </summary>
        [Input("environmentRef", required: true)]
        public Input<string> EnvironmentRef { get; set; } = null!;

        [Input("environmentRefLists")]
        private InputList<string>? _environmentRefLists;

        /// <summary>
        /// Environment reference list for the monitored service.
        /// </summary>
        public InputList<string> EnvironmentRefLists
        {
            get => _environmentRefLists ?? (_environmentRefLists = new InputList<string>());
            set => _environmentRefLists = value;
        }

        [Input("healthSources")]
        private InputList<Inputs.MonitoredServiceRequestHealthSourceGetArgs>? _healthSources;

        /// <summary>
        /// Set of health sources for the monitored service.
        /// </summary>
        public InputList<Inputs.MonitoredServiceRequestHealthSourceGetArgs> HealthSources
        {
            get => _healthSources ?? (_healthSources = new InputList<Inputs.MonitoredServiceRequestHealthSourceGetArgs>());
            set => _healthSources = value;
        }

        /// <summary>
        /// Name for the monitored service.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("notificationRuleRefs")]
        private InputList<Inputs.MonitoredServiceRequestNotificationRuleRefGetArgs>? _notificationRuleRefs;

        /// <summary>
        /// Notification rule references for the monitored service.
        /// </summary>
        public InputList<Inputs.MonitoredServiceRequestNotificationRuleRefGetArgs> NotificationRuleRefs
        {
            get => _notificationRuleRefs ?? (_notificationRuleRefs = new InputList<Inputs.MonitoredServiceRequestNotificationRuleRefGetArgs>());
            set => _notificationRuleRefs = value;
        }

        /// <summary>
        /// Service reference for the monitored service.
        /// </summary>
        [Input("serviceRef", required: true)]
        public Input<string> ServiceRef { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags for the monitored service. comma-separated key value string pairs.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Template reference for the monitored service.
        /// </summary>
        [Input("templateRef")]
        public Input<string>? TemplateRef { get; set; }

        /// <summary>
        /// Type of the monitored service.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Template version label for the monitored service.
        /// </summary>
        [Input("versionLabel")]
        public Input<string>? VersionLabel { get; set; }

        public MonitoredServiceRequestGetArgs()
        {
        }
        public static new MonitoredServiceRequestGetArgs Empty => new MonitoredServiceRequestGetArgs();
    }
}
