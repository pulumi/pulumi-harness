// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitopsAppProjectProjectMetadataArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations associated with the GitOps project.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Name of the cluster associated with the GitOps project.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("finalizers")]
        private InputList<string>? _finalizers;

        /// <summary>
        /// Finalizers associated with the GitOps project.
        /// </summary>
        public InputList<string> Finalizers
        {
            get => _finalizers ?? (_finalizers = new InputList<string>());
            set => _finalizers = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels associated with the GitOps project.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("managedFields")]
        private InputList<Inputs.GitopsAppProjectProjectMetadataManagedFieldArgs>? _managedFields;

        /// <summary>
        /// Managed fields associated with the GitOps project.
        /// </summary>
        public InputList<Inputs.GitopsAppProjectProjectMetadataManagedFieldArgs> ManagedFields
        {
            get => _managedFields ?? (_managedFields = new InputList<Inputs.GitopsAppProjectProjectMetadataManagedFieldArgs>());
            set => _managedFields = value;
        }

        /// <summary>
        /// Name of the GitOps project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Namespace of the GitOps project. This must be the same as the namespace where the agent is installed
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Resource Version for the GitOps project
        /// </summary>
        [Input("resourceVersion")]
        public Input<string>? ResourceVersion { get; set; }

        public GitopsAppProjectProjectMetadataArgs()
        {
        }
        public static new GitopsAppProjectProjectMetadataArgs Empty => new GitopsAppProjectProjectMetadataArgs();
    }
}
