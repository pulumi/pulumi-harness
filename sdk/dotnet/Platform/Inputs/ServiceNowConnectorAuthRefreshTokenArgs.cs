// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class ServiceNowConnectorAuthRefreshTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Reference to a secret containing the client id to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
        /// </summary>
        [Input("clientIdRef", required: true)]
        public Input<string> ClientIdRef { get; set; } = null!;

        /// <summary>
        /// Reference to a secret containing the client secret to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
        /// </summary>
        [Input("clientSecretRef")]
        public Input<string>? ClientSecretRef { get; set; }

        /// <summary>
        /// Reference to a secret containing the refresh token to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
        /// </summary>
        [Input("refreshTokenRef", required: true)]
        public Input<string> RefreshTokenRef { get; set; } = null!;

        /// <summary>
        /// Scope string to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Token url to use for authentication.
        /// </summary>
        [Input("tokenUrl", required: true)]
        public Input<string> TokenUrl { get; set; } = null!;

        public ServiceNowConnectorAuthRefreshTokenArgs()
        {
        }
        public static new ServiceNowConnectorAuthRefreshTokenArgs Empty => new ServiceNowConnectorAuthRefreshTokenArgs();
    }
}
