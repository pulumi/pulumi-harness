// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GetHarRegistryConfigAuthArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessKey")]
        private string? _accessKey;
        public string? AccessKey
        {
            get => _accessKey;
            set => _accessKey = value;
        }

        [Input("accessKeyIdentifier")]
        public string? AccessKeyIdentifier { get; set; }

        [Input("accessKeySecretPath")]
        public string? AccessKeySecretPath { get; set; }

        /// <summary>
        /// Type of authentication (UserPassword, Anonymous)
        /// </summary>
        [Input("authType", required: true)]
        public string AuthType { get; set; } = null!;

        /// <summary>
        /// Secret identifier for UserPassword auth type
        /// </summary>
        [Input("secretIdentifier")]
        public string? SecretIdentifier { get; set; }

        [Input("secretKeyIdentifier")]
        public string? SecretKeyIdentifier { get; set; }

        [Input("secretKeySecretPath")]
        public string? SecretKeySecretPath { get; set; }

        /// <summary>
        /// Secret space path for UserPassword auth type
        /// </summary>
        [Input("secretSpacePath")]
        public string? SecretSpacePath { get; set; }

        /// <summary>
        /// User name for UserPassword auth type
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public GetHarRegistryConfigAuthArgs()
        {
        }
        public static new GetHarRegistryConfigAuthArgs Empty => new GetHarRegistryConfigAuthArgs();
    }
}
