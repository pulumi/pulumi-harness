// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsRepositoryGcrGenWorkloadIdentityServiceAccountRefGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("audiences")]
        private InputList<string>? _audiences;

        /// <summary>
        /// Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
        /// </summary>
        public InputList<string> Audiences
        {
            get => _audiences ?? (_audiences = new InputList<string>());
            set => _audiences = value;
        }

        /// <summary>
        /// The name of the ServiceAccount resource being referred to.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public GitOpsRepositoryGcrGenWorkloadIdentityServiceAccountRefGetArgs()
        {
        }
        public static new GitOpsRepositoryGcrGenWorkloadIdentityServiceAccountRefGetArgs Empty => new GitOpsRepositoryGcrGenWorkloadIdentityServiceAccountRefGetArgs();
    }
}
