// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GetRepoSourceInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The host URL for the import source.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password for authentication when importing.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The full identifier of the repository on the SCM provider's platform.
        /// </summary>
        [Input("repo")]
        public Input<string>? Repo { get; set; }

        /// <summary>
        /// The type of SCM provider (github, gitlab, bitbucket, stash, gitea, gogs) when importing.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The username for authentication when importing.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GetRepoSourceInputArgs()
        {
        }
        public static new GetRepoSourceInputArgs Empty => new GetRepoSourceInputArgs();
    }
}
