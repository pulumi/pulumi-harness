// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("notificationEntity", required: true)]
        public Input<string> NotificationEntity { get; set; } = null!;

        [Input("notificationEvent", required: true)]
        public Input<string> NotificationEvent { get; set; } = null!;

        [Input("notificationEventDatas")]
        private InputList<Inputs.GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataInputArgs>? _notificationEventDatas;
        public InputList<Inputs.GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataInputArgs> NotificationEventDatas
        {
            get => _notificationEventDatas ?? (_notificationEventDatas = new InputList<Inputs.GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataInputArgs>());
            set => _notificationEventDatas = value;
        }

        public GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigInputArgs()
        {
        }
        public static new GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigInputArgs Empty => new GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigInputArgs();
    }
}
