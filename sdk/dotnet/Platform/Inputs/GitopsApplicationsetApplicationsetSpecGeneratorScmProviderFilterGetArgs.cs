// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitopsApplicationsetApplicationsetSpecGeneratorScmProviderFilterGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A regex which must match the branch name.
        /// </summary>
        [Input("branchMatch")]
        public Input<string>? BranchMatch { get; set; }

        /// <summary>
        /// A regex which must match at least one label.
        /// </summary>
        [Input("labelMatch")]
        public Input<string>? LabelMatch { get; set; }

        [Input("pathsDoNotExists")]
        private InputList<string>? _pathsDoNotExists;

        /// <summary>
        /// An array of paths, all of which must not exist.
        /// </summary>
        public InputList<string> PathsDoNotExists
        {
            get => _pathsDoNotExists ?? (_pathsDoNotExists = new InputList<string>());
            set => _pathsDoNotExists = value;
        }

        [Input("pathsExists")]
        private InputList<string>? _pathsExists;

        /// <summary>
        /// An array of paths, all of which must exist.
        /// </summary>
        public InputList<string> PathsExists
        {
            get => _pathsExists ?? (_pathsExists = new InputList<string>());
            set => _pathsExists = value;
        }

        /// <summary>
        /// A regex for repo names.
        /// </summary>
        [Input("repositoryMatch")]
        public Input<string>? RepositoryMatch { get; set; }

        public GitopsApplicationsetApplicationsetSpecGeneratorScmProviderFilterGetArgs()
        {
        }
        public static new GitopsApplicationsetApplicationsetSpecGeneratorScmProviderFilterGetArgs Empty => new GitopsApplicationsetApplicationsetSpecGeneratorScmProviderFilterGetArgs();
    }
}
