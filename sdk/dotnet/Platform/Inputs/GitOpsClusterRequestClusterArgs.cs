// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsClusterRequestClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations for cluster secret metadata.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
        /// </summary>
        [Input("clusterResources")]
        public Input<bool>? ClusterResources { get; set; }

        [Input("configs", required: true)]
        private InputList<Inputs.GitOpsClusterRequestClusterConfigArgs>? _configs;

        /// <summary>
        /// GitOps cluster config.
        /// </summary>
        public InputList<Inputs.GitOpsClusterRequestClusterConfigArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.GitOpsClusterRequestClusterConfigArgs>());
            set => _configs = value;
        }

        [Input("infos")]
        private InputList<Inputs.GitOpsClusterRequestClusterInfoArgs>? _infos;

        /// <summary>
        /// Information about cluster cache and state.
        /// </summary>
        public InputList<Inputs.GitOpsClusterRequestClusterInfoArgs> Infos
        {
            get => _infos ?? (_infos = new InputList<Inputs.GitOpsClusterRequestClusterInfoArgs>());
            set => _infos = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for cluster secret metadata.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the cluster. If omitted, the server address will be used.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namespaces")]
        private InputList<string>? _namespaces;

        /// <summary>
        /// List of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
        /// </summary>
        public InputList<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<string>());
            set => _namespaces = value;
        }

        /// <summary>
        /// The ArgoCD project name corresponding to this GitOps cluster. An empty string means that the GitOps cluster belongs to the default project created by Harness.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("refreshRequestedAts")]
        private InputList<Inputs.GitOpsClusterRequestClusterRefreshRequestedAtArgs>? _refreshRequestedAts;

        /// <summary>
        /// Time when cluster cache refresh has been requested.
        /// </summary>
        public InputList<Inputs.GitOpsClusterRequestClusterRefreshRequestedAtArgs> RefreshRequestedAts
        {
            get => _refreshRequestedAts ?? (_refreshRequestedAts = new InputList<Inputs.GitOpsClusterRequestClusterRefreshRequestedAtArgs>());
            set => _refreshRequestedAts = value;
        }

        /// <summary>
        /// API server URL of the kubernetes cluster.
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        /// <summary>
        /// Shard number to be managed by a specific application controller pod. Calculated on the fly by the application controller if not specified.
        /// </summary>
        [Input("shard")]
        public Input<string>? Shard { get; set; }

        public GitOpsClusterRequestClusterArgs()
        {
        }
        public static new GitOpsClusterRequestClusterArgs Empty => new GitOpsClusterRequestClusterArgs();
    }
}
