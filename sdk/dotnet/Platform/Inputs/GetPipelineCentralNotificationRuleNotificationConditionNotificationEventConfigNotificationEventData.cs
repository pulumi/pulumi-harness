// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs : global::Pulumi.InvokeArgs
    {
        [Input("scopeIdentifiers")]
        private List<string>? _scopeIdentifiers;
        public List<string> ScopeIdentifiers
        {
            get => _scopeIdentifiers ?? (_scopeIdentifiers = new List<string>());
            set => _scopeIdentifiers = value;
        }

        [Input("type")]
        public string? Type { get; set; }

        public GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs()
        {
        }
        public static new GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs Empty => new GetPipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventDataArgs();
    }
}
