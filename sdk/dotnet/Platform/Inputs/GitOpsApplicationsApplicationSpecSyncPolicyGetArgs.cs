// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsApplicationsApplicationSpecSyncPolicyGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("automateds")]
        private InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyAutomatedGetArgs>? _automateds;

        /// <summary>
        /// Controls the behavior of an automated sync.
        /// </summary>
        public InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyAutomatedGetArgs> Automateds
        {
            get => _automateds ?? (_automateds = new InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyAutomatedGetArgs>());
            set => _automateds = value;
        }

        [Input("retries")]
        private InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs>? _retries;

        /// <summary>
        /// Contains information about the strategy to apply when a sync failed.
        /// </summary>
        public InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs> Retries
        {
            get => _retries ?? (_retries = new InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyRetryGetArgs>());
            set => _retries = value;
        }

        [Input("syncOptions")]
        private InputList<string>? _syncOptions;

        /// <summary>
        /// Options allow you to specify whole app sync-options.
        /// </summary>
        public InputList<string> SyncOptions
        {
            get => _syncOptions ?? (_syncOptions = new InputList<string>());
            set => _syncOptions = value;
        }

        public GitOpsApplicationsApplicationSpecSyncPolicyGetArgs()
        {
        }
        public static new GitOpsApplicationsApplicationSpecSyncPolicyGetArgs Empty => new GitOpsApplicationsApplicationSpecSyncPolicyGetArgs();
    }
}
