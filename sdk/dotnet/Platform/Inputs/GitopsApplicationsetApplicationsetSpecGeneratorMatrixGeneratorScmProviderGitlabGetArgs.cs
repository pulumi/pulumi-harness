// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorScmProviderGitlabGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, scan every branch of every repository. If false, scan only the default branch.
        /// </summary>
        [Input("allBranches")]
        public Input<bool>? AllBranches { get; set; }

        /// <summary>
        /// The Gitlab API URL to talk to.
        /// </summary>
        [Input("api")]
        public Input<string>? Api { get; set; }

        /// <summary>
        /// Gitlab group to scan. You can use either the project id (recommended) or the full namespaced path.
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        /// <summary>
        /// Recurse through subgroups (true) or scan only the base group (false). Defaults to `False`.
        /// </summary>
        [Input("includeSubgroups")]
        public Input<bool>? IncludeSubgroups { get; set; }

        /// <summary>
        /// Authentication token reference.
        /// </summary>
        [Input("tokenRef")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorScmProviderGitlabTokenRefGetArgs>? TokenRef { get; set; }

        public GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorScmProviderGitlabGetArgs()
        {
        }
        public static new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorScmProviderGitlabGetArgs Empty => new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorScmProviderGitlabGetArgs();
    }
}
