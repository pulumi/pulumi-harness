// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fetch pull requests from a repo hosted on a Bitbucket Server.
        /// </summary>
        [Input("bitbucketServer")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestBitbucketServerGetArgs>? BitbucketServer { get; set; }

        [Input("filters")]
        private InputList<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestFilterGetArgs>? _filters;

        /// <summary>
        /// Filters allow selecting which pull requests to generate for.
        /// </summary>
        public InputList<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestFilterGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Specify the repository from which to fetch the Gitea Pull requests.
        /// </summary>
        [Input("gitea")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGiteaGetArgs>? Gitea { get; set; }

        /// <summary>
        /// Specify the repository from which to fetch the GitHub Pull requests.
        /// </summary>
        [Input("github")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGithubGetArgs>? Github { get; set; }

        /// <summary>
        /// Specify the project from which to fetch the GitLab merge requests.
        /// </summary>
        [Input("gitlab")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGitlabGetArgs>? Gitlab { get; set; }

        /// <summary>
        /// How often to check for changes (in seconds). Default: 30min.
        /// </summary>
        [Input("requeueAfterSeconds")]
        public Input<string>? RequeueAfterSeconds { get; set; }

        /// <summary>
        /// Generator template. Used to override the values of the spec-level template.
        /// </summary>
        [Input("template")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestTemplateGetArgs>? Template { get; set; }

        public GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGetArgs()
        {
        }
        public static new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGetArgs Empty => new GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorPullRequestGetArgs();
    }
}
