// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Helm chart name. Must be specified for applications sourced from a Helm repo.
        /// </summary>
        [Input("chart")]
        public Input<string>? Chart { get; set; }

        /// <summary>
        /// Path/directory specific options.
        /// </summary>
        [Input("directory")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceDirectoryGetArgs>? Directory { get; set; }

        /// <summary>
        /// Helm specific options.
        /// </summary>
        [Input("helm")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceHelmGetArgs>? Helm { get; set; }

        /// <summary>
        /// Kustomize specific options.
        /// </summary>
        [Input("kustomize")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceKustomizeGetArgs>? Kustomize { get; set; }

        /// <summary>
        /// Directory path within the repository. Only valid for applications sourced from Git.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Config management plugin specific options.
        /// </summary>
        [Input("plugin")]
        public Input<Inputs.GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourcePluginGetArgs>? Plugin { get; set; }

        /// <summary>
        /// Reference to another `Source` within defined sources. See associated documentation on [Helm value files from external Git repository](https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/#helm-value-files-from-external-git-repository) regarding combining `Ref` with `Path` and/or `Chart`.
        /// </summary>
        [Input("ref")]
        public Input<string>? Ref { get; set; }

        /// <summary>
        /// URL to the repository (Git or Helm) that contains the application manifests.
        /// </summary>
        [Input("repoUrl")]
        public Input<string>? RepoUrl { get; set; }

        /// <summary>
        /// Revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
        /// </summary>
        [Input("targetRevision")]
        public Input<string>? TargetRevision { get; set; }

        public GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceGetArgs()
        {
        }
        public static new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceGetArgs Empty => new GitopsApplicationsetApplicationsetSpecGeneratorMatrixGeneratorMatrixGeneratorPullRequestTemplateSpecSourceGetArgs();
    }
}
