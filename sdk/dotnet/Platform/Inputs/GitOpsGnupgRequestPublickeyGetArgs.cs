// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsGnupgRequestPublickeyGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fingerprint is the fingerprint of the key
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// KeyData holds the raw key data, in base64 encoded format.
        /// </summary>
        [Input("keyData", required: true)]
        public Input<string> KeyData { get; set; } = null!;

        /// <summary>
        /// KeyID specifies the key ID, in hexadecimal string format.
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        /// <summary>
        /// Owner holds the owner identification, e.g. a name and e-mail address
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// SubType holds the key's sub type
        /// </summary>
        [Input("subType")]
        public Input<string>? SubType { get; set; }

        /// <summary>
        /// Trust holds the level of trust assigned to this key
        /// </summary>
        [Input("trust")]
        public Input<string>? Trust { get; set; }

        public GitOpsGnupgRequestPublickeyGetArgs()
        {
        }
        public static new GitOpsGnupgRequestPublickeyGetArgs Empty => new GitOpsGnupgRequestPublickeyGetArgs();
    }
}
