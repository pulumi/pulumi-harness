// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetEnvironmentServiceOverrides
    {
        /// <summary>
        /// Data source for Harness environment service overrides.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetEnvironmentServiceOverrides.Invoke(new()
        ///     {
        ///         OrgId = "orgIdentifier",
        ///         ProjectId = "projectIdentifier",
        ///         EnvId = "environmentIdentifier",
        ///         ServiceId = "serviceIdentifier",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEnvironmentServiceOverridesResult> InvokeAsync(GetEnvironmentServiceOverridesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentServiceOverridesResult>("harness:platform/getEnvironmentServiceOverrides:getEnvironmentServiceOverrides", args ?? new GetEnvironmentServiceOverridesArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for Harness environment service overrides.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetEnvironmentServiceOverrides.Invoke(new()
        ///     {
        ///         OrgId = "orgIdentifier",
        ///         ProjectId = "projectIdentifier",
        ///         EnvId = "environmentIdentifier",
        ///         ServiceId = "serviceIdentifier",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentServiceOverridesResult> Invoke(GetEnvironmentServiceOverridesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentServiceOverridesResult>("harness:platform/getEnvironmentServiceOverrides:getEnvironmentServiceOverrides", args ?? new GetEnvironmentServiceOverridesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for Harness environment service overrides.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetEnvironmentServiceOverrides.Invoke(new()
        ///     {
        ///         OrgId = "orgIdentifier",
        ///         ProjectId = "projectIdentifier",
        ///         EnvId = "environmentIdentifier",
        ///         ServiceId = "serviceIdentifier",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentServiceOverridesResult> Invoke(GetEnvironmentServiceOverridesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentServiceOverridesResult>("harness:platform/getEnvironmentServiceOverrides:getEnvironmentServiceOverrides", args ?? new GetEnvironmentServiceOverridesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentServiceOverridesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The env ID to which the overrides associated.
        /// </summary>
        [Input("envId", required: true)]
        public string EnvId { get; set; } = null!;

        /// <summary>
        /// identifier of the service overrides.
        /// </summary>
        [Input("identifier")]
        public string? Identifier { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// The service ID to which the overrides applies.
        /// </summary>
        [Input("serviceId")]
        public string? ServiceId { get; set; }

        public GetEnvironmentServiceOverridesArgs()
        {
        }
        public static new GetEnvironmentServiceOverridesArgs Empty => new GetEnvironmentServiceOverridesArgs();
    }

    public sealed class GetEnvironmentServiceOverridesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The env ID to which the overrides associated.
        /// </summary>
        [Input("envId", required: true)]
        public Input<string> EnvId { get; set; } = null!;

        /// <summary>
        /// identifier of the service overrides.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The service ID to which the overrides applies.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public GetEnvironmentServiceOverridesInvokeArgs()
        {
        }
        public static new GetEnvironmentServiceOverridesInvokeArgs Empty => new GetEnvironmentServiceOverridesInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentServiceOverridesResult
    {
        /// <summary>
        /// The env ID to which the overrides associated.
        /// </summary>
        public readonly string EnvId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// identifier of the service overrides.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The service ID to which the overrides applies.
        /// </summary>
        public readonly string? ServiceId;
        /// <summary>
        /// Environment Service Overrides YAML
        /// </summary>
        public readonly string Yaml;

        [OutputConstructor]
        private GetEnvironmentServiceOverridesResult(
            string envId,

            string id,

            string identifier,

            string? orgId,

            string? projectId,

            string? serviceId,

            string yaml)
        {
            EnvId = envId;
            Id = id;
            Identifier = identifier;
            OrgId = orgId;
            ProjectId = projectId;
            ServiceId = serviceId;
            Yaml = yaml;
        }
    }
}
