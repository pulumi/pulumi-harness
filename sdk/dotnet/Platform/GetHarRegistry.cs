// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetHarRegistry
    {
        /// <summary>
        /// Data Source for retrieving a Harness Artifact registry
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetHarRegistry.Invoke(new()
        ///     {
        ///         Identifier = "test_registry",
        ///         SpaceRef = "accountId/orgId/projectId",
        ///     });
        /// 
        /// });
        /// ````
        /// </summary>
        public static Task<GetHarRegistryResult> InvokeAsync(GetHarRegistryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHarRegistryResult>("harness:platform/getHarRegistry:getHarRegistry", args ?? new GetHarRegistryArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source for retrieving a Harness Artifact registry
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetHarRegistry.Invoke(new()
        ///     {
        ///         Identifier = "test_registry",
        ///         SpaceRef = "accountId/orgId/projectId",
        ///     });
        /// 
        /// });
        /// ````
        /// </summary>
        public static Output<GetHarRegistryResult> Invoke(GetHarRegistryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHarRegistryResult>("harness:platform/getHarRegistry:getHarRegistry", args ?? new GetHarRegistryInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source for retrieving a Harness Artifact registry
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetHarRegistry.Invoke(new()
        ///     {
        ///         Identifier = "test_registry",
        ///         SpaceRef = "accountId/orgId/projectId",
        ///     });
        /// 
        /// });
        /// ````
        /// </summary>
        public static Output<GetHarRegistryResult> Invoke(GetHarRegistryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHarRegistryResult>("harness:platform/getHarRegistry:getHarRegistry", args ?? new GetHarRegistryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHarRegistryArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowedPatterns")]
        private List<string>? _allowedPatterns;
        public List<string> AllowedPatterns
        {
            get => _allowedPatterns ?? (_allowedPatterns = new List<string>());
            set => _allowedPatterns = value;
        }

        [Input("blockedPatterns")]
        private List<string>? _blockedPatterns;
        public List<string> BlockedPatterns
        {
            get => _blockedPatterns ?? (_blockedPatterns = new List<string>());
            set => _blockedPatterns = value;
        }

        [Input("configs")]
        private List<Inputs.GetHarRegistryConfigArgs>? _configs;
        public List<Inputs.GetHarRegistryConfigArgs> Configs
        {
            get => _configs ?? (_configs = new List<Inputs.GetHarRegistryConfigArgs>());
            set => _configs = value;
        }

        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        [Input("packageType")]
        public string? PackageType { get; set; }

        [Input("parentRef")]
        public string? ParentRef { get; set; }

        /// <summary>
        /// Reference of the space.
        /// </summary>
        [Input("spaceRef", required: true)]
        public string SpaceRef { get; set; } = null!;

        public GetHarRegistryArgs()
        {
        }
        public static new GetHarRegistryArgs Empty => new GetHarRegistryArgs();
    }

    public sealed class GetHarRegistryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowedPatterns")]
        private InputList<string>? _allowedPatterns;
        public InputList<string> AllowedPatterns
        {
            get => _allowedPatterns ?? (_allowedPatterns = new InputList<string>());
            set => _allowedPatterns = value;
        }

        [Input("blockedPatterns")]
        private InputList<string>? _blockedPatterns;
        public InputList<string> BlockedPatterns
        {
            get => _blockedPatterns ?? (_blockedPatterns = new InputList<string>());
            set => _blockedPatterns = value;
        }

        [Input("configs")]
        private InputList<Inputs.GetHarRegistryConfigInputArgs>? _configs;
        public InputList<Inputs.GetHarRegistryConfigInputArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.GetHarRegistryConfigInputArgs>());
            set => _configs = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        [Input("parentRef")]
        public Input<string>? ParentRef { get; set; }

        /// <summary>
        /// Reference of the space.
        /// </summary>
        [Input("spaceRef", required: true)]
        public Input<string> SpaceRef { get; set; } = null!;

        public GetHarRegistryInvokeArgs()
        {
        }
        public static new GetHarRegistryInvokeArgs Empty => new GetHarRegistryInvokeArgs();
    }


    [OutputType]
    public sealed class GetHarRegistryResult
    {
        public readonly ImmutableArray<string> AllowedPatterns;
        public readonly ImmutableArray<string> BlockedPatterns;
        public readonly ImmutableArray<Outputs.GetHarRegistryConfigResult> Configs;
        public readonly string CreatedAt;
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        public readonly string Identifier;
        public readonly string? PackageType;
        public readonly string? ParentRef;
        /// <summary>
        /// Reference of the space.
        /// </summary>
        public readonly string SpaceRef;
        public readonly string Url;

        [OutputConstructor]
        private GetHarRegistryResult(
            ImmutableArray<string> allowedPatterns,

            ImmutableArray<string> blockedPatterns,

            ImmutableArray<Outputs.GetHarRegistryConfigResult> configs,

            string createdAt,

            string? description,

            string id,

            string identifier,

            string? packageType,

            string? parentRef,

            string spaceRef,

            string url)
        {
            AllowedPatterns = allowedPatterns;
            BlockedPatterns = blockedPatterns;
            Configs = configs;
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Identifier = identifier;
            PackageType = packageType;
            ParentRef = parentRef;
            SpaceRef = spaceRef;
            Url = url;
        }
    }
}
