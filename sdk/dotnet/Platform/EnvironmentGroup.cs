// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    /// <summary>
    /// Resource for creating a Harness environment group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Harness.Platform.EnvironmentGroup("example", new()
    ///     {
    ///         Identifier = "identifier",
    ///         OrgId = "orgIdentifer",
    ///         ProjectId = "projectIdentifier",
    ///         Color = "#0063F7",
    ///         Yaml = @"environmentGroup:
    ///   name: ""name""
    ///   identifier: ""identifier""
    ///   description: ""temp""
    ///   orgIdentifier: ""orgIdentifer""
    ///   projectIdentifier: ""projectIdentifier""
    ///   envIdentifiers: []
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Import account level environment group.
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/environmentGroup:EnvironmentGroup example &lt;environment_group_id&gt;
    /// ```
    /// 
    /// Import org level environment group.
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/environmentGroup:EnvironmentGroup example &lt;org_id&gt;/&lt;environment_group_id&gt;
    /// ```
    /// 
    /// Import project level environment group.
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/environmentGroup:EnvironmentGroup example &lt;org_id&gt;/&lt;project_id&gt;/&lt;environment_group_id&gt;
    /// ```
    /// </summary>
    [HarnessResourceType("harness:platform/environmentGroup:EnvironmentGroup")]
    public partial class EnvironmentGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Color of the environment group.
        /// </summary>
        [Output("color")]
        public Output<string> Color { get; private set; } = null!;

        /// <summary>
        /// Enable this flag for force deletion of environment group
        /// </summary>
        [Output("forceDelete")]
        public Output<bool> ForceDelete { get; private set; } = null!;

        /// <summary>
        /// identifier of the environment group.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// org_id of the environment group.
        /// </summary>
        [Output("orgId")]
        public Output<string?> OrgId { get; private set; } = null!;

        /// <summary>
        /// project_id of the environment group.
        /// </summary>
        [Output("projectId")]
        public Output<string?> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Env group YAML. In YAML, to reference an entity at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference an entity at the account scope, prefix 'account` to the expression: account.{identifier}. For eg, to reference a connector with identifier 'connectorId' at the organization scope in a stage mention it as connectorRef: org.connectorId.
        /// </summary>
        [Output("yaml")]
        public Output<string> Yaml { get; private set; } = null!;


        /// <summary>
        /// Create a EnvironmentGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvironmentGroup(string name, EnvironmentGroupArgs args, CustomResourceOptions? options = null)
            : base("harness:platform/environmentGroup:EnvironmentGroup", name, args ?? new EnvironmentGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvironmentGroup(string name, Input<string> id, EnvironmentGroupState? state = null, CustomResourceOptions? options = null)
            : base("harness:platform/environmentGroup:EnvironmentGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvironmentGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvironmentGroup Get(string name, Input<string> id, EnvironmentGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new EnvironmentGroup(name, id, state, options);
        }
    }

    public sealed class EnvironmentGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Color of the environment group.
        /// </summary>
        [Input("color")]
        public Input<string>? Color { get; set; }

        /// <summary>
        /// Enable this flag for force deletion of environment group
        /// </summary>
        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        /// <summary>
        /// identifier of the environment group.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// org_id of the environment group.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// project_id of the environment group.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Env group YAML. In YAML, to reference an entity at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference an entity at the account scope, prefix 'account` to the expression: account.{identifier}. For eg, to reference a connector with identifier 'connectorId' at the organization scope in a stage mention it as connectorRef: org.connectorId.
        /// </summary>
        [Input("yaml", required: true)]
        public Input<string> Yaml { get; set; } = null!;

        public EnvironmentGroupArgs()
        {
        }
        public static new EnvironmentGroupArgs Empty => new EnvironmentGroupArgs();
    }

    public sealed class EnvironmentGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Color of the environment group.
        /// </summary>
        [Input("color")]
        public Input<string>? Color { get; set; }

        /// <summary>
        /// Enable this flag for force deletion of environment group
        /// </summary>
        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        /// <summary>
        /// identifier of the environment group.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// org_id of the environment group.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// project_id of the environment group.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Env group YAML. In YAML, to reference an entity at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference an entity at the account scope, prefix 'account` to the expression: account.{identifier}. For eg, to reference a connector with identifier 'connectorId' at the organization scope in a stage mention it as connectorRef: org.connectorId.
        /// </summary>
        [Input("yaml")]
        public Input<string>? Yaml { get; set; }

        public EnvironmentGroupState()
        {
        }
        public static new EnvironmentGroupState Empty => new EnvironmentGroupState();
    }
}
