// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetInfraModules
    {
        /// <summary>
        /// Data source for retrieving a list of modules from the module registry.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Harness.Platform.GetInfraModules.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInfraModulesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInfraModulesResult>("harness:platform/getInfraModules:getInfraModules", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a list of modules from the module registry.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Harness.Platform.GetInfraModules.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInfraModulesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfraModulesResult>("harness:platform/getInfraModules:getInfraModules", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a list of modules from the module registry.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Harness.Platform.GetInfraModules.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInfraModulesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfraModulesResult>("harness:platform/getInfraModules:getInfraModules", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetInfraModulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of modules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInfraModulesModuleResult> Modules;

        [OutputConstructor]
        private GetInfraModulesResult(
            string id,

            ImmutableArray<Outputs.GetInfraModulesModuleResult> modules)
        {
            Id = id;
            Modules = modules;
        }
    }
}
