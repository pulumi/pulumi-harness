// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    /// <summary>
    /// Resource for a Harness Custom Dashboard Folder.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var folder = new Harness.Platform.DashboardFolders("folder", new()
    ///     {
    ///         Name = "name",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HarnessResourceType("harness:platform/dashboardFolders:DashboardFolders")]
    public partial class DashboardFolders : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Created DateTime of the folder.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Name of the folder.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a DashboardFolders resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DashboardFolders(string name, DashboardFoldersArgs? args = null, CustomResourceOptions? options = null)
            : base("harness:platform/dashboardFolders:DashboardFolders", name, args ?? new DashboardFoldersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DashboardFolders(string name, Input<string> id, DashboardFoldersState? state = null, CustomResourceOptions? options = null)
            : base("harness:platform/dashboardFolders:DashboardFolders", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DashboardFolders resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DashboardFolders Get(string name, Input<string> id, DashboardFoldersState? state = null, CustomResourceOptions? options = null)
        {
            return new DashboardFolders(name, id, state, options);
        }
    }

    public sealed class DashboardFoldersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the folder.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DashboardFoldersArgs()
        {
        }
        public static new DashboardFoldersArgs Empty => new DashboardFoldersArgs();
    }

    public sealed class DashboardFoldersState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Created DateTime of the folder.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Name of the folder.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DashboardFoldersState()
        {
        }
        public static new DashboardFoldersState Empty => new DashboardFoldersState();
    }
}
