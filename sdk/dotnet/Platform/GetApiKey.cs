// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetApiKey
    {
        /// <summary>
        /// Data source for retrieving a Harness ApiKey.
        /// </summary>
        public static Task<GetApiKeyResult> InvokeAsync(GetApiKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiKeyResult>("harness:platform/getApiKey:getApiKey", args ?? new GetApiKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness ApiKey.
        /// </summary>
        public static Output<GetApiKeyResult> Invoke(GetApiKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyResult>("harness:platform/getApiKey:getApiKey", args ?? new GetApiKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness ApiKey.
        /// </summary>
        public static Output<GetApiKeyResult> Invoke(GetApiKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyResult>("harness:platform/getApiKey:getApiKey", args ?? new GetApiKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier for the Entity
        /// </summary>
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        /// <summary>
        /// Type of the API Key
        /// </summary>
        [Input("apikeyType", required: true)]
        public string ApikeyType { get; set; } = null!;

        /// <summary>
        /// Expiry time of the apiKey
        /// </summary>
        [Input("defaultTimeToExpireToken")]
        public int? DefaultTimeToExpireToken { get; set; }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// Parent Identifier for the Entity
        /// </summary>
        [Input("parentId", required: true)]
        public string ParentId { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        public GetApiKeyArgs()
        {
        }
        public static new GetApiKeyArgs Empty => new GetApiKeyArgs();
    }

    public sealed class GetApiKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account Identifier for the Entity
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Type of the API Key
        /// </summary>
        [Input("apikeyType", required: true)]
        public Input<string> ApikeyType { get; set; } = null!;

        /// <summary>
        /// Expiry time of the apiKey
        /// </summary>
        [Input("defaultTimeToExpireToken")]
        public Input<int>? DefaultTimeToExpireToken { get; set; }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Parent Identifier for the Entity
        /// </summary>
        [Input("parentId", required: true)]
        public Input<string> ParentId { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public GetApiKeyInvokeArgs()
        {
        }
        public static new GetApiKeyInvokeArgs Empty => new GetApiKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiKeyResult
    {
        /// <summary>
        /// Account Identifier for the Entity
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Type of the API Key
        /// </summary>
        public readonly string ApikeyType;
        /// <summary>
        /// Expiry time of the apiKey
        /// </summary>
        public readonly int? DefaultTimeToExpireToken;
        /// <summary>
        /// Description of the resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// Parent Identifier for the Entity
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetApiKeyResult(
            string accountId,

            string apikeyType,

            int? defaultTimeToExpireToken,

            string description,

            string id,

            string identifier,

            string? name,

            string? orgId,

            string parentId,

            string? projectId,

            ImmutableArray<string> tags)
        {
            AccountId = accountId;
            ApikeyType = apikeyType;
            DefaultTimeToExpireToken = defaultTimeToExpireToken;
            Description = description;
            Id = id;
            Identifier = identifier;
            Name = name;
            OrgId = orgId;
            ParentId = parentId;
            ProjectId = projectId;
            Tags = tags;
        }
    }
}
