// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetInfraVariableSet
    {
        /// <summary>
        /// Data source for retrieving Variable Sets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetInfraVariableSet.Invoke(new()
        ///     {
        ///         Identifier = "identifier",
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInfraVariableSetResult> InvokeAsync(GetInfraVariableSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInfraVariableSetResult>("harness:platform/getInfraVariableSet:getInfraVariableSet", args ?? new GetInfraVariableSetArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving Variable Sets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetInfraVariableSet.Invoke(new()
        ///     {
        ///         Identifier = "identifier",
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInfraVariableSetResult> Invoke(GetInfraVariableSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfraVariableSetResult>("harness:platform/getInfraVariableSet:getInfraVariableSet", args ?? new GetInfraVariableSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving Variable Sets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Harness.Platform.GetInfraVariableSet.Invoke(new()
        ///     {
        ///         Identifier = "identifier",
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInfraVariableSetResult> Invoke(GetInfraVariableSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfraVariableSetResult>("harness:platform/getInfraVariableSet:getInfraVariableSet", args ?? new GetInfraVariableSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInfraVariableSetArgs : global::Pulumi.InvokeArgs
    {
        [Input("connectors")]
        private List<Inputs.GetInfraVariableSetConnectorArgs>? _connectors;

        /// <summary>
        /// Provider connector configured on the variable set
        /// </summary>
        public List<Inputs.GetInfraVariableSetConnectorArgs> Connectors
        {
            get => _connectors ?? (_connectors = new List<Inputs.GetInfraVariableSetConnectorArgs>());
            set => _connectors = value;
        }

        [Input("environmentVariables")]
        private List<Inputs.GetInfraVariableSetEnvironmentVariableArgs>? _environmentVariables;

        /// <summary>
        /// Environment variables configured on the variable set
        /// </summary>
        public List<Inputs.GetInfraVariableSetEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new List<Inputs.GetInfraVariableSetEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Identifier of the Variable Set
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the Variable Set
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Organization Identifier
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// Project Identifier
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("terraformVariableFiles")]
        private List<Inputs.GetInfraVariableSetTerraformVariableFileArgs>? _terraformVariableFiles;
        public List<Inputs.GetInfraVariableSetTerraformVariableFileArgs> TerraformVariableFiles
        {
            get => _terraformVariableFiles ?? (_terraformVariableFiles = new List<Inputs.GetInfraVariableSetTerraformVariableFileArgs>());
            set => _terraformVariableFiles = value;
        }

        [Input("terraformVariables")]
        private List<Inputs.GetInfraVariableSetTerraformVariableArgs>? _terraformVariables;
        public List<Inputs.GetInfraVariableSetTerraformVariableArgs> TerraformVariables
        {
            get => _terraformVariables ?? (_terraformVariables = new List<Inputs.GetInfraVariableSetTerraformVariableArgs>());
            set => _terraformVariables = value;
        }

        public GetInfraVariableSetArgs()
        {
        }
        public static new GetInfraVariableSetArgs Empty => new GetInfraVariableSetArgs();
    }

    public sealed class GetInfraVariableSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("connectors")]
        private InputList<Inputs.GetInfraVariableSetConnectorInputArgs>? _connectors;

        /// <summary>
        /// Provider connector configured on the variable set
        /// </summary>
        public InputList<Inputs.GetInfraVariableSetConnectorInputArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.GetInfraVariableSetConnectorInputArgs>());
            set => _connectors = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.GetInfraVariableSetEnvironmentVariableInputArgs>? _environmentVariables;

        /// <summary>
        /// Environment variables configured on the variable set
        /// </summary>
        public InputList<Inputs.GetInfraVariableSetEnvironmentVariableInputArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.GetInfraVariableSetEnvironmentVariableInputArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Identifier of the Variable Set
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the Variable Set
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Organization Identifier
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Project Identifier
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("terraformVariableFiles")]
        private InputList<Inputs.GetInfraVariableSetTerraformVariableFileInputArgs>? _terraformVariableFiles;
        public InputList<Inputs.GetInfraVariableSetTerraformVariableFileInputArgs> TerraformVariableFiles
        {
            get => _terraformVariableFiles ?? (_terraformVariableFiles = new InputList<Inputs.GetInfraVariableSetTerraformVariableFileInputArgs>());
            set => _terraformVariableFiles = value;
        }

        [Input("terraformVariables")]
        private InputList<Inputs.GetInfraVariableSetTerraformVariableInputArgs>? _terraformVariables;
        public InputList<Inputs.GetInfraVariableSetTerraformVariableInputArgs> TerraformVariables
        {
            get => _terraformVariables ?? (_terraformVariables = new InputList<Inputs.GetInfraVariableSetTerraformVariableInputArgs>());
            set => _terraformVariables = value;
        }

        public GetInfraVariableSetInvokeArgs()
        {
        }
        public static new GetInfraVariableSetInvokeArgs Empty => new GetInfraVariableSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetInfraVariableSetResult
    {
        /// <summary>
        /// Provider connector configured on the variable set
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInfraVariableSetConnectorResult> Connectors;
        /// <summary>
        /// Description of the Variable Set
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Environment variables configured on the variable set
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInfraVariableSetEnvironmentVariableResult> EnvironmentVariables;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier of the Variable Set
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Name of the Variable Set
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Organization Identifier
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// Project Identifier
        /// </summary>
        public readonly string? ProjectId;
        public readonly ImmutableArray<string> Tags;
        public readonly ImmutableArray<Outputs.GetInfraVariableSetTerraformVariableFileResult> TerraformVariableFiles;
        public readonly ImmutableArray<Outputs.GetInfraVariableSetTerraformVariableResult> TerraformVariables;

        [OutputConstructor]
        private GetInfraVariableSetResult(
            ImmutableArray<Outputs.GetInfraVariableSetConnectorResult> connectors,

            string description,

            ImmutableArray<Outputs.GetInfraVariableSetEnvironmentVariableResult> environmentVariables,

            string id,

            string identifier,

            string? name,

            string? orgId,

            string? projectId,

            ImmutableArray<string> tags,

            ImmutableArray<Outputs.GetInfraVariableSetTerraformVariableFileResult> terraformVariableFiles,

            ImmutableArray<Outputs.GetInfraVariableSetTerraformVariableResult> terraformVariables)
        {
            Connectors = connectors;
            Description = description;
            EnvironmentVariables = environmentVariables;
            Id = id;
            Identifier = identifier;
            Name = name;
            OrgId = orgId;
            ProjectId = projectId;
            Tags = tags;
            TerraformVariableFiles = terraformVariableFiles;
            TerraformVariables = terraformVariables;
        }
    }
}
