// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class PipelineCentralNotificationRuleNotificationConditionNotificationEventConfig
    {
        public readonly ImmutableArray<string> EntityIdentifiers;
        public readonly string NotificationEntity;
        /// <summary>
        /// The pipeline event that triggers the notification. Supported values: `PIPELINE_START`, `PIPELINE_SUCCESS`, `PIPELINE_FAILED`, `STAGE_START`, `STAGE_SUCCESS`, `STAGE_FAILED`.
        /// </summary>
        public readonly string NotificationEvent;
        public readonly ImmutableArray<Outputs.PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventData> NotificationEventDatas;

        [OutputConstructor]
        private PipelineCentralNotificationRuleNotificationConditionNotificationEventConfig(
            ImmutableArray<string> entityIdentifiers,

            string notificationEntity,

            string notificationEvent,

            ImmutableArray<Outputs.PipelineCentralNotificationRuleNotificationConditionNotificationEventConfigNotificationEventData> notificationEventDatas)
        {
            EntityIdentifiers = entityIdentifiers;
            NotificationEntity = notificationEntity;
            NotificationEvent = notificationEvent;
            NotificationEventDatas = notificationEventDatas;
        }
    }
}
