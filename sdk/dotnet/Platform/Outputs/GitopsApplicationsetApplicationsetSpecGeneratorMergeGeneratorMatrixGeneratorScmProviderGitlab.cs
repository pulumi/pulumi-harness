// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderGitlab
    {
        /// <summary>
        /// If true, scan every branch of every repository. If false, scan only the default branch.
        /// </summary>
        public readonly bool? AllBranches;
        /// <summary>
        /// The Gitlab API URL to talk to.
        /// </summary>
        public readonly string? Api;
        /// <summary>
        /// Gitlab group to scan. You can use either the project id (recommended) or the full namespaced path.
        /// </summary>
        public readonly string Group;
        /// <summary>
        /// Recurse through subgroups (true) or scan only the base group (false). Defaults to `False`.
        /// </summary>
        public readonly bool? IncludeSubgroups;
        /// <summary>
        /// Authentication token reference.
        /// </summary>
        public readonly Outputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderGitlabTokenRef? TokenRef;

        [OutputConstructor]
        private GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderGitlab(
            bool? allBranches,

            string? api,

            string group,

            bool? includeSubgroups,

            Outputs.GitopsApplicationsetApplicationsetSpecGeneratorMergeGeneratorMatrixGeneratorScmProviderGitlabTokenRef? tokenRef)
        {
            AllBranches = allBranches;
            Api = api;
            Group = group;
            IncludeSubgroups = includeSubgroups;
            TokenRef = tokenRef;
        }
    }
}
