// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class NotificationRuleRequest
    {
        /// <summary>
        /// Notification Rule conditions specification.
        /// </summary>
        public readonly ImmutableArray<Outputs.NotificationRuleRequestCondition> Conditions;
        /// <summary>
        /// Name for the Notification Rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Notification Method specifications.
        /// </summary>
        public readonly Outputs.NotificationRuleRequestNotificationMethod NotificationMethod;
        /// <summary>
        /// Type of the Notification Rule.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private NotificationRuleRequest(
            ImmutableArray<Outputs.NotificationRuleRequestCondition> conditions,

            string name,

            Outputs.NotificationRuleRequestNotificationMethod notificationMethod,

            string type)
        {
            Conditions = conditions;
            Name = name;
            NotificationMethod = notificationMethod;
            Type = type;
        }
    }
}
