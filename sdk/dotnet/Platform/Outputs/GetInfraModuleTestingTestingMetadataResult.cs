// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class GetInfraModuleTestingTestingMetadataResult
    {
        /// <summary>
        /// Account is the internal customer account ID
        /// </summary>
        public readonly string Account;
        /// <summary>
        /// Organization identifier
        /// </summary>
        public readonly string Org;
        /// <summary>
        /// Pipelines where the testing is enabled
        /// </summary>
        public readonly ImmutableArray<string> Pipelines;
        /// <summary>
        /// Project identifier
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Provider connector for testing purposes
        /// </summary>
        public readonly string ProviderConnector;
        /// <summary>
        /// Provisioner type for testing purposes
        /// </summary>
        public readonly string ProvisionerType;
        /// <summary>
        /// Provisioner version for testing purposes
        /// </summary>
        public readonly string ProvisionerVersion;
        /// <summary>
        /// Release pipeline
        /// </summary>
        public readonly string ReleasePipeline;

        [OutputConstructor]
        private GetInfraModuleTestingTestingMetadataResult(
            string account,

            string org,

            ImmutableArray<string> pipelines,

            string project,

            string providerConnector,

            string provisionerType,

            string provisionerVersion,

            string releasePipeline)
        {
            Account = account;
            Org = org;
            Pipelines = pipelines;
            Project = project;
            ProviderConnector = providerConnector;
            ProvisionerType = provisionerType;
            ProvisionerVersion = provisionerVersion;
            ReleasePipeline = releasePipeline;
        }
    }
}
