// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class GetInfraVariableSetTerraformVariableFileResult
    {
        /// <summary>
        /// Repository is the name of the repository to fetch the code from.
        /// </summary>
        public readonly string Repository;
        /// <summary>
        /// Repository branch is the name of the branch to fetch the variables from. This cannot be set if repository commit or sha is set
        /// </summary>
        public readonly string? RepositoryBranch;
        /// <summary>
        /// Repository commit is tag to fetch the variables from. This cannot be set if repository branch or sha is set.
        /// </summary>
        public readonly string? RepositoryCommit;
        /// <summary>
        /// Repository connector is the reference to the connector used to fetch the variables.
        /// </summary>
        public readonly string RepositoryConnector;
        /// <summary>
        /// Repository path is the path in which the variables reside.
        /// </summary>
        public readonly string? RepositoryPath;
        /// <summary>
        /// Repository commit is sha to fetch the variables from. This cannot be set if repository branch or commit is set.
        /// </summary>
        public readonly string? RepositorySha;

        [OutputConstructor]
        private GetInfraVariableSetTerraformVariableFileResult(
            string repository,

            string? repositoryBranch,

            string? repositoryCommit,

            string repositoryConnector,

            string? repositoryPath,

            string? repositorySha)
        {
            Repository = repository;
            RepositoryBranch = repositoryBranch;
            RepositoryCommit = repositoryCommit;
            RepositoryConnector = repositoryConnector;
            RepositoryPath = repositoryPath;
            RepositorySha = repositorySha;
        }
    }
}
