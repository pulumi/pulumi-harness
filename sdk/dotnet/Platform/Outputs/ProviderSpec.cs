// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class ProviderSpec
    {
        /// <summary>
        /// Client Id of the OAuth app to connect
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// Client Secret Ref of the OAuth app to connect
        /// </summary>
        public readonly string? ClientSecretRef;
        /// <summary>
        /// Delegate selectors to fetch the access token
        /// </summary>
        public readonly ImmutableArray<string> DelegateSelectors;
        /// <summary>
        /// Host domain of the provider.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// Secret Manager Ref to store the access/refresh tokens
        /// </summary>
        public readonly string? SecretManagerRef;
        /// <summary>
        /// The type of the provider entity.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ProviderSpec(
            string? clientId,

            string? clientSecretRef,

            ImmutableArray<string> delegateSelectors,

            string? domain,

            string? secretManagerRef,

            string type)
        {
            ClientId = clientId;
            ClientSecretRef = clientSecretRef;
            DelegateSelectors = delegateSelectors;
            Domain = domain;
            SecretManagerRef = secretManagerRef;
            Type = type;
        }
    }
}
