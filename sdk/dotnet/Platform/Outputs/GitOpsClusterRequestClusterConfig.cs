// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class GitOpsClusterRequestClusterConfig
    {
        /// <summary>
        /// AWS Cluster name. If set then AWS CLI EKS token command will be used to access cluster.
        /// </summary>
        public readonly string? AwsClusterName;
        /// <summary>
        /// Bearer authentication token the cluster.
        /// </summary>
        public readonly string? BearerToken;
        /// <summary>
        /// Identifies the authentication method used to connect to the cluster.
        /// </summary>
        public readonly string? ClusterConnectionType;
        /// <summary>
        /// DisableCompression bypasses automatic GZip compression requests to to the cluster's API server. Corresponds to running kubectl with --disable-compression
        /// </summary>
        public readonly bool? DisableCompression;
        /// <summary>
        /// Configuration for an exec provider.
        /// </summary>
        public readonly ImmutableArray<Outputs.GitOpsClusterRequestClusterConfigExecProviderConfig> ExecProviderConfigs;
        /// <summary>
        /// Password of the server of the cluster.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// The URL to the proxy to be used for all requests send to the cluster's API server
        /// </summary>
        public readonly string? ProxyUrl;
        /// <summary>
        /// Optional role ARN. If set then used for AWS IAM Authenticator.
        /// </summary>
        public readonly string? RoleARN;
        /// <summary>
        /// Settings to enable transport layer security.
        /// </summary>
        public readonly ImmutableArray<Outputs.GitOpsClusterRequestClusterConfigTlsClientConfig> TlsClientConfigs;
        /// <summary>
        /// Username of the server of the cluster.
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private GitOpsClusterRequestClusterConfig(
            string? awsClusterName,

            string? bearerToken,

            string? clusterConnectionType,

            bool? disableCompression,

            ImmutableArray<Outputs.GitOpsClusterRequestClusterConfigExecProviderConfig> execProviderConfigs,

            string? password,

            string? proxyUrl,

            string? roleARN,

            ImmutableArray<Outputs.GitOpsClusterRequestClusterConfigTlsClientConfig> tlsClientConfigs,

            string? username)
        {
            AwsClusterName = awsClusterName;
            BearerToken = bearerToken;
            ClusterConnectionType = clusterConnectionType;
            DisableCompression = disableCompression;
            ExecProviderConfigs = execProviderConfigs;
            Password = password;
            ProxyUrl = proxyUrl;
            RoleARN = roleARN;
            TlsClientConfigs = tlsClientConfigs;
            Username = username;
        }
    }
}
