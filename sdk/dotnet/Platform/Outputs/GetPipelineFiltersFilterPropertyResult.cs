// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class GetPipelineFiltersFilterPropertyResult
    {
        /// <summary>
        /// description of the pipline filter.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
        /// </summary>
        public readonly string FilterType;
        /// <summary>
        /// module properties of the pipline filter.
        /// </summary>
        public readonly Outputs.GetPipelineFiltersFilterPropertyModulePropertiesResult ModuleProperties;
        /// <summary>
        /// Name of the pipeline filter.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Pipeline identifiers to filter on.
        /// </summary>
        public readonly ImmutableArray<string> PipelineIdentifiers;
        /// <summary>
        /// Tags to associate with the pipeline. tags should be in the form of `{key:key1, value:key1value}`
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, string>> PipelineTags;
        /// <summary>
        /// Tags to associate with the resource. Tags should be in the form `name:value`.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetPipelineFiltersFilterPropertyResult(
            string description,

            string filterType,

            Outputs.GetPipelineFiltersFilterPropertyModulePropertiesResult moduleProperties,

            string name,

            ImmutableArray<string> pipelineIdentifiers,

            ImmutableArray<ImmutableDictionary<string, string>> pipelineTags,

            ImmutableArray<string> tags)
        {
            Description = description;
            FilterType = filterType;
            ModuleProperties = moduleProperties;
            Name = name;
            PipelineIdentifiers = pipelineIdentifiers;
            PipelineTags = pipelineTags;
            Tags = tags;
        }
    }
}
