// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class HarRegistryConfig
    {
        /// <summary>
        /// Type of authentication for UPSTREAM registry type (UserPassword, Anonymous)
        /// </summary>
        public readonly string? AuthType;
        /// <summary>
        /// Authentication configuration for UPSTREAM registry type
        /// </summary>
        public readonly ImmutableArray<Outputs.HarRegistryConfigAuth> Auths;
        /// <summary>
        /// Source of the upstream (only for UPSTREAM type)
        /// </summary>
        public readonly string? Source;
        /// <summary>
        /// Type of registry (VIRTUAL or UPSTREAM)
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// List of upstream proxies for VIRTUAL registry type
        /// </summary>
        public readonly ImmutableArray<string> UpstreamProxies;
        /// <summary>
        /// URL of the upstream (required if type=UPSTREAM &amp; package_type=HELM)
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private HarRegistryConfig(
            string? authType,

            ImmutableArray<Outputs.HarRegistryConfigAuth> auths,

            string? source,

            string type,

            ImmutableArray<string> upstreamProxies,

            string? url)
        {
            AuthType = authType;
            Auths = auths;
            Source = source;
            Type = type;
            UpstreamProxies = upstreamProxies;
            Url = url;
        }
    }
}
