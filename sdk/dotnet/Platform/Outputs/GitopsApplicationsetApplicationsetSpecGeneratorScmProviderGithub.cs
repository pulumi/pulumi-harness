// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Outputs
{

    [OutputType]
    public sealed class GitopsApplicationsetApplicationsetSpecGeneratorScmProviderGithub
    {
        /// <summary>
        /// If true, scan every branch of every repository. If false, scan only the default branch.
        /// </summary>
        public readonly bool? AllBranches;
        /// <summary>
        /// The GitHub API URL to talk to. Default https://api.github.com/.
        /// </summary>
        public readonly string? Api;
        /// <summary>
        /// Reference to a GitHub App repo-creds secret. Uses a GitHub App to access the API instead of a PAT.
        /// </summary>
        public readonly string? AppSecretName;
        /// <summary>
        /// GitHub org to scan.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// Authentication token reference.
        /// </summary>
        public readonly Outputs.GitopsApplicationsetApplicationsetSpecGeneratorScmProviderGithubTokenRef? TokenRef;

        [OutputConstructor]
        private GitopsApplicationsetApplicationsetSpecGeneratorScmProviderGithub(
            bool? allBranches,

            string? api,

            string? appSecretName,

            string organization,

            Outputs.GitopsApplicationsetApplicationsetSpecGeneratorScmProviderGithubTokenRef? tokenRef)
        {
            AllBranches = allBranches;
            Api = api;
            AppSecretName = appSecretName;
            Organization = organization;
            TokenRef = tokenRef;
        }
    }
}
