// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetGitopsAppProject
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetGitopsAppProject.Invoke(new()
        ///     {
        ///         AgentId = "agent_id",
        ///         QueryName = "query_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGitopsAppProjectResult> InvokeAsync(GetGitopsAppProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGitopsAppProjectResult>("harness:platform/getGitopsAppProject:getGitopsAppProject", args ?? new GetGitopsAppProjectArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetGitopsAppProject.Invoke(new()
        ///     {
        ///         AgentId = "agent_id",
        ///         QueryName = "query_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGitopsAppProjectResult> Invoke(GetGitopsAppProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGitopsAppProjectResult>("harness:platform/getGitopsAppProject:getGitopsAppProject", args ?? new GetGitopsAppProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetGitopsAppProject.Invoke(new()
        ///     {
        ///         AgentId = "agent_id",
        ///         QueryName = "query_name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGitopsAppProjectResult> Invoke(GetGitopsAppProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGitopsAppProjectResult>("harness:platform/getGitopsAppProject:getGitopsAppProject", args ?? new GetGitopsAppProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGitopsAppProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier of the GitOps Agent where argo project resides.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Agent identifier of the agent where argo project resides(include scope prefix)
        /// </summary>
        [Input("agentId", required: true)]
        public string AgentId { get; set; } = null!;

        /// <summary>
        /// Org identifier of the GitOps Agent where argo project resides.
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// Project identifier of the Gitops Agent where argo project resides.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// Identifier for the GitOps Argo project.
        /// </summary>
        [Input("queryName")]
        public string? QueryName { get; set; }

        public GetGitopsAppProjectArgs()
        {
        }
        public static new GetGitopsAppProjectArgs Empty => new GetGitopsAppProjectArgs();
    }

    public sealed class GetGitopsAppProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account identifier of the GitOps Agent where argo project resides.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Agent identifier of the agent where argo project resides(include scope prefix)
        /// </summary>
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        /// <summary>
        /// Org identifier of the GitOps Agent where argo project resides.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Project identifier of the Gitops Agent where argo project resides.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Identifier for the GitOps Argo project.
        /// </summary>
        [Input("queryName")]
        public Input<string>? QueryName { get; set; }

        public GetGitopsAppProjectInvokeArgs()
        {
        }
        public static new GetGitopsAppProjectInvokeArgs Empty => new GetGitopsAppProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetGitopsAppProjectResult
    {
        /// <summary>
        /// Account identifier of the GitOps Agent where argo project resides.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Agent identifier of the agent where argo project resides(include scope prefix)
        /// </summary>
        public readonly string AgentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Org identifier of the GitOps Agent where argo project resides.
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// Project identifier of the Gitops Agent where argo project resides.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Identifier for the GitOps Argo project.
        /// </summary>
        public readonly string QueryName;

        [OutputConstructor]
        private GetGitopsAppProjectResult(
            string accountId,

            string agentId,

            string id,

            string? orgId,

            string? projectId,

            string queryName)
        {
            AccountId = accountId;
            AgentId = agentId;
            Id = id;
            OrgId = orgId;
            ProjectId = projectId;
            QueryName = queryName;
        }
    }
}
