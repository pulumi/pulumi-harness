// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetEnvironmentGroup
    {
        /// <summary>
        /// Data source for retrieving a Harness environment group.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetEnvironmentGroup.Invoke(new()
        ///     {
        ///         Identifier = "identifier",
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEnvironmentGroupResult> InvokeAsync(GetEnvironmentGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentGroupResult>("harness:platform/getEnvironmentGroup:getEnvironmentGroup", args ?? new GetEnvironmentGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness environment group.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetEnvironmentGroup.Invoke(new()
        ///     {
        ///         Identifier = "identifier",
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentGroupResult> Invoke(GetEnvironmentGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentGroupResult>("harness:platform/getEnvironmentGroup:getEnvironmentGroup", args ?? new GetEnvironmentGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Harness environment group.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetEnvironmentGroup.Invoke(new()
        ///     {
        ///         Identifier = "identifier",
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentGroupResult> Invoke(GetEnvironmentGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentGroupResult>("harness:platform/getEnvironmentGroup:getEnvironmentGroup", args ?? new GetEnvironmentGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Color of the environment group.
        /// </summary>
        [Input("color")]
        public string? Color { get; set; }

        /// <summary>
        /// identifier of the environment group.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        /// <summary>
        /// org_id of the environment group.
        /// </summary>
        [Input("orgId")]
        public string? OrgId { get; set; }

        /// <summary>
        /// project_id of the environment group.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        public GetEnvironmentGroupArgs()
        {
        }
        public static new GetEnvironmentGroupArgs Empty => new GetEnvironmentGroupArgs();
    }

    public sealed class GetEnvironmentGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Color of the environment group.
        /// </summary>
        [Input("color")]
        public Input<string>? Color { get; set; }

        /// <summary>
        /// identifier of the environment group.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// org_id of the environment group.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// project_id of the environment group.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public GetEnvironmentGroupInvokeArgs()
        {
        }
        public static new GetEnvironmentGroupInvokeArgs Empty => new GetEnvironmentGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentGroupResult
    {
        /// <summary>
        /// Color of the environment group.
        /// </summary>
        public readonly string Color;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// identifier of the environment group.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// org_id of the environment group.
        /// </summary>
        public readonly string? OrgId;
        /// <summary>
        /// project_id of the environment group.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Input Set YAML
        /// </summary>
        public readonly string Yaml;

        [OutputConstructor]
        private GetEnvironmentGroupResult(
            string color,

            string id,

            string identifier,

            string? orgId,

            string? projectId,

            string yaml)
        {
            Color = color;
            Id = id;
            Identifier = identifier;
            OrgId = orgId;
            ProjectId = projectId;
            Yaml = yaml;
        }
    }
}
