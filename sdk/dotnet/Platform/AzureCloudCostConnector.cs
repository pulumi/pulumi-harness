// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    /// <summary>
    /// Resource for creating an Azure Cloud Cost connector in Harness.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harness = Pulumi.Harness;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Harness.Platform.AzureCloudCostConnector("example", new()
    ///     {
    ///         Identifier = "identifier",
    ///         Name = "name",
    ///         Description = "example",
    ///         Tags = new[]
    ///         {
    ///             "foo:bar",
    ///         },
    ///         FeaturesEnableds = new[]
    ///         {
    ///             "BILLING",
    ///             "VISIBILITY",
    ///             "OPTIMIZATION",
    ///             "GOVERNANCE",
    ///         },
    ///         TenantId = "tenant_id",
    ///         SubscriptionId = "subscription_id",
    ///         BillingExportSpec = new Harness.Platform.Inputs.AzureCloudCostConnectorBillingExportSpecArgs
    ///         {
    ///             StorageAccountName = "storage_account_name",
    ///             ContainerName = "container_name",
    ///             DirectoryName = "directory_name",
    ///             ReportName = "report_name",
    ///             SubscriptionId = "subscription_id",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Import account level azure cloud cost connector
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/azureCloudCostConnector:AzureCloudCostConnector example &lt;connector_id&gt;
    /// ```
    /// 
    /// Import org level azure cloud cost connector
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/azureCloudCostConnector:AzureCloudCostConnector example &lt;ord_id&gt;/&lt;connector_id&gt;
    /// ```
    /// 
    /// Import project level azure cloud cost connector
    /// 
    /// ```sh
    /// $ pulumi import harness:platform/azureCloudCostConnector:AzureCloudCostConnector example &lt;org_id&gt;/&lt;project_id&gt;/&lt;connector_id&gt;
    /// ```
    /// </summary>
    [HarnessResourceType("harness:platform/azureCloudCostConnector:AzureCloudCostConnector")]
    public partial class AzureCloudCostConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Returns billing details for the Azure account.
        /// </summary>
        [Output("billingExportSpec")]
        public Output<Outputs.AzureCloudCostConnectorBillingExportSpec?> BillingExportSpec { get; private set; } = null!;

        /// <summary>
        /// Returns billing details for the Azure account.
        /// </summary>
        [Output("billingExportSpec2")]
        public Output<Outputs.AzureCloudCostConnectorBillingExportSpec2?> BillingExportSpec2 { get; private set; } = null!;

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
        /// </summary>
        [Output("featuresEnableds")]
        public Output<ImmutableArray<string>> FeaturesEnableds { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Output("orgId")]
        public Output<string?> OrgId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string?> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Subsription id.
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// Tenant id.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a AzureCloudCostConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureCloudCostConnector(string name, AzureCloudCostConnectorArgs args, CustomResourceOptions? options = null)
            : base("harness:platform/azureCloudCostConnector:AzureCloudCostConnector", name, args ?? new AzureCloudCostConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureCloudCostConnector(string name, Input<string> id, AzureCloudCostConnectorState? state = null, CustomResourceOptions? options = null)
            : base("harness:platform/azureCloudCostConnector:AzureCloudCostConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureCloudCostConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureCloudCostConnector Get(string name, Input<string> id, AzureCloudCostConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureCloudCostConnector(name, id, state, options);
        }
    }

    public sealed class AzureCloudCostConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Returns billing details for the Azure account.
        /// </summary>
        [Input("billingExportSpec")]
        public Input<Inputs.AzureCloudCostConnectorBillingExportSpecArgs>? BillingExportSpec { get; set; }

        /// <summary>
        /// Returns billing details for the Azure account.
        /// </summary>
        [Input("billingExportSpec2")]
        public Input<Inputs.AzureCloudCostConnectorBillingExportSpec2Args>? BillingExportSpec2 { get; set; }

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("featuresEnableds", required: true)]
        private InputList<string>? _featuresEnableds;

        /// <summary>
        /// Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
        /// </summary>
        public InputList<string> FeaturesEnableds
        {
            get => _featuresEnableds ?? (_featuresEnableds = new InputList<string>());
            set => _featuresEnableds = value;
        }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Subsription id.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Tenant id.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public AzureCloudCostConnectorArgs()
        {
        }
        public static new AzureCloudCostConnectorArgs Empty => new AzureCloudCostConnectorArgs();
    }

    public sealed class AzureCloudCostConnectorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Returns billing details for the Azure account.
        /// </summary>
        [Input("billingExportSpec")]
        public Input<Inputs.AzureCloudCostConnectorBillingExportSpecGetArgs>? BillingExportSpec { get; set; }

        /// <summary>
        /// Returns billing details for the Azure account.
        /// </summary>
        [Input("billingExportSpec2")]
        public Input<Inputs.AzureCloudCostConnectorBillingExportSpec2GetArgs>? BillingExportSpec2 { get; set; }

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("featuresEnableds")]
        private InputList<string>? _featuresEnableds;

        /// <summary>
        /// Indicates which feature to enable among Billing, Optimization, Visibility and Governance.
        /// </summary>
        public InputList<string> FeaturesEnableds
        {
            get => _featuresEnableds ?? (_featuresEnableds = new InputList<string>());
            set => _featuresEnableds = value;
        }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Subsription id.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to associate with the resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Tenant id.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public AzureCloudCostConnectorState()
        {
        }
        public static new AzureCloudCostConnectorState Empty => new AzureCloudCostConnectorState();
    }
}
