// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetPipelineCentralNotificationRule
    {
        /// <summary>
        /// Data source for retrieving a Notification Rule.
        /// </summary>
        public static Task<GetPipelineCentralNotificationRuleResult> InvokeAsync(GetPipelineCentralNotificationRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPipelineCentralNotificationRuleResult>("harness:platform/getPipelineCentralNotificationRule:getPipelineCentralNotificationRule", args ?? new GetPipelineCentralNotificationRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Notification Rule.
        /// </summary>
        public static Output<GetPipelineCentralNotificationRuleResult> Invoke(GetPipelineCentralNotificationRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPipelineCentralNotificationRuleResult>("harness:platform/getPipelineCentralNotificationRule:getPipelineCentralNotificationRule", args ?? new GetPipelineCentralNotificationRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a Notification Rule.
        /// </summary>
        public static Output<GetPipelineCentralNotificationRuleResult> Invoke(GetPipelineCentralNotificationRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPipelineCentralNotificationRuleResult>("harness:platform/getPipelineCentralNotificationRule:getPipelineCentralNotificationRule", args ?? new GetPipelineCentralNotificationRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPipelineCentralNotificationRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("customNotificationTemplateRef")]
        public Inputs.GetPipelineCentralNotificationRuleCustomNotificationTemplateRefArgs? CustomNotificationTemplateRef { get; set; }

        /// <summary>
        /// Identifier of the Notification Rule.
        /// </summary>
        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("notificationChannelRefs")]
        private List<string>? _notificationChannelRefs;
        public List<string> NotificationChannelRefs
        {
            get => _notificationChannelRefs ?? (_notificationChannelRefs = new List<string>());
            set => _notificationChannelRefs = value;
        }

        [Input("notificationConditions")]
        private List<Inputs.GetPipelineCentralNotificationRuleNotificationConditionArgs>? _notificationConditions;
        public List<Inputs.GetPipelineCentralNotificationRuleNotificationConditionArgs> NotificationConditions
        {
            get => _notificationConditions ?? (_notificationConditions = new List<Inputs.GetPipelineCentralNotificationRuleNotificationConditionArgs>());
            set => _notificationConditions = value;
        }

        /// <summary>
        /// Identifier of the organization in which the Notification Rule is configured.
        /// </summary>
        [Input("org")]
        public string? Org { get; set; }

        /// <summary>
        /// Identifier of the project in which the Notification Rule is configured.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        public GetPipelineCentralNotificationRuleArgs()
        {
        }
        public static new GetPipelineCentralNotificationRuleArgs Empty => new GetPipelineCentralNotificationRuleArgs();
    }

    public sealed class GetPipelineCentralNotificationRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customNotificationTemplateRef")]
        public Input<Inputs.GetPipelineCentralNotificationRuleCustomNotificationTemplateRefInputArgs>? CustomNotificationTemplateRef { get; set; }

        /// <summary>
        /// Identifier of the Notification Rule.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("notificationChannelRefs")]
        private InputList<string>? _notificationChannelRefs;
        public InputList<string> NotificationChannelRefs
        {
            get => _notificationChannelRefs ?? (_notificationChannelRefs = new InputList<string>());
            set => _notificationChannelRefs = value;
        }

        [Input("notificationConditions")]
        private InputList<Inputs.GetPipelineCentralNotificationRuleNotificationConditionInputArgs>? _notificationConditions;
        public InputList<Inputs.GetPipelineCentralNotificationRuleNotificationConditionInputArgs> NotificationConditions
        {
            get => _notificationConditions ?? (_notificationConditions = new InputList<Inputs.GetPipelineCentralNotificationRuleNotificationConditionInputArgs>());
            set => _notificationConditions = value;
        }

        /// <summary>
        /// Identifier of the organization in which the Notification Rule is configured.
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Identifier of the project in which the Notification Rule is configured.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetPipelineCentralNotificationRuleInvokeArgs()
        {
        }
        public static new GetPipelineCentralNotificationRuleInvokeArgs Empty => new GetPipelineCentralNotificationRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetPipelineCentralNotificationRuleResult
    {
        /// <summary>
        /// Account identifier associated with this notification channel.
        /// </summary>
        public readonly string Account;
        /// <summary>
        /// Timestamp when the notification rule was created.
        /// </summary>
        public readonly int Created;
        public readonly Outputs.GetPipelineCentralNotificationRuleCustomNotificationTemplateRefResult? CustomNotificationTemplateRef;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier of the Notification Rule.
        /// </summary>
        public readonly string Identifier;
        /// <summary>
        /// Timestamp when the notification rule was last modified.
        /// </summary>
        public readonly int LastModified;
        public readonly string Name;
        public readonly ImmutableArray<string> NotificationChannelRefs;
        public readonly ImmutableArray<Outputs.GetPipelineCentralNotificationRuleNotificationConditionResult> NotificationConditions;
        /// <summary>
        /// Identifier of the organization in which the Notification Rule is configured.
        /// </summary>
        public readonly string? Org;
        /// <summary>
        /// Identifier of the project in which the Notification Rule is configured.
        /// </summary>
        public readonly string? Project;
        public readonly string? Status;

        [OutputConstructor]
        private GetPipelineCentralNotificationRuleResult(
            string account,

            int created,

            Outputs.GetPipelineCentralNotificationRuleCustomNotificationTemplateRefResult? customNotificationTemplateRef,

            string id,

            string identifier,

            int lastModified,

            string name,

            ImmutableArray<string> notificationChannelRefs,

            ImmutableArray<Outputs.GetPipelineCentralNotificationRuleNotificationConditionResult> notificationConditions,

            string? org,

            string? project,

            string? status)
        {
            Account = account;
            Created = created;
            CustomNotificationTemplateRef = customNotificationTemplateRef;
            Id = id;
            Identifier = identifier;
            LastModified = lastModified;
            Name = name;
            NotificationChannelRefs = notificationChannelRefs;
            NotificationConditions = notificationConditions;
            Org = org;
            Project = project;
            Status = status;
        }
    }
}
