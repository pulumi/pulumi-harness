// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform
{
    public static class GetServiceList
    {
        /// <summary>
        /// Data source for retrieving Harness service list.
        /// 
        /// ## Example Usage
        /// 
        /// ### Project Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke(new()
        ///     {
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### Organisation Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke(new()
        ///     {
        ///         OrgId = "org_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### Account Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceListResult> InvokeAsync(GetServiceListArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceListResult>("harness:platform/getServiceList:getServiceList", args ?? new GetServiceListArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving Harness service list.
        /// 
        /// ## Example Usage
        /// 
        /// ### Project Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke(new()
        ///     {
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### Organisation Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke(new()
        ///     {
        ///         OrgId = "org_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### Account Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceListResult> Invoke(GetServiceListInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceListResult>("harness:platform/getServiceList:getServiceList", args ?? new GetServiceListInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving Harness service list.
        /// 
        /// ## Example Usage
        /// 
        /// ### Project Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke(new()
        ///     {
        ///         OrgId = "org_id",
        ///         ProjectId = "project_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### Organisation Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke(new()
        ///     {
        ///         OrgId = "org_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ### Account Level Service List
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Harness = Pulumi.Harness;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Harness.Platform.GetServiceList.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceListResult> Invoke(GetServiceListInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceListResult>("harness:platform/getServiceList:getServiceList", args ?? new GetServiceListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceListArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId")]
        public string? OrgId { get; set; }

        [Input("page")]
        public int? Page { get; set; }

        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("size")]
        public int? Size { get; set; }

        public GetServiceListArgs()
        {
        }
        public static new GetServiceListArgs Empty => new GetServiceListArgs();
    }

    public sealed class GetServiceListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("page")]
        public Input<int>? Page { get; set; }

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        public GetServiceListInvokeArgs()
        {
        }
        public static new GetServiceListInvokeArgs Empty => new GetServiceListInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceListResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OrgId;
        public readonly int? Page;
        public readonly string? ProjectId;
        public readonly ImmutableArray<Outputs.GetServiceListServiceResult> Services;
        public readonly int? Size;

        [OutputConstructor]
        private GetServiceListResult(
            string id,

            string? orgId,

            int? page,

            string? projectId,

            ImmutableArray<Outputs.GetServiceListServiceResult> services,

            int? size)
        {
            Id = id;
            OrgId = orgId;
            Page = page;
            ProjectId = projectId;
            Services = services;
            Size = size;
        }
    }
}
